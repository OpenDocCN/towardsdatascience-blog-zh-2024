- en: Getting Started Predicting Time Series Data with Facebook Prophet
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Facebook Prophet预测时间序列数据入门
- en: 原文：[https://towardsdatascience.com/getting-started-predicting-time-series-data-with-facebook-prophet-c74ad3040525?source=collection_archive---------2-----------------------#2024-01-30](https://towardsdatascience.com/getting-started-predicting-time-series-data-with-facebook-prophet-c74ad3040525?source=collection_archive---------2-----------------------#2024-01-30)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/getting-started-predicting-time-series-data-with-facebook-prophet-c74ad3040525?source=collection_archive---------2-----------------------#2024-01-30](https://towardsdatascience.com/getting-started-predicting-time-series-data-with-facebook-prophet-c74ad3040525?source=collection_archive---------2-----------------------#2024-01-30)
- en: This article aims to take away the entry barriers to get started with time series
    analysis in a hands-on tutorial using Prophet
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 本文旨在通过使用Prophet进行的动手教程，消除入门时间序列分析的障碍。
- en: '[](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)[![Jonas
    Dieckmann](../Images/b3345d7d4ba503b08bd4dc715390d650.png)](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)
    [Jonas Dieckmann](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)[![Jonas
    Dieckmann](../Images/b3345d7d4ba503b08bd4dc715390d650.png)](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)
    [Jonas Dieckmann](https://medium.com/@jonas_dieckmann?source=post_page---byline--c74ad3040525--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)
    ·9 min read·Jan 30, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--c74ad3040525--------------------------------)
    ·阅读时间：9分钟·2024年1月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: When getting started with data science, time series analysis is a common thing
    people would love to try themselves! The general idea here is to learn from historical
    patterns over time to predict the future. Typical use cases could be weather predictions
    or sales forecasting. But what does all this have to do with this wise prophet
    below?!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 当开始学习数据科学时，时间序列分析是人们常常希望自己尝试的一个内容！这里的基本理念是通过学习历史模式来预测未来。典型的应用案例可能是天气预测或销售预测。但是，下面这位聪明的预言家与这些有什么关系呢？！
- en: '![](../Images/6b84a482c13b16a83fedc78c40fa8e57.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b84a482c13b16a83fedc78c40fa8e57.png)'
- en: AI-generated image by leonardo.ai
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 由leonardo.ai生成的图像
- en: This article aims to take away the entry barriers to get started with time series
    analysis in a hands-on tutorial using one of the easiest tools called [Facebook
    Prophet](https://facebook.github.io/prophet/) within [Google Colab](https://colab.research.google.com/)
    (both are free!). In case you want to get started immediately, feel free to skip
    the next two chapters where I will give a short background on time series principles
    and also Facebook Prophet itself. Have fun!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在通过使用一种最简单的工具之一——[Facebook Prophet](https://facebook.github.io/prophet/)——在[Google
    Colab](https://colab.research.google.com/)中进行的动手教程，消除入门时间序列分析的障碍（这两个工具都是免费的！）。如果你想立即开始，可以跳过接下来的两章，我将在其中简要介绍时间序列的基本原理以及Facebook
    Prophet本身。祝你玩得开心！
- en: 'This article is structured into three main sections:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文分为三个主要部分：
- en: '#1 Brief introduction to Time Series Analysis principles'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '#1 时间序列分析原理简要介绍'
- en: '#2 An Introduction to Facebook Prophet'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '#2 Facebook Prophet简介'
- en: '#3 Hands-on tutorial on how to use Prophet in Google Colab (for free)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '#3 如何在Google Colab中使用Prophet的动手教程（免费）'
- en: '#1 General Principles of Time Series Analysis'
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#1 时间序列分析的基本原则'
- en: Imagine you are a store manager for consumer products and you want to predict
    the upcoming product demand to better manage the supply. A reasonable machine
    learning approach for this scenario is to run some time series analysis which
    involves understanding, modeling, and making predictions based on sequential data
    points. [1]
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，你是一家消费品商店的经理，你想预测即将到来的产品需求，以更好地管理供应。在这种情况下，一个合理的机器学习方法是进行时间序列分析，这涉及到理解、建模并根据顺序数据点进行预测。[1]
- en: 'The below graphic illustrates an artificial development of historic product
    demand (dark-blue line) over time, which can be used to analyze a time series
    pattern. Our ultimate goal would be to predict (red-dotted line) the actual future
    demand (light-blue line) as precise as possible:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图形展示了历史产品需求（深蓝色线条）的人工发展趋势，可以用来分析时间序列模式。我们的最终目标是尽可能准确地预测（红色虚线）实际的未来需求（浅蓝色线条）：
- en: '![](../Images/76be98eabce3d974413bec2d78f08e89.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76be98eabce3d974413bec2d78f08e89.png)'
- en: Example of a plotted time series. Image by author
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制的时间序列示例。图像来自作者
- en: 'A time series is typically decomposed into three main components:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列通常分解为三个主要组件：
- en: '**Trend**: the long-term movement or general direction in the data.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**趋势**：数据中的长期变化或总体方向。'
- en: '**Seasonality**: fluctuations or patterns that repeat at regular intervals'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**季节性**：在规律间隔时间内重复出现的波动或模式'
- en: '**Residual/error**: remainder or leftover variation in the data'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**残差/误差**：数据中剩余或遗留的变化'
- en: The decomposition of a time series into these three components, often referred
    to as additive or multiplicative decomposition, allows analysts to better understand
    the underlying structure and patterns. This understanding is essential for selecting
    appropriate forecasting models and making accurate predictions based on historical
    data. [2]
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间序列分解为这三大组件，通常称为加性或乘性分解，能够帮助分析师更好地理解数据的潜在结构和模式。这种理解对于选择合适的预测模型以及基于历史数据做出准确预测至关重要。[2]
- en: '![](../Images/7014027115a20cfee7d61ec8779c0dd5.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7014027115a20cfee7d61ec8779c0dd5.png)'
- en: Example of a decomposed time series into trend + seasonality + error. Image
    by author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 将时间序列分解为趋势+季节性+误差的示例。图像来自作者
- en: '#2 What is Facebook Prophet?'
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#2 什么是 Facebook Prophet？'
- en: Prophet is an open-source tool released by Facebook's Data Science team that
    produces time series forecasting data based on an additive model where a non-linear
    trend fits with seasonality and holiday effects. The design principles allow parameter
    adjustments without much knowledge of the underlying model which makes the method
    applicable to teams with less statistical knowledge. [3]
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet 是 Facebook 数据科学团队发布的一个开源工具，基于加性模型生成时间序列预测数据，其中非线性趋势与季节性和假期效应相匹配。其设计原理使得在没有太多关于底层模型的知识的情况下，也能进行参数调整，这使得该方法适用于统计知识较少的团队。[3]
- en: Prophet is particularly well-suited for business forecasting applications, and
    it has gained popularity due to its ease of use and effectiveness in handling
    a wide range of time series data. As with every tool, keep in mind that while
    Prophet is powerful, the choice of forecasting method depends on the specific
    characteristics of the data and the goals of the analysis. In general, it is not
    granted that Prophet performs better than other models. However, Prophet comes
    with some useful features e.g., a reflection of seasonality change pre- and post-COVID
    or treating lockdowns as one-off holidays.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet 特别适用于商业预测应用，并因其易用性和在处理各种时间序列数据方面的有效性而获得广泛关注。和所有工具一样，需要注意的是，虽然 Prophet
    功能强大，但选择预测方法仍然依赖于数据的具体特征和分析目标。一般来说，不能保证 Prophet 比其他模型表现更好。然而，Prophet 具备一些有用的功能，例如反映季节性变化的情况（例如新冠疫情前后的变化）或将封锁视为一次性假期。
- en: For a more in-depth introduction by Meta (Facebook) itself, look at the video
    below [on YouTube](https://www.youtube.com/watch?v=eJrbKU09h-0&ab_channel=MetaOpenSource).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 若想深入了解 Meta（Facebook）本身的介绍，请观看下面的[YouTube 视频](https://www.youtube.com/watch?v=eJrbKU09h-0&ab_channel=MetaOpenSource)。
- en: In the following tutorial, we will implement and use Prophet with Python. However,
    you are more than happy to run your analysis using R as well!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的教程中，我们将使用 Python 实现并应用 Prophet。不过，你也可以非常高兴地使用 R 进行分析！
- en: '#3 Hands-on tutorial on how to use Prophet'
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#3 使用 Prophet 的实操教程'
- en: In case you have limited experience with or no access to your coding environment,
    I recommend making use of [Google Colaboratory (“Colab”)](https://colab.research.google.com/)
    which is somewhat like “*a* *free Jupyter notebook environment that requires no
    setup and runs entirely in the cloud*.” While this tutorial claims more about
    the simplicity and advantages of Colab, there are drawbacks as reduced computing
    power compared to proper cloud environments. However, I believe Colab might not
    be a bad service to take the first steps with Prophet.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对编码环境的经验有限或没有访问权限，我建议使用[Google Colaboratory（“Colab”）](https://colab.research.google.com/)，它类似于“*一个*
    *免费的 Jupyter notebook 环境，无需设置，完全在云端运行*。”虽然本教程强调了 Colab 的简便性和优势，但也有一些缺点，如与专业云环境相比，计算能力较弱。然而，我认为
    Colab 可能是一个不错的选择，用于与 Prophet 一起迈出第一步。
- en: 'To set up a basic environment for Time Series Analysis within Colab you can
    follow these two steps:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Colab 中设置基本的时间序列分析环境，你可以按照以下两个步骤操作：
- en: Open [https://colab.research.google.com/](https://colab.research.google.com/)
    and register for a free account
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 打开[https://colab.research.google.com/](https://colab.research.google.com/)并注册一个免费账户
- en: Create a new *notebook* within Colab
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在 Colab 中创建一个新的*notebook*
- en: 'Install & use the *prophet* package:'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 安装并使用*prophet*包：
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Loading and preparing Data
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加载并准备数据
- en: I uploaded a small dummy dataset representing the monthly amount of passengers
    for a local bus company (2012–2023). You can find the data [here on GitHub](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/passengers.csv).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我上传了一个小型虚拟数据集，代表本地公交公司（2012–2023年）的月度乘客数量。你可以在[GitHub 上找到数据](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/passengers.csv)。
- en: 'As the first step, we will load the data using pandas and create two separate
    datasets: a training subset with the years 2012 to 2022 as well as a test subset
    with the year 2023\. We will train our time series model with the first subset
    and aim to predict the passenger amount for 2023\. With the second subset, we
    will be able to validate the accuracy later.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 作为第一步，我们将使用 pandas 加载数据，并创建两个独立的数据集：一个包含2012到2022年的训练子集，以及一个包含2023年的测试子集。我们将使用第一个子集来训练我们的时间序列模型，并预测2023年的乘客数量。通过第二个子集，我们稍后将能够验证模型的准确性。
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output for the display command can be seen below. The dataset contains
    two columns: the indication of the year-month combination as well as a numeric
    column with the passenger amount in that month. Per default, Prophet is designed
    to work with daily (or even hourly) data, but we will make sure that the monthly
    pattern can be used as well.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 显示命令的输出如下所示。数据集包含两列：年份-月份的组合标识，以及该月的乘客数量的数值列。默认情况下，Prophet 设计为处理每日（甚至每小时）的数据，但我们将确保月度模式也可以使用。
- en: '![](../Images/083ecb9d59735390a75f1cdfde35f4d6.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/083ecb9d59735390a75f1cdfde35f4d6.png)'
- en: Passenger dataset. Image by autor
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 乘客数据集。图像由作者提供
- en: Decomposing training data
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分解训练数据
- en: To get a better understanding of the time series components within our dummy
    data, we will run a quick decomposing. For that, we import the method from *statsmodels*
    library and run the decomposing on our dataset. We decided on an additive model
    and indicated, that one period contains 12 elements (months) in our data. A daily
    dataset would be period=365.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解我们虚拟数据中的时间序列组件，我们将进行快速分解。为此，我们从*statsmodels*库中导入该方法，并对我们的数据集进行分解。我们选择了加法模型，并指定数据中的一个周期包含12个元素（月）。如果是每日数据集，则周期=365。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'This short piece of code will give us a visual impression of time series itself,
    but especially about the trend, the seasonality, and the residuals over time:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这段简短的代码将为我们提供时间序列本身的视觉印象，特别是关于趋势、季节性和残差随时间变化的情况：
- en: '![](../Images/52c693392ede2122ae4d49aeb2225592.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52c693392ede2122ae4d49aeb2225592.png)'
- en: Decomposed elements for the passenger dummy data. Image by author
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 乘客虚拟数据的分解元素。图像由作者提供
- en: We can now clearly see both, a significantly increasing trend over the past
    10 years as well as a recognizable seasonality pattern every year. Following those
    indications, we would now expect the model to predict some further increasing
    amount of passengers, following the seasonality peaks in the summer of the future
    year. But let’s try it out — time to apply some machine learning!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以清晰地看到过去10年中，显著上升的趋势以及每年可识别的季节性模式。根据这些迹象，我们现在预计模型会预测未来年份夏季的乘客数量会有所增加，并且跟随季节性波峰。但让我们试试看——是时候应用一些机器学习了！
- en: Model fitting with Facebook Prophet
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Facebook Prophet 进行模型拟合
- en: To fit models in Prophet, it is important to have at least a ‘ds’ (datestamp)
    and ‘y’ (value to be forecasted) column. We should make sure that our columns
    are renamed the reflect the same.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在Prophet中拟合模型时，至少需要有一个“ds”（日期戳）和一个“y”（要预测的值）列。我们应该确保我们的列名已被重命名，以反映这一点。
- en: '[PRE4]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now the magic can begin. The process to fit the model is fairly straightforward.
    However, please have a look at the [documentation](https://facebook.github.io/prophet/docs/handling_shocks.html)
    to get an idea of the large amount of options and parameters we could adjust in
    this step. To keep things simple, we will fit a simple model without any further
    adjustments for now — but please keep in mind that real-world data is never perfect:
    you will definitely need parameter tuning in the future.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，魔法可以开始了。拟合模型的过程相当直接。然而，请查看[文档](https://facebook.github.io/prophet/docs/handling_shocks.html)，以了解我们在这一步骤中可以调整的大量选项和参数。为了简化，我们暂时将拟合一个简单模型，不做进一步的调整——但请记住，现实世界中的数据永远不是完美的：你以后肯定需要进行参数调优。
- en: '[PRE5]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: That’s all we have to do to fit the model. Let’s make some predictions!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们拟合模型所需做的一切。让我们进行一些预测吧！
- en: Making predictions
  id: totrans-59
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进行预测
- en: We have to make predictions on a table that has a ‘ds’ column with the dates
    you want predictions for. To set up this table, use the *make_future_dataframe*
    method, and it will automatically include historical dates. This way, you can
    see how well the model fits the past data and predicts the future. Since we handle
    monthly data, we will indicate the frequency with “freq=12" and ask for a future
    horizon of 12 months (“periods=12”).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要对一个包含“ds”列（包含你想要进行预测的日期）的表格进行预测。要设置这个表格，使用*make_future_dataframe*方法，它会自动包含历史日期。通过这种方式，你可以看到模型如何拟合过去的数据并预测未来。由于我们处理的是月度数据，我们会通过“freq=12”来指定频率，并要求预测的未来时间段为12个月（“periods=12”）。
- en: '[PRE6]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'This new dataset then contains both, the training period as well as the additional
    12 months we want to predict:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这个新的数据集包含了训练期和我们想要预测的额外12个月数据：
- en: '![](../Images/67f5957194177eec969937a413b16b0e.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67f5957194177eec969937a413b16b0e.png)'
- en: Future dataset. Image by author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 未来数据集。图片来源：作者
- en: To make predictions, we simply call the *predict* method from Prophet and provide
    the future dataset. The prediction output will contain a large dataset with many
    different columns, but we will focus only on the predicted value *yhat* as well
    as the uncertainty intervals *yhat_lower* and *yhat_upper*.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 要进行预测，我们只需调用Prophet的*predict*方法，并提供未来数据集。预测结果将包含一个包含许多不同列的大数据集，但我们只关注预测值*yhat*以及不确定性区间*yhat_lower*和*yhat_upper*。
- en: '[PRE7]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The table below gives us some idea about how the output is generated and stored.
    For August 2023, the model predicts a passenger amount of 532 people. The uncertainty
    interval (which is set by default to 80%) tells us in simple terms that we can
    expect most likely a passenger amount between 508 and 556 people in that month.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 下表给我们一些关于如何生成和存储输出的概念。对于2023年8月，模型预测的乘客数量为532人。默认设置为80%的不确定性区间，简单来说，它告诉我们在这个月，大多数情况下，乘客数量可能在508人到556人之间。
- en: '![](../Images/2db589424d17336f514f1af97cb1c9ce.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2db589424d17336f514f1af97cb1c9ce.png)'
- en: Prediction subset. Image by author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 预测子集。图片来源：作者
- en: Finally, we want to visualize the output to better understand the predictions
    and the intervals.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们想要可视化输出，以更好地理解预测结果和区间。
- en: Visualizing results
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化结果
- en: To plot the results, we can make use of Prophet’s built-in plotting tools. With
    the plot method, we can display the original time series data alongside the forecasted
    values.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 为了绘制结果，我们可以利用Prophet的内置绘图工具。通过plot方法，我们可以显示原始时间序列数据和预测值。
- en: '[PRE8]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Besides the general time series plot, we also added a dotted line to indicate
    the end of the training period and hence the start of the prediction period. Further,
    we made use of the true test dataset that we had prepared in the beginning.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 除了常规的时间序列图，我们还添加了一条虚线，表示训练期的结束，从而标志着预测期的开始。此外，我们还使用了我们在一开始准备的真实测试数据集。
- en: '![](../Images/4f9654f9a8bee5bd9b32e54ca2a7f1df.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f9654f9a8bee5bd9b32e54ca2a7f1df.png)'
- en: Plotted results for the time series analysis incl. true test data and the prediction.
    Image by author
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制的时间序列分析结果，包括真实测试数据和预测结果。图片来源：作者
- en: It can be seen that our model isn’t too bad. Most of the true passenger values
    are actually within the predicted uncertainty intervals. However, the summer months
    seem to be too pessimistic still, which is a pattern we can see in previous years
    already. This is a good moment to start exploring the parameters and features
    we could use with Prophet.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 可以看出，我们的模型表现得不错。大部分真实的乘客数据实际上都在预测的不确定性区间内。然而，夏季的预测似乎仍然偏乐观，这也是我们在往年数据中看到的模式。现在是开始探索我们可以与
    Prophet 一起使用的参数和特征的好时机。
- en: In our example, the seasonality is not a constant additive factor but it grows
    with the trend over time. Hence, we might consider changing the *seasonality_mode*
    from “additive” to “multiplicative” during the model fit. [4]
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，季节性并不是一个常数加性因子，而是随着时间的推移与趋势共同增长。因此，我们可能会考虑在模型拟合过程中将 *seasonality_mode*
    从“加性”改为“乘性”。[4]
- en: Our tutorial will conclude here to give some time to explore the large number
    of possibilities that Prophet offers to us. To review the full code together,
    I consolidated the snippets in this [Python file](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/prophet_tutorial.py).
    Additionally, you could upload [this notebook](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/Prophet_Tutorial.ipynb)
    directly to Colab and run it yourself. Let me know how it worked out for you!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的教程将在这里结束，以便为您探索 Prophet 提供的众多可能性腾出时间。为了便于大家一起回顾完整代码，我将代码片段整合在这个[Python 文件](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/prophet_tutorial.py)中。此外，您还可以将[这个笔记本](https://raw.githubusercontent.com/jonasdieckmann/prophet_tutorial/main/Prophet_Tutorial.ipynb)直接上传到
    Colab 并自行运行。让我知道它对您有何帮助！
- en: Conclusion
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Prophet is a powerful tool for predicting future values in time series data,
    especially when your data has repeating patterns like monthly or yearly cycles.
    It’s user-friendly and can quickly provide accurate predictions for your specific
    data. However, it’s essential to be aware of its limitations. If your data doesn’t
    have a clear pattern or if there are significant changes that the model hasn’t
    seen before, Prophet may not perform optimally. Understanding these limitations
    is crucial for using the tool wisely.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: Prophet 是一个强大的工具，用于预测时间序列数据中的未来值，特别是当您的数据具有像月度或年度周期这样的重复模式时。它非常用户友好，并且能够快速为您的特定数据提供准确的预测。然而，了解它的局限性也非常重要。如果您的数据没有明确的模式，或者有一些模型未曾见过的重大变化，Prophet
    可能无法达到最佳表现。了解这些局限性对于明智地使用该工具至关重要。
- en: The good news is that experimenting with Prophet on your datasets is highly
    recommended! Every dataset is unique, and tweaking settings and trying different
    approaches can help you discover what works best for your specific situation.
    So, dive in, explore, and see how Prophet can enhance your time series forecasting.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 好消息是，强烈推荐您在自己的数据集上实验 Prophet！每个数据集都是独特的，调整设置并尝试不同的方法可以帮助您发现最适合您特定情况的方式。所以，快去探索吧，看看
    Prophet 如何提升您的时间序列预测。
- en: '[](https://medium.com/@jonas_dieckmann?source=post_page-----c74ad3040525--------------------------------)
    [## Jonas Dieckmann - Medium'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jonas_dieckmann?source=post_page-----c74ad3040525--------------------------------)
    [## Jonas Dieckmann - Medium'
- en: Read writing from Jonas Dieckmann on Medium. analytics manager & product owner
    @ philips | passionate and writing about…
  id: totrans-84
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 阅读 Jonas Dieckmann 在 Medium 上的文章。分析经理和产品负责人 @ philips | 热衷并撰写关于…
- en: medium.com](https://medium.com/@jonas_dieckmann?source=post_page-----c74ad3040525--------------------------------)
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@jonas_dieckmann?source=post_page-----c74ad3040525--------------------------------)
- en: I hope you find it useful. Let me know your thoughts! And feel free to connect
    on LinkedIn [https://www.linkedin.com/in/jonas-dieckmann/](https://www.linkedin.com/in/jonas-dieckmann/)
    and/or to follow me here on medium.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望您觉得这很有用。请告诉我您的想法！也欢迎在 LinkedIn 上与我联系 [https://www.linkedin.com/in/jonas-dieckmann/](https://www.linkedin.com/in/jonas-dieckmann/)
    或在 Medium 上关注我。
- en: 'See also some of my other articles:'
  id: totrans-87
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 请参见我其他的一些文章：
- en: '[](https://pub.towardsai.net/how-to-use-chatgpt-api-for-direct-interaction-from-colab-or-databricks-39969a0ead5f?source=post_page-----c74ad3040525--------------------------------)
    [## How To Use ChatGPT API for Direct Interaction From Colab or Databricks'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://pub.towardsai.net/how-to-use-chatgpt-api-for-direct-interaction-from-colab-or-databricks-39969a0ead5f?source=post_page-----c74ad3040525--------------------------------)
    [## 如何使用 ChatGPT API 从 Colab 或 Databricks 直接交互'
- en: Have you wondered how you can use OpenAI’s API to interact directly with GPT
    algorithms? It’s easy, free, and also more…
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 您是否想过如何使用 OpenAI 的 API 直接与 GPT 算法交互？它很简单、免费，而且更…
- en: pub.towardsai.net](https://pub.towardsai.net/how-to-use-chatgpt-api-for-direct-interaction-from-colab-or-databricks-39969a0ead5f?source=post_page-----c74ad3040525--------------------------------)
    [](/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=post_page-----c74ad3040525--------------------------------)
    [## How to get started with TensorFlow using Keras API and Google Colab
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: '[pub.towardsai.net](https://pub.towardsai.net/how-to-use-chatgpt-api-for-direct-interaction-from-colab-or-databricks-39969a0ead5f?source=post_page-----c74ad3040525--------------------------------)
    [](/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=post_page-----c74ad3040525--------------------------------)
    [## 如何使用 Keras API 和 Google Colab 入门 TensorFlow'
- en: Step-by-step tutorial to analyze human activity with neuronal networks
  id: totrans-91
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 分步教程：使用神经网络分析人类活动
- en: towardsdatascience.com](/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=post_page-----c74ad3040525--------------------------------)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/how-to-set-started-with-tensorflow-using-keras-api-and-google-colab-5421e5e4ef56?source=post_page-----c74ad3040525--------------------------------)
- en: References
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] **Shumway, Robert H.; Stoffer, David S. (2017)**: Time Series Analysis
    and Its Applications. Cham: Springer International Publishing.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] **Shumway, Robert H.; Stoffer, David S. (2017)**: 时间序列分析及其应用。Cham: Springer
    国际出版。'
- en: '[2] **Brownlee, Jason (2017)**: Introduction to Time Series Forecasting With
    Python'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] **Brownlee, Jason (2017)**: 使用 Python 进行时间序列预测入门'
- en: '[3] **Rafferty, Greg (2021)**: Forecasting Time Series Data with Facebook Prophet'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] **Rafferty, Greg (2021)**: 使用 Facebook Prophet 预测时间序列数据'
- en: '[4] [https://facebook.github.io/prophet/docs/quick_start.html](https://facebook.github.io/prophet/docs/quick_start.html)'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] [https://facebook.github.io/prophet/docs/quick_start.html](https://facebook.github.io/prophet/docs/quick_start.html)'
