- en: Multi-Agent-as-a-Service — A Senior Engineer’s Overview
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 多代理即服务——一位资深工程师的概述
- en: 原文：[https://towardsdatascience.com/multi-agent-as-a-service-a-senior-engineers-overview-fc759f5bbcfa?source=collection_archive---------1-----------------------#2024-08-14](https://towardsdatascience.com/multi-agent-as-a-service-a-senior-engineers-overview-fc759f5bbcfa?source=collection_archive---------1-----------------------#2024-08-14)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/multi-agent-as-a-service-a-senior-engineers-overview-fc759f5bbcfa?source=collection_archive---------1-----------------------#2024-08-14](https://towardsdatascience.com/multi-agent-as-a-service-a-senior-engineers-overview-fc759f5bbcfa?source=collection_archive---------1-----------------------#2024-08-14)
- en: '[](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)[![Saman
    (Sam) Rajaei](../Images/d7f3f3f8bb70fcf94f4dc54534a23974.png)](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)
    [Saman (Sam) Rajaei](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)[![Saman
    (Sam) Rajaei](../Images/d7f3f3f8bb70fcf94f4dc54534a23974.png)](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)
    [Saman (Sam) Rajaei](https://medium.com/@samanrj?source=post_page---byline--fc759f5bbcfa--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)
    ·8 min read·Aug 14, 2024
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--fc759f5bbcfa--------------------------------)
    ·8 分钟阅读·2024年8月14日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: There has been much [discussion about AI Agents](https://www.deeplearning.ai/the-batch/issue-245/)
    — [pivotal self-contained units capable of performing tasks autonomously, driven
    by specific instructions and contextual understanding](https://medium.com/binome/designing-llm-based-agents-key-principles-part-1-7e8c6fe3ddaf).
    In fact, the topic has become almost as widely discussed as LLMs. In this article,
    I consider AI Agents and, more specifically, the concept of *Multi-Agents-as-a-Service*
    from the perspective of the lead engineers, architects, and site reliability engineers
    (SREs) that must deal with AI agents in production systems going forward.
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: 有关 [AI 代理](https://www.deeplearning.ai/the-batch/issue-245/) 的讨论很多——[这些关键的自包含单元能够根据特定指令和上下文理解自主执行任务](https://medium.com/binome/designing-llm-based-agents-key-principles-part-1-7e8c6fe3ddaf)。事实上，这个话题的讨论几乎已经和
    LLM 一样广泛。在本文中，我将探讨 AI 代理，尤其是从负责在生产系统中处理 AI 代理的首席工程师、架构师和站点可靠性工程师（SRE）的角度，探讨 *多代理即服务*
    的概念。
- en: 'Context: What Problems Can AI Agents Solve?'
  id: totrans-6
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 上下文：AI 代理能解决哪些问题？
- en: 'AI agents are adept at tasks that benefit from human-friendly interactions:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: AI 代理擅长处理那些有利于人性化交互的任务：
- en: '**E-Commerce:** agents powered by technologies like LLM-based RAG or Text-to-SQL
    respond to user inquiries with accurate answers based on company policies, allowing
    for a more tailored shopping experience and customer journey that can revolutionize
    e-commerce'
  id: totrans-8
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**电子商务：** 基于 LLM 的 RAG 或 Text-to-SQL 等技术驱动的代理，根据公司政策回应用户查询，提供准确的答案，从而创造出更加个性化的购物体验和客户旅程，革命性地改变电子商务。'
- en: '**Customer Service:** This is another ideal application. Many of us have experienced
    long waits to speak with representatives for simple queries like order status
    updates. Some startups — [Decagon](https://decagon.ai/) for example — are making
    strides in addressing these inefficiencies through AI agents.'
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**客户服务：** 这是另一个理想的应用场景。我们中的许多人都经历过为了简单的查询（如订单状态更新）而长时间等待与客服代表沟通的情况。一些初创公司——例如
    [Decagon](https://decagon.ai/)——正在通过 AI 代理在解决这些低效问题方面取得进展。'
- en: '**Personalized Product and Content Creation:** a prime example of this is [Wix](https://www.wix.com/)
    — for low-code or no-code website building, Wix developed a chatbot that, through
    interactive Q&A sessions, creates an initial website for customers according to
    their description and requirements**.**'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**个性化产品和内容创作：** 这一点的一个典型例子是 [Wix](https://www.wix.com/)——对于低代码或无代码的网站建设，Wix
    开发了一款聊天机器人，通过互动问答环节，根据客户的描述和需求为其创建初步网站**。**'
- en: '[“Humans set goals, but an AI agent independently chooses the best actions
    it needs to perform to achieve those goals.](https://aws.amazon.com/what-is/ai-agents/)”'
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '[“人类设定目标，但AI代理独立选择执行这些目标所需的最佳行动。”](https://aws.amazon.com/what-is/ai-agents/)'
- en: Overall, LLM-based agents would work great in mimicking natural human dialogue
    and simple business workflows, often producing results that are both effective
    and impressively satisfying.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，基于LLM的代理在模拟自然人类对话和简单业务工作流方面表现出色，通常能够产生既有效又令人印象深刻的结果。
- en: 'An Engineer’s View: AI Agents & Enterprise Production Environments'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工程师的视角：AI 代理与企业生产环境
- en: Considering the benefits mentioned, have you ever wondered how AI agents would
    function within enterprise production environments? What architecture patterns
    and infrastructure components best support them? What do we do when things inevitably
    go wrong and the agents [hallucinate](https://www.ibm.com/topics/ai-hallucinations),
    crash or (arguably even worse) carry out incorrect reasoning/planning when performing
    a critical task?
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到上述提到的好处，你是否曾经想过AI代理在企业生产环境中的运作方式？哪些架构模式和基础设施组件最能支持它们？当问题不可避免地发生，代理出现[幻觉](https://www.ibm.com/topics/ai-hallucinations)、崩溃或（或许更糟糕的是）在执行关键任务时进行错误推理/规划时，我们该怎么办？
- en: 'As senior engineers, we need to carefully consider the above. Moreover, we
    must ask an even more important question: *how do we define what a successful
    deployment of a multi-agent platform looks like in the first place?*'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 作为高级工程师，我们需要仔细考虑上述内容。此外，我们还必须问一个更重要的问题：*我们如何定义一个多代理平台成功部署的标准是什么？*
- en: 'To answer this question, let’s borrow a concept from another software engineering
    field: Service Level Objectives (SLOs) from Reliability Engineering. SLOs are
    a critical component in measuring the performance and reliability of services.
    Simply put, SLOs define the acceptable ratio of “successful” measurements to “all”
    measurements and their impact on the user journeys. These objectives help us determine
    the required and expected levels of service from our agents and the broader workflows
    they support.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这个问题，让我们借用另一个软件工程领域的概念：来自可靠性工程的服务级目标（SLOs）。SLOs是衡量服务性能和可靠性的关键组成部分。简单来说，SLOs定义了“成功”测量与“所有”测量之间的可接受比例，并评估它们对用户旅程的影响。这些目标帮助我们确定代理及其所支持的更广泛工作流所需和预期的服务水平。
- en: So, how are SLOs relevant to our AI Agent discussion?
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，SLOs与我们的AI代理讨论有何关系？
- en: 'Using a simplified view, let’s consider two important objectives — “Availability”
    and “Accuracy” — for the agents and identify some more granular SLOs that contribute
    to these:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 以简化的视角来看，让我们考虑两个重要的目标——“可用性”和“准确性”——针对代理，并识别出一些更细化的SLOs，它们有助于实现这些目标：
- en: '**Availability:** this refers to the percentage of requests that receive *some*
    successful response (think HTTP 200 status code) from the agents or platform.
    Historically, the uptime and ping success of the underlying servers (i.e. temporal
    measures) were key correlated indicators of availability. But with the rise of
    Micro-services, notional uptime has become less relevant. Modern systems instead
    focus on the number of successful versus unsuccessful responses to user requests
    as a more accurate proxy for availability. Other related metrics can be thought
    of as [**Latency**](https://sre.google/workbook/implementing-slos/#:~:text=A%20latency%20SLO%20can%20capture,for%20different%20types%20of%20services.)
    and **Throughput**.'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可用性：** 这指的是代理或平台接收到的请求中，*部分*成功响应（例如HTTP 200状态码）的比例。从历史上看，底层服务器的正常运行时间和ping成功率（即时间性度量）是可用性的关键相关指标。但随着微服务的兴起，名义上的正常运行时间变得不那么重要。现代系统更关注用户请求的成功响应与失败响应的数量，以此作为更准确的可用性代理。其他相关指标可以被认为是[**延迟**](https://sre.google/workbook/implementing-slos/#:~:text=A%20latency%20SLO%20can%20capture,for%20different%20types%20of%20services.)
    和 **吞吐量**。'
- en: '**Accuracy:** this, on the other hand, is less about how quickly and consistently
    the agents return responses to the clients, but rather how *correctly*, from a
    business perspective, they are able to perform their tasks and return data without
    a human present in the loop to verify their work. Traditional systems also track
    similar SLOs such as data correctness and quality.'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**准确性：** 另一方面，准确性不仅仅是代理返回客户端响应的速度和一致性，更重要的是它们在没有人工验证的情况下，能从业务角度上多么*正确*地执行任务并返回数据。传统系统也会跟踪类似的SLOs，如数据的正确性和质量。'
- en: 'The act of measuring the two objectives above normally occurs through submission
    of internal application metrics at runtime, either at set time intervals (e.g.
    every 10 minutes), or in response to events (user requests, upstream calls etc.).
    [Synthetic](https://www.dynatrace.com/news/blog/what-is-synthetic-testing/) probing,
    for instance, can be used to mimic user requests, trigger relevant events and
    monitor the numbers. The **key** **idea** to explore here is this: traditional
    systems are deterministic to a large extent and, therefore, it’s generally more
    straightforward to instrument, probe and evaluate them. On the other hand, in
    our beautiful yet non-deterministic world of GenAI agents, this is not necessarily
    the case.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上述两个目标的衡量通常通过在运行时提交内部应用程序指标来进行，这些指标可以是在设定的时间间隔内提交（例如每 10 分钟），或响应事件（用户请求、上游调用等）。例如，[合成](https://www.dynatrace.com/news/blog/what-is-synthetic-testing/)探测可以用于模拟用户请求、触发相关事件并监控相关数据。这里需要探索的**关键**
    **思想**是：传统系统在很大程度上是确定性的，因此通常更容易对其进行仪表化、探测和评估。另一方面，在我们这个美丽而非确定性的生成 AI 代理世界中，情况未必如此。
- en: '*Note: the focus of this post is more so on the former of our two objectives
    -* ***availability****. This includes determining acceptance criteria that sets
    up baseline cloud/environmental stability to help agents respond to user queries.
    For a deeper dive into* ***accuracy*** *(i.e. defining sensible task scope for
    the agents, optimizing performance of few-shot methods and evaluation frameworks),*
    [*this blog post*](https://blog.langchain.dev/planning-for-agents/) *acts as a
    wonderful primer.*'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：本文的重点更多放在我们两个目标中的前者 ——* ***可用性***。这包括确定接受标准，以设置基准的云/环境稳定性，帮助代理响应用户查询。要深入了解*
    ***准确性***（即为代理定义合理的任务范围，优化少量样本方法的性能和评估框架），* [*这篇博客文章*](https://blog.langchain.dev/planning-for-agents/)
    *是一个很好的入门文章。*'
- en: '[](https://blog.langchain.dev/planning-for-agents/?source=post_page-----fc759f5bbcfa--------------------------------)
    [## Planning for Agents'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://blog.langchain.dev/planning-for-agents/?source=post_page-----fc759f5bbcfa--------------------------------)
    [## 规划代理'
- en: The fourth installment in our "In the Loop Series," in which we talk about what
    planning means for an agent and how to…
  id: totrans-24
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 我们的“循环系列”中的第四期，讨论了规划对于一个代理意味着什么，以及如何……
- en: blog.langchain.dev](https://blog.langchain.dev/planning-for-agents/?source=post_page-----fc759f5bbcfa--------------------------------)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: blog.langchain.dev](https://blog.langchain.dev/planning-for-agents/?source=post_page-----fc759f5bbcfa--------------------------------)
- en: 'Now, back to the things engineers need to get right to ensure infrastructure
    reasiness when deploying agents. In order to achieve our target SLOs and provide
    a reliable and secure platform, senior engineers consistently take into account
    the following elements:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，回到工程师在部署代理时需要做对的事情，以确保基础设施的准备情况。为了实现我们的目标服务水平目标（SLO）并提供可靠且安全的平台，资深工程师始终考虑以下几个因素：
- en: '**Scalability**: when number of requests increase (suddenly at times), can
    the system handle them efficiently?'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可扩展性**：当请求数量增加（有时是突然增加时），系统能否有效处理？'
- en: '**Cost-Effectiveness**: LLM usage is expensive, so how can we monitor and control
    the cost?'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**成本效益**：大型语言模型（LLM）的使用成本较高，那么我们如何监控和控制成本呢？'
- en: '**High Availability**: how can we keep the system always-available and responsive
    to customers? Can agents self-heal and recover from errors/crashes?'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**高可用性**：我们如何保持系统始终可用并响应客户？代理是否能够自我修复并从错误/崩溃中恢复？'
- en: '**Security**: How can we ensure data is secure at rest and in transit, perform
    security audits, vulnerability assessments, etc.?'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**安全性**：我们如何确保数据在存储和传输过程中是安全的，如何进行安全审计、漏洞评估等？'
- en: '**Compliance & Regulatory**: a major topic for AI, what are the relevant data
    privacy regulations and other industry-specific standards to which we must adhere?'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**合规与监管**：这是 AI 的一个重要话题，我们必须遵守哪些相关的数据隐私法规和其他行业特定标准？'
- en: '**Observability**: how can we gain real-time visibility into AI agents’ activities,
    health, and resource utilization levels in order to identify and resolve problems
    before they impact the user experience?'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可观测性**：我们如何获得 AI 代理活动、健康状况和资源利用率的实时可见性，以便在问题影响用户体验之前识别和解决它们？'
- en: Sound familiar? These are similar to the challenges that modern web applications,
    Micro-servicespattern and Cloud infrastructure aim to address.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很熟悉吗？这些与现代 web 应用程序、微服务模式和云基础设施所要解决的挑战类似。
- en: So, now what? We propose an AI Agent development and maintenance framework that
    adheres to best-practices developed over the years across a range of engineering
    and software disciplines.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，接下来呢？我们提出一个 AI 智能体开发和维护框架，遵循多年来在多个工程和软件领域发展出的最佳实践。
- en: Multi-Agent-as-a-Service (MAaaS)
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多智能体即服务（MAaaS）
- en: 'This time, let us borrow some of [best-practices for cloud-based applications](https://learn.microsoft.com/en-us/azure/architecture/best-practices/index-best-practices)
    to redefine how agents are designed in production systems:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这一次，让我们借鉴一些 [基于云的应用最佳实践](https://learn.microsoft.com/en-us/azure/architecture/best-practices/index-best-practices)，重新定义智能体在生产系统中的设计方式：
- en: '**Clear Bounded Context:** Each agent should have a well-defined and small
    scope of responsibility with clear functionality boundaries. This modular approach
    ensures that agents are more accurate, easier to manage and scale independently.'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**清晰的边界上下文：** 每个智能体应具有明确定义的小范围职责，并明确功能边界。这种模块化方法确保了智能体更加精准，便于管理，并能够独立扩展。'
- en: '**RESTful and Asynchronous Inter-Service Communication:** Usage of RESTful
    APIs for communication between users and agents, and leveraging message brokers
    for asynchronous communication. This decouples agents, improving scalability and
    fault tolerance.'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**RESTful 和异步服务间通信：** 使用 RESTful API 在用户和智能体之间进行通信，并利用消息代理进行异步通信。这种方式解耦了智能体，提升了可扩展性和容错性。'
- en: '**Isolated Data Storage per Agent:** Each agent should have its own data storage
    to ensure data encapsulation and reduce dependencies. Utilize distributed data
    storage solutions where necessary to support scalability.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**每个智能体的独立数据存储：** 每个智能体应拥有自己的数据存储，以确保数据封装并减少依赖。在必要时，利用分布式数据存储解决方案来支持可扩展性。'
- en: '**Containerization and Orchestration:** Using containers (e.g. Docker) to package
    and deploy agents consistently across different environments, simplifying deployment
    and scaling. Employ container orchestration platforms like Kubernetes to manage
    the deployment, scaling, and operational lifecycle of agent services.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**容器化与编排：** 使用容器（例如 Docker）来包装和部署智能体，使其在不同环境中保持一致，简化部署和扩展。采用容器编排平台（如 Kubernetes）来管理智能体服务的部署、扩展和运营生命周期。'
- en: '**Testing and CI/CD:** Implementing automated testing (unit, integration, contract,
    and end-to-end tests) to ensure the reliable change management for agents. Use
    CI tools to automatically build and test agents whenever code changes are committed.
    Establish CD pipelines to deploy changes to production seamlessly, reducing downtime
    and ensuring rapid iteration cycles.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**测试和 CI/CD：** 实施自动化测试（单元测试、集成测试、契约测试和端到端测试），确保智能体的可靠变更管理。使用 CI 工具，在代码更改提交时自动构建和测试智能体。建立
    CD 流水线，实现无缝的生产环境变更部署，减少停机时间并确保快速迭代周期。'
- en: '**Observability:** Implementing robust observability instrumentation such as
    metrics, tracing and logging for the agents and their supporting infrastructure
    to build a real-time view of the platform’s reliability (tracing could be of particular
    interest here if a given user request goes through multiple agents). Calculating
    and tracking SLO’s and error budgets for the agents and the aggregate request
    flow. Synthetic probing and efficient Alerting on warnings and failures to make
    sure agent health issues are detected before widely impacting the end users.'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**可观察性：** 实施强大的可观察性工具，如度量、追踪和日志记录，监控智能体及其支持基础设施，以实时展示平台的可靠性（追踪尤其重要，如果某个用户请求经过多个智能体）。计算并跟踪智能体的服务水平目标（SLO）和错误预算，以及聚合的请求流。通过合成探测和高效的警报机制，在智能体健康问题对最终用户造成广泛影响之前，及时发现警告和故障。'
- en: By applying these principles, we can create a robust framework for AI agents,
    transforming the concept into “Multi-Agent as a Service” (MAaaS). This approach
    leverages the best-practices of cloud-based applications to redefine how agents
    are designed, deployed, and managed.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 通过应用这些原则，我们可以为 AI 智能体创建一个稳健的框架，将这一概念转变为“多智能体即服务”（MAaaS）。这种方法借鉴了基于云的应用最佳实践，重新定义了智能体的设计、部署和管理方式。
- en: '![](../Images/6c95c0fa65c7c8f30f0ba535e39a5655.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c95c0fa65c7c8f30f0ba535e39a5655.png)'
- en: Image by the author
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者
- en: 'The agent plays a critical role in business operations; however, it does not
    function in isolation. A robust infrastructure supports it, ensuring it meets
    production expectations, with some key components:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 智能体在业务操作中扮演着至关重要的角色；然而，它并非孤立运行。强大的基础设施支持着它，确保其满足生产期望，关键组件包括：
- en: '**Service-Oriented Architecture:** Design agents as services that can be easily
    integrated into existing systems.'
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**面向服务的架构：** 将代理设计为可以轻松集成到现有系统中的服务。'
- en: '**API Gateway:** Use an API gateway to manage and secure traffic between clients
    and agents.'
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**API网关：** 使用API网关管理和保护客户端与代理之间的流量。'
- en: '**Elastic Infrastructure:** Utilize cloud infrastructure that can elastically
    scale resources up or down based on demand.'
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**弹性基础设施：** 利用能够根据需求弹性扩展或缩减资源的云基础设施。'
- en: '**Managed Services:** Take advantage of managed services for databases, vector
    stores, messaging, and machine learning to reduce operational overhead.'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**托管服务：** 利用托管服务来管理数据库、向量存储、消息传递和机器学习，减少运营负担。'
- en: '**Centralized Monitoring:** Use centralized monitoring solutions (e.g., CloudWatch,
    Prometheus, Grafana) to track the health and performance of agents.'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**集中监控：** 使用集中监控解决方案（例如CloudWatch、Prometheus、Grafana）来跟踪代理的健康状况和性能。'
- en: 'To highlight this, we will demo a simple multi-agent system: a debate platform.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 为了突出这一点，我们将演示一个简单的多代理系统：一个辩论平台。
- en: 'Example: Multi-Agent Debate System'
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 示例：多代理辩论系统
- en: 'We’ve crafted a multi-agent debate system to demonstrate MAaaS in action. The
    debate topic is *AI’s impact on the job market*. The setup features three agents:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们设计了一个多代理辩论系统来展示MAaaS的实际应用。辩论的主题是*AI对就业市场的影响*。设置中有三个代理：
- en: Team A, which supports AI’s benefits for jobs
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队伍A，支持AI对工作的益处
- en: Team B, which holds the opposing view
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 队伍B，持反对意见
- en: The Host, which manages the debate, ending it after eight rounds or when discussions
    become redundant.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 主持人管理辩论，在八轮之后或当讨论变得冗余时结束辩论。
- en: Focusing on system architecture, we use [PhiData](https://www.phidata.com/)
    to create the agents, deploying them via AWS Elastic Kubernetes Service (EKS)
    for high availability. Agent activities are monitored with AWS CloudWatch, and
    EKS’s service discovery ensures agents communicate seamlessly. Crucially, conversation
    histories are stored in a database, allowing any backup agent to continue discussions
    without interruption in case of failures. This resilience is bolstered by a message
    queue that ensures data integrity by processing messages only when fully consumed.
    To maintain dialogue flow, each agent is limited to a single replica for now,
    though Kubernetes would ensure that desired state is always maintained in case
    of the pod going down.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 专注于系统架构，我们使用[PhiData](https://www.phidata.com/)创建代理，并通过AWS弹性Kubernetes服务（EKS）进行部署，以确保高可用性。代理活动通过AWS
    CloudWatch进行监控，EKS的服务发现确保代理之间无缝通信。重要的是，对话历史存储在数据库中，这样任何备份代理在发生故障时都可以不中断地继续对话。这种弹性通过消息队列得到增强，消息队列确保在完全消费消息之前不会处理它们，从而确保数据完整性。为了保持对话流畅，每个代理目前仅限于一个副本，尽管Kubernetes会确保在Pod宕机时始终保持所需的状态。
- en: '![](../Images/e636989850513f6f2c4fc988c33a0a83.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e636989850513f6f2c4fc988c33a0a83.png)'
- en: Image by the author
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: To enable users to try the system locally, we’ve created a MiniKube deployment
    YAML. In this simplified version, we’ve eliminated the postgres database. Instead,
    each agent will temporarily store its conversation history in memory. This adjustment
    keeps the system lightweight and more accessible for local deployment, while still
    showcasing the essential functionalities. You would need to install [MiniKube](https://minikube.sigs.k8s.io/docs/start/?arch=%2Fmacos%2Farm64%2Fstable%2Fbinary+download),
    [Ollama](https://ollama.com/download) and [kubectl](https://kubernetes.io/docs/tasks/tools/#kubectl)
    on your system first.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 为了让用户能够在本地尝试系统，我们创建了一个MiniKube部署YAML文件。在这个简化版本中，我们去掉了postgres数据库。相反，每个代理将临时将其对话历史存储在内存中。这个调整使系统更加轻量化，并且便于本地部署，同时仍展示了核心功能。你需要先在系统上安装[MiniKube](https://minikube.sigs.k8s.io/docs/start/?arch=%2Fmacos%2Farm64%2Fstable%2Fbinary+download)、[Ollama](https://ollama.com/download)和[kubectl](https://kubernetes.io/docs/tasks/tools/#kubectl)。
- en: 'Save the above in a file called `deploy.yml`and run:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 将上述内容保存为名为`deploy.yml`的文件，然后运行：
- en: '[PRE0]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'To start debate (minikube behaves slightly differently on Linux-based vs. Windows
    systems):'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 启动辩论（MiniKube在基于Linux的系统与Windows系统上表现略有不同）：
- en: '[PRE1]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'To get the debate history:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 获取辩论历史：
- en: '[PRE2]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To tear down the resource:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 拆除资源：
- en: '[PRE3]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The agents proceed to have an outstanding debate (see debate output in the appendix
    below).
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 代理们展开了精彩的辩论（请参见下面附录中的辩论输出）。
- en: Conclusion
  id: totrans-71
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: The interest in multi-agent systems opens up numerous possibilities for innovation
    and efficiency. By leveraging cloud-native principles and best practices, we can
    create scalable, cost-effective, secure, and highly available multi agent systems.
    The MAaaS paradigm not only aligns with modern software engineering principles
    but also paves the way for more sophisticated and production-ready AI applications.
    As we continue to explore and refine these concepts, the potential for multi agent
    system to revolutionize various industries becomes increasingly promising.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 对多智能体系统的兴趣为创新和效率开辟了诸多可能性。通过利用云原生原则和最佳实践，我们可以创建可扩展、具有成本效益、安全且高度可用的多智能体系统。MAaaS范式不仅与现代软件工程原则一致，而且为更复杂且适合生产的AI应用铺平了道路。在我们继续探索和完善这些概念的过程中，多智能体系统在各个行业中变革的潜力变得越来越有前景。
- en: '*Note: this article was written as a collaboration between* [*Sam Rajaei*](https://www.linkedin.com/in/saman-rajaei-24315087/)
    *and* [*Guanyi Li*](https://www.linkedin.com/in/guanyi-li-91662016/)*.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：本文由* [*Sam Rajaei*](https://www.linkedin.com/in/saman-rajaei-24315087/)
    *和* [*Guanyi Li*](https://www.linkedin.com/in/guanyi-li-91662016/)* 合作撰写。*'
- en: 'Appendix: Debate Output'
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录：辩论输出
- en: Thank you for your attention, till next time!
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢您的关注，下次再见！
