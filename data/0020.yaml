- en: What Next? Exploring Graph Neural Network Recommendation Engines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 接下来做什么？探索图神经网络推荐引擎
- en: 原文：[https://towardsdatascience.com/what-next-exploring-graph-neural-network-recommendation-engines-67d6a39d8817?source=collection_archive---------7-----------------------#2024-01-04](https://towardsdatascience.com/what-next-exploring-graph-neural-network-recommendation-engines-67d6a39d8817?source=collection_archive---------7-----------------------#2024-01-04)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/what-next-exploring-graph-neural-network-recommendation-engines-67d6a39d8817?source=collection_archive---------7-----------------------#2024-01-04](https://towardsdatascience.com/what-next-exploring-graph-neural-network-recommendation-engines-67d6a39d8817?source=collection_archive---------7-----------------------#2024-01-04)
- en: It’s so difficult to decide what to watch next. Let’s build an AI algorithm
    to do it for us!
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择接下来要看的内容实在太难了。让我们构建一个AI算法来为我们做这件事吧！
- en: '[](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--67d6a39d8817--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)
    ·11 min read·Jan 4, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--67d6a39d8817--------------------------------)
    ·阅读时间约11分钟·2024年1月4日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/628ac2f367b7a6b89a76b45eab5a8607.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/628ac2f367b7a6b89a76b45eab5a8607.png)'
- en: Photo by [Dex Ezekiel](https://unsplash.com/es/@dexezekiel?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Dex Ezekiel](https://unsplash.com/es/@dexezekiel?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: The recommendation of content is a common application of machine learning and
    artificial intelligence. This article will review a **Graph Neural Network** approach
    to content recommendation, using **Link Regression**. The objective is to build
    a content recommendation engine that **predicts how a user would rate unseen content
    based on their ratings of content they have seen**.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 内容推荐是机器学习和人工智能的常见应用。本文将回顾一种基于**图神经网络**的内容推荐方法，采用**链接回归**。其目标是构建一个内容推荐引擎，**根据用户对已观看内容的评分，预测用户对未观看内容的评分**。
- en: We will start with a concept review of Graph Neural Networks (GNNs) along with
    an introduction to **PyTorch Geometric (PyG),** a GNN package in Python. Then
    we will apply these concepts to a recommendation engine of our own to get AI-powered
    content recommendations.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将从图神经网络（GNN）的概念回顾开始，并介绍**PyTorch Geometric (PyG)**，这是一个Python中的GNN包。然后，我们将这些概念应用到我们自己的推荐引擎中，获取AI驱动的内容推荐。
- en: Thank you for taking the time to read and as always the code on my GitHub and
    useful links will be available in the references at the end of the post.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢你花时间阅读，像往常一样，代码和有用链接将在文章末尾的参考资料中提供。
- en: '**Concept Review**'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '**概念回顾**'
- en: Let’s start with a concept review; it’s really important to understand all of
    the moving parts of Graph Neural Networks or GNNs before we can use one. Before
    we start to understand GNNs it’s most important to understand graphs! So let’s
    review what we mean when we talk about graphs in this context.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从概念回顾开始；在我们使用图神经网络之前，理解其所有的关键部分是非常重要的。在开始理解GNN之前，最重要的是先了解图！所以让我们回顾一下在这个语境中我们所说的图的含义。
- en: '**Graph Data Structures**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**图数据结构**'
- en: When I talk about a graph in the context of a GNN, I am referring to a **Graph
    Data Structure**. This is not the same thing as a chart or a figure which is used
    to visualise data, as you would sometimes expect from the word ‘graph’.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 当我在图神经网络（GNN）的上下文中谈论图时，我指的是**图数据结构**。这与用于可视化数据的图表或图形不同，虽然有时你可能会从“图”这个词中期望看到的是图表或图形。
- en: 'It might be useful to think of graph data structures in the context of a social
    network. This is similar to how social media sites store data. Imagine your Facebook
    profile. You might be connected to your brother and your old friend from high
    school, and the graph data structure would look like this:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在社交网络的背景下考虑图数据结构可能会更有用。这类似于社交媒体网站如何存储数据。想象一下你的Facebook个人资料。你可能与兄弟和高中时的老朋友有联系，那么图数据结构就像这样：
- en: '![](../Images/64e0a960e7a7b6fb5a92adad3746194c.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/64e0a960e7a7b6fb5a92adad3746194c.png)'
- en: 'Source: Image by Author'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: Each person is a **node,** which just means a dot in our representation. Our
    nodes have characteristics like the names of the people they represent. Each connection
    is an **edge** and they represent a link (friendship) between two nodes.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 每个人都是一个**节点**，这只是意味着我们表示中的一个点。我们的节点具有诸如它们代表的人的名字这样的特征。每个连接都是一条**边**，它们代表两个节点之间的联系（友谊）。
- en: 'Now, it is no stretch for us to expand this network. Your brother may be connected
    to his boss. Now we have an important concept and idea. This is the idea of **degrees
    of separation**. We can (somewhat safely) assume that your opinions and preferences
    are more closely aligned with your brother than with your brother’s boss. This
    is simply because you are directly connected to your brother but you have to make
    a jump to get to his boss:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们扩展这个网络也不难。你的兄弟可能与他的老板有联系。现在我们引入了一个重要的概念和想法。这就是**分离度**的概念。我们可以（相对安全地）假设你的观点和偏好与你的兄弟比与你的兄弟的老板更为接近。这是因为你与你的兄弟是直接连接的，而你必须通过跳跃才能到达他的老板：
- en: '![](../Images/ab5d5dec4779b6eb47abd83117d2e306.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab5d5dec4779b6eb47abd83117d2e306.png)'
- en: 'Source: Image by Author'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: 'Now, let’s revisit that old friend from high school. We already know our nodes
    can have characteristics like names and ages. Let’s now build on that by giving
    our edges characteristics too! Let’s say the number of times you message a friend
    gives the edge a characteristic. We will call this the **edge weight**. In our
    example this may look something like this, where the edge weight is expressed
    in the thickness of the edge; more messages equates to a thicker line:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们重新回顾一下高中时的老朋友。我们已经知道我们的节点可以有像名字和年龄这样的特征。现在，让我们在此基础上，为我们的边添加特征！假设你给朋友发消息的次数为边的特征。我们将其称为**边的权重**。在我们的例子中，这看起来可能像这样，其中边的权重通过边的粗细来表示；发的消息越多，线条越粗：
- en: '![](../Images/3c16165fd89248a057346bf7c44cec98.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3c16165fd89248a057346bf7c44cec98.png)'
- en: 'Source: Image by Author'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: Now that we know the weight of an edge, we can use that too in building up our
    idea of preference and opinion. Someone you message regularly is, again, more
    likely to enjoy the same things you do; that’s why you are friends! So from this
    example, we can not only say your brother is more like you than someone further
    down the line of connections, but also that you have more in common than someone
    else who is directly connected to you.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了边的权重，我们也可以在构建我们对偏好和观点的理解时使用这一点。你经常联系的人，更有可能喜欢和你一样的东西；这就是你们成为朋友的原因！因此，从这个例子中，我们不仅可以说你的兄弟比与你有更远联系的人更像你，还可以说你们之间有更多的共同点，而不是那些与你直接连接的人。
- en: 'The final complication we can add here is making our graph **heterogenous**.
    This is just a fancy way of saying there are two types of node. Let’s apply this
    example to our project and say we have people and anime:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以添加的最后一个复杂性是使我们的图变得**异构**。这只是一个华丽的说法，意味着有两种类型的节点。让我们将这个例子应用到我们的项目中，假设我们有“人”和“动漫”：
- en: '![](../Images/4e1ef7b87ccfce3983ac1c525ffd07a0.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e1ef7b87ccfce3983ac1c525ffd07a0.png)'
- en: 'Source: Image by Author'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: This final graph is very close to the actual data used in this project. We can
    see that you and your brother both enjoyed Pokemon. Your brother also really enjoyed
    Attack on Titan. So in this simple graph, we can already see how an algorithm
    could recommend Attack on Titan to you!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这个最终的图形非常接近本项目中使用的实际数据。我们可以看到你和你的兄弟都喜欢《宝可梦》。你的兄弟也非常喜欢《进击的巨人》。因此，在这个简单的图形中，我们已经可以看到一个算法如何向你推荐《进击的巨人》！
- en: As we multiply this idea out we can start to see how massive graphs of data
    can be used to make judgments and suggestions for millions of users, so it’s no
    wonder why Netflix knows you want to watch The Office for the thousandth time.
    But it’s okay… we all do! Let’s now examine how these graph datasets are used
    by a neural network.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 随着我们展开这个思路，我们可以开始看到如何利用庞大的数据图来为数百万用户做出判断和建议，因此，Netflix知道你想看《办公室》第千次也就不足为奇了。不过没关系……我们都一样！现在让我们来看看这些图数据集是如何被神经网络使用的。
- en: '**Graph Neural Networks**'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**图神经网络**'
- en: Graph Neural Networks, or GNNs, are an extension of Neural Networks, in that
    they use Graph Data Structures or **Geometric** data instead of the typical tabular
    data structures used by more traditional Neural Networks. This means they are
    at a foundational level very similar, both have input, hidden, and output layers.
    Both have several different types of layers in common too including Convolutional
    and Linear layers that are explored here. The main difference is in how the data
    is treated before and during the training process.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 图神经网络（GNNs）是神经网络的扩展，它们使用图数据结构或**几何**数据，而不是传统神经网络使用的典型表格数据结构。这意味着从基础上讲，它们非常相似，都是由输入层、隐藏层和输出层组成。两者还共享多种类型的层，包括本文探讨的卷积层和线性层。主要的区别在于数据在训练过程之前和过程中如何被处理。
- en: 'In this project, Graph SAGE is used which is a layer in the neural network.
    Graph SAGE among other possible options is responsible for **message passing.**
    This is also sometimes called **encoding**. The message-passing process just involves
    building an understanding of each node and edge based on its neighbors:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，使用了Graph SAGE，这是神经网络中的一层。Graph SAGE在其他可能的选项中负责**信息传递**。这也有时被称为**编码**。信息传递过程就是基于节点和边的邻居来构建对每个节点和边的理解：
- en: '![](../Images/204ba776fd99dfc9415440eeba0c4de6.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/204ba776fd99dfc9415440eeba0c4de6.png)'
- en: 'Source: Image by Author'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：作者提供的图片
- en: Each node passes a message to its neighboring nodes. This gives the network
    an understanding of the type of users who watch this anime, as well as an understanding
    of the type of anime this user likes! There is a note that is particularly relevant
    to this point in the application section.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 每个节点将信息传递给其邻居节点。这使得网络能够理解观看该动漫的用户类型，并且还能够理解这个用户喜欢什么类型的动漫！关于这一点，应用部分有一个特别相关的说明。
- en: The SAGE layer is a type of **Convolutional layer**. We can compare this to
    a Convolutional layer in a CNN for image recognition. Instead of building an understanding
    of the image based on neighboring pixels, here we do it based on neighboring nodes!
    To get a better understanding of this process, an amazing YouTube series is recommended
    at the end of this article.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: SAGE层是一种**卷积层**。我们可以将其与用于图像识别的卷积神经网络中的卷积层进行比较。与基于相邻像素构建图像理解不同，这里我们是基于相邻节点来进行理解！为了更好地理解这一过程，本文最后推荐了一个精彩的YouTube系列。
- en: The final bit of our network is simply using a **Linear** layer to predict the
    rating! The linear layer works in much the same way as in other neural networks.
    Producing a regression that predicts the rating based on the features it has been
    given. We can use multiple Linear layers at the end of our network to give a set
    number of output neurons that represent our prediction. This concludes the concept
    review!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们网络的最后一部分仅仅是使用**线性**层来预测评分！线性层的工作方式与其他神经网络非常相似。它通过回归来预测评分，回归是基于网络所给定的特征进行的。我们可以在网络的末尾使用多个线性层，输出一组代表我们预测的神经元。这就完成了概念回顾！
- en: Application of GNN using PyTorch Geometric
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用PyTorch Geometric的GNN应用
- en: The practical application of this project follows along with the PyTorch Geometric
    example for link regression and applies it to the anime dataset. A link to the
    PyTorch Geometric code is given at the end of the article.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目的实际应用跟随PyTorch Geometric示例进行链接回归，并将其应用于动漫数据集。文章末尾提供了PyTorch Geometric代码的链接。
- en: '![](../Images/f2ee4640fe9c6cc1a4e93dd6a4c3a2c5.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2ee4640fe9c6cc1a4e93dd6a4c3a2c5.png)'
- en: Photo by [Akin Cakiner](https://unsplash.com/@akin?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Akin Cakiner](https://unsplash.com/@akin?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Now let’s stop sitting around and get building!
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们停止闲坐，开始构建吧！
- en: The data used for the project comes from Kaggle and is based on user ratings
    of various anime. The dataset has been sampled with 6,000 unique users and their
    ratings of different anime taken. The data is sampled due to limited training
    resources which may affect the accuracy of the model. Future work could see increased
    resources used to train this model.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 项目所使用的数据来自Kaggle，基于用户对各种动漫的评分。数据集采样了6,000个独特的用户及其对不同动漫的评分。由于训练资源有限，数据集已进行采样，这可能会影响模型的准确性。未来的工作可能会增加更多的资源来训练该模型。
- en: 'Some visualizations are given below to get a quick understanding of the dataset
    as well as some features of the anime that may affect user ratings:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些可视化图示，帮助快速理解数据集以及可能影响用户评分的某些动漫特征：
- en: '![](../Images/a4541ed0f570ea16edf9ddd6f3446587.png)![](../Images/fdf9c4015c1a42c8f2f02c5f03f1742f.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a4541ed0f570ea16edf9ddd6f3446587.png)![](../Images/fdf9c4015c1a42c8f2f02c5f03f1742f.png)'
- en: 'Source: Images by Author'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: '![](../Images/db8db24379ea1c197b381a796f9c1961.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db8db24379ea1c197b381a796f9c1961.png)'
- en: 'Source: Images by Author'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: The scatter plot gives a sense of scale as to just how many individual pieces
    of content we are dealing with!
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 散点图提供了一种对比感，展示了我们处理的内容数量有多庞大！
- en: '**Feature Engineering**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**特征工程**'
- en: 'The features above that seem to affect average ratings the most are the type
    of anime (Movie, Series, etc…) and the genre (Action, Comedy, etc…). These will
    be used as node features in the network. The code for this step is given below.
    The features are taken into tensors and then concatenated along the same axis
    so that each node has features related to its type and genre:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 上面提到的几个似乎最能影响平均评分的特征是动漫的类型（电影、系列等）和类型（动作、喜剧等）。这些特征将作为网络中的节点特征。以下给出了这一步骤的代码。特征被转换为张量，然后沿相同的轴进行拼接，以便每个节点都有与其类型和类型相关的特征：
- en: 'These node features will be useful, however, we can also extract an additional
    feature the title of the anime. To do this, a **sentence transformer** is used
    to generate an embedding of the title. This embedding is also used as a feature:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这些节点特征将很有用，但我们还可以提取一个额外的特征——动漫的标题。为此，使用了一个**句子变换器**来生成标题的嵌入。这个嵌入也作为一个特征使用：
- en: 'This embedding based on the anime title might be a useful feature, as the network
    could pick up on users rating content similarly based on the name. For example,
    users who like “Pokemon: X and Y” might also like “Pokemon: Diamond and Pearl”.
    The embeddings for each would also be similar.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 基于动漫标题的嵌入可能是一个有用的特征，因为网络可能会识别出用户根据标题对内容进行相似评分。例如，喜欢《宝可梦：X和Y》的用户可能也会喜欢《宝可梦：钻石与珍珠》。这两者的嵌入也将会是相似的。
- en: '**Building a Graph Dataset**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**构建图数据集**'
- en: 'The feature selected above will allow the network to learn about how users
    interact with different types, genres, and titles of anime. The network can use
    these features to make better predictions. It is also possible to use user-features
    but for simplicity, we will just give the anime features. It is important to note
    that both users and anime will be nodes in our graph dataset. The code to build
    this object is quite complicated; the first step involves building a sequential
    set of IDs for users and anime and mapping those back onto the original data.
    The next step shown in the code below involves using those mappings to build the
    PyTorch data object:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 上述选择的特征将使网络能够学习用户如何与不同类型、种类和标题的动漫互动。网络可以利用这些特征做出更好的预测。虽然也可以使用用户特征，但为了简便起见，我们仅使用动漫特征。值得注意的是，用户和动漫都将作为节点出现在我们的图数据集中。构建该对象的代码相对复杂；第一步是构建一个用户和动漫的ID序列，并将这些ID映射回原始数据。下面的代码展示了下一步，即使用这些映射来构建PyTorch数据对象：
- en: '*Note: In building our graph dataset, we make it Undirected. So each user is
    rating an anime with a rating label, but each anime is also rating a user with
    the same label. This is so that the message-passing step allows each node to learn
    about itself and all of its connections. This may not be appropriate in all applications
    but here it enables the graph to understand more about the type of users who watch
    this anime and the type of anime this user enjoys.*'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：在构建我们的图数据集时，我们将其设置为无向图。所以每个用户给动漫打上评分标签，但每个动漫也会用相同的标签给用户打分。这样做是为了让消息传递步骤能够使每个节点了解自己以及它与其他节点的连接。这种做法并不适用于所有应用场景，但在这里，它使得图能够更好地理解观看该动漫的用户类型以及这些用户喜欢的动漫类型。*'
- en: '**Building a Graph Neural Network**'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**构建图神经网络**'
- en: 'For those familiar with PyTorch, the Geometric equivalent will look very similar.
    This application uses three different objects:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 对于熟悉 PyTorch 的人来说，几何等效物看起来会非常相似。这个应用程序使用了三种不同的对象：
- en: GNN Encoder — Use SageConv layers to encode graph features with message passing.
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GNN 编码器 — 使用 SageConv 层通过消息传递来编码图形特征。
- en: The Edge decoder — Use Linear layers to decode the edges and predict the ratings.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边解码器 — 使用线性层解码边缘并预测评分。
- en: Model class — combines the above two objects and defines the overall training
    process of encoding/decoding.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 模型类 — 结合了上述两个对象，并定义了编码/解码的整体训练过程。
- en: 'Each of the encoder and decoder objects implements just two functions:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 每个编码器和解码器对象仅实现了两个函数：
- en: An init function — Defines the structure of the layers.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个初始化函数 — 定义了层的结构。
- en: A forward function — Defines the transformations taken on the input to the layers.
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个前向函数 — 定义了输入到各层之间的转换。
- en: 'A graphical representation of our network would look something like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 我们网络的图示可能长这样：
- en: '![](../Images/75c69fc5d44f97ba0bc3f9cdd30b27f6.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75c69fc5d44f97ba0bc3f9cdd30b27f6.png)'
- en: 'Source: Image by Author'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: 'This is a good chance to review why the GNN is so good for Graph data structures:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的机会来回顾为什么 GNN 对图形数据结构如此有效：
- en: The input layer (Sage CONV) has no fixed input size so a graph of any size can
    be used to build that embedding
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 输入层（Sage CONV）没有固定的输入大小，因此可以使用任何大小的图来构建该嵌入。
- en: Once the embedding of the graph is built through the message passing layers
    (Graph SAGE One and Two) more traditional layers like Linear layers can be used
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一旦通过消息传递层（Graph SAGE One 和 Two）构建了图的嵌入，便可以使用更传统的层，如线性层。
- en: 'In code, this is:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在代码中，这是：
- en: 'The final step is building out the training process. In this example, I have
    chosen to use the RMSE measure for loss. This code is fairly standard for training
    neural networks in PyTorch so please check the documentation or leave a comment
    if you would be interested in a more detailed article on this:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 最后的步骤是构建训练过程。在这个示例中，我选择使用 RMSE 作为损失的衡量标准。这段代码对于在 PyTorch 中训练神经网络来说是相当标准的，因此如果你对更详细的文章感兴趣，可以查看文档或留言。
- en: Once the training process is defined we begin to train the model.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦训练过程定义完毕，我们就开始训练模型。
- en: '**Evaluating the model**'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**评估模型**'
- en: Before the model is evaluated it is important to highlight one drawback of the
    dataset. That is the ratings provided are actually ordinal given at absolute values
    i.e. 0, 1, 2, … so strictly speaking a regression isn’t the most appropriate decision.
    In a real-world scenario, this may be a problem but for this project, we will
    stick with the regression approach and round our values at the end.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估模型之前，重要的是要强调数据集的一个缺点。也就是，所提供的评分实际上是绝对值的序数值，即 0、1、2 等，因此严格来说，回归分析并不是最合适的决策。在实际场景中，这可能是一个问题，但对于这个项目，我们将坚持使用回归方法，并在最后对值进行四舍五入。
- en: 'Before evaluating it is important we use our unseen test data to make final
    judgments on the model. It is also important in this case that we clamp our predictions
    so that the model only predicts between 0 and 10 the available values for users
    rating anime:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估之前，重要的是我们使用未见过的测试数据来对模型做出最终判断。在这种情况下，确保我们的预测被限定在 0 到 10 之间是很重要的，因为这是用户评分动漫的有效范围：
- en: When evaluating the model we used the Root Mean Square Error (RMSE) in predictions.
    On assessing the model we can see that the overall RMSE (on unseen test data)
    was 1.23.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在评估模型时，我们使用了预测的均方根误差（RMSE）。在评估模型时，我们可以看到整体的 RMSE（在未见过的测试数据上）为 1.23。
- en: 'We can review what this looks like across each different actual rating using
    the charts below:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过下面的图表回顾每个实际评分在不同情况下的表现：
- en: '![](../Images/1afb0535b53d4335b9bf4ecb2072b2ce.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1afb0535b53d4335b9bf4ecb2072b2ce.png)'
- en: 'Source: Image by Author'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：图片由作者提供
- en: Not very many anime had below a five rating so given that training samples were
    more scarce, the model had a hard time predicting an accurate low score. That
    being said, the higher ratings were commonly predicted correctly. Particularly
    around an 8 target rating where the model seemed to estimate the most correct
    ratings.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 很少有动漫评分低于五分，因此由于训练样本较少，模型在预测低评分时遇到困难。尽管如此，高评分通常能被正确预测。特别是在目标评分为 8 附近时，模型似乎能预测出最准确的评分。
- en: In a deployed product, the model would make estimates and then return either
    these raw scores to users, or in some cases we could see a threshold set. For
    example, if the model predicts you will rate content at a 7 or above, then the
    algorithm will recommend that you watch the anime.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在已部署的产品中，模型会进行估算，然后将这些原始分数返回给用户，或者在某些情况下，我们可以看到设置了阈值。例如，如果模型预测你会对内容打7分或更高，那么算法会推荐你观看该动漫。
- en: There are also future recommendations for a project like this. For example,
    exploring the use of link prediction instead of link regression or even link classification.
    There is also a suggestion that more of the training data, hyperparameter tuning
    or other boosted learning methods could be used, however, that was outside of
    the resource limits for me! Until then I’ve got lots of great new content recommendations
    to get on with thanks to my Graph Neural Network!
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 对于像这样的项目，还有一些未来的推荐。例如，探索使用链接预测代替链接回归，甚至是链接分类。还有一种建议是可以使用更多的训练数据、超参数调优或其他增强学习方法，但这些超出了我的资源限制！在此之前，我有许多优秀的新内容推荐可以继续进行，感谢我的图神经网络！
- en: This concludes the exploration of graph neural networks as recommendation engines.
    Throughout this project, I’ve learned a lot about graph data structures as well
    as GNNs. There is also a lot more to learn so please stick around for a future
    article where I will explore explainable AI using this codebase and the Captum
    Python Package.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 这结束了作为推荐引擎的图神经网络探索。在这个项目中，我学到了很多关于图数据结构和 GNN 的知识。还有很多需要学习的内容，请继续关注未来的文章，在那里我将使用此代码库和
    Captum Python 包探索可解释的 AI。
- en: References
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Code:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 代码：
- en: '[](https://github.com/josephlewisjgl/GNNRecommender?source=post_page-----67d6a39d8817--------------------------------)
    [## GitHub - josephlewisjgl/GNNRecommender: Bootstrapped tutorial from PyTorch
    Geometric. Using anime…'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/josephlewisjgl/GNNRecommender?source=post_page-----67d6a39d8817--------------------------------)
    [## GitHub - josephlewisjgl/GNNRecommender: 来自 PyTorch Geometric 的自举教程。使用动漫…'
- en: Bootstrapped tutorial from PyTorch Geometric. Using anime dataset to build recommendations.
    - GitHub …
  id: totrans-89
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自 PyTorch Geometric 的自举教程。使用动漫数据集构建推荐系统。 - GitHub …
- en: github.com](https://github.com/josephlewisjgl/GNNRecommender?source=post_page-----67d6a39d8817--------------------------------)
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/josephlewisjgl/GNNRecommender?source=post_page-----67d6a39d8817--------------------------------)
- en: 'Dataset (licensed in the Public Domain, CC0 [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/)):'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集（公共领域许可，CC0 [https://creativecommons.org/publicdomain/zero/1.0/](https://creativecommons.org/publicdomain/zero/1.0/)）：
- en: '[](https://www.kaggle.com/datasets/CooperUnion/anime-recommendations-database?source=post_page-----67d6a39d8817--------------------------------)
    [## Anime Recommendations Database'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://www.kaggle.com/datasets/CooperUnion/anime-recommendations-database?source=post_page-----67d6a39d8817--------------------------------)
    [## 动漫推荐数据库'
- en: Recommendation data from 76,000 users at myanimelist.net
  id: totrans-93
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 来自 myanimelist.net 的 76,000 用户的推荐数据
- en: www.kaggle.com](https://www.kaggle.com/datasets/CooperUnion/anime-recommendations-database?source=post_page-----67d6a39d8817--------------------------------)
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '[www.kaggle.com](https://www.kaggle.com/datasets/CooperUnion/anime-recommendations-database?source=post_page-----67d6a39d8817--------------------------------)'
- en: 'YouTube Explainer series on GNNs: [https://www.youtube.com/watch?v=fOctJB4kVlM](https://www.youtube.com/watch?v=fOctJB4kVlM)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 关于 GNN 的 YouTube 讲解系列：[https://www.youtube.com/watch?v=fOctJB4kVlM](https://www.youtube.com/watch?v=fOctJB4kVlM)
- en: 'PyTorch Geometric Docs:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch Geometric 文档：
- en: '[## PyG Documentation - pytorch_geometric documentation'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[## PyG 文档 - pytorch_geometric 文档'
- en: It consists of various methods for deep learning on graphs and other irregular
    structures, also known as geometric deep…
  id: totrans-98
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 它包含了多种用于图形和其他不规则结构的深度学习方法，也被称为几何深度学习…
- en: pytorch-geometric.readthedocs.io](https://pytorch-geometric.readthedocs.io/en/latest/index.html?source=post_page-----67d6a39d8817--------------------------------)
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: pytorch-geometric.readthedocs.io](https://pytorch-geometric.readthedocs.io/en/latest/index.html?source=post_page-----67d6a39d8817--------------------------------)
- en: 'PyTorch Geometric Link Regression Example:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch Geometric 链接回归示例：
- en: '[](https://colab.research.google.com/drive/1N3LvAO0AXV4kBPbTMX866OwJM9YS6Ji2?usp=sharing&source=post_page-----67d6a39d8817--------------------------------)
    [## Google Colaboratory'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://colab.research.google.com/drive/1N3LvAO0AXV4kBPbTMX866OwJM9YS6Ji2?usp=sharing&source=post_page-----67d6a39d8817--------------------------------)
    [## Google Colaboratory'
- en: Edit description
  id: totrans-102
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 编辑描述
- en: colab.research.google.com](https://colab.research.google.com/drive/1N3LvAO0AXV4kBPbTMX866OwJM9YS6Ji2?usp=sharing&source=post_page-----67d6a39d8817--------------------------------)
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: colab.research.google.com](https://colab.research.google.com/drive/1N3LvAO0AXV4kBPbTMX866OwJM9YS6Ji2?usp=sharing&source=post_page-----67d6a39d8817--------------------------------)
- en: 'Sage Conv Medium Article from [Sahil Sheikh](https://medium.com/u/e1ffb7719884?source=post_page---user_mention--67d6a39d8817--------------------------------):'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 来自[Sahil Sheikh](https://medium.com/u/e1ffb7719884?source=post_page---user_mention--67d6a39d8817--------------------------------)的Sage
    Conv Medium文章：
- en: '[](https://medium.com/@sheikh.sahil12299/exploring-sageconv-a-powerful-graph-neural-network-architecture-44b7974b1fe0?source=post_page-----67d6a39d8817--------------------------------)
    [## Exploring SageConv: A Powerful Graph Neural Network Architecture'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@sheikh.sahil12299/exploring-sageconv-a-powerful-graph-neural-network-architecture-44b7974b1fe0?source=post_page-----67d6a39d8817--------------------------------)
    [## 探索SageConv：一个强大的图神经网络架构'
- en: Graph Neural Networks (GNNs) are a class of deep learning models that are designed
    to operate on graph-structured data…
  id: totrans-106
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 图神经网络（GNNs）是一类深度学习模型，旨在处理图结构数据…
- en: medium.com](https://medium.com/@sheikh.sahil12299/exploring-sageconv-a-powerful-graph-neural-network-architecture-44b7974b1fe0?source=post_page-----67d6a39d8817--------------------------------)
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@sheikh.sahil12299/exploring-sageconv-a-powerful-graph-neural-network-architecture-44b7974b1fe0?source=post_page-----67d6a39d8817--------------------------------)
