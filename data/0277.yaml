- en: What’s New in Pandas 2.2
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Pandas 2.2 新特性
- en: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-2-e3afe6f341f5?source=collection_archive---------3-----------------------#2024-01-30](https://towardsdatascience.com/whats-new-in-pandas-2-2-e3afe6f341f5?source=collection_archive---------3-----------------------#2024-01-30)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/whats-new-in-pandas-2-2-e3afe6f341f5?source=collection_archive---------3-----------------------#2024-01-30](https://towardsdatascience.com/whats-new-in-pandas-2-2-e3afe6f341f5?source=collection_archive---------3-----------------------#2024-01-30)
- en: The most interesting things about the new release
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于新版本最有趣的内容
- en: '[](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)[![Patrick
    Hoefler](../Images/35ca9ef1100d8c93dbadd374f0569fe1.png)](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)
    [Patrick Hoefler](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)[![Patrick
    Hoefler](../Images/35ca9ef1100d8c93dbadd374f0569fe1.png)](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)
    [Patrick Hoefler](https://medium.com/@patrick_hoefler?source=post_page---byline--e3afe6f341f5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)
    ·5 min read·Jan 30, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e3afe6f341f5--------------------------------)
    ·5分钟阅读·2024年1月30日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/9eaf581fc856e2a9299e0181e4191394.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9eaf581fc856e2a9299e0181e4191394.png)'
- en: Photo by [Zoe Nicolaou](https://unsplash.com/@lekneuro?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/panda-climbing-on-tree-44g_jwn3JzY?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由[Zoe Nicolaou](https://unsplash.com/@lekneuro?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)拍摄，图片来源于[Unsplash](https://unsplash.com/photos/panda-climbing-on-tree-44g_jwn3JzY?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
- en: pandas 2.2 was released on January 22nd 2024\. Let’s take a look at the things
    this release introduces and how it will help us to improve our pandas workloads.
    It includes a bunch of improvements that will improve the user experience.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 2.2于2024年1月22日发布。让我们看看这一版本带来了哪些新特性，以及它如何帮助我们改善pandas工作负载。它包含了一系列提升用户体验的改进。
- en: pandas 2.2 brought a few additional improvements that rely on the Apache Arrow
    ecosystem. Additionally, we added deprecations for changes that are necessary
    to make Copy-on-Write the default in pandas 3.0\. Let’s dig into what this means
    for you. We will look at the most important changes in detail.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: pandas 2.2带来了一些额外的改进，这些改进依赖于Apache Arrow生态系统。此外，我们还增加了一些弃用内容，为pandas 3.0中将“写时复制”（Copy-on-Write）设置为默认选项所做的必要更改做准备。让我们深入了解这对你意味着什么。我们将详细探讨一些最重要的更改。
- en: I am part of the pandas core team. I am an open source engineer for [Coiled](https://www.coiled.io)
    where I work on Dask, including improving the pandas integration.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我是pandas核心团队的一员，同时也是[Coiled](https://www.coiled.io)的开源工程师，我在这里负责Dask的工作，包括改进pandas的集成。
- en: Improved PyArrow support
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 改进的PyArrow支持
- en: We have introduced PyArrow backed DataFrame in pandas 2.0 and continued to improve
    the integration since then to enable a seamless integration into the pandas API.
    pandas has accessors for certain dtypes that enable specialized operations, like
    the string accessor, that provides many string methods. Historically, list and
    structs were represented as NumPy object dtype, which made working with them quite
    cumbersome. The Arrow dtype backend now enables tailored accessors for lists and
    structs, which makes working with these objects a lot easier.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在pandas 2.0中引入了基于PyArrow的DataFrame，并且从那时起持续改进集成，以实现与pandas API的无缝对接。pandas为某些数据类型提供了访问器，支持特定的操作，例如字符串访问器，提供了许多字符串方法。过去，列表和结构体是作为NumPy对象数据类型表示的，这使得处理这些数据类型变得非常繁琐。现在，Arrow数据类型后端为列表和结构体提供了定制的访问器，使得处理这些对象变得更加简便。
- en: 'Let’s look at an example:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This is a series that contains a dictionary in every row. Previously, this
    was only possible with NumPy object dtype and accessing elements from these rows
    required iterating over them. The `struct` accessor now enables direct access
    to certain attributes:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个包含字典的系列，每一行都有一个字典。以前，这只有在使用 NumPy 对象 dtype 时才可行，并且从这些行中访问元素需要进行迭代。现在，`struct`
    访问器使得可以直接访问某些属性：
- en: '[PRE1]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The next release will bring a CategoricalAccessor based on Arrow types.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 下一版本将带来基于 Arrow 类型的 CategoricalAccessor。
- en: Integrating the Apache ADBC Driver
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成 Apache ADBC 驱动程序
- en: Historically, pandas relied on SqlAlchemy to read data from an Sql database.
    This worked very reliably, but it was very slow. Alchemy reads the data row-wise,
    while pandas has a columnar layout, which makes reading and moving the data into
    a DataFrame slower than necessary.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 历史上，pandas 依赖 SqlAlchemy 从 Sql 数据库中读取数据。这种方式非常可靠，但速度较慢。SqlAlchemy 按行读取数据，而 pandas
    是列式布局，这使得读取数据并将其移动到 DataFrame 中的过程比必要的更慢。
- en: The [ADBC Driver](https://arrow.apache.org/docs/format/ADBC.html) from the Apache
    Arrow project enables users to read data in a columnar layout, which brings huge
    performance improvements. It reads the data and stores them into an Arrow table,
    which is used to convert to a pandas DataFrame. You can make this conversion zero-copy,
    if you set `dtype_backend="pyarrow"` for `read_sql`.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Apache Arrow 项目的 [ADBC 驱动程序](https://arrow.apache.org/docs/format/ADBC.html)使用户能够以列式布局读取数据，这带来了巨大的性能提升。它将数据读取并存储到
    Arrow 表中，该表用于转换为 pandas DataFrame。如果设置 `dtype_backend="pyarrow"`，则可以实现零拷贝转换。
- en: 'Let’s look at an example:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The ADBC Driver currently supports Postgres and Sqlite. I would recommend everyone
    to switch over to this driver if you use Postgres, the driver is significantly
    faster and completely avoids round-tripping through Python objects, thus preserving
    the database types more reliably. This is the feature that I am personally most
    excited about.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: ADBC 驱动程序当前支持 Postgres 和 Sqlite。如果你使用 Postgres，强烈建议切换到这个驱动程序，它比 SqlAlchemy 快得多，并且完全避免了通过
    Python 对象的回程，从而更可靠地保留了数据库类型。这是我个人最为激动的功能。
- en: Adding case_when to the pandas API
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将 `case_when` 添加到 pandas API 中
- en: Coming from Sql to pandas, users often miss the case-when syntax that provides
    an easy and clean way to create new columns conditionally. pandas 2.2 adds a new
    `case_when` method, that is defined on a Series. It operates similarly to what
    Sql does.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 从 Sql 转到 pandas，用户通常会错过 `case-when` 语法，它提供了一种简单清晰的方式来有条件地创建新列。pandas 2.2 添加了一个新的
    `case_when` 方法，它是在 Series 上定义的。其操作方式类似于 Sql。
- en: 'Let’s look at an example:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The method takes a list of conditions that are evaluated sequentially. The new
    object is then created with those values in rows where the condition evaluates
    to True. The method should make it significantly easier for us to create conditional
    columns.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 该方法接受一个条件列表，这些条件将按顺序进行评估。然后在条件评估为 True 的行中，用这些值创建新对象。该方法应该能显著简化我们创建条件列的工作。
- en: Copy-on-Write
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Copy-on-Write
- en: Copy-on-Write was initially introduced in pandas 1.5.0\. The mode will become
    the default behavior with 3.0, which is hopefully the next pandas release. This
    means that we have to get our code into a state where it is compliant with the
    Copy-on-Write rules. pandas 2.2 introduced deprecation warnings for operations
    that will change behavior.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Copy-on-Write 最初在 pandas 1.5.0 中引入。此模式将在 3.0 版本中成为默认行为，希望这是下一个 pandas 发布版本。这意味着我们必须将代码调整到符合
    Copy-on-Write 规则的状态。pandas 2.2 引入了操作的弃用警告，这些操作会改变行为。
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: This will now raise a `FutureWarning`.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这将引发 `FutureWarning`。
- en: '[PRE5]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'I wrote [an earlier post](https://medium.com/towards-data-science/deep-dive-into-pandas-copy-on-write-mode-part-iii-c024eaa16ed4)
    that goes into more detail about how you can migrate your code and what to expect.
    There is an additional warning mode for Copy-on-Write that will raise warnings
    for all cases that change behavior:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我写过 [一篇早期的文章](https://medium.com/towards-data-science/deep-dive-into-pandas-copy-on-write-mode-part-iii-c024eaa16ed4)，详细介绍了如何迁移代码以及应该期待什么。Copy-on-Write
    还新增了一种警告模式，用于对所有改变行为的情况发出警告：
- en: '[PRE6]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Most of those warnings are only noise for the majority of pandas users, which
    is the reason why they are hidden behind an option.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 对大多数 pandas 用户来说，这些警告大多只是噪音，这也是为什么它们被隐藏在一个选项后面的原因。
- en: '[PRE7]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'This will raise a lengthy warning explaining what will change:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这将引发一条长警告，解释将会发生什么变化：
- en: '[PRE8]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The short summary of this is: Updating `view` will never update `df`, no matter
    what operation is used. This is most likely not relevant for most.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这的简要总结是：更新`view`将永远不会更新`df`，无论使用何种操作。大多数情况下，这与大多数人无关。
- en: I would recommend enabling the mode and checking the warnings briefly, but not
    to pay too much attention to them if you are comfortable that you are not relying
    on updating two different objects at once.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议启用该模式并简要查看警告，但如果你确信自己没有依赖于同时更新两个不同对象，可以不必过于关注这些警告。
- en: I would recommend checking out the [migration guide for Copy-on-Write](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html#migrating-to-copy-on-write)
    that explains the necessary changes in more detail.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 我建议查看[写时复制迁移指南](https://pandas.pydata.org/docs/dev/user_guide/copy_on_write.html#migrating-to-copy-on-write)，该指南更详细地解释了必要的更改。
- en: Upgrading to the new version
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 升级到新版本
- en: 'You can install the new pandas version with:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过以下方式安装新的 pandas 版本：
- en: '[PRE9]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Or:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 或者：
- en: '[PRE10]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This will give you the new release in your environment.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这将在你的环境中提供新版本。
- en: Conclusion
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: We’ve looked at a couple of improvements that will improve performance and user
    experience for certain aspects of pandas. The most exciting new features will
    come in pandas 3.0, where Copy-on-Write will be enabled by default.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经查看了一些改进，这些改进将提升 pandas 在某些方面的性能和用户体验。最令人兴奋的新特性将在 pandas 3.0 中推出，其中默认启用写时复制（Copy-on-Write）。
- en: Thank you for reading. Feel free to reach out to share your thoughts and feedback.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。欢迎随时联系，分享你的想法和反馈。
