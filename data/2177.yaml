- en: Building a Multilingual Multi-Agent Chat Application Using LangGraph — Part
    I
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用LangGraph构建多语言多代理聊天应用 — 第一部分
- en: 原文：[https://towardsdatascience.com/building-a-multilingual-multi-agent-chat-application-using-langgraph-i-262d40df6b4f?source=collection_archive---------6-----------------------#2024-09-06](https://towardsdatascience.com/building-a-multilingual-multi-agent-chat-application-using-langgraph-i-262d40df6b4f?source=collection_archive---------6-----------------------#2024-09-06)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/building-a-multilingual-multi-agent-chat-application-using-langgraph-i-262d40df6b4f?source=collection_archive---------6-----------------------#2024-09-06](https://towardsdatascience.com/building-a-multilingual-multi-agent-chat-application-using-langgraph-i-262d40df6b4f?source=collection_archive---------6-----------------------#2024-09-06)
- en: In this 3 part series, learn how to build a RAG-based, multilingual, agentic
    chat application along with an integrated AI assistant to streamline tasks at
    workplaces
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在这个三部分的系列中，了解如何构建一个基于RAG的、多语言的、代理驱动的聊天应用，并与集成的AI助手一起流畅地完成职场任务
- en: '[](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)[![Roshan
    Santhosh](../Images/2509f38bf7d5a40c453fa54575293f06.png)](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)
    [Roshan Santhosh](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)[![Roshan
    Santhosh](../Images/2509f38bf7d5a40c453fa54575293f06.png)](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)
    [Roshan Santhosh](https://medium.com/@RSK2327?source=post_page---byline--262d40df6b4f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)
    ·10 min read·Sep 6, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--262d40df6b4f--------------------------------)
    ·阅读时间：10分钟·2024年9月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Background**'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**背景**'
- en: Despite the advancements in technology, language barriers still exist in today’s
    world. Whether it’s at work or while you are outside, there are always situations
    where differences in languages can create awkward situations. This is especially
    true for large enterprises that have teams spread across different geographies,
    speaking different languages. As part of the recently concluded Aya Expedition
    organized by the Cohere for AI research community, I was able to work on a project
    that aimed to address this language barrier along with other workplace-related
    inefficiencies by developing a multilingual agentic chat application for workplaces.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管科技不断进步，但语言障碍在今天的世界依然存在。无论是在工作中还是在外面，总有一些场景会因为语言差异而导致尴尬的局面。对于跨多个地区、讲不同语言的大型企业尤其如此。作为最近由Cohere
    AI研究社区组织的Aya Expedition的一部分，我有机会参与了一个旨在解决这一语言障碍以及其他职场低效问题的项目，通过开发一款多语言的职场代理聊天应用来解决这一问题。
- en: Instead of talking more about the product, I think the best way to introduce
    the product and what we will be building through this series is to actually watch
    it in action.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 与其多谈产品，我认为介绍该产品及我们将在本系列中构建的内容的最佳方式是实际观看它的运行。
- en: Final demo of chat application
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 聊天应用的最终演示
- en: 'The following tutorial series covers the development of this application which
    includes :'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 以下教程系列涵盖了该应用程序的开发，包括：
- en: An agentic workflow for translating to the user’s preferred language
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用于将内容翻译成用户首选语言的代理工作流
- en: 'Building features for the AI assistant: RAG-based question answering, Documentation-on-the-Go,
    and Smart Summarize features'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 为AI助手构建功能：基于RAG的问答、随时文档和智能总结功能
- en: Deploying the agentic workflow through FastAPI and developing a web UI to interface
    with it
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 通过FastAPI部署代理工作流，并开发一个Web用户界面与其进行交互
- en: High-level framework
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高级框架
- en: Given the popularity of LangChain and its graph based counterpart, LangGraph,
    I don’t want this to be another tutorial that explains the basics of these packages
    and their methods. Instead I want to **focus more on the design choices and challenges
    faced** while implementing our solution through these packages as I feel that
    would be more useful in the long run.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到LangChain及其基于图的对应工具LangGraph的流行，我不想将其变成一个讲解这些工具及其方法基础的教程。相反，我希望**更多地关注在通过这些工具实现解决方案时所面临的设计选择和挑战**，因为我认为这在长期来看会更有用。
- en: '**LangChain vs LangGraph**'
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**LangChain与LangGraph**'
- en: The first design choice we faced was selecting between LangChain and LangGraph.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们面临的第一个设计选择是选择LangChain还是LangGraph。
- en: 'In a simple scenario (as pictured below), where every message provided by a
    user is sent to all other users and translated to their preferred language, then
    LangChain would have been a sufficient choice. This is a **unidirectional flow**
    that starts from the user sending the message and ends with the users receiving
    the messages:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在一个简单的场景下（如下图所示），每个用户提供的消息都发送给所有其他用户，并被翻译成他们偏好的语言，那么LangChain将是一个足够的选择。这是一个**单向流动**，从用户发送消息开始，到用户接收到消息结束：
- en: '![](../Images/00fb860bd624ca99a1d9135b608687fd.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00fb860bd624ca99a1d9135b608687fd.png)'
- en: Unidirectional information flow without Aya
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 没有Aya的单向信息流
- en: However, the primary constraint in our scenario was the **inclusion of an AI
    assistant, which we shall be referring to as Aya** (named after the Expedition).
    Aya was planned to be a significant component of this chat application and added
    a new layer of complexity to our system. With Aya, messages from the sending user
    needed to be analyzed and depending on the nature of the message (if it was a
    command addressed to Aya), the system needed to send back a message, which in
    turn needed to be sent again to the receiving users.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在我们的场景中，主要的限制是**包含一个AI助手，我们称之为Aya**（以“远征”命名）。Aya被计划成为此聊天应用的重要组成部分，并为我们的系统增加了新的复杂性。通过Aya，发送用户的消息需要被分析，并根据消息的性质（如果是发给Aya的命令），系统需要发送回一个消息，而这个消息又需要再次发送给接收用户。
- en: '![](../Images/711ed7a611f3f03fa23f97dd86f1f322.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/711ed7a611f3f03fa23f97dd86f1f322.png)'
- en: Information flow with Aya
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 有Aya的情况下的信息流
- en: '**Defining a Run:** Another design choice thats relevant here is the definition
    of one ‘run’ or one ‘iteration’ of the messaging cycle.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '**定义一个运行（Run）：** 这里另一个相关的设计选择是定义一次“运行”或一次“迭代”消息循环。'
- en: In the definition we chose, we considered each run to be initiated by any user
    sending a message and it being terminated when all messages related to that initial
    message reach the receiving users.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们选择的定义中，我们认为每次运行由任何用户发送消息启动，并在所有与该初始消息相关的消息到达接收用户时结束。
- en: So if it’s a message that doesn’t address Aya and is just a direct message to
    other users, the run is considered to be terminated when the initial translated
    message is received by all users. And if it’s a message that addresses Aya, then
    it’s considered terminated when the initial message along with the response from
    Aya, BOTH, reach all users.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，如果是一个没有提及Aya的消息，仅仅是直接发给其他用户的消息，那么当所有用户接收到初始翻译消息时，这次运行就算结束。而如果是一个涉及Aya的消息，那么当初始消息以及Aya的回复**都**传递给所有用户时，运行才算结束。
- en: So with this design choice/definition of a run, we wanted a flow where we wait
    for the responses from Aya to be generated and pushed to the users before terminating
    the run. And for implementing such a flow, we used LangGraph, as it was specifically
    built to solve for such cases.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，采用这种设计选择/定义一次运行时，我们希望有一个流程，在等待Aya生成并推送回应给用户后再终止运行。为了实现这样的流程，我们使用了LangGraph，因为它专门为解决这种情况而构建。
- en: Building the Agents
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 构建代理
- en: 'The backbone of this application are the agents and their interactions. Overall,
    we had two different types of agents :'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 本应用的核心是代理及其相互作用。总体而言，我们有两种不同类型的代理：
- en: 'User Agents: Agents attached to each user. Primarily tasked with translating
    incoming messages into the user’s preferred language'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用户代理：附加在每个用户上的代理，主要任务是将收到的消息翻译成用户偏好的语言
- en: 'Aya Agents: Various agents associated with Aya, each with its own specific
    role/job'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Aya代理：与Aya相关的各种代理，每个代理有其特定的角色/任务
- en: User Agents
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 用户代理
- en: 'The UserAgent class is used to define an agent that will be associated with
    every user part of the chat room. Some of the functions implemented by the UserAgent
    class:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: UserAgent 类用于定义一个代理，每个用户在聊天室中都会与之关联。UserAgent 类实现的部分功能包括：
- en: 1\. Translate incoming messages into the user’s preferred language
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 将传入的消息翻译成用户首选语言
- en: 2\. Activate/Invoke graph when a user sends a message
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 当用户发送消息时，激活/调用图
- en: 3\. Maintain a chat history to help provide context to the translation task
    to allow for ‘context-aware’ translation
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 维护聊天历史，以帮助提供翻译任务的上下文，从而实现“上下文感知”翻译
- en: '[PRE0]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'For the most part, the implementation of UserAgent is pretty standard LangChain/LangGraph
    code:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，UserAgent 的实现是标准的 LangChain/LangGraph 代码：
- en: Define a LangChain chain ( a prompt template + LLM) that is responsible for
    doing the actual translation.
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个 LangChain 链（一个提示模板 + LLM），负责进行实际的翻译。
- en: Define a send_text function thats used to invoke the graph whenever a user wants
    to send a new message
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 定义一个 send_text 函数，用于在用户发送新消息时调用图
- en: For the most part, the performance of this agent is dependent on the translation
    quality of the LLM, as translation is the primary objective of this agent. And
    LLM performance can vary significantly for translation, especially depending on
    the languages involved. Certain low resource languages don’t have good representation
    in the training data of some models and this does affect the translation quality
    for those languages.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数情况下，该代理的性能取决于 LLM 的翻译质量，因为翻译是该代理的主要目标。而 LLM 的翻译性能会因语言的不同而有显著差异。某些低资源语言在一些模型的训练数据中代表性较差，这会影响这些语言的翻译质量。
- en: Aya Agents
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Aya 代理
- en: For Aya, we actually have a system of separate agents that all contributes towards
    the overall assistant. Specifically, we have
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于 Aya，我们实际上有一个由多个独立代理组成的系统，它们共同协作以实现整体助手功能。具体来说，我们有
- en: 'AyaSupervisor : Control agent that supervises the operation of the other Aya
    agents.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AyaSupervisor：控制代理，负责监督其他 Aya 代理的运行。
- en: 'AyaQuery : Agent for running RAG based question answering'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AyaQuery：用于运行基于 RAG 的问答代理
- en: 'AyaSummarizer : Agent for generating chat summaries and doing task identification'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AyaSummarizer：用于生成聊天总结和进行任务识别的代理
- en: 'AyaTranslator: Agent for translating messages to English'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: AyaTranslator：用于将消息翻译成英语的代理
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Most of these agents have a similar structure, primarily consisting of a LangChain
    chain consisting of a custom prompt and a LLM. Exceptions include the AyaQuery
    agent which has an additional vector database retriever to implement RAG and AyaSummarizer
    which has multiple LLM functions being implemented within it.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这些代理大多数有类似的结构，主要由一个 LangChain 链组成，该链包含一个自定义提示和一个 LLM。例外情况包括 AyaQuery 代理，它有一个额外的向量数据库检索器来实现
    RAG，和 AyaSummarizer，它在其中实现了多个 LLM 功能。
- en: '**Design considerations**'
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**设计考虑**'
- en: '**Role of AyaSupervisor Agent**: In the design of the graph, we had a fixed
    edge going from the Supervisor node to the user nodes. Which meant that all messages
    that reached the Supervisor node were pushed to the user nodes itself. Therefore,
    in cases where Aya was being addressed, **we had to ensure that only a single
    final output from Aya was being pushed to the users**. We didn’t want intermediate
    messages, if any, to reach the users. Therefore, we had the AyaSupervisor agent
    that acted as the single point of contact for the Aya agent. This agent was primarily
    responsible for interpreting the intent of the incoming message, direct the message
    to the appropriate task-specific agent, and then outputting the final message
    to be shared with the users.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**AyaSupervisor 代理的角色**：在图的设计中，我们有一个从 Supervisor 节点到用户节点的固定边。这意味着所有到达 Supervisor
    节点的消息都会推送到用户节点本身。因此，在 Aya 被提及的情况下，**我们必须确保只有 Aya 的最终输出被推送给用户**。我们不希望中间消息（如果有的话）到达用户。因此，我们有
    AyaSupervisor 代理，它作为 Aya 代理的单一接触点。这个代理主要负责解释传入消息的意图，将消息引导到适当的任务特定代理，并将最终消息输出与用户共享。'
- en: '**Design of AyaSummarizer:** The AyaSummarizer agent is slightly more complex
    compared to the other Aya agents as it carries out a two-step process. In the
    first step, the agent first determines the number of messages that needs to be
    summarized, which is a LLM call with its own prompt. In the second step, once
    we know the number of messages to summarize, we collate the required messages
    and pass it to the LLM to generate the actual summary. In addition to the summary,
    in this step itself, the LLM also identifies any action items that were present
    in the messages and lists it out separately.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**AyaSummarizer的设计**：与其他Aya代理相比，AyaSummarizer代理稍微复杂一些，因为它执行了一个两步过程。在第一步中，代理首先确定需要总结的消息数量，这是一个带有自己提示的LLM调用。在第二步中，一旦我们知道了需要总结的消息数量，我们就将所需的消息整理起来并传递给LLM生成实际的总结。除了总结外，在这一步中，LLM还会识别消息中存在的任何待办事项，并单独列出。'
- en: 'So broadly there were three tasks: determining the length of the messages to
    be summarized, summarizing messages, identifying action items. However, given
    that the first task was proving a bit difficult for the LLM without any explicit
    examples, I made the choice to have this be a separate LLM call and then combine
    the two last two tasks as their own LLM call.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 所以大体上有三个任务：确定需要总结的消息长度、总结消息、识别待办事项。然而，鉴于第一个任务对于没有任何明确示例的LLM来说有些困难，我决定将其作为单独的LLM调用，然后将后两个任务合并为一个LLM调用。
- en: 'It may be possible to eliminate the additional LLM call and combine all three
    tasks in one call. Potential options include :'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 可能有办法消除额外的LLM调用，并将所有三个任务合并为一个调用。潜在的选项包括：
- en: Providing very detailed examples that cover all three tasks in one step
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 提供非常详细的示例，一步涵盖所有三个任务
- en: Generating lot of examples to actually finetune a LLM to be able to perform
    well in this task
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 生成大量示例，实际微调LLM，使其能够在此任务中表现良好
- en: '**Role of AyaTranslator:** One of the goals with respect to Aya was to make
    it a multilingual AI assistant which can communicate in the user’s preferred language.
    However, it would be difficult to handle different languages internally within
    the Aya agents. Specifically, if the Aya agents prompt is in English and the user
    message is in a different language, it could potentially create issues. So in
    order to avoid such situations, as a filtering step, **we translated any incoming
    user messages to Aya into English**. As a result, all of the internal work within
    the Aya group of agents was done in English, including the output. We didnt have
    to translate the Aya output back to the original language because when the message
    reaches the users, the User agents will take care of translating the message to
    their respective assigned language.'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**AyaTranslator的作用**：关于Aya的一个目标是使其成为一个多语言AI助手，可以使用用户的首选语言进行交流。然而，在Aya代理内部处理不同语言会很困难。具体来说，如果Aya代理的提示是英语，而用户的消息是其他语言，这可能会引发问题。因此，为了避免这种情况，作为过滤步骤，**我们将任何传入Aya的用户消息翻译成英语**。因此，Aya代理组内部的所有工作都是用英语进行的，包括输出。我们不需要将Aya的输出翻译回原语言，因为当消息到达用户时，用户代理会负责将消息翻译成各自分配的语言。'
- en: '**Prompt Design**'
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**提示设计**'
- en: With respect to prompt designs, the majority of the work was focused on getting
    the LLM to output responses in a particular format in a consistent manner. For
    most cases, I was able to achieve this by providing explicit instructions. In
    some cases, instructions alone was not enough and I had to provide examples for
    the agent to behave consistently.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在提示设计方面，大部分工作集中在让LLM以一致的方式输出特定格式的响应。在大多数情况下，我通过提供明确的指示实现了这一目标。在某些情况下，仅凭指示不足，我不得不提供示例，以确保代理的一致性。
- en: 'For the most part, the prompt template had the following structure :'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 大部分情况下，提示模板具有以下结构：
- en: '[PRE2]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'To take a specific example, we take a look at the prompt used by the User Agent:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 以用户代理使用的提示为例：
- en: '[PRE3]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'With regards to this agent, an important constraint was to ensure that the
    model only outputted the translated text and no supporting text like “Here’s the
    translated text” or “Sure, the following is a translation for the provided text”.
    In this case, adding a specific rule to obey (rule #3) was enough to ensure that
    the models were only outputting the translated text and nothing else.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 关于这个代理，一个重要的约束是确保模型只输出翻译后的文本，而不会输出任何支持性文本，如“这是翻译后的文本”或“当然，以下是提供文本的翻译”。在这种情况下，添加一个特定的规则来遵守（规则#3）足以确保模型只输出翻译后的文本，而不会输出其他内容。
- en: An example of an instance that required examples in the prompt were the prompts
    related to the summarizer agent. Specifically for the agent responsible for identifying
    the number of messages to summarize over. I found it difficult to get the agent
    to consistently extract the number of messages listed, if any, and output it in
    a specific format. Therefore, it became necessary to provide examples to better
    explain what I was expecting as a response from the agent.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 需要在提示中提供示例的一个实例是与摘要代理相关的提示。具体来说，是负责确定要总结的消息数量的代理。我发现很难让代理一致地提取列出的消息数量（如果有的话），并以特定格式输出。因此，提供示例变得必要，以便更好地解释我期待代理给出的响应。
- en: Other implementation details
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他实现细节
- en: ChatMessage
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: ChatMessage
- en: Those familiar with LangChain should already be aware of AIMessage, HumanMessage
    classes that are used to hold AI and human messages. For our use case, **we needed
    to be able to store the ID of the sender for downstream tasks**. Therefore to
    address this, we created a new derived class called ChatMessage that stores a
    message along with the sender’s ID
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 熟悉LangChain的人应该已经了解AIMessage、HumanMessage类，它们用于存储AI和人类消息。对于我们的用例，**我们需要能够存储发送者的ID以供后续任务使用**。因此，为了解决这个问题，我们创建了一个名为ChatMessage的新派生类，用于存储消息以及发送者的ID。
- en: '[PRE4]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Graph State
  id: totrans-70
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图状态
- en: In LangGraph, one of key elements of the graph is the graph state. The state
    variable/object is crucial for proper communication between the agents as well
    as for keeping track of the progress through the graph workflow.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 在LangGraph中，图的一项关键元素是图状态。状态变量/对象对于代理之间的正确通信以及跟踪图工作流的进度至关重要。
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: In most LangGraph examples, the state variable is a list of strings that keeps
    getting appended to after passing through every agent. In our use case, **I wanted
    to exclude the outputs from certain nodes from affecting the state of the graph**,
    despite the workflow having passed through that node. To accommodate such cases,
    I differentiated between the two types of state changes by having one as a list
    and the other as a string. In cases where the state update is in the form of a
    list, it gets appended to the overall state object. In cases, where the state
    update is a string, we ignore that update and propagate the existing state. This
    is achieved using the custom ***reducer*** function defined above.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数LangGraph示例中，状态变量是一个字符串列表，每经过一个代理就会继续追加。在我们的用例中，**我希望排除某些节点的输出对图状态的影响**，尽管工作流已经经过了该节点。为了适应这种情况，我通过将一种类型的状态变化设为列表，另一种类型设为字符串来区分这两种状态变化。当状态更新为列表时，它会被追加到整体状态对象中；当状态更新为字符串时，我们会忽略该更新，并传播现有状态。这是通过上面定义的自定义***reducer***函数来实现的。
- en: Conclusion
  id: totrans-74
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: 'At this stage, we have covered the design choices of one of the key components
    of the agentic workflow : the agents. In the next tutorial, we will cover more
    details about the actual LangGraph graph and its implementation, along with some
    more details about the features associated with Aya.'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一阶段，我们已经覆盖了代理工作流中一个关键组件的设计选择：代理。在下一节教程中，我们将详细介绍实际的LangGraph图以及其实现方式，并进一步探讨与Aya相关的功能细节。
- en: Resources
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: 'For the code, you can refer to the repo here : [Multilingual Chatbot](https://github.com/rsk2327/Multilingual-Chatbot).'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 对于代码，您可以参考此仓库：[Multilingual Chatbot](https://github.com/rsk2327/Multilingual-Chatbot)。
- en: Unless specified otherwise, all images are created by the author.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，否则所有图像均由作者创作。
- en: '*In addition to Medium, I share my thoughts, ideas and other updates on* [*LinkedIn*](https://www.linkedin.com/in/roshan-santhosh/)*.*'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '*除了在Medium上，我还在* [*LinkedIn*](https://www.linkedin.com/in/roshan-santhosh/)
    *分享我的想法、创意和其他更新*。'
