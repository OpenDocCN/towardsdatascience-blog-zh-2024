- en: Exploring Location Data Using a Hexagon Grid
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用六边形网格探索位置数据
- en: 原文：[https://towardsdatascience.com/exploring-location-data-using-a-hexagon-grid-3509b68b04a2?source=collection_archive---------4-----------------------#2024-03-14](https://towardsdatascience.com/exploring-location-data-using-a-hexagon-grid-3509b68b04a2?source=collection_archive---------4-----------------------#2024-03-14)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/exploring-location-data-using-a-hexagon-grid-3509b68b04a2?source=collection_archive---------4-----------------------#2024-03-14](https://towardsdatascience.com/exploring-location-data-using-a-hexagon-grid-3509b68b04a2?source=collection_archive---------4-----------------------#2024-03-14)
- en: A comprehensive guide on how to use Uber’s H3 hexagon grid in data analysis
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一份关于如何在数据分析中使用Uber的H3六边形网格的全面指南
- en: '[](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)[![Sara
    Tähtinen](../Images/008c3202246e04d225a60d3b6fbcaea4.png)](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)
    [Sara Tähtinen](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)[![Sara
    Tähtinen](../Images/008c3202246e04d225a60d3b6fbcaea4.png)](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)
    [Sara Tähtinen](https://medium.com/@sktahtin?source=post_page---byline--3509b68b04a2--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)
    ·16 min read·Mar 14, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3509b68b04a2--------------------------------)
    ·阅读时长16分钟·2024年3月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'Uber’s global H3 hexagonal grid system can be used for two purposes: first,
    it is a user-friendly and practical tool for spatial data analysis. Second, it
    can be used to anonymize location data by aggregating geographic information to
    hexagonal regions such that no precise locations are disclosed. In this article,
    we use Helsinki city bike data to showcase how hexagons can help data scientists
    in their work.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Uber的全球H3六边形网格系统可用于两个目的：首先，它是一个用户友好且实用的空间数据分析工具。其次，它可以通过将地理信息聚合到六边形区域来实现位置数据的匿名化，从而不泄露任何精确位置。在本文中，我们使用赫尔辛基城市自行车数据来展示六边形网格如何帮助数据科学家工作。
- en: '![](../Images/16e707eb316e1c945918d989ea8981b2.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16e707eb316e1c945918d989ea8981b2.png)'
- en: Image by author.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供。
- en: Many services nowadays produce data that contains events that have occurred
    in a certain location. For example there’s a lot of different courier services
    that might want to understand where and when their services have been used, or
    teleoperator companies that want to know how big load their network must tolerate
    at certain times at different parts of their cover area. Also location data can
    be highly sensitive and reveal unnecessary exact information on users whereabouts.
    For example, openly available New York taxi data contains exact information on
    the pick-up and drop-off dates, times and locations of all taxi rides in New York.
    By using information from paparazzis on where and when celebrities have been seen
    getting in and out of the cabs, the tabloid magazines have used the taxi data
    to track celebs’ visits to bars and strip clubs ([source](https://www.fastcompany.com/3036573/nyc-taxi-data-blunder-reveals-which-celebs-dont-tip-and-who-frequents-strip-clubs)).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 现在许多服务都生成包含在特定位置发生的事件的数据。例如，有许多不同的快递服务可能想要了解他们的服务何时、何地被使用，或者电信运营商想要知道他们的网络在不同区域的不同时间必须承载多大的负载。此外，位置数据可能高度敏感，可能会泄露用户的确切位置信息。例如，公开的纽约出租车数据包含了纽约所有出租车的接送日期、时间和地点的精确信息。小报杂志通过利用狗仔队提供的名人何时何地进出出租车的资讯，利用这些出租车数据追踪名人前往酒吧和脱衣舞俱乐部的情况([source](https://www.fastcompany.com/3036573/nyc-taxi-data-blunder-reveals-which-celebs-dont-tip-and-who-frequents-strip-clubs))。
- en: For these reasons it is convenient to bucket location data points into larger
    groups. However, defining these location clusters is not entirely straightforward.
    Sometimes one can use countries, counties, cities or districts to group data points
    together but often there’s a need for finer regions. For this purpose Uber developed
    an open-sourced geospatial grid system called H3 that covers the entire Earth
    with repetitive tiling. The building block in the grid system is a hexagon and
    one can choose from 16 different hexagon sizes that vary from an area of a large
    country to an area of a small side table.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 出于这些原因，将位置数据点归类为更大的组是很方便的。然而，定义这些位置簇并不是完全简单的。有时可以使用国家、县、城市或区来将数据点归类，但通常需要更细的区域。为此，Uber
    开发了一种开源的地理空间网格系统，名为 H3，使用重复的瓷砖覆盖整个地球。该网格系统的构建模块是六边形，用户可以选择 16 种不同的六边形大小，大小范围从一个大国的区域到一个小方桌的区域。
- en: In this article, we will use Helsinki city bike data to demonstrate how one
    can utilise H3 hexagons to analyse spatial data. First, we provide an introduction
    to the H3 hexagon grid and its resolutions. Next, we delve into the main functionalities
    of the H3 library. Following that, we illustrate how a hexagon grid can enhance
    data analysis. Finally, we address some issues associated with hexagonal grids.
    All the notebooks used in this analysis can be found [on this GitHub repository](https://github.com/sktahtin4/Helsinki-city-bikes).
    All images in this article, unless otherwise noted, are by the author.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用赫尔辛基市的共享单车数据来演示如何利用 H3 六边形分析空间数据。首先，我们将介绍 H3 六边形网格及其分辨率。接下来，我们将深入探讨
    H3 库的主要功能。然后，我们将展示六边形网格如何增强数据分析。最后，我们将讨论与六边形网格相关的一些问题。所有用于此分析的笔记本可以在[此 GitHub
    仓库](https://github.com/sktahtin4/Helsinki-city-bikes)中找到。除非另有说明，本文中的所有图片均由作者提供。
- en: '![](../Images/24eb02d7dcb52b56e5a81a48aa7ebd31.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/24eb02d7dcb52b56e5a81a48aa7ebd31.png)'
- en: Screenshot from the data analysis notebook. The purple dots indicate the positions
    of city bike stations, while the hexagons of varying sizes correspond to resolutions
    6 (the largest hexagon), 7, and 8.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据分析笔记本中的截图。紫色点表示城市单车站点的位置，而不同大小的六边形对应于分辨率 6（最大六边形）、7 和 8。
- en: Uber’s H3 hexagon system — great for visualising, exploring and optimising spatial
    data
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Uber 的 H3 六边形系统——非常适合可视化、探索和优化空间数据
- en: Every day and every minute, Uber receives multiple requests in their marketplace.
    Each event happens at a specific location, for example a rider asks for a ride
    in one location and a driver accepts the drive in a nearby location. Deriving
    information and insights from the data, for example setting dynamical pricing
    that is based on the demand, requires analyzing data across an entire city. But
    as cities are geographically very diverse, this analysis must happen in fine granularity.
    With the H3 hexagon grid system, each data point can be bucketed to one hexagon
    area or cell, and then one Uber can calculate supply and demand for surge pricing
    on each hexagon in all the cities where they have services. The hexagons come
    in different sizes so one must choose the resolution that best fits the purpose
    of the analysis.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 每天每分钟，Uber 在其市场上接收到多个请求。每个事件发生在特定的位置，例如一个骑行者请求在某个位置接驾，而司机在附近的位置接受了该请求。从数据中获取信息和见解，例如基于需求设置动态定价，通常需要分析整个城市的数据。但由于城市的地理差异非常大，这种分析必须在精细的粒度下进行。通过
    H3 六边形网格系统，每个数据点可以被归类到一个六边形区域或单元格中，然后 Uber 可以计算出每个六边形区域的供需情况，以便为其在所有有服务的城市中实施高峰定价。六边形有不同的大小，因此需要选择最适合分析目的的分辨率。
- en: '![](../Images/51f5425d05c9bfb57a5744e880353d11.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/51f5425d05c9bfb57a5744e880353d11.png)'
- en: Figures show how the hexagon grid covers the whole Earth and city areas with
    repetitive tiling. The user can subdivide the areas into smaller and smaller hexagons,
    and the area of each finer resolution hexagon is roughly one seventh of the coarser
    hexagon. Note that in order to cover the whole Earth with the hexagon tiling,
    a few pentagons (shapes with 5 sides) are also needed (more of this later in this
    article). If one looks carefully at the image, they can see a couple of pentagons
    in the image as well, for example on top of Sweden and Norway. Image from [https://github.com/seanhandley/h3_ruby](https://github.com/seanhandley/h3_ruby).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 图示展示了六边形网格如何通过重复的镶嵌覆盖整个地球和城市区域。用户可以将区域细分成越来越小的六边形，每个更细分的六边形的面积大约是粗糙六边形的七分之一。需要注意的是，为了用六边形镶嵌覆盖整个地球，还需要一些五边形（5个边）。本文稍后会详细讨论这一点。如果仔细查看图像，可以看到图中有几个五边形，比如位于瑞典和挪威上方。图片来源：[https://github.com/seanhandley/h3_ruby](https://github.com/seanhandley/h3_ruby)。
- en: Technically one could build a global grid system using any kind of building
    block that facilitates a complete tiling throughout the 3D globe. For example
    one could use triangles (3 sides) or squares (4 sides) instead of hexagons (6
    sides) to cover the whole Earth. However, using hexagons has many advantages.
    For example, the centerpoint of a triangle has three and a square has two different
    distances to its neighbors’ centerpoints whereas the centerpoint of a hexagon
    has equal distance to all of its neighbors’ which makes it a convenient system
    to approximate radiuses (see image below).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，可以使用任何一种有助于在整个三维地球上进行完整镶嵌的构建块来构建一个全球网格系统。例如，可以使用三角形（3个边）或正方形（4个边），而不是六边形（6个边），来覆盖整个地球。然而，使用六边形有许多优点。例如，三角形的中心点到邻居中心点有三个不同的距离，而正方形有两个不同的距离，而六边形的中心点到所有邻居中心点的距离相等，这使得它成为一个方便的系统来近似半径（见下图）。
- en: '![](../Images/394a42575c7eceaa378e148dbf2a00f7.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/394a42575c7eceaa378e148dbf2a00f7.png)'
- en: The distance of the center points to their neighbors. Out of these, hexagons
    are the best for approximating radiuses. Image by author.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 中心点到其邻居的距离。在这些形状中，六边形是最适合近似半径的。图片由作者提供。
- en: However, the world cannot be divided completely into hexagons so few pentagons
    (five sides) are needed as well (12 to be exact, on each resolution). The pentagons
    introduce discontinuities to the grid but often they are located far away from
    the land so it causes problems for mainly marine data analysis. Despite the presence
    of a few pentagons, the hexagon grid offers the advantage of providing building
    blocks that are relatively uniform in size on the 3D spherical surface. In case
    one wants to read more about the geometrics of a hexagon grid, [here’s a good
    source for it](http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf). Note that
    defining the hexagon regions is highly arbitrary, and they do not follow any natural
    features such as lakes, rivers, mountains or country borders.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，世界无法完全被六边形划分，因此也需要一些五边形（五个边），总共有12个（每个分辨率下）。五边形引入了网格的不连续性，但它们通常位于远离陆地的地方，因此主要会影响海洋数据分析。尽管存在一些五边形，六边形网格仍然具有在三维球面上提供相对均匀大小构建块的优点。如果有人想了解更多关于六边形网格的几何信息，[这里有一个很好的资料来源](http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf)。请注意，定义六边形区域是高度任意的，它们不遵循任何自然特征，如湖泊、河流、山脉或国界。
- en: '![](../Images/8045e278a6085e7259d282d1971368ea.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8045e278a6085e7259d282d1971368ea.png)'
- en: The edge length of a hexagon (L) can be used to estimate the radius of the building
    block. One hexagon contains six equilateral triangles (all sides in the triangle
    have the same length) and the maximum distance of two points inside of a hexagon
    is two times the edge length of the hexagon. H3 supports sixteen different hexagon
    resolutions. Each hexagon at finer resolution is roughly one seventh of the hexagon
    in coarser resolution. Note that hexagons cannot be perfectly subdivided into
    seven smaller hexagons so the finer cells only approximately contain their parent
    cell. As the areas do not overlap perfectly, the count of events in the parent
    cell might not be equal to the count of events in its children cells. Images by
    author.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 六边形的边长（L）可以用来估算构建块的半径。一个六边形包含六个等边三角形（每个三角形的边长相等），六边形内两个点之间的最大距离是六边形边长的两倍。H3
    支持十六种不同的六边形分辨率。每个细分分辨率的六边形大约是粗分辨率六边形的七分之一。请注意，六边形不能完美地被划分为七个更小的六边形，因此较小的单元只大致包含其父单元。由于面积并不完全重叠，父单元中的事件数量可能与其子单元中的事件数量不相等。图像由作者提供。
- en: The H3 library is open source, available on GitHub and written in C. It has
    bindings available on multiple languages, for example on Python, C, Java and Javascript.
    H3 comes with a hierarchical indexing system which makes it very efficient. One
    can examine the hexagons further using an online [H3 hexagon data viewer](https://wolf-h3-viewer.glitch.me/).
    The table below summarizes the properties of the 16 different resolutions that
    H3 provides.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: H3 库是开源的，托管在 GitHub 上，并使用 C 语言编写。它提供了多种语言的绑定，例如 Python、C、Java 和 Javascript。H3
    配备了一个层次化的索引系统，使其非常高效。你可以使用在线的 [H3 六边形数据查看器](https://wolf-h3-viewer.glitch.me/)进一步查看六边形。下表总结了
    H3 提供的 16 个不同分辨率的特性。
- en: '![](../Images/3aa47437c6604bfe4c0dbe283e6982cf.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3aa47437c6604bfe4c0dbe283e6982cf.png)'
- en: 'Table: Average hexagon area and average edge length from https://h3geo.org/docs/core-library/restable/.
    Author used Chat-GPT to get examples of different sized areas.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 表格：来自 https://h3geo.org/docs/core-library/restable/ 的平均六边形面积和平均边长。作者使用 Chat-GPT
    获取了不同大小区域的示例。
- en: Next, we will introduce some of the most important functionalities of the H3
    library.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将介绍 H3 库的一些最重要的功能。
- en: H3 library and its main functions
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: H3 库及其主要功能
- en: In this article we will use the H3 hexagon system to cluster location data into
    hexagons. The documentation of H3 library can be found [here.](https://www.uber.com/en-FI/blog/h3/)
    There are two main versions of this library, versions 3 and 4, and in our notebooks
    we will use version 3.7.6\. Note that there are significant differences in function
    names between version 3.x and 4.x as listed in [here](https://h3geo.org/docs/library/migration-3.x/functions).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将使用 H3 六边形系统将位置数据聚类到六边形中。H3 库的文档可以在 [这里](https://www.uber.com/en-FI/blog/h3/)
    找到。该库有两个主要版本，版本 3 和版本 4，在我们的笔记本中我们将使用版本 3.7.6。请注意，版本 3.x 和 4.x 之间的函数名称有显著的差异，详细信息请参见
    [这里](https://h3geo.org/docs/library/migration-3.x/functions)。
- en: 'H3 Python package is easy to install for example with pip:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: H3 Python 包可以通过 pip 轻松安装：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: If you want to specify which version you want to use, add there the version
    number, for example h3==3.7.6\. Then import H3 to your Python notebook with
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想指定要使用的版本，请在其中添加版本号，例如 h3==3.7.6。然后通过以下命令在 Python 笔记本中导入 H3：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we will introduce some of the most important functions of the H3 library.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将介绍 H3 库的一些最重要的函数。
- en: Hexagon index
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 六边形索引
- en: 'H3 uses a hierarchical indexing system, which transforms latitude and longitude
    pairs to a 64-bit H3 index that identifies each grid cell. With given coordinates
    (latitude and longitude) and with selected resolution, we get the hexagon index:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: H3 使用层次化的索引系统，将经纬度对转换为 64 位 H3 索引，标识每个网格单元。给定坐标（纬度和经度）和选定的分辨率后，我们可以得到六边形索引：
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: For example
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 例如
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: returns index *‘861126d37ffffff’*. If you want, you can use a[n online H3 hexagon
    data viewer](https://wolf-h3-viewer.glitch.me/) to check where this hexagon is
    located.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 返回索引 *‘861126d37ffffff’*。如果你愿意，你可以使用在线的 [H3 六边形数据查看器](https://wolf-h3-viewer.glitch.me/)
    来查看该六边形的位置。
- en: So when we know the precise coordinates for a data point, we can determine its
    hexagon index at various resolutions and associate it with hexagons of different
    sizes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，当我们知道数据点的精确坐标时，我们可以在不同分辨率下确定其六边形索引，并将其与不同大小的六边形关联。
- en: Hexagon boundaries
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 六边形边界
- en: To use hexagons in our plots, we must determine the hexagon boundaries from
    the hexagon index. Note that coordinates in some systems are presented as (lng,
    lat), while in others, they follow the format (lat, lng). The geo_json=True/False
    option allows you to swap these coordinates.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 要在我们的图中使用六边形，我们必须从六边形索引中确定六边形的边界。请注意，在某些坐标系统中，坐标是以(lng, lat)的形式呈现的，而在其他系统中，则是以(lat,
    lng)的格式呈现。geo_json=True/False选项允许你交换这些坐标。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: For example
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 例如
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: These six coordinate pairs correspond to the starting and ending points of the
    hexagon edges.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这六对坐标对应于六边形边缘的起始点和结束点。
- en: Neighboring hexagons
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 邻近的六边形
- en: Sometimes we need to identify the neighbors of a specific hexagon, or “kring”
    around the hexagon. With k=0 the function returns the origin index, with k=1 it
    returns the origin index and its all neighboring indices, and with k=2 it returns
    the origin index, its neighboring and next-to-neighboring indices, and so forth.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 有时我们需要识别一个特定六边形的邻居，或者说是围绕该六边形的“kring”。当k=0时，函数返回原点索引；当k=1时，返回原点索引及其所有邻居索引；当k=2时，返回原点索引、其邻居和下一级邻居的索引，以此类推。
- en: '[PRE6]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also there’s a function that can be used to calculate the grid distance between
    two cells:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，还有一个可以用来计算两个单元格之间网格距离的函数：
- en: '[PRE7]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'We can use these functions in the following way:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以以以下方式使用这些函数：
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Plotting the hexagons
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 绘制六边形
- en: There are multiple ways on how to plot hexagons on a map but some of them are
    quite stiff, time consuming to use and not well-documented. For simplicity, we
    are mainly using matplotlib for visualizations but we also experiment and take
    screenshots of visualizations with folium maps. More details on these plotting
    methods can be found from the GitHub repository.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 绘制六边形的方法有很多种，但其中一些方法比较死板、耗时且文档不完善。为了简化起见，我们主要使用matplotlib进行可视化，但我们也会进行实验，并用folium地图截图展示可视化效果。更多关于这些绘图方法的详细信息可以在GitHub仓库中找到。
- en: '![](../Images/ecfb63cc2e24ea1ca9ad66123e0a0d00.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ecfb63cc2e24ea1ca9ad66123e0a0d00.png)'
- en: 'Examples of two different plotting options: on the left we use matplotlib for
    plotting and on the right we use folium maps.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 两种不同绘图选项的示例：左侧我们使用matplotlib进行绘图，右侧我们使用folium地图。
- en: On the left in the above figure we use matplotlib for plotting the hexagons.
    We utilize the GADM library to fetch the multipolygon representing the Helsinki
    region and plot it with green color. We use blue in the background to represent
    bodies of water. Additionally, we include a marker denoting the Helsinki city
    center on the map. The hexagons are easily rendered using the plot_polygon function
    from the shapely library and data points can be added to the plot by using scatterplot.
    This makes the plotting very easy and quick.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在上图的左侧，我们使用matplotlib绘制六边形。我们利用GADM库获取代表赫尔辛基区域的多边形，并用绿色填充该区域。背景使用蓝色表示水域。此外，我们还在地图上放置了一个标记，标示赫尔辛基市中心的位置。六边形使用shapely库中的plot_polygon函数轻松绘制，数据点可以通过scatterplot函数添加到图中。这使得绘图变得非常简单和快速。
- en: We also experimented with other plotting methods, such as using folium maps
    that allows us to create an interactive HTML map that allows us to zoom in and
    out in the map. On the right in the above figure we show a screenshot of such
    a map. Even though the result is aesthetically nice, it is very time consuming
    to add new features (such as colorbars or heatmaps) to the map so it’s not the
    best tool for exploratory data analysis. The notebook for plotting the interactive
    folium maps [can be found in here](https://github.com/sktahtin4/Helsinki-city-bikes/blob/main/City-bikes-data-analysis-with-folium-maps.ipynb).
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还尝试了其他绘图方法，例如使用folium地图，它允许我们创建一个交互式HTML地图，可以在地图上进行缩放。在上图的右侧，我们展示了这样一张地图的截图。尽管结果在视觉上很漂亮，但将新功能（如色条或热力图）添加到地图中非常耗时，因此它不是进行探索性数据分析的最佳工具。用于绘制交互式folium地图的笔记本[可以在这里找到](https://github.com/sktahtin4/Helsinki-city-bikes/blob/main/City-bikes-data-analysis-with-folium-maps.ipynb)。
- en: Helsinki city bike data
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 赫尔辛基城市自行车数据
- en: '![](../Images/fbef34643ec07c9a8434c03c7333be3b.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fbef34643ec07c9a8434c03c7333be3b.png)'
- en: 'Image by author: Helsinki city bikes near Helsinki railway station (2023).'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者：赫尔辛基火车站附近的赫尔辛基城市自行车（2023）。
- en: In this article, we use H3 hexagons to analyze Helsinki city bike usage. The
    data contains all the journeys undertaken between 2016 and 2021, as well as information
    on the stations available in the city bike network. City bikes are available nearly
    throughout Helsinki and in parts of Espoo, and the station network is dense, particularly
    in central Helsinki.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们使用H3六边形来分析赫尔辛基城市自行车的使用情况。数据包含了2016年至2021年间的所有行程，以及城市自行车网络中可用的车站信息。城市自行车几乎覆盖整个赫尔辛基以及埃斯波的一部分，车站网络密集，尤其是在赫尔辛基市中心。
- en: The city bike system works such that a user can grab a city bike from any station
    and return it to any city bike station, even if they are at full capacity. Typically,
    city bike trips are brief, such as commuting from a metro station to a specific
    destination, and the purpose of the city bikes is to make public transport more
    appealing by offering a quick way to transit between two locations. City bikes
    are available approximately from March to October, and a full season costs 35
    euros (less than 40 US dollars). With this fixed fee, users can use city bikes
    as much as they want as long as the trip lasts less than 30 minutes. If a trip
    exceeds 30 minutes, the user must pay an additional charge of 1 euro for every
    subsequent 30 minutes. All in all, clean and simple, and very convenient for short
    trips!
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 城市自行车系统的运作方式是，用户可以从任何一个车站拿取城市自行车，并将其归还到任何一个城市自行车站，即使该站点已满。通常，城市自行车的行程较短，例如从地铁站到特定目的地的通勤，城市自行车的目的是通过提供快速的两地间转移方式，使公共交通更加具有吸引力。城市自行车大约从三月到十月期间提供服务，整个季节的费用为35欧元（不到40美元）。在这一固定费用下，用户可以随意使用城市自行车，只要单次行程不超过30分钟。如果行程超过30分钟，用户需要为每增加的30分钟支付1欧元的额外费用。总的来说，这种方式既简洁又方便，非常适合短途出行！
- en: 'The data contains two files: station (©HSL 2021) and journey data (©City bike
    Finland 2021). Both datasets are downloaded from [HSL open data](https://www.hsl.fi/en/hsl/open-data)
    and they have [Creative Commons BY 4.0 International licence](https://creativecommons.org/licenses/by/4.0/deed.en).
    In the following section, we will provide a brief introduction to these datasets.
    The analysis and cleaning notebooks can be found from [a GitHub repository](https://github.com/sktahtin4/Helsinki-city-bikes).'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 数据包含两个文件：车站数据（©HSL 2021）和行程数据（©City bike Finland 2021）。这两个数据集均来源于[HSL开放数据](https://www.hsl.fi/en/hsl/open-data)，并且都具有[创意共享BY
    4.0国际许可证](https://creativecommons.org/licenses/by/4.0/deed.en)。在接下来的部分中，我们将简要介绍这些数据集。分析和清理的笔记本可以在[GitHub仓库](https://github.com/sktahtin4/Helsinki-city-bikes)中找到。
- en: Stations data
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 车站数据
- en: 'To begin, let’s take a closer look at the data. As always in data science projects,
    the dataset needs some cleaning before we can use it. For example, the column
    names are a mixture of Finnish, Swedish and English and for clarity, we want to
    rename them. The notebook detailing our data cleaning process can be found [at
    this link](https://github.com/sktahtin4/Helsinki-city-bikes/blob/main/City-bikes-data-cleaning.ipynb).
    In the cleaned dataset, we have 457 stations, and the first rows looks like this:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们仔细查看数据。正如数据科学项目中的常见情况一样，在使用数据之前，数据集需要进行一些清理。例如，列名是芬兰语、瑞典语和英语的混合形式，为了清晰起见，我们希望重新命名这些列。有关我们数据清理过程的详细笔记本可以在[此链接](https://github.com/sktahtin4/Helsinki-city-bikes/blob/main/City-bikes-data-cleaning.ipynb)中找到。在清理后的数据集中，我们有457个车站，前几行数据如下所示：
- en: '![](../Images/e81fd0b3cb38d348401a65a0b47f79b5.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e81fd0b3cb38d348401a65a0b47f79b5.png)'
- en: 'The station’s dataframe includes station ID, station name, address, city, capacity
    of the station, and geographical coordinates; longitude and latitude. Our objective
    is to cluster these stations based on their spatial location using the H3 hexagon
    system. Initially, the optimal hexagon size for analysis is unknown, prompting
    us to experiment with four different resolutions: 6, 7, 8, and 9\. These resolutions
    correspond to edge lengths of 3.7 km, 1.4 km, 500 m, and 200 m, respectively.
    Once latitude, longitude, and resolution is given, we can employ the H3 library
    to determine the corresponding H3 hexagon index as shown above in this article.'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 车站的数据框包括车站ID、车站名称、地址、城市、车站容量以及地理坐标；经度和纬度。我们的目标是根据这些车站的空间位置使用H3六边形系统进行聚类。最初，分析所需的最佳六边形大小尚不清楚，这使得我们需要尝试四种不同的分辨率：6、7、8和9。这些分辨率分别对应边长为3.7公里、1.4公里、500米和200米的六边形。一旦给定了纬度、经度和分辨率，我们就可以利用H3库来确定相应的H3六边形索引，正如本文中所展示的那样。
- en: 'Once we have retrieved the four hexagon IDs at different resolutions for all
    the stations, we obtain the following data table:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们获取了所有车站在不同分辨率下的四个六边形ID，我们将得到以下数据表：
- en: '![](../Images/fc8027bd9577e6127a961d90f54b2c65.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc8027bd9577e6127a961d90f54b2c65.png)'
- en: With the station ID, we can merge this data table with the journey data, which
    enables us to categorize trips into distinct hexagons and analyze the outcomes.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 通过车站ID，我们可以将这个数据表与旅行数据进行合并，从而将旅行分类到不同的六边形中并分析结果。
- en: Journey data
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 旅行数据
- en: 'The journey data contains all city bike trips taken between 2016 and 2021\.
    It includes information such as the names and IDs of the departure and return
    stations, departure and return times, trip duration, and distance traveled. Note
    that each journey must start and end at one of the city bike stations. Initially,
    the dataset contains 15 million trips, but data cleaning drops 3.5% of the rows
    so we are left with 14.5 million trips. The notebook detailing the data cleaning
    process is available in the same GitHub repository. Let’s examine the first few
    rows from the trip data:'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 旅行数据包含了2016年到2021年期间所有的城市自行车出行记录。它包括出发和归还车站的名称和ID、出发和归还时间、旅行时长和行驶距离等信息。请注意，每次旅行必须从一个城市自行车车站出发并结束于另一个车站。最初，数据集包含1500万条旅行记录，但数据清理过程中删除了3.5%的数据行，因此最终留下了1450万条旅行记录。有关数据清理过程的详细信息，可以在同一个GitHub仓库中的笔记本里找到。我们来看看旅行数据中的前几行：
- en: '![](../Images/eebe0a80e507e6d7287370a09467fcab.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eebe0a80e507e6d7287370a09467fcab.png)'
- en: With the station IDs we can merge station data with the journey data and append
    the hexagon IDs of both departure and return stations to the dataset. So next
    we can start the data analysis that utilizes the H3 hexagons.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过车站ID，我们可以将车站数据与旅行数据合并，并将出发和归还车站的六边形ID附加到数据集中。接下来，我们可以开始使用H3六边形进行的数据分析。
- en: Data insights with the hexagons
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用六边形的数据洞察
- en: A fundamental aspect of being a data scientist involves extracting meaningful
    insights from the available data. This typically requires data transformations,
    so creating new features from the existing ones in order to aggregate the data.
    For example we might want to extract the day of the week from dates, segment continuous
    variables into fixed-sized bins, or group data points into clusters or categories.
    In this section, we will showcase the types of data insights that can be obtained
    from location data, whether utilizing hexagons or not. Details of the data analysis
    can be found from the data cleaning and data analysis notebooks within the GitHub
    repository.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 成为数据科学家的一个基本方面是从现有数据中提取有意义的洞察。这通常需要数据转换，即从现有特征中创建新特征以聚合数据。例如，我们可能想从日期中提取星期几，将连续变量分段为固定大小的区间，或将数据点分组到不同的簇或类别中。在这一部分，我们将展示从位置数据中可以获得的各种数据洞察，无论是否使用六边形。数据分析的详细过程可以在GitHub仓库中的数据清理和数据分析笔记本中找到。
- en: A. Data analysis without hexagons
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: A. 无六边形的数据分析
- en: 'Let’s begin by exploring what kind of analysis we can conduct without relying
    on hexagons. Since our data spans from 2016 to 2021, a key aspect is understanding
    how the data has evolved over time. Some questions we might ask include:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从探索在不依赖六边形的情况下能进行哪些分析开始。由于我们的数据从2016年到2021年，因此一个关键方面是理解数据随时间的变化。我们可能会问的一些问题包括：
- en: Where are the city bike stations located?
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 城市自行车车站在哪里？
- en: What is the typical length of a bike trip in terms of both duration and distance?
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 单次自行车旅行的典型时长和距离是多少？
- en: How has the city bike station network expanded over the years?
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 城市自行车车站网络是如何随着时间扩展的？
- en: How has the number of trips changed over the years?
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 近年来出行次数如何变化？
- en: To address these questions, we start by plotting the station locations on a
    map by using the provided latitude and longitude coordinates.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 为了回答这些问题，我们首先通过使用提供的纬度和经度坐标将车站位置绘制在地图上。
- en: '![](../Images/af110102ca8dfdbe3deacc34c4b90d94.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/af110102ca8dfdbe3deacc34c4b90d94.png)'
- en: In the left figure, we see that the stations from 2021 are primarily located
    in Helsinki but partly in Espoo too. Some station names are displayed on the map
    to help identify different locations. On the right we categorize trip durations
    and distances into four bins and calculate their respective frequencies. Nearly
    half of the trips last less than 10 minutes and only a small percentage exceed
    30 minutes (note that the user needs to pay extra charges beyond this duration).
    The city bikes are typically employed for short-distance travels so it’s not surprising
    that the majority of the trips are less than 3 kilometers.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 在左图中，我们看到2021年的车站主要位于赫尔辛基，但也部分位于埃斯波。一些车站名称在地图上显示，以帮助识别不同位置。右侧图表将旅行时长和距离分为四个类别，并计算各类别的频率。几乎一半的旅行时间不到10分钟，只有少数超过30分钟（请注意，用户在此时段之外需要支付额外费用）。城市自行车通常用于短途出行，因此大多数旅行不到3公里也就不足为奇了。
- en: Next, we can analyze how the data have changed over the years.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以分析数据随年份变化的情况。
- en: '![](../Images/e799ecb7bec4b614f7d43b91f35db8a4.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e799ecb7bec4b614f7d43b91f35db8a4.png)'
- en: The left figure displays all city bike stations and the years they were incorporated
    into the network. The first city bike stations were introduced in 2016 and they
    were located in central Helsinki. With each passing year, the city bike network
    expanded, enabling bike usage in areas further away from central Helsinki. The
    top-right figure shows the number of stations in each year. Lastly, the bottom-right
    figure reveals the annual number of trips made with city bikes. Peak usage occurred
    in 2019 with approximately 3.7 million trips, followed by a decline of 17% in
    the next year, despite the increasing number of stations. The drop in 2020 and
    2021 is likely influenced by the COVID-19 pandemic, but also partly due to commercial
    scooters that became available in Helsinki in 2019 and that quickly gained popularity
    especially in short-distance travel.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 左图展示了所有城市自行车站及其加入网络的年份。第一个城市自行车站于2016年推出，位于赫尔辛基市中心。随着每年网络的扩展，城市自行车网络逐渐涵盖了远离赫尔辛基市中心的区域。右上角的图表展示了每年的车站数量。最后，右下角的图表显示了每年使用城市自行车的次数。2019年是使用高峰年，约有370万次旅行，随后在下一年下降了17%，尽管车站数量在增加。2020年和2021年的下降可能受到COVID-19大流行的影响，但也部分由于2019年赫尔辛基推出的商业电动滑板车，这些滑板车迅速流行起来，尤其是在短途旅行中。
- en: To delve deeper into statistics derived from the city bike data, we will now
    incorporate hexagons in our analysis.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更深入地分析来自城市自行车数据的统计信息，我们将把六边形纳入分析中。
- en: B. Using hexagon grid to analyze city bike data
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: B. 使用六边形网格分析城市自行车数据
- en: 'Hexagons offer us a tool for detailed analysis of the city bike usage. The
    questions we aim to address using hexagons include:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 六边形为我们提供了一个工具，可以详细分析城市自行车的使用情况。我们通过六边形希望回答的问题包括：
- en: Where do we have a lot of city bike stations?
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在哪些地方有很多城市自行车站？
- en: In which areas of the city do we observe the highest number of departures or
    returns?
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在哪些区域观察到最多的出发或返回？
- en: What is the average trip length in different parts of Helsinki?
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同区域的赫尔辛基平均旅行距离是多少？
- en: However, before tackling these questions, we need to decide the size of the
    hexagon we use in our analysis.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在解决这些问题之前，我们需要决定在分析中使用的六边形的大小。
- en: '![](../Images/10f0a400e137264c0ca2a4bcd93e5ea2.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/10f0a400e137264c0ca2a4bcd93e5ea2.png)'
- en: We start by examining hexagons at resolutions 6, 7, and 8, corresponding to
    radii of approximately 3.7 km, 1.4 km, and 500m, respectively. From these plots
    it is difficult to visually assess the station density, especially with the smallest
    hexagons.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先研究分辨率为6、7和8的六边形，分别对应约3.7公里、1.4公里和500米的半径。从这些图表中，很难直观评估车站密度，尤其是对于最小的六边形。
- en: 'Let’s compute the station count within each hexagon and plot the hexagons with
    colors that reflect the number of stations within each respective hexagon:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们计算每个六边形内的车站数量，并绘制出反映各六边形内车站数量的六边形颜色：
- en: '![](../Images/c901e44980503082ab4fec091cb5058b.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c901e44980503082ab4fec091cb5058b.png)'
- en: The hexagons are rather large at resolution 6 and the station count per hexagon
    varies a lot so this resolution is probably too large for our needs. Resolutions
    7 and 8 exhibit fewer variations in station numbers, and that can potentially
    make them more suitable for our analysis. However, there’s no rule of thumb for
    determining the ideal resolution as it depends on the specific insights we’re
    seeking.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在分辨率为6时，六边形的大小相对较大，并且每个六边形内的站点数量差异很大，因此这个分辨率可能对于我们的需求来说过大。分辨率7和8的站点数量变化较少，这可能使它们更适合我们的分析。然而，确定理想分辨率并没有固定的规则，因为这取决于我们所寻求的具体洞察。
- en: Hexagons help to visualize location-related insights, such as identifying the
    busiest parts of the town for the service. If we wouldn’t use hexagons, an alternative
    approach could involve calculating the average daily number of departures per
    station and plotting the result using circles of varying size, as shown in the
    figure below. However, the stations are so close to each other especially at the
    central Helsinki that it becomes challenging to accurately comprehend the daily
    number of departures.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 六边形有助于可视化与位置相关的洞察，比如识别城市中最繁忙的服务区域。如果我们不使用六边形，另一种方法可能是计算每个站点的每日平均出发次数，并使用不同大小的圆圈绘制结果，如下图所示。然而，特别是在赫尔辛基市中心，站点之间距离非常近，因此很难准确理解每日出发的数量。
- en: '![](../Images/0bdb15ab29b9c13e7f76afdc082fd9c3.png)'
  id: totrans-105
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bdb15ab29b9c13e7f76afdc082fd9c3.png)'
- en: Hexagon grid helps us perceive location specific data quicker. In the left image,
    we calculate the average number of daily departures per each station and use the
    size of each circle to represent the calculated average. In central Helsinki the
    stations are so closely spaced that it becomes challenging to discern the volume
    of departures in that area. Whereas on the right, we utilize hexagons of resolution
    8 to plot the average number of daily departures in different parts of the city.
    With this approach it is a way easier to see the volume of departures in different
    parts of Helsinki. For example, we can see from the image that there are numerous
    areas with fewer than 100 daily departures on average, whereas in central Helsinki
    the average exceeds 900 daily departures.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 六边形网格帮助我们更快速地理解特定位置的数据。在左侧的图像中，我们计算了每个站点的每日平均出发次数，并使用每个圆圈的大小表示计算出的平均值。在赫尔辛基市中心，站点之间的距离非常近，导致很难辨别该区域的出发量。而在右侧，我们使用分辨率为8的六边形绘制了城市不同区域的每日平均出发次数。采用这种方法，更容易看到赫尔辛基不同区域的出发量。例如，从图中我们可以看到，许多区域的每日出发次数平均不到100次，而在赫尔辛基市中心，平均出发次数超过900次。
- en: 'With the hexagon grid we can also visualize various other insights from the
    data, such as the following graphs:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 使用六边形网格，我们还可以可视化来自数据的各种其他洞察，比如以下图表：
- en: '![](../Images/67696120556bd3110ce7f08a565b55f6.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67696120556bd3110ce7f08a565b55f6.png)'
- en: On the left, we plot the average number of daily returns in each hexagon area.
    The result closely resembles the average of daily departures. On the right, we
    visualize the average distance traveled to the return station. The average trip
    length fluctuates across the city, with the longest trips occurring in areas with
    less frequent public transportation.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们绘制了每个六边形区域的每日平均归还数量。结果与每日出发的平均值非常相似。在右侧，我们可视化了到达归还站的平均距离。城市中平均的骑行距离波动较大，最长的骑行发生在公共交通较少的地区。
- en: C. Selecting one hexagon and getting location specific insights
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: C. 选择一个六边形并获取特定位置的洞察
- en: 'Sometimes we are interested in extracting more detailed insights from a specific
    region. By selecting one hexagon we can dive deeper into the data within that
    specific area and seek answers to questions such as:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 有时候我们希望从特定区域提取更详细的洞察。通过选择一个六边形，我们可以深入探讨该区域的数据，并寻找诸如以下问题的答案：
- en: What are the peak usage times for city bikes in that area?
  id: totrans-112
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在该区域内，城市自行车的高峰使用时间是什么时候？
- en: How does bike usage vary between weekdays and weekends in that region?
  id: totrans-113
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在该区域，工作日与周末的自行车使用情况有何不同？
- en: Where are users heading from that location?
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从该位置出发的用户要去哪里？
- en: 'To showcase how we could answer these questions, we opt for the following hexagon
    in the Helsinki city center:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了展示如何回答这些问题，我们选择了赫尔辛基市中心的以下六边形：
- en: '![](../Images/7264c5960da389a3022b450136e7ce93.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7264c5960da389a3022b450136e7ce93.png)'
- en: For a more in-depth analysis, we choose the highlighted hexagon situated in
    the Helsinki city center.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进行更深入的分析，我们选择了赫尔辛基市中心的高亮六边形。
- en: Let’s begin examining the data from that specific area.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始分析该特定区域的数据。
- en: '![](../Images/0cdd5df5e6dccbfe615414dfbdff53a9.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cdd5df5e6dccbfe615414dfbdff53a9.png)'
- en: On the left we plot the average number of departures for each weekday and hour
    to provide us with insights on the busiest times. In Finland, typical work hours
    are from 8–16 or 9–17, and we can see a clear peak on weekdays around 7 a.m. as
    people commute to work and at 4–5 p.m. when they leave work. Interestingly, it’s
    more common to grab a city bike after work than in the mornings. Notably, there’s
    a significant peak in usage on Friday and Saturday nights as people return home
    from bars and parties. Additionally, we can plot the trip length and duration
    for each weekday to identify potential variations between weekdays and weekends
    but the graphs on the right reveal only minor differences between different days.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们绘制了每个工作日和每小时的平均出发次数，以帮助我们了解最繁忙的时段。在芬兰，典型的工作时间是8点到16点或9点到17点，我们可以清晰地看到在工作日的早上7点左右有一个明显的高峰期，人们开始通勤；以及在下午4点到5点之间，大家下班离开工作地点。有趣的是，下班后使用城市自行车的情况比早上更多。特别地，在周五和周六晚上，使用量明显增加，大家从酒吧和派对回家。此外，我们还可以绘制每个工作日的骑行长度和时长，以识别工作日与周末之间的潜在差异，但右侧的图表显示不同的日子之间差异不大。
- en: We can also visualize the destinations of trips originating from the selected
    hexagon to determine where users are heading from that area.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还可以可视化从选定六边形出发的骑行目的地，以确定用户从该区域出发的方向。
- en: '![](../Images/7c4af244157d8531c2741c5d2ef6f5bf.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7c4af244157d8531c2741c5d2ef6f5bf.png)'
- en: On the left, we display a hexagon map showing the destination of the trips originating
    from the selected hexagon. On the right, we compute the grid distance between
    the selected hexagon and the destination hexagon where a distance of 0 signifies
    that the return and departure hexagons are the same. This analysis reveals that
    approximately 40% of the bike trips from the selected hexagon start and end within
    the same hexagon. Additionally, nearly 50% of the trips end in neighboring hexagons,
    indicating that the majority of bike trips from the Helsinki city center are directed
    to other areas within the city center.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在左侧，我们展示了一个六边形地图，显示了从选定六边形出发的骑行目的地。在右侧，我们计算了选定六边形与目的地六边形之间的网格距离，其中0表示返回和出发的六边形是相同的。该分析显示，约40%的骑行从选定的六边形出发，并在同一六边形结束。此外，近50%的骑行以邻近六边形为目的地，这表明来自赫尔辛基市中心的大多数骑行都指向市中心的其他区域。
- en: D. Selecting one location and analyzing data in the area around it
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: D. 选择一个位置并分析其周围区域的数据
- en: At times, we aim to gain insights around a specific location. For instance,
    we might want to understand city bike usage around a metro station that we frequently
    use, such as Kamppi metro station in this example. If we seek insights within
    a radius of approximately ~1 km, we might be tempted to choose the hexagon of
    resolution 7 containing the station, as the radius of that hexagon is roughly
    1.4 km. However, as shown in the left image below, the selected station is not
    at the center of the hexagon, thus not effectively covering the ~1 km area around
    the data point.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 有时，我们希望获得有关特定位置的洞察。例如，我们可能想了解我们经常使用的地铁站附近的城市自行车使用情况，例如本文中的卡姆皮地铁站。如果我们希望在大约1公里的半径范围内获得洞察，我们可能会倾向于选择包含该车站的分辨率为7的六边形，因为该六边形的半径大约是1.4公里。然而，正如下面左侧图像所示，选定的车站并不在六边形的中心，因此并不能有效地覆盖该数据点周围约1公里的区域。
- en: '![](../Images/5b8c1f7404296b6bba60bfb2ee794a8c.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b8c1f7404296b6bba60bfb2ee794a8c.png)'
- en: When we seek insights within a ~1 km radius around a specific data point, such
    as Kamppi metro station, we should not simple choose a hexagon that is roughly
    the size of the wanted radius because the data point might not be in the middle
    of the hexagon (as illustrated in the left image). In order to better center the
    data point, it is advisable to opt for a smaller hexagon containing the chosen
    station and then consider its neighboring cells as well. The neighboring hexagons
    are very easy to find with H3’s k_ring function. The smaller hexagon we choose
    and the more neighbors we take into account, the more effectively the selected
    data point is centered.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们希望获得大约1公里半径范围内的洞察时，比如卡姆皮地铁站，我们不应该简单地选择一个大致等于所需半径的六边形，因为数据点可能不在六边形的中心（如左侧图像所示）。为了更好地将数据点居中，建议选择一个包含选定车站的小六边形，并考虑其邻近单元格。邻近六边形可以通过H3的k_ring函数非常容易地找到。我们选择的小六边形和考虑的邻近六边形越多，选定数据点居中的效果就越好。
- en: Using the selected hexagons, we could analyze data around the desired data point.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用选定的六边形，我们可以分析目标数据点周围的数据。
- en: E. Anonymising the location data
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: E. 数据位置的匿名化
- en: After obtaining hexagon indexes through geographic coordinates, we can omit
    the exact location data and exclusively utilise the H3 indexes. This aids in anonymizing
    the data, as there is no need to reveal the precise user location.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过地理坐标获取六边形索引后，我们可以省略精确的位置数据，仅使用H3索引。这有助于数据的匿名化，因为不需要透露精确的用户位置。
- en: '![](../Images/f5477492c039cc84bc003290b7932fb4.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f5477492c039cc84bc003290b7932fb4.png)'
- en: 'Illustration of data anonymization: on the left, we display the precise start
    and end locations of a bike trip, which may expose sensitive user information.
    On the right, by using hexagon indexes, we avoid disclosing the exact location
    and instead represent the hexagon area with a radius of approximately 1.4km where
    the bike trip starts and ends.'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 数据匿名化示意图：左侧展示的是一趟自行车旅行的精确起点和终点位置，这可能会暴露敏感的用户信息。右侧通过使用六边形索引，我们避免了透露精确位置，而是用半径约为1.4公里的六边形区域来表示自行车旅行的起点和终点。
- en: Issues with hexagons
  id: totrans-133
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 六边形的问题
- en: The hexagon grid provided by the H3 library proves to be a useful tool for spatial
    data analysis. However, there are some challenges that arise when utilizing this
    hexagon grid, which we will elaborate on below.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: H3库提供的六边形网格证明是进行空间数据分析的有用工具。然而，使用该六边形网格时会出现一些挑战，下面我们将对此进行详细说明。
- en: From a mathematical perspective, the definition of hexagonal zones is entirely
    arbitrary. For this reason H3 hexagons lack alignment with any “natural elements,”
    such as streets, rivers, lakes, islands, highways, or train tracks. When employing
    the hexagon grid, data points are aggregated based on their proximity in straight-line
    distance. However, these points may not always be connected by roads, potentially
    resulting in the grouping of disparate locations into a single cluster. We show
    an example of this below.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 从数学角度来看，六边形区域的定义完全是任意的。因此，H3六边形与任何“自然元素”缺乏对齐，如街道、河流、湖泊、岛屿、高速公路或铁路。当使用六边形网格时，数据点是基于其直线距离的接近程度进行聚合的。然而，这些点不一定总是由道路连接，因此可能导致将不相关的位置聚集成一个单一的簇。我们将在下面展示一个示例。
- en: '![](../Images/7283db26ebced6959496807b9b016701.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7283db26ebced6959496807b9b016701.png)'
- en: For instance, if we select hexagons of resolution 6 (indicating a radius of
    approximately ~3.7 km), the two red-marked dots belong to the same hexagon even
    though they are not directly connected and the biking distance between these data
    points is roughly ~11km. Analyzing statistics for this hexagon may not yield much
    value due to the diverse nature of the different areas.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我们选择分辨率为6的六边形（表示大约3.7公里的半径），尽管两点未直接连接，且这两个红色标记的点之间的骑行距离大约为11公里，它们依然属于同一个六边形。由于这些区域的多样性，对该六边形进行统计分析可能没有多大价值。
- en: Another challenge arises if we aim to use the hexagons for anonymizing a user’s
    precise location. For example, instead of recording the user’s exact location,
    we could use hexagons of resolution 7 to indicate that the data point lies within
    an area with a radius of roughly 1.4 km. However, since the ideal hexagon resolution
    for analysis is often unknown, there may be a desire to link the data across various
    resolutions. But as the coarser hexagon only approximately contains its seven
    child hexagons, we might end up disclosing the location of a data point positioned
    close to the hexagon’s border more accurately than the specified 1.4 km radius.
    We demonstrate this in the image below.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个挑战是，如果我们希望使用六边形来匿名化用户的精确位置。例如，代替记录用户的精确位置，我们可以使用分辨率为7的六边形来表示数据点位于一个半径大约为1.4公里的区域内。然而，由于分析所需的理想六边形分辨率通常未知，可能会希望将不同分辨率的数据进行链接。但由于较粗的六边形只大致包含其七个子六边形，我们可能最终会比指定的1.4公里半径更精确地泄露位于六边形边界附近的数据点的位置。我们在下面的图像中演示了这一点。
- en: '![](../Images/841c8323992989a20b3a0ba300013ddb.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/841c8323992989a20b3a0ba300013ddb.png)'
- en: When employing hexagons for data anonymization, it’s crucial to recognize that
    we may unintentionally disclose the position more accurately than intended. For
    instance, when examining the hexagon indexes of the red data point at resolutions
    7 and 8, we observe that the smaller hexagon is not a direct child of the larger
    hexagons. Consequently, the data point must be situated within the overlapping
    region highlighted in black. Instead of anonymizing the data point to a region
    with a radius of roughly 500m, we, in fact, provided more detailed information.
    This poses a risk when anonymizing location data that is highly sensitive.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用六边形进行数据匿名化时，必须认识到我们可能会无意中泄露比预期更精确的位置。例如，在查看分辨率为7和8的红色数据点的六边形索引时，我们观察到较小的六边形并不是较大六边形的直接子单元。因此，数据点必须位于黑色高亮部分的重叠区域内。我们实际上提供了更详细的信息，而不是将数据点匿名化为大约500米半径的区域。当匿名化高度敏感的位置信息时，这会带来一定风险。
- en: Summary
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: Uber’s global H3 hexagonal grid system is a user-friendly and practical tool
    for spatial data analysis. It can also help us to anonymise sensitive location
    data.
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Uber的全球H3六边形网格系统是一个用户友好且实用的空间数据分析工具。它还可以帮助我们匿名化敏感的位置信息。
- en: H3 buckets location data points into hexagonal areas that cover the whole Earth
    with repetitive tiling. H3 library supports sixteen different hexagon resolutions,
    with the largest hexagons being ~1300km and the smallest only ~50m. From the different
    sizes of hexagons one must choose the resolution that best fits the purpose of
    the analysis.
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H3桶将位置数据点分配到覆盖全球的六边形区域，并通过重复的平铺方式进行填充。H3库支持16种不同的六边形分辨率，最大的六边形约为1300公里，最小的仅约50米。根据六边形的不同大小，必须选择最适合分析目的的分辨率。
- en: Each hexagon at finer resolution is roughly one seventh of the hexagon in coarser
    resolution. However, hexagons cannot be perfectly subdivided into seven smaller
    hexagons so the finer cells only approximately contain their parent cell. This
    means that the count of events in the parent cell might not be equal to the count
    of events in its children cells.
  id: totrans-144
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在更细的分辨率下，每个六边形大约是较粗分辨率下六边形的七分之一。然而，六边形不能完美地被划分成七个更小的六边形，因此更小的单元仅大致包含其父单元。这意味着父单元中的事件计数可能不等于其子单元中的事件计数。
- en: Note that, hexagon grid lacks alignment with any “natural elements,” such as
    streets, rivers, lakes, islands, highways, or train tracks, so disparate locations
    might be grouped into a single cluster.
  id: totrans-145
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 请注意，六边形网格与任何“自然元素”没有对齐，例如街道、河流、湖泊、岛屿、高速公路或火车轨道，因此不同的位置可能会被归为同一个聚类。
- en: 'References:'
  id: totrans-146
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献：
- en: 'GitHub repository for the Helsinki city bike data analysis: [https://github.com/sktahtin4/Helsinki-city-bikes](https://github.com/sktahtin4/Helsinki-city-bikes)'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 赫尔辛基城市自行车数据分析的GitHub仓库：[https://github.com/sktahtin4/Helsinki-city-bikes](https://github.com/sktahtin4/Helsinki-city-bikes)
- en: 'Uber blog on H3: [https://www.uber.com/en-FI/blog/h3/](https://www.uber.com/en-FI/blog/h3/)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Uber关于H3的博客：[https://www.uber.com/en-FI/blog/h3/](https://www.uber.com/en-FI/blog/h3/)
- en: 'H3 documentation: [https://h3geo.org/](https://h3geo.org/)'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: H3文档：[https://h3geo.org/](https://h3geo.org/)
- en: 'Table of statistics of the different hexagon resolutions: [https://h3geo.org/docs/core-library/restable/](https://h3geo.org/docs/core-library/restable/)'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同六边形分辨率的统计表：[https://h3geo.org/docs/core-library/restable/](https://h3geo.org/docs/core-library/restable/)
- en: 'More info on the global grid systems: [http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf](http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf)'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更多关于全球网格系统的信息：[http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf](http://webpages.sou.edu/~sahrk/sqspc/pubs/gdggs03.pdf)
- en: 'Data viewer for the hexagons: [https://wolf-h3-viewer.glitch.me](https://wolf-h3-viewer.glitch.me/)'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 六边形的数据查看器：[https://wolf-h3-viewer.glitch.me](https://wolf-h3-viewer.glitch.me/)
- en: 'HSL open data: [https://www.hsl.fi/en/hsl/open-data](https://www.hsl.fi/en/hsl/open-data)'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: HSL开放数据：[https://www.hsl.fi/en/hsl/open-data](https://www.hsl.fi/en/hsl/open-data)
