- en: Build Your Agents from Scratch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从零开始构建你的智能体
- en: 原文：[https://towardsdatascience.com/build-your-agents-from-scratch-forget-autogen-or-crewai-part-a-a114cd1e785f?source=collection_archive---------2-----------------------#2024-09-23](https://towardsdatascience.com/build-your-agents-from-scratch-forget-autogen-or-crewai-part-a-a114cd1e785f?source=collection_archive---------2-----------------------#2024-09-23)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/build-your-agents-from-scratch-forget-autogen-or-crewai-part-a-a114cd1e785f?source=collection_archive---------2-----------------------#2024-09-23](https://towardsdatascience.com/build-your-agents-from-scratch-forget-autogen-or-crewai-part-a-a114cd1e785f?source=collection_archive---------2-----------------------#2024-09-23)
- en: Design your own agents without any framework
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计你自己的智能体，完全不依赖任何框架
- en: '[](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)[![Hamza
    Farooq](../Images/8e6d6ae323b57a2e4448357c2d61be77.png)](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)
    [Hamza Farooq](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)[![Hamza
    Farooq](../Images/8e6d6ae323b57a2e4448357c2d61be77.png)](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)
    [Hamza Farooq](https://medium.com/@hamzafarooq?source=post_page---byline--a114cd1e785f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)
    ·7 min read·Sep 23, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a114cd1e785f--------------------------------)
    ·7分钟阅读·2024年9月23日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/59d5595c2bac63d71cfbbdc8c6275882.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59d5595c2bac63d71cfbbdc8c6275882.png)'
- en: Photo by [Arseny Togulev](https://unsplash.com/@tetrakiss?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Arseny Togulev](https://unsplash.com/@tetrakiss?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: In the recent months, we’ve have all heard about Agents and Multi-Agent frameworks.
    These AI agents have become the unsung heroes of automation and decision-making.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最近几个月，我们都听说过智能体和多智能体框架。这些 AI 智能体已经成为自动化和决策制定中默默无闻的英雄。
- en: While pre-built frameworks like [AutoGen](https://microsoft.github.io/autogen/)
    and [CrewAI](https://www.crewai.com/) offer tempting shortcuts, (and rightly so!)
    there’s an unparalleled thrill and depth of understanding that comes from building
    your own agent from the ground up.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然像[AutoGen](https://microsoft.github.io/autogen/)和[CrewAI](https://www.crewai.com/)这样的预构建框架提供了诱人的快捷方式，（这是有道理的！）但是，从零开始构建你自己的智能体，所带来的无与伦比的刺激感和深度理解，是任何快捷方式都无法比拟的。
- en: '*It’s like choosing between instant ramen and crafting a gourmet meal — sure,
    the former is quick, but the latter? That’s where the real magic happens.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*这就像是在选择方便面的速食和制作一顿精美的餐点——当然，前者很快，但后者？那才是魔力的源泉。*'
- en: Today, we’re going to roll up our sleeves and dive into the nitty-gritty of
    creating *AgentPro*, our very own AI assistant. By the end of this article, you’ll
    have a foundational understanding of how AI agents tick, and you’ll be well on
    your way to creating a digital companion that can generate and execute code on
    demand.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我们将撸起袖子，深入探讨如何创建*AgentPro*，我们自己的 AI 助手。在本文结束时，你将对 AI 智能体的运作原理有一个基础的了解，并且你将能够顺利创建一个可以按需生成和执行代码的数字助手。
- en: '*It’s like teaching a robot to fish, except instead of fish, it’s pulling Python
    scripts out of the ether!*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*这就像是在教一个机器人钓鱼，只不过钓到的不是鱼，而是从空中提取 Python 脚本！*'
- en: '**Caution: this code might not work in all cases but it should help you get
    started + indentation errors migh occur in code**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**警告：此代码可能在所有情况下无法运行，但它应该能帮助你入门 + 代码中可能会出现缩进错误**'
- en: Here’s the [Colab Notebook](https://colab.research.google.com/drive/1JilIxgnrs1vrWeF2tOL0eboiYwNfTmB0?usp=sharing)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[Colab Notebook](https://colab.research.google.com/drive/1JilIxgnrs1vrWeF2tOL0eboiYwNfTmB0?usp=sharing)
- en: '**The Building Blocks: A Roadmap to AgentPro**'
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**构建模块：通往 AgentPro 的路线图**'
- en: 'Before we dive into the code, let’s outline the key components we’ll be constructing:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入代码之前，让我们先概述一下我们将构建的关键组件：
- en: '![](../Images/85a64a14a6e92b921810d9c644011382.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/85a64a14a6e92b921810d9c644011382.png)'
- en: The 5 Stages of developing an Agent from Scratch (image by author)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 开发一个代理人从零开始的五个阶段（图片由作者提供）
- en: '*Initialization: Setting up our agent’s “brain”*'
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*初始化：设置我们代理人的“大脑”*'
- en: '*Code Generation: Teaching our agent to write Python scripts*'
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*代码生成：教我们的代理人编写 Python 脚本*'
- en: '*Library Management: Enabling our agent to install necessary tools*'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*库管理：让我们的代理人能够安装必要的工具*'
- en: '*Code Execution: Empowering our agent to run the code it generates*'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*代码执行：赋能我们的代理人运行它生成的代码*'
- en: '*Command Center: Creating a central hub to manage all these functions*'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '*指挥中心：创建一个集中管理所有这些功能的中心枢纽*'
- en: Now, let’s break down each of these steps and see how they come together to
    form our AI assistant.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们分解每个步骤，看看它们如何结合在一起，形成我们的 AI 助手。
- en: '**Step 1: Initialization — Giving Our Agent Its First Spark of Life**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 1：初始化 — 给予我们的代理人第一次生命的火花**'
- en: Every great journey begins with a single step, and in the world of AI agents,
    that step is initialization. This is where we set up the basic structure of our
    agent and connect it to its primary source of intelligence — in this case, the
    OpenAI API.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 每一段伟大的旅程都是从第一步开始的，在人工智能代理人的世界里，这一步就是初始化。这是我们设置代理人基本结构并将其与主要智能源（在本例中是 OpenAI
    API）连接的地方。
- en: '[PRE0]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This snippet is the digital equivalent of giving life to our AI assistant. We’re
    importing necessary libraries, setting up our OpenAI API key, and creating the
    skeleton of our AgentPro class. It’s like providing a body for our AI — not very
    useful on its own, but essential for everything that follows.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 这段代码是给我们的 AI 助手赋予生命的数字等价物。我们正在导入必要的库，设置我们的 OpenAI API 密钥，并创建 AgentPro 类的框架。这就像是为我们的
    AI 提供了一个身体——单独来看，它不太有用，但它对接下来的所有内容都是至关重要的。
- en: '**Step 2: Code Generation — Teaching Our Agent to Write Python**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2：代码生成 — 教我们的代理人写 Python 代码**'
- en: Now that our agent has a “body,” let’s give it the ability to think — or in
    this case, to generate code. This is where things start to get exciting!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们的代理人有了一个“身体”，让我们赋予它思考的能力——或者在这个例子中，赋予它生成代码的能力。这就是事情开始变得激动人心的地方！
- en: '[PRE1]python\n|^[PRE2]$'', '''', response.choices[0].message.content, flags=re.MULTILINE)'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE1]python\n|^[PRE2]$'', '''', response.choices[0].message.content, flags=re.MULTILINE)'
- en: code_lines = code.split('\n')
  id: totrans-32
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: code_lines = code.split('\n')
- en: 'while code_lines and not (code_lines[0].startswith(''import'') or code_lines[0].startswith(''from'')
    or code_lines[0].startswith(''#'')):'
  id: totrans-33
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 当 code_lines 并且不是以 'import' 或 'from' 或 '#' 开头时：
- en: code_lines.pop(0)
  id: totrans-34
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: code_lines.pop(0)
- en: return '\n'.join(code_lines)
  id: totrans-35
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return '\n'.join(code_lines)
- en: '[PRE3]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'def install_libraries(self, code):'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 'def install_libraries(self, code):'
- en: libraries = re.findall(r'#\s*pip install\s+([\w-]+)', code)
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: libraries = re.findall(r'#\s*pip install\s+([\w-]+)', code)
- en: 'if libraries:'
  id: totrans-39
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果 libraries:'
- en: print("Installing required libraries...")
  id: totrans-40
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("正在安装所需的库...")
- en: 'for lib in libraries:'
  id: totrans-41
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 对于 lib 在 libraries 中：
- en: 'try:'
  id: totrans-42
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'try:'
- en: importlib.import_module(lib.replace('-', '_'))
  id: totrans-43
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: importlib.import_module(lib.replace('-', '_'))
- en: print(f"{lib} is already installed.")
  id: totrans-44
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(f"{lib} 已经安装。")
- en: 'except ImportError:'
  id: totrans-45
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'except ImportError:'
- en: print(f"Installing {lib}...")
  id: totrans-46
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(f"正在安装 {lib}...")
- en: subprocess.check_call([sys.executable, "-m", "pip", "install", lib])
  id: totrans-47
  prefs:
  - PREF_IND
  - PREF_IND
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: subprocess.check_call([sys.executable, "-m", "pip", "install", lib])
- en: print("Libraries installed successfully.")
  id: totrans-48
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("库安装成功。")
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'def execute_code(self, code):'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 'def execute_code(self, code):'
- en: 'with tempfile.NamedTemporaryFile(mode=''w'', suffix=''.py'', delete=False)
    as temp_file:'
  id: totrans-51
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'with tempfile.NamedTemporaryFile(mode=''w'', suffix=''.py'', delete=False)
    as temp_file:'
- en: temp_file.write(code)
  id: totrans-52
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: temp_file.write(code)
- en: temp_file_path = temp_file.name
  id: totrans-53
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: temp_file_path = temp_file.name
- en: 'try:'
  id: totrans-54
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'try:'
- en: result = subprocess.run(['python', temp_file_path], capture_output=True, text=True,
    timeout=30)
  id: totrans-55
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: result = subprocess.run(['python', temp_file_path], capture_output=True, text=True,
    timeout=30)
- en: output = result.stdout
  id: totrans-56
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: output = result.stdout
- en: error = result.stderr
  id: totrans-57
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: error = result.stderr
- en: 'except subprocess.TimeoutExpired:'
  id: totrans-58
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'except subprocess.TimeoutExpired:'
- en: output = ""
  id: totrans-59
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: output = ""
- en: error = "Execution timed out after 30 seconds."
  id: totrans-60
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: error = "执行超时，超出 30 秒。"
- en: 'finally:'
  id: totrans-61
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: 'finally:'
- en: os.unlink(temp_file_path)
  id: totrans-62
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: os.unlink(temp_file_path)
- en: return output, error
  id: totrans-63
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: return output, error
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'def run(self, prompt):'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 'def run(self, prompt):'
- en: 'print(f"Generating code for: {prompt}")'
  id: totrans-66
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(f"正在为 {prompt} 生成代码")
- en: code = self.generate_code(prompt)
  id: totrans-67
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: code = self.generate_code(prompt)
- en: print("Generated code:")
  id: totrans-68
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("生成的代码：")
- en: print(code)
  id: totrans-69
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(code)
- en: print("\nExecuting code...")
  id: totrans-70
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("\n正在执行代码...")
- en: output, error = self.execute_code(code)
  id: totrans-71
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: output, error = self.execute_code(code)
- en: 'if output:'
  id: totrans-72
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果 output:'
- en: print("Output:")
  id: totrans-73
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("输出：")
- en: print(output)
  id: totrans-74
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(output)
- en: 'if error:'
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '如果 error:'
- en: print("Error:")
  id: totrans-76
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print("错误：")
- en: print(error)
  id: totrans-77
  prefs:
  - PREF_IND
  - PREF_IND
  type: TYPE_NORMAL
  zh: print(error)
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'if __name__ == "__main__":'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 如果 __name__ == "__main__"：
- en: agent = AgentPro()
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: agent = AgentPro()
- en: agent.run("""make a detailed deck on the best forms of leadership with at
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: agent.run("""制作一个关于最佳领导形式的详细幻灯片，至少包含10张，并保存为名为 leadership.pptx 的pptx文件""")
- en: least 10 slides and save it to a pptx called leadership.pptx""")
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 至少包含 10 张幻灯片，并保存为名为 leadership.pptx 的pptx文件""")
- en: '```'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '```'
- en: With this simple command, we’re asking our agent to create a full presentation
    on leadership styles, complete with at least 10 slides, and save it as a PowerPoint
    file.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这个简单的命令，我们要求我们的代理创建一个关于领导风格的完整演示文稿，包含至少10张幻灯片，并将其保存为PowerPoint文件。
- en: Our agent will generate the necessary Python code (likely using a library like
    python-pptx), install any required libraries, execute the code to create the presentation,
    and then report back with the results or any errors encountered.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的代理将生成必要的Python代码（可能使用如python-pptx之类的库），安装任何需要的库，执行代码以创建演示文稿，然后报告结果或遇到的任何错误。
- en: We’ve just built the foundation of a powerful AI agent capable of generating
    and executing Python code on demand. From setting up its “brain” with the OpenAI
    API, to giving it the power to write and run code, to equipping it with the ability
    to install necessary tools, we’ve created a versatile digital assistant.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚建立了一个强大的AI代理的基础，能够按需生成并执行Python代码。从通过OpenAI API设置它的“大脑”，到赋予它编写和运行代码的能力，再到为它装备安装必要工具的功能，我们创造了一个多功能的数字助手。
- en: This is just the beginning of what’s possible with custom AI agents. In future
    installments, we’ll explore how to enhance AgentPro with web searching capabilities,
    image generation, and even more complex decision-making processes.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是自定义AI代理可能实现的一个开端。在未来的系列中，我们将探索如何通过网络搜索能力、图像生成，甚至更复杂的决策过程来增强AgentPro。
- en: Remember, with great power comes great responsibility. Your new AI assistant
    is a powerful tool, but it’s up to you to guide it wisely. Use it to automate
    tedious tasks, explore new ideas, and push the boundaries of what’s possible with
    AI.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 记住，**能力越大，责任越大**。你新的AI助手是一个强大的工具，但如何使用它完全取决于你。用它来自动化繁琐的任务，探索新想法，推动AI的边界。
- en: Just maybe don’t ask it to write your wedding vows or decide on your next career
    move — some things are still best left to human intuition!
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 只是，也许不要让它为你写结婚誓言或决定你的下一份职业——有些事情还是交给人类直觉来处理吧！
- en: Stay tuned for Part B, where we’ll teach our agent some new tricks and start
    to unlock its true potential. Until then, happy coding, and may your AI adventures
    be bug-free and endlessly exciting!
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 敬请期待B部分，在那里我们将教我们的代理一些新技巧，并开始解锁它的真正潜力。直到那时，祝你编程愉快，愿你的AI冒险没有bug且永无止境！
- en: Follow for Part B!
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 关注B部分！
- en: If you are interested in learning more about this content, please subscribe.
    You can also connect with me on [LinkedIn](https://www.linkedin.com/in/hamzafarooq/)
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对了解更多内容感兴趣，请订阅。你也可以通过[LinkedIn](https://www.linkedin.com/in/hamzafarooq/)与我联系。
- en: '**About me**'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**关于我**'
- en: Hi! I am Hamza, and I’m thrilled to be your guide on this exciting journey into
    the world of AI agents. With a background as a Senior Research Scientist at Google
    and teaching experience at prestigious institutions like Stanford and UCLA, I’ve
    been at the forefront of AI development and education for years. My passion lies
    in demystifying complex AI concepts and empowering the next generation of AI practitioners.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 你好！我是Hamza，我很高兴成为你进入AI代理世界的指南。作为Google的资深研究科学家，并在斯坦福和UCLA等著名院校有教学经验，我多年来一直处于AI开发和教育的前沿。我的热情在于揭开复杂AI概念的神秘面纱，并赋能下一代AI从业者。
- en: Speaking of which, if you’ve enjoyed this deep dive into building AI agents
    from scratch, you might be interested in taking your LLM knowledge to the next
    level. I’ve recently developed a comprehensive course titled [Enterprise RAG and
    Multi-Agent Applications](https://maven.com/boring-bot/advanced-llm) on the MAVEN
    platform. This course is tailored for practitioners who want to push the boundaries
    of what’s possible with Large Language Models, especially in enterprise settings.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 说到这个，如果你喜欢这次深入了解如何从零构建AI代理，或许你会对将你的LLM知识提升到一个新层次感兴趣。我最近在MAVEN平台上开发了一门名为[企业RAG与多代理应用](https://maven.com/boring-bot/advanced-llm)的综合课程。这门课程专为那些希望推动大型语言模型（LLM）边界的实践者而设计，尤其是在企业环境中。
- en: In [Enterprise RAG and Multi-Agent Applications](https://maven.com/boring-bot/advanced-llm)
    we explore cutting-edge techniques that go beyond the basics. From advanced Retrieval-Augmented
    Generation (RAG) solutions to the latest methods in model optimization and responsible
    AI practices, this course is designed to equip you with the skills needed to tackle
    real-world AI challenges.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在[企业RAG和多智能体应用](https://maven.com/boring-bot/advanced-llm)中，我们探索了超越基础的前沿技术。从先进的检索增强生成（RAG）解决方案，到最新的模型优化方法和负责任的AI实践，本课程旨在让你掌握应对现实世界AI挑战所需的技能。
- en: Whether you’re looking to implement state-of-the-art LLM applications or dive
    deep into the intricacies of model fine-tuning and ethical AI deployment, this
    course has got you covered.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是想实施最先进的LLM应用，还是深入研究模型微调和伦理AI部署的复杂性，本课程都能满足你的需求。
