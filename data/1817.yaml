- en: Python Concurrency — A Brain-Friendly Guide for Data Professionals
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 并发 —— 数据专业人员的脑力友好指南
- en: 原文：[https://towardsdatascience.com/python-concurrency-a-brain-friendly-guide-for-data-professionals-a6215a3e9e26?source=collection_archive---------2-----------------------#2024-07-26](https://towardsdatascience.com/python-concurrency-a-brain-friendly-guide-for-data-professionals-a6215a3e9e26?source=collection_archive---------2-----------------------#2024-07-26)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/python-concurrency-a-brain-friendly-guide-for-data-professionals-a6215a3e9e26?source=collection_archive---------2-----------------------#2024-07-26](https://towardsdatascience.com/python-concurrency-a-brain-friendly-guide-for-data-professionals-a6215a3e9e26?source=collection_archive---------2-----------------------#2024-07-26)
- en: Moving data around can be slow. Here’s how you can squeeze every bit of performance
    optimization out of Python.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据传输可能很慢。以下是如何从 Python 中挤压出每一丝性能优化。
- en: '[](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)[![Dario
    Radečić](../Images/41882a3b30bab9da43d66a59f1df366b.png)](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)
    [Dario Radečić](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)[![Dario
    Radečić](../Images/41882a3b30bab9da43d66a59f1df366b.png)](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)
    [Dario Radečić](https://medium.com/@radecicdario?source=post_page---byline--a6215a3e9e26--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)
    ·9 min read·Jul 26, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a6215a3e9e26--------------------------------)
    ·阅读时长 9 分钟·2024年7月26日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/25762017e1f33ee69c80812c4b6e21c1.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/25762017e1f33ee69c80812c4b6e21c1.png)'
- en: Photo by [Matthew Brodeur](https://unsplash.com/@mrbrodeur?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Matthew Brodeur](https://unsplash.com/@mrbrodeur?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Python is often criticized for being among the slowest programming languages.
    While that claim does hold some weight, it’s vital to point out that Python is
    often the first programming language newcomers learn. Hence, most of the code
    is highly unoptimized.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python 经常被批评为最慢的编程语言之一。虽然这个说法有一定的依据，但必须指出，Python 通常是初学者学习的第一门编程语言。因此，大部分代码都非常低效。
- en: But Python does have a couple of tricks up its sleeve. Taking advantage of concurrent
    function execution is stupidly simple to implement, yet it can reduce the runtime
    of your data pipelines tenfold. **Instead of hours, it’ll take minutes**. All
    for free.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 但 Python 确实有一些小技巧。利用并发执行函数的方式实现起来非常简单，然而它能将数据处理管道的运行时间缩短十倍。**它将不再是几个小时，而是几分钟**。而且完全免费。
- en: Today you’ll see how concurrency works in Python, and you’ll also learn how
    to deal with exception handling, custom callbacks, and rate limiting. Let’s dig
    in!
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 今天你将学习如何在 Python 中实现并发，并了解如何处理异常处理、自定义回调以及限流。让我们深入探讨吧！
- en: JSON Placeholder — Your Data Source for the Day
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JSON Placeholder —— 今天的您的数据源
- en: The first order of business is configuring a data source. I wanted to avoid
    something proprietary and something that would take ages to set up. [JSON Placeholder](http://jsonplaceholder.typicode.com)
    — a free REST API service — is the perfect candidate.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 首要任务是配置数据源。我想避免使用一些专有的东西或需要花费大量时间设置的东西。[JSON Placeholder](http://jsonplaceholder.typicode.com)
    — 一个免费的 REST API 服务 — 是完美的选择。
