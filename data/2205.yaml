- en: Practical Introduction to Polars
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Polars的实用入门
- en: 原文：[https://towardsdatascience.com/practical-introduction-to-polars-8d9cdca350f1?source=collection_archive---------2-----------------------#2024-09-10](https://towardsdatascience.com/practical-introduction-to-polars-8d9cdca350f1?source=collection_archive---------2-----------------------#2024-09-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/practical-introduction-to-polars-8d9cdca350f1?source=collection_archive---------2-----------------------#2024-09-10](https://towardsdatascience.com/practical-introduction-to-polars-8d9cdca350f1?source=collection_archive---------2-----------------------#2024-09-10)
- en: Hands-on guide with side-by-side examples in Pandas
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 带有Pandas并排示例的实践指南
- en: '[](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)[![Nikolai
    Potapov](../Images/d2ac4b8c12c0cf70df05b8908b875a19.png)](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)
    [Nikolai Potapov](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)[![Nikolai
    Potapov](../Images/d2ac4b8c12c0cf70df05b8908b875a19.png)](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)
    [Nikolai Potapov](https://medium.com/@npotapov?source=post_page---byline--8d9cdca350f1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)
    ·14 min read·Sep 10, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--8d9cdca350f1--------------------------------)
    ·14分钟阅读·2024年9月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/07f4634c04141034295192ff239a64fe.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/07f4634c04141034295192ff239a64fe.png)'
- en: Image created with AI by Dall-E
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由Dall-E AI创建的图像
- en: This article is not about comparing Polars with Pandas or highlighting their
    differences. It’s a story about how adding a new tool can be beneficial not only
    for data science professionals but also for others who work with data. I like
    Polars because it is multithreaded, providing strong performance out-of-the-box,
    and it supports Lazy evaluation with query optimization capabilities. This tool
    will undoubtedly enhance your data skills and open up new opportunities.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本文并不是要对比Polars和Pandas或强调它们的区别。它讲述的是如何通过添加一个新工具来提升数据科学专业人士以及其他数据工作者的工作效率。我喜欢Polars，因为它是多线程的，开箱即用就提供了强大的性能，并且支持带有查询优化功能的惰性求值。这个工具无疑会提升你的数据技能，并开启新的机会。
- en: Although Polars and Pandas are different libraries, they share similarities
    in their APIs. Drawing parallels between them can make it easier for those familiar
    with the Pandas API to start using Polars. Even if you’re not familiar with Pandas
    and want to start learning Polars, it will still be incredibly useful and rewarding.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管Polars和Pandas是不同的库，但它们在API上有相似之处。将它们进行对比可以帮助那些熟悉Pandas API的人更容易地开始使用Polars。即使你不熟悉Pandas并且想要开始学习Polars，这仍然会是一个非常有用且值得的学习过程。
- en: We will look at the most common actions that, in my experience, are most often
    used for data analysis. To illustrate the process of using Polars, I will consider
    an abstract task with reproducible data, so you can follow all the steps on your
    computer.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将讨论在我的经验中最常用的数据分析操作。为了说明如何使用Polars，我将考虑一个具有可重现数据的抽象任务，这样你可以在你的电脑上跟随所有步骤进行操作。
- en: Imagine that we have data from three online stores, where we register user actions,
    such as viewing and purchasing. Let’s assume that at any given time, only one
    action of each type can occur for each online store, and in case of a transaction
    error, our data might be missing the product identifier or its quantity. Additionally,
    for our task, we’ll need a product catalog with prices for each item.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们有来自三家在线商店的数据，在这些商店中，我们记录用户行为，如浏览和购买。假设在任何时刻，每家在线商店每种类型的行为只会发生一次，如果发生交易错误，我们的数据可能会缺少产品标识符或其数量。此外，对于我们的任务，我们还需要一个包含每个商品价格的产品目录。
- en: 'Let’s formulate the main task: to calculate a summary table with the total
    purchase for each online store.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来定义主要任务：计算每个在线商店的总购买金额汇总表。
- en: 'I will break down this task into the following steps:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我将把这个任务分解为以下步骤：
- en: Data preparation and DataFrame creation.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 数据准备和DataFrame创建。
- en: Summary statistics of the DataFrame.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: DataFrame的总结统计。
- en: Retrieving the first five records.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 检索前五条记录。
- en: Renaming columns.
  id: totrans-17
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 重命名列。
- en: Changing column types.
  id: totrans-18
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 更改列类型。
- en: Filling missing values.
  id: totrans-19
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 填充缺失值。
- en: Removing missing values.
  id: totrans-20
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移除缺失值。
- en: Removing duplicate records.
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 移除重复记录。
- en: Filtering data.
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 筛选数据。
- en: Selecting the required columns.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 选择所需的列。
- en: Grouping data.
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对数据进行分组。
- en: Merging data with another DataFrame.
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将数据与另一个DataFrame合并。
- en: Calculating a new column.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算新列。
- en: Creating a Pivot table.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 创建数据透视表。
- en: Let’s get started!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们开始吧！
- en: '**Data Preparation and DataFrame Creation**'
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**数据准备与DataFrame创建**'
- en: 'We have the following data:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有以下数据：
- en: '`OnlineStore` — indicates the store.'
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`OnlineStore` — 表示商店。'
- en: '`product` — stores the product ID.'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`product` — 存储产品ID。'
- en: '`Action type` — the type of action (either a view or a purchase).'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Action type` — 动作的类型（查看或购买）。'
- en: '`quantity` — the amount of the purchased or viewed product.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`quantity` — 购买或查看的产品数量。'
- en: '`Action_time` — the timestamp for the action.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`Action_time` — 动作的时间戳。'
- en: '**Requirements:**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**需求：**'
- en: '*polars==1.6.0'
  id: totrans-37
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '*polars==1.6.0'
- en: pandas==2.0.0*
  id: totrans-38
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: pandas==2.0.0*
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: For product catalog, which in our case include only `product_id` and its price
    (`price`).
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 对于产品目录，在我们的案例中，仅包括`product_id`及其价格（`price`）。
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The data is ready. Now let’s create DataFrames using these data with Pandas
    and Polars:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 数据已准备好。现在我们使用Pandas和Polars创建这些数据的DataFrame：
- en: '[PRE3]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Since we have `user_actions_df` and `corrupted_df`, let’s concatenate them into
    a single DataFrame.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有`user_actions_df`和`corrupted_df`，我们将它们连接成一个单一的DataFrame。
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: In this way, we have easily created DataFrames for further work.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种方式，我们轻松地创建了DataFrame，以便进一步处理。
- en: Of course, each method has its own parameters, so it’s best to have the documentation
    handy to avoid confusion and use them appropriately.
  id: totrans-48
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当然，每种方法都有其自身的参数，因此最好随时查看文档，以避免混淆并正确使用它们。
- en: Summary Statistics of the DataFrame
  id: totrans-49
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: DataFrame的总结统计
- en: 'After loading or preparing data, it’s useful to quickly explore the resulting
    dataset. For summary statistics, the method name remains the same, but the results
    may differ:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 加载或准备数据后，快速探索结果数据集是很有用的。对于总结统计信息，方法名称保持不变，但结果可能会有所不同：
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '[PRE8]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: As you can notice, Pandas calculates statistics differently for various data
    types and provides `unique` values for all columns. Polars, on the other hand,
    calculates the `null_count` value.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所注意到的，Pandas根据不同的数据类型计算统计信息，并为所有列提供`unique`值。而Polars则计算`null_count`值。
- en: 'Additionally, in the [Polars documentation](https://docs.pola.rs/api/python/dev/reference/dataframe/api/polars.DataFrame.describe.html#polars.DataFrame.describe),
    it is stated:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，在[Polars文档](https://docs.pola.rs/api/python/dev/reference/dataframe/api/polars.DataFrame.describe.html#polars.DataFrame.describe)中指出：
- en: We do not guarantee the output of `describe` to be stable. It will show statistics
    that we deem informative, and may be updated in the future. Using `describe` programmatically
    (versus interactive exploration) is not recommended for this reason.
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们不保证`describe`的输出是稳定的。它将显示我们认为有用的统计信息，未来可能会更新。因此，不建议将`describe`用于编程操作（而非交互式探索）。
- en: '**Retrieving the First Five Records**'
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**检索前五条记录**'
- en: When encountering data for the first time, we always want to explore it. Beyond
    obtaining summary statistics, it’s also important to see the actual records it
    contains. To do this, we often look at the first five records as a sample.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在首次遇到数据时，我们总是想要对其进行探索。除了获取总结统计信息外，查看它包含的实际记录也很重要。为此，我们通常查看前五条记录作为样本。
- en: '[PRE9]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '[PRE10]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '[PRE11]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: '[PRE12]'
  id: totrans-63
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: Polars has a useful `glimpse()` function that provides a dense preview of the
    DataFrame. It not only returns the first 10 records (or any number you specify
    using the `max_items_per_column` parameter) but also shows data types and record
    counts.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: Polars有一个有用的`glimpse()`函数，它提供DataFrame的紧凑预览。它不仅返回前10条记录（或您通过`max_items_per_column`参数指定的任何数量），还显示数据类型和记录计数。
- en: '[PRE13]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '[PRE14]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Renaming Columns**'
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**重命名列**'
- en: After exploring the data, it is often necessary to edit it for further use.
    If the column names are not satisfactory or if your company has its own naming
    conventions, you can easily rename them.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在探索数据之后，通常需要对其进行编辑以便进一步使用。如果列名不合适，或者公司有自己的命名规范，您可以轻松地重命名它们。
- en: '[PRE15]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-70
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: '[PRE17]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '**Changing Column Types**'
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**更改列类型**'
- en: When working with data, optimizing their processing is often a priority, and
    data types are no exception. Choosing the right type not only unlocks available
    functions but also saves memory. In our example, I will change the column type
    of `quantity` from `float` to `int`. In Pandas, you would use the `astype()` method,
    while in Polars, you use the `cast()` method.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在处理数据时，优化其处理通常是首要任务，而数据类型也不例外。选择正确的类型不仅解锁了可用的函数，还节省了内存。在我们的例子中，我将`quantity`列的类型从`float`更改为`int`。在Pandas中，你会使用`astype()`方法，而在Polars中，你使用`cast()`方法。
- en: '[PRE19]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '[PRE21]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '[PRE22]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: 'Polars has a special method `estimated_size()` that returns an estimate of
    the total (heap) allocated size of the DataFrame. For example:'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: Polars有一个特殊的方法`estimated_size()`，用于返回DataFrame总（堆）分配大小的估算值。例如：
- en: '[PRE23]'
  id: totrans-80
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Although the method names for changing types differ, SQL enthusiasts will appreciate
    the ease of transition.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管更改类型的方法名称不同，SQL爱好者会欣赏这一过渡的简便性。
- en: Filling **Missing Values**
  id: totrans-82
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 填充**缺失值**
- en: In real projects, data is rarely perfect, and we often discuss with managers,
    analysts, and other systems how to interpret data behavior. During data preparation,
    I specifically generated `corrupted_data` to introduce some chaos into the data.
    Handling missing values could easily be the subject of an entire book.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际项目中，数据很少是完美的，我们经常与经理、分析师及其他系统讨论如何解释数据行为。在数据准备阶段，我特意生成了`corrupted_data`，以便在数据中引入一些混乱。处理缺失值可以轻松成为一本书的主题。
- en: 'There are several strategies for filling in missing values, and the choice
    of method depends on the task: sometimes filling missing values with zeros is
    sufficient, while other times the mean value may be used. In Polars, the `fill_null()`
    method can be applied both to the DataFrame and to specific columns. To add a
    new column or replace values in an existing one, the `with_columns()` method is
    also used.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 填充缺失值有几种策略，选择哪种方法取决于任务：有时用零填充缺失值就足够了，而有时可能使用均值。在Polars中，`fill_null()`方法既可以应用于DataFrame，也可以应用于特定列。要添加新列或替换现有列中的值，也可以使用`with_columns()`方法。
- en: 'In our example, I will fill missing values in the `quantity` column with 0:'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们的例子中，我将用0填充`quantity`列中的缺失值：
- en: '[PRE24]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '[PRE26]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: 'In Polars, you can use various strategies for filling missing values in the
    data, such as: `{None, ''forward'', ''backward'', ''min'', ''max'', ''mean'',
    ''zero'', ''one''}`. The names of these strategies are self-explanatory, so we
    won’t delve into their details.'
  id: totrans-90
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在Polars中，你可以使用多种策略来填充数据中的缺失值，例如：`{None, 'forward', 'backward', 'min', 'max',
    'mean', 'zero', 'one'}`。这些策略的名称不言自明，因此我们不再详细介绍。
- en: It’s also worth noting that for filling `NaN` values in floating-point columns,
    you should use the `fill_nan()` method, which does not involve strategies.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 同时需要注意，对于浮点型列中的`NaN`值填充，应使用`fill_nan()`方法，这个方法不涉及策略。
- en: '**Removing Missing Values**'
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**移除缺失值**'
- en: Not all missing values can be filled, so those that cannot be correctly filled
    and used in further calculations are best removed. In our case, this applies to
    the `product_id` column, as we cannot compute the final result without this identifier.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 并非所有缺失值都能填充，因此那些无法正确填充并用于进一步计算的值最好删除。在我们的例子中，这适用于`product_id`列，因为没有这个标识符我们无法计算最终结果。
- en: 'To remove rows with missing values in Pandas and Polars, use the following
    methods:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Pandas和Polars中删除含有缺失值的行，可以使用以下方法：
- en: '[PRE28]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '[PRE29]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '[PRE30]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '[PRE31]'
  id: totrans-98
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: It’s also worth noting that to remove `NaN` values in floating-point columns,
    you should use the `drop_nans()` method.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 还需要注意的是，要移除浮点型列中的`NaN`值，应使用`drop_nans()`方法。
- en: '**Removing Duplicate Records**'
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**移除重复记录**'
- en: The simplest case of duplicate records occurs when all values of one record
    are identical to another. In our case, duplicates might arise if the same action
    is recorded multiple times for the same action type in the same online store at
    a single point in time. I will keep only the most recent value in case duplicates
    are found.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 重复记录的最简单情况是当一条记录的所有值与另一条记录完全相同时。在我们的例子中，如果相同的操作在同一时刻在同一家在线商店中被多次记录，就可能会出现重复。我将在发现重复时，只保留最新的值。
- en: To remove duplicate records in Pandas, use the `drop_duplicates()` method, and
    in Polars, the `unique()` method.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 在Pandas中，去除重复记录使用`drop_duplicates()`方法，而在Polars中，使用`unique()`方法。
- en: '[PRE32]'
  id: totrans-103
  prefs: []
  type: TYPE_PRE
  zh: '[PRE32]'
- en: '[PRE33]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE33]'
- en: '[PRE34]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE34]'
- en: '[PRE35]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE35]'
- en: '**Filtering Data**'
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**过滤数据**'
- en: After the data cleaning phase, we need to filter the relevant data for future
    calculations. In Polars, this is done using the method with a quite descriptive
    name, `filter()`.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据清洗阶段之后，我们需要筛选出与未来计算相关的数据。在Polars中，这可以通过一个描述性很强的方法`filter()`来完成。
- en: Rows where the filter does not evaluate to True are discarded, including nulls.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 过滤条件不为True的行将被丢弃，包括空值。
- en: '[PRE36]'
  id: totrans-110
  prefs: []
  type: TYPE_PRE
  zh: '[PRE36]'
- en: '[PRE37]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE37]'
- en: '[PRE38]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE38]'
- en: '[PRE39]'
  id: totrans-113
  prefs: []
  type: TYPE_PRE
  zh: '[PRE39]'
- en: '**Selecting Required Columns**'
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**选择所需的列**'
- en: After filtering the data, you may need to retain only the columns relevant for
    further analysis. In Polars, this is achieved using the `select()` method.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在过滤数据后，您可能需要仅保留对进一步分析相关的列。在Polars中，可以使用`select()`方法来实现这一点。
- en: '[PRE40]'
  id: totrans-116
  prefs: []
  type: TYPE_PRE
  zh: '[PRE40]'
- en: '[PRE41]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE41]'
- en: '**Grouping Data**'
  id: totrans-118
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**分组数据**'
- en: After preparing the data, we can aggregate it to get the sum of `quantity` for
    each online store and product. I will also retain `action_type` for further steps.
    We use the `group_by()` method in Polars, which is similar to the `groupby()`
    method in Pandas.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 在准备好数据之后，我们可以对其进行聚合，获取每个在线商店和产品的`quantity`总和。我还会保留`action_type`以供后续步骤使用。在Polars中，我们使用`group_by()`方法，这与Pandas中的`groupby()`方法类似。
- en: '[PRE42]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE42]'
- en: '[PRE43]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE43]'
- en: '[PRE44]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE44]'
- en: '[PRE45]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE45]'
- en: '**Joining Data with Another DataFrame**'
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**与另一个DataFrame进行连接**'
- en: To calculate the total purchases, we need to join our data with the price catalog.
    In Pandas, we have two methods for this, `join()` and `merge()`, which differ
    in their specifics and functionality. In Polars, we use only the `join()` method.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算总购买量，我们需要将数据与价格目录进行连接。在Pandas中，我们有两种方法可以做到这一点，`join()`和`merge()`，它们在具体实现和功能上有所不同。在Polars中，我们只使用`join()`方法。
- en: '[PRE46]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE46]'
- en: '[PRE47]'
  id: totrans-127
  prefs: []
  type: TYPE_PRE
  zh: '[PRE47]'
- en: '[PRE48]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE48]'
- en: '[PRE49]'
  id: totrans-129
  prefs: []
  type: TYPE_PRE
  zh: '[PRE49]'
- en: 'In Polars, the `how` parameter supports the following values: `{''inner'',
    ''left'', ''right'', ''full'', ''semi'', ''anti'', ''cross''}` .'
  id: totrans-130
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 在Polars中，`how`参数支持以下值：`{'inner', 'left', 'right', 'full', 'semi', 'anti', 'cross'}`。
- en: '**Calculating a New Column**'
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**计算新列**'
- en: To calculate a new column or modify an existing column, Polars uses the `with_columns()`
    method. To set an alias for a column, you can use `alias()`.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 要计算一个新列或修改现有列，Polars使用`with_columns()`方法。要为列设置别名，可以使用`alias()`。
- en: '[PRE50]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE50]'
- en: '[PRE51]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE51]'
- en: 'Alternatively, you can calculate a new column directly within the `select()`
    method:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 另外，您可以直接在`select()`方法中计算一个新列：
- en: '[PRE52]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE52]'
- en: '**Creating a Pivot Table**'
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**创建透视表**'
- en: Our final step is to create a pivot table. We have already calculated the total
    sales for each product, and now we will easily calculate the total sales for each
    online store. In Pandas, we use the `pivot_table()` method, which allows for the
    application of aggregate functions. In Polars, we use the `pivot()` method to
    create the pivot table.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的最后一步是创建一个透视表。我们已经计算了每个产品的总销售额，现在我们将轻松计算每个在线商店的总销售额。在Pandas中，我们使用`pivot_table()`方法，它允许应用聚合函数。在Polars中，我们使用`pivot()`方法来创建透视表。
- en: '[PRE53]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE53]'
- en: '[PRE54]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE54]'
- en: '[PRE55]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE55]'
- en: '[PRE56]'
  id: totrans-142
  prefs: []
  type: TYPE_PRE
  zh: '[PRE56]'
- en: 'DeprecationWarning: The argument `columns` for pl.DataFrame.pivot` is deprecated.
    It has been renamed to `on`.'
  id: totrans-143
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 弃用警告：`pl.DataFrame.pivot`的参数`columns`已弃用，现已重命名为`on`。
- en: Here we are, concluding our little journey. As we can see, the results for both
    Pandas and Polars match. Everyone who made it to this point is great and incredibly
    hardworking — you will succeed!
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们结束我们的旅程。如我们所见，Pandas和Polars的结果一致。到达这里的每个人都很棒且非常努力——你们一定会成功！
- en: Summary
  id: totrans-145
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this article, we explored Polars using practical examples and comparisons
    with Pandas. I demonstrated how to handle data preparation, descriptive statistics,
    missing values, duplicates, filtering, column selection, grouping, merging, and
    pivot tables. By showcasing these tasks with both Pandas and Polars, I highlighted
    the ease of using Polars and transitioning to it from Pandas. This guide serves
    as a practical introduction to leveraging Polars for efficient data analysis.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们通过实际示例和与Pandas的比较来探讨Polars。我演示了如何处理数据准备、描述性统计、缺失值、重复值、过滤、列选择、分组、合并和透视表。通过展示Pandas和Polars这两者的任务，我突出了使用Polars的简便性以及从Pandas过渡到Polars的容易性。本指南作为高效数据分析中利用Polars的实用入门。
- en: 'Recommended read:'
  id: totrans-147
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 推荐阅读：
- en: '[Improving Code Quality During Data Transformation with Polars](https://medium.com/towards-data-science/improving-code-quality-during-data-transformation-with-polars-92997e67c8a9)'
  id: totrans-148
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[使用Polars提高数据转换中的代码质量](https://medium.com/towards-data-science/improving-code-quality-during-data-transformation-with-polars-92997e67c8a9)'
- en: Thanks for Reading!
  id: totrans-149
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 感谢阅读！
- en: If you enjoyed this article and want to support my work, the best way is to
    follow me on [Medium](https://medium.com/@npotapov). Let’s connect on [LinkedIn](https://www.linkedin.com/in/nikolai-potapov-67269524b/)
    if you’re also interested in working with data like I am. Your claps are greatly
    appreciated — they help me know how useful this post was for you.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您喜欢这篇文章并且想支持我的工作，最好的方式是关注我在[Medium](https://medium.com/@npotapov)。如果你也对像我一样处理数据感兴趣，可以在[LinkedIn](https://www.linkedin.com/in/nikolai-potapov-67269524b/)与我联系。感谢您的掌声——这帮助我知道这篇文章对您有多有用。
