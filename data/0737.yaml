- en: Function Interfaces in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Python 中的函数接口
- en: 原文：[https://towardsdatascience.com/function-interfaces-in-python-4846ede71cd9?source=collection_archive---------4-----------------------#2024-03-19](https://towardsdatascience.com/function-interfaces-in-python-4846ede71cd9?source=collection_archive---------4-----------------------#2024-03-19)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/function-interfaces-in-python-4846ede71cd9?source=collection_archive---------4-----------------------#2024-03-19](https://towardsdatascience.com/function-interfaces-in-python-4846ede71cd9?source=collection_archive---------4-----------------------#2024-03-19)
- en: PYTHON PROGRAMMING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PYTHON 编程
- en: Function interfaces in Python can be implemented using type hints and protocols.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在 Python 中，函数接口可以通过类型提示和协议来实现。
- en: '[](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--4846ede71cd9--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)
    ·18 min read·Mar 19, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4846ede71cd9--------------------------------)
    ·阅读时间 18 分钟 ·2024 年 3 月 19 日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ad64319b4ec547bf3013a6c0a4185166.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ad64319b4ec547bf3013a6c0a4185166.png)'
- en: Photo by [Rubaitul Azad](https://unsplash.com/@rubaitulazad?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Rubaitul Azad](https://unsplash.com/@rubaitulazad?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: While Python doesn’t offer interfaces in the sense commonly known from other
    programming languages, it does offer similar functionalities. Traditional ones
    are [abstract base classes](https://docs.python.org/3/library/abc.html) (ABCs),
    available via the `abc` module. Later on, [type hints](https://docs.python.org/3/library/typing.html)
    and [typing protocols](https://docs.python.org/3/library/typing.html#typing.Protocol)
    (`typing.Protocol`) were added.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 Python 并没有提供与其他编程语言中常见的接口相同的功能，但它提供了类似的功能。传统的接口是 [抽象基类](https://docs.python.org/3/library/abc.html)（ABCs），可以通过
    `abc` 模块使用。后来，[类型提示](https://docs.python.org/3/library/typing.html) 和 [类型协议](https://docs.python.org/3/library/typing.html#typing.Protocol)（`typing.Protocol`）被添加进来。
- en: Abstract base classes (ABCs) and typing protocols serve as Python’s mechanisms
    for defining expected structures and behaviors of classes, similar to interfaces
    in other programming languages. Although Python itself doesn’t formally use the
    term “interface” to describe this functionality, the concept is closely in line
    of what Python “protocols” offer. In fact, the term “protocol” had been used in
    Python to describe interfaces well before `typing.Protocol` was added to the typing
    module. Therefore, Python’s dynamic nature allows for the creation of dynamic
    interfaces, while type hints and typing protocols facilitate the specification
    of interfaces from a static-checking perspective. We will discuss this in this
    article.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象基类（ABCs）和类型协议作为 Python 定义类的期望结构和行为的机制，类似于其他编程语言中的接口。尽管 Python 本身并未正式使用“接口”这一术语来描述此功能，但这一概念与
    Python 的“协议”非常契合。事实上，在 `typing.Protocol` 被添加到 typing 模块之前，Python 就已使用“协议”一词来描述接口。因此，Python
    的动态特性允许创建动态接口，而类型提示和类型协议则从静态检查的角度促进了接口的规范化。我们将在本文中讨论这一点。
- en: 'Abstract base classes and typing protocols are typically considered in the
    context of creating custom classes: you can create an abstract base class or a…'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 抽象基类和类型协议通常在创建自定义类时考虑：你可以创建一个抽象基类或一个...
