- en: Modeling DAU with Markov Chain
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用马尔可夫链建模 DAU
- en: 原文：[https://towardsdatascience.com/modeling-dau-with-markov-chain-640ea4fddeb4?source=collection_archive---------1-----------------------#2024-12-02](https://towardsdatascience.com/modeling-dau-with-markov-chain-640ea4fddeb4?source=collection_archive---------1-----------------------#2024-12-02)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/modeling-dau-with-markov-chain-640ea4fddeb4?source=collection_archive---------1-----------------------#2024-12-02](https://towardsdatascience.com/modeling-dau-with-markov-chain-640ea4fddeb4?source=collection_archive---------1-----------------------#2024-12-02)
- en: How to predict DAU using Duolingo’s growth model and control the prediction
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用 Duolingo 的增长模型预测 DAU 并控制预测结果
- en: '[](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)[![Vladimir
    Kukushkin](../Images/e41265ea2c2079723f327ca02db3f67f.png)](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)
    [Vladimir Kukushkin](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)[![Vladimir
    Kukushkin](../Images/e41265ea2c2079723f327ca02db3f67f.png)](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)
    [Vladimir Kukushkin](https://medium.com/@wowone?source=post_page---byline--640ea4fddeb4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)
    ·21 min read·Dec 2, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--640ea4fddeb4--------------------------------)
    ·阅读时间：21 分钟·2024年12月2日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 1\. Introduction
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 引言
- en: 'Doubtlessly, DAU, WAU, and MAU — daily, weekly, and monthly [active users](https://en.wikipedia.org/wiki/Active_users)
    — are critical business metrics. An article [“How Duolingo reignited user growth”](https://www.lennysnewsletter.com/p/how-duolingo-reignited-user-growth)
    by [Jorge Mazal](https://www.linkedin.com/in/jorgemazal/), former CPO of Duolingo,
    is #1 in the Growth section of Lenny’s Newsletter blog. In this article, Jorge
    paid special attention to the methodology Duolingo used to model the DAU metric
    (see another article [“Meaningful metrics: how data sharpened the focus of product
    teams”](https://blog.duolingo.com/growth-model-duolingo/) by [Erin Gustafson](https://blog.duolingo.com/author/erin/)).
    This methodology has multiple strengths, but I’d like to focus on how one can
    use this approach for DAU forecasting.'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '毫无疑问，DAU、WAU 和 MAU——每日、每周和每月的 [活跃用户](https://en.wikipedia.org/wiki/Active_users)——是关键的业务指标。由
    Duolingo 前 CPO [Jorge Mazal](https://www.linkedin.com/in/jorgemazal/) 撰写的文章 [“How
    Duolingo reignited user growth”](https://www.lennysnewsletter.com/p/how-duolingo-reignited-user-growth)
    位列 Lenny’s Newsletter 博客增长板块的第一篇文章。在这篇文章中，Jorge 特别关注了 Duolingo 如何建模 DAU 指标的方法（参见另一篇文章
    [“Meaningful metrics: how data sharpened the focus of product teams”](https://blog.duolingo.com/growth-model-duolingo/)
    由 [Erin Gustafson](https://blog.duolingo.com/author/erin/) 撰写）。这种方法有多个优点，但我想重点介绍如何使用这种方法进行
    DAU 预测。'
- en: The new year is coming soon, so many companies are planning their budgets for
    the next year these days. Cost estimations often require DAU forecasts. In this
    article, I’ll show how you can get this prediction using Duolingo’s growth model.
    I’ll explain why this approach is better compared to standard time-series forecasting
    methods and how you can adjust the prediction according to your teams’ plans (e.g.,
    marketing, activation, product teams).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 新的一年即将来临，许多公司目前正在为明年的预算进行规划。成本估算通常需要 DAU 预测。在本文中，我将展示如何使用 Duolingo 的增长模型进行预测。我还将解释为什么这种方法相比于标准的时间序列预测方法更为优越，以及如何根据团队的计划（例如市场营销、激活、产品团队）调整预测结果。
- en: The article text goes along with the code, and a simulated dataset is attached
    so the research is fully reproducible. The Jupyter notebook version is available
    [here](https://github.com/wowone/wowone.github.io/blob/master/posts/2024-12-02_dau_prediction/dau_prediction.ipynb).
    In the end, I’ll share a DAU “calculator” designed in Google Spreadsheet format.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文内容与代码相结合，并附有模拟数据集，研究结果完全可复现。Jupyter notebook 版本可以在 [这里](https://github.com/wowone/wowone.github.io/blob/master/posts/2024-12-02_dau_prediction/dau_prediction.ipynb)
    查看。最后，我将分享一个以 Google Spreadsheet 格式设计的 DAU “计算器”。
- en: I’ll be narrating on behalf of the collective “we” as if we’re talking together.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我将以“我们”的身份叙述，就像我们在一起讨论一样。
- en: 2\. Methodology
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 方法论
- en: 'A quick recap on how the [Duolingo’s growth model](https://blog.duolingo.com/growth-model-duolingo/)
    works. At day d (d = 1, 2, … ) of a user’s lifetime, the user can be in one of
    the following 7 (mutually-exclusive) states: `new`, `current`, `reactivated`,
    `resurrected`, `at_risk_wau`, `at_risk_mau`, `dormant`. The states are defined
    according to indicators of whether a user was active today, in the last 7 days,
    or in the last 30 days. The definition summary is given in the table below:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 简要回顾一下[Duolingo 的增长模型](https://blog.duolingo.com/growth-model-duolingo/)是如何工作的。在用户生命周期的第
    d 天（d = 1, 2, …）中，用户可以处于以下 7 种（互斥）状态之一：`new`、`current`、`reactivated`、`resurrected`、`at_risk_wau`、`at_risk_mau`、`dormant`。这些状态是根据用户今天、过去
    7 天或过去 30 天是否活跃来定义的。定义摘要如下表所示：
- en: '![](../Images/310a0c6eba807c18e6ad05ec8ab9aa67.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/310a0c6eba807c18e6ad05ec8ab9aa67.png)'
- en: 'Having these states defined (as a set S), we can consider user behavior as
    a [Markov chain](https://en.wikipedia.org/wiki/Markov_chain). Here’s an example
    of a user’s trajectory: `new`→ `current`→ `current`→ `at_risk_wau`→...→ `at_risk_mau`→...→
    `dormant`. Let M be a transition matrix associated with this Markov process: m_{i,
    j} = P(s_j | s_i) are the probabilities that a user moves to state s_j right after
    being at state s_i, where s_i, s_j ∈ S. Such a matrix is inferred from the historical
    data.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义了这些状态（作为集合 S）后，我们可以将用户行为视为一个[马尔科夫链](https://en.wikipedia.org/wiki/Markov_chain)。以下是用户轨迹的一个例子：`new`→
    `current`→ `current`→ `at_risk_wau`→...→ `at_risk_mau`→...→ `dormant`。设 M 为与此马尔科夫过程相关的转移矩阵：m_{i,
    j} = P(s_j | s_i) 表示用户从状态 s_i 转移到状态 s_j 的概率，其中 s_i, s_j ∈ S。这样一个矩阵是从历史数据中推断出来的。
- en: 'If we assume that user behavior is stationary (independent of time), the matrix
    M fully describes the states of all users in the future. Suppose that the vector
    u_0 of length 7 contains the counts of users in certain states on a given day,
    denoted as day 0\. According to the Markov model, on the next day 1, we expect
    to have the following number of users states u_1:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们假设用户行为是平稳的（与时间无关），那么矩阵 M 完全描述了未来所有用户的状态。假设长度为 7 的向量 u_0 包含给定一天（记为第 0 天）在各状态下的用户计数。根据马尔科夫模型，在第二天第
    1 天，我们预计会有以下数量的用户状态 u_1：
- en: '![](../Images/cd5c149c2584d7449578ec794b6c820c.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cd5c149c2584d7449578ec794b6c820c.png)'
- en: Applying this formula recursively, we derive the number of users in certain
    states on any arbitrary day t > 0 in the future.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 通过递归应用此公式，我们可以推导出未来任意天 t > 0 时，处于某些状态的用户数量。
- en: Besides the initial distribution u_0, we need to provide the number of new users
    that will appear in the product each day in the future. We’ll address this problem
    as a general time-series forecasting.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 除了初始分布 u_0 外，我们还需要提供未来每天将会出现的新用户数量。我们将把这个问题作为一般的时间序列预测问题来处理。
- en: 'Now, having u_t calculated, we can determine DAU values on day t:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，计算出 u_t 后，我们可以确定第 t 天的 DAU 值：
- en: 'DAU_t = #New_t + #Current_t + #Reactivated_t + #Resurrected_t'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 'DAU_t = #New_t + #Current_t + #Reactivated_t + #Resurrected_t'
- en: 'Additionally, we can easily calculate WAU and MAU metrics:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们可以轻松计算 WAU 和 MAU 指标：
- en: 'WAU_t = DAU_t + #AtRiskWau_t,'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 'WAU_t = DAU_t + #AtRiskWau_t，'
- en: 'MAU_t = DAU_t + #AtRiskWau_t + #AtRiskMau_t.'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 'MAU_t = DAU_t + #AtRiskWau_t + #AtRiskMau_t。'
- en: 'Finally, here’s the algorithm outline:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这里是算法大纲：
- en: 'For each prediction day t = 1, …, T, calculate the expected number of new users
    #New_1, …, #New_T.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '对于每个预测日 t = 1, …, T，计算预期的新用户数量 #New_1, …, #New_T。'
- en: For each lifetime day of each user, assign one of the 7 states.
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 对于每个用户的每个生命周期天，分配其中一个 7 个状态。
- en: Calculate the transition matrix M from the historical data.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从历史数据中计算转移矩阵M。
- en: Calculate initial state counts u_0 corresponding to day t=0.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算初始状态计数 u_0 对应于 t=0 的第 t 天。
- en: Recursively calculate u_{t+1} = M^T * u_t.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 递归地计算 u_{t+1} = M^T * u_t。
- en: Calculate DAU, WAU, and MAU for each prediction day t = 1, …, T.
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 计算每个预测日 t = 1, …, T 的 DAU、WAU 和 MAU。
- en: 3\. Implementation
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 实现
- en: This section is devoted to technical aspects of the implementation. If you’re
    interested in studying the model properties rather than code, you may skip this
    section and go to the [Section 4](#1375).
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 本节内容专注于实现的技术方面。如果你更感兴趣的是研究模型的属性，而非代码，可以跳过本节，直接查看[第 4 节](#1375)。
- en: 3.1 Dataset
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 数据集
- en: 'We use a simulated dataset based on historical data of a SaaS app. The data
    is stored in the [dau_data.csv.gz](https://drive.google.com/file/d/16kd8rJBvcgmw95jY42MedRfIxcO4LpPd/view?usp=sharing)
    file and contains three columns: `user_id`, `date`, and `registration_date`. Each
    record indicates a day when a user was active. The dataset includes activity indicators
    for 51480 users from `2020-11-01` to `2023-10-31`. Additionally, data from October
    2020 is included to calculate user states properly, as the `at_risk_mau` and `dormant`
    states require data from one month prior.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用基于SaaS应用历史数据的模拟数据集。数据存储在[dau_data.csv.gz](https://drive.google.com/file/d/16kd8rJBvcgmw95jY42MedRfIxcO4LpPd/view?usp=sharing)文件中，包含三列：`user_id`、`date`和`registration_date`。每条记录表示一个用户活跃的日期。数据集包括来自`2020-11-01`到`2023-10-31`的51480个用户的活动指标。此外，还包括2020年10月的数据，以正确计算用户状态，因为`at_risk_mau`和`dormant`状态需要前一个月的数据。
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/3248afffd2cb0a590beb957b9a2eaed4.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3248afffd2cb0a590beb957b9a2eaed4.png)'
- en: This is how the DAU time-series looks like.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是DAU时间序列的样子。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/f3da1f5416d7f6c96d1ffe7d01f34913.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3da1f5416d7f6c96d1ffe7d01f34913.png)'
- en: Suppose that today is 2023–10–31 and we want to predict the DAU metric for the
    next 2024 year. We define a couple of global constants `PREDICTION_START` and
    `PREDICTION_END` which encompass the prediction period.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 假设今天是2023年10月31日，我们想预测2024年接下来的DAU指标。我们定义了两个全局常量`PREDICTION_START`和`PREDICTION_END`，它们包含了预测期间。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 3.2 Predicting new users amount
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 预测新用户数量
- en: Let’s start from the new users prediction. We use the [prophet](http://facebook.github.io/prophet/)
    library as one of the easiest ways to forecast time-series data. The `new_users`
    Series contains such data. We extract it from the original `df` dataset selecting
    the rows where the `registration date` is equal to the `date`.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 从新用户预测开始。我们使用[prophet](http://facebook.github.io/prophet/)库作为预测时间序列数据的最简单方法之一。`new_users`系列包含这样的数据。我们从原始的`df`数据集中提取它，选择`registration
    date`等于`date`的行。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '[PRE5]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '`prophet` requires a time-series as a DataFrame containing two columns `ds`
    and `y`, so we reformat the `new_users` Series to the `new_users_prophet` DataFrame.
    Another thing we need to prepare is to create the `future` variable containing
    certain days for prediction: from `prediction_start` to `prediction_end`. This
    logic is implemented in the `predict_new_users` function. The plot below illustrates
    predictions for both past and future periods.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`prophet`要求时间序列以包含`ds`和`y`两列的DataFrame格式提供，因此我们将`new_users`系列重新格式化为`new_users_prophet`
    DataFrame。我们还需要准备的是创建`future`变量，包含用于预测的某些日期：从`prediction_start`到`prediction_end`。这个逻辑在`predict_new_users`函数中实现。下面的图表展示了过去和未来时期的预测。'
- en: '[PRE6]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/e2d4082a52ad9a60f38efb68bc7141e6.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e2d4082a52ad9a60f38efb68bc7141e6.png)'
- en: The `new_users_pred` Series stores the predicted users amount.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '`new_users_pred`系列存储预测的新用户数量。'
- en: '[PRE8]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 3.3 Getting the states
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 获取状态
- en: In practice, the most calculations are reasonable to execute as SQL queries
    to a database where the data is stored. Hereafter, we will simulate such querying
    using the [duckdb](https://duckdb.org) library.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在实际操作中，最合理的计算方法是通过SQL查询在存储数据的数据库中执行。接下来，我们将使用[duckdb](https://duckdb.org)库模拟这种查询。
- en: 'We want to assign one of the 7 states to each day of a user’s lifetime within
    the app. According to the definition, for each day, we need to consider at least
    the past 30 days. This is where SQL window functions come in. However, since the
    `df` data contains only records of *active days*, we need to explicitly extend
    them and include the days when a user was not active. In other words, instead
    of this list of records:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望为每个用户在应用中的生命周期中的每一天分配7种状态之一。根据定义，对于每一天，我们需要考虑至少过去30天的数据。这时，SQL窗口函数发挥了作用。然而，由于`df`数据只包含*活跃的日期*记录，我们需要明确扩展它们，包含用户未活跃的日期。换句话说，而不是像这样一组记录：
- en: '[PRE10]'
  id: totrans-57
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: 'we’d like to get a list like this:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们想得到这样的一个列表：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: For readability purposes we split the following SQL query into multiple subqueries.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了提高可读性，我们将以下SQL查询拆分成多个子查询。
- en: '`full_range`: Create a full sequence of dates for each user.'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`full_range`：为每个用户创建一个完整的日期序列。'
- en: '`dau_full`: Get the full list of both active and inactive records.'
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`dau_full`：获取包含活跃和非活跃记录的完整列表。'
- en: '`states`: Assign one of the 7 states for each day of a user''s lifetime.'
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`states`：为每个用户生命周期的每一天分配7种状态之一。'
- en: '[PRE12]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'The query results are kept in the `states` DataFrame:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 查询结果保存在`states` DataFrame中：
- en: '![](../Images/53ea15d70dd68eaa0f5c26683a10eaf8.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53ea15d70dd68eaa0f5c26683a10eaf8.png)'
- en: 3.4 Calculating the transition matrix
  id: totrans-67
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 计算转移矩阵
- en: Having obtained these states, we can calculate state transition frequencies.
    In the [Section 4.3](#0637) we’ll study how the prediction depends on a period
    in which transitions are considered, so it’s reasonable to pre-aggregate this
    data on daily basis. The resulting `transitions` DataFrame contains `date`, `state_from`,
    `state_to`, and `cnt` columns.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 获得这些状态后，我们可以计算状态转移频率。在[第4.3节](#0637)中，我们将研究预测如何依赖于考虑转移的周期，因此预先按日聚合这些数据是合理的。结果生成的`transitions`数据框包含`date`、`state_from`、`state_to`和`cnt`列。
- en: Now, we can calculate the transition matrix M. We implement the `get_transition_matrix`
    function, which accepts the `transitions` DataFrame and a pair of dates that encompass
    the transitions period to be considered.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以计算转移矩阵M。我们实现了`get_transition_matrix`函数，它接受`transitions`数据框和一对日期，这些日期涵盖了要考虑的转移期。
- en: As a baseline, let’s calculate the transition matrix for the whole year from
    `2022-11-01` to `2023-10-31`.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 作为基准，让我们计算从`2022-11-01`到`2023-10-31`的全年转移矩阵。
- en: '[PRE13]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/3a953164c81ba1b76230eb9fa6cc70de.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a953164c81ba1b76230eb9fa6cc70de.png)'
- en: The sum of each row of any transition matrix equals 1 since it represents the
    probabilities of moving from one state to any other state.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 任何转移矩阵的每一行的和都等于1，因为它表示从一个状态转移到任何其他状态的概率。
- en: 3.5 Getting the initial state counts
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.5 获取初始状态计数
- en: An initial state is retrieved from the `states` DataFrame by the `get_state0`
    function and the corresponding SQL query. The only argument of the function is
    the date for which we want to get the initial state. We assign the result to the
    `state0` variable.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 初始状态是通过`get_state0`函数和相应的SQL查询从`states`数据框中检索的。该函数的唯一参数是我们想要获取初始状态的日期。我们将结果分配给`state0`变量。
- en: '[PRE14]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '[PRE15]'
  id: totrans-77
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '[PRE16]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 3.6 Predicting DAU
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.6 预测DAU
- en: The `predict_dau` function below accepts all the previous variables required
    for the DAU prediction and makes this prediction for a date range defined by the
    `start_date` and `end_date` arguments.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的`predict_dau`函数接受所有之前预测DAU所需的变量，并对由`start_date`和`end_date`参数定义的日期范围进行预测。
- en: '[PRE17]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-82
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: '![](../Images/70dcf535319cb880014b98b0a1834a4d.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70dcf535319cb880014b98b0a1834a4d.png)'
- en: This is how the DAU prediction `dau_pred` looks like for the `PREDICTION_START`
    - `PREDICTION_END` period. Besides the expected `dau`, `wau`, and `mau` columns,
    the output contains the number of users in each state for each prediction date.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是`PREDICTION_START` - `PREDICTION_END`期间DAU预测`dau_pred`的样子。除了预期的`dau`、`wau`和`mau`列，输出还包含每个预测日期每个状态下的用户数量。
- en: Finally, we calculate the ground-truth values of DAU, WAU, and MAU (along with
    the user state counts), keep them in the `dau_true` DataFrame, and plot the predicted
    and true values altogether.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们计算DAU、WAU和MAU的真实值（以及用户状态计数），将它们保存在`dau_true`数据框中，并将预测值和真实值一起绘制。
- en: '[PRE19]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: '![](../Images/09d316078e58553d6b7050786090ae89.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09d316078e58553d6b7050786090ae89.png)'
- en: '[PRE21]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/cabd39f402f83dcda0f85360a2c50474.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cabd39f402f83dcda0f85360a2c50474.png)'
- en: We’ve obtained the prediction but so far it’s not clear whether it’s fair or
    not. In the next section, we’ll evaluate the model.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经获得了预测结果，但到目前为止，尚不清楚它是否公正。在下一节中，我们将评估该模型。
- en: 4\. Model evaluation
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 模型评估
- en: 4.1 Baseline model
  id: totrans-93
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1 基准模型
- en: 'First of all, let’s check whether we really need to build a complex model to
    predict DAU. Wouldn’t it be better to predict DAU as a general time-series using
    the mentioned `prophet` library? The function `predict_dau_prophet` below implements
    this. We try to use some tweaks available in the library in order to make the
    prediction more accurate. In particular:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们检查是否真的需要建立一个复杂的模型来预测DAU。难道不应该通过提到的`prophet`库将DAU作为一般时间序列来进行预测吗？下面的`predict_dau_prophet`函数实现了这一点。我们尝试使用库中可用的一些调整，以使预测更准确。特别是：
- en: we use logistic model instead of linear to avoid negative values;
  id: totrans-95
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们使用逻辑回归模型而不是线性回归，以避免负值；
- en: we add explicitly monthly and yearly seasonality;
  id: totrans-96
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们明确添加了月度和年度季节性；
- en: we remove the outliers;
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们去除离群值；
- en: we explicitly define a peak period in January and February as “holidays”.
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们明确将1月和2月的高峰期定义为“假期”。
- en: '[PRE22]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: The fact that the code turns out to be quite sophisticated indicates that one
    can’t simply apply `prophet` to the DAU time-series.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 代码最终变得相当复杂，说明不能简单地将`prophet`应用于DAU时间序列。
- en: 'Hereafter we test a prediction for multiple predicting horizons: 3, 6, and
    12 months. As a result, we get 3 test sets:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们测试多个预测范围的预测结果：3个月、6个月和12个月。因此，我们得到3个测试集：
- en: '3-months horizon: `2023-08-01` - `2023-10-31`,'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 3个月预测周期：`2023-08-01` - `2023-10-31`，
- en: '6-months horizon: `2023-05-01` - `2023-10-31`,'
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 6个月预测周期：`2023-05-01` - `2023-10-31`，
- en: '1-year horizon: `2022-11-01` - `2023-10-31`.'
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 1年预测周期：`2022-11-01` - `2023-10-31`。
- en: For each test set we calculate the [MAPE](https://en.wikipedia.org/wiki/Mean_absolute_percentage_error)
    loss function.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个测试集，我们计算了[MAPE](https://en.wikipedia.org/wiki/Mean_absolute_percentage_error)损失函数。
- en: '[PRE23]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![](../Images/fde884739a1ba0e70bd009db56aaeda1.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fde884739a1ba0e70bd009db56aaeda1.png)'
- en: 'The MAPE error turns out to be high: 18% — 35%. The fact that the shortest
    horizon has the highest error means that the model is tuned for the long-term
    predictions. This is another inconvenience of such an approach: we have to tune
    the model for each prediction horizon. Anyway, this is our baseline. In the next
    section we’ll compare it with more advanced models.'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: MAPE误差较高：18% — 35%。最短的预测周期有最高的误差，意味着该模型主要是针对长期预测进行调优的。这是这种方法的另一个不便之处：我们必须针对每个预测周期来调整模型。不管怎样，这就是我们的基准。在下一部分，我们将与更先进的模型进行比较。
- en: 4.2 General evaluation
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2 一般评估
- en: 'In this section we evaluate the model implemented in the [Section 3.6](#5dc8).
    So far we set the transition period as 1 year before the prediction start. We’ll
    study how the prediction depends on the transition period in the [Section 4.3](#0637).
    As for the new users, we run the model using two options: the real values and
    the predicted ones. Similarly, we fix the same 3 prediction horizons and test
    the model on them.'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一部分，我们评估了[第3.6节](#5dc8)中实现的模型。目前我们将过渡期设置为预测开始前的一年。我们将在[第4.3节](#0637)中研究预测如何依赖于过渡期。至于新用户，我们使用两种选项运行模型：实际值和预测值。同样地，我们固定了3个预测周期，并在这些周期上测试模型。
- en: The `make_predicion` helper function below implements the described options.
    It accepts `prediction_start`, `prediction_end` arguments defining the prediction
    period for a given horizon, `new_users_mode` which can be either `true` or `predict`,
    and `transition_period`. The options of the latter argument will be explained
    further.
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 以下的`make_predicion`辅助函数实现了所描述的选项。它接受`prediction_start`和`prediction_end`参数，定义给定预测周期的开始和结束时间，`new_users_mode`可以是`true`或`predict`，以及`transition_period`。后者参数的选项将在后文进一步解释。
- en: '[PRE24]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'In total, we have 6 prediction scenarios: 2 options for new users and 3 prediction
    horizons. The diagram below illustrates the results. The charts on the left relate
    to the `new_users_mode = ''predict''` option, while the right ones relate to the
    `new_users_mode = ''true''` option.'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 总体来说，我们有6个预测场景：2个新用户选项和3个预测周期。下图展示了结果。左侧的图表与`new_users_mode = 'predict'`选项相关，而右侧的图表与`new_users_mode
    = 'true'`选项相关。
- en: '[PRE25]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![](../Images/d4b663fdf3b9e441c5f502857f49d6b7.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d4b663fdf3b9e441c5f502857f49d6b7.png)'
- en: 'And here are the MAPE values summarizing the prediction quality:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 这里是总结预测质量的MAPE值：
- en: '[PRE26]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](../Images/67d12d573e59424179102793f145476a.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67d12d573e59424179102793f145476a.png)'
- en: We notice multiple things.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们注意到了多个方面。
- en: In general, the model demonstrates much better results than the baseline. Indeed,
    the baseline is based on the historical DAU data only, while the model uses the
    user states information.
  id: totrans-120
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一般来说，模型表现出的结果比基准要好得多。实际上，基准模型仅基于历史的DAU数据，而模型则利用了用户状态信息。
- en: 'However, for the 1-year horizon and `new_users_mode=''predict''` the MAPE error
    is huge: 65%. This is 3 times higher than the corresponding baseline error (21%).
    On the other hand, `new_users_mode=''true''` option gives a much better result:
    8%. It means that the new users prediction has a huge impact on the model, especially
    for long-term predictions. For the shorter periods the difference is less dramatic.
    The major reason for such a difference is that 1-year period includes Christmas
    with its extreme values. As a result, i) it''s hard to predict such high new user
    values, ii) the period heavily impacts user behavior, the transition matrix and,
    consequently, DAU values. Hence, we strongly recommend to implement the new user
    prediction carefully. The baseline model was specially tuned for this Christmas
    period, so it''s not surprising that it outperforms the Markov model.'
  id: totrans-121
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然而，对于1年预测周期和`new_users_mode='predict'`，MAPE误差非常大：65%。这个值是相应基准误差（21%）的3倍。另一方面，`new_users_mode='true'`选项提供了一个更好的结果：8%。这意味着新用户预测对模型有着巨大的影响，特别是在长期预测中。对于较短的周期，这个差异则不那么明显。造成这种差异的主要原因是1年周期包括了圣诞节这一极端值。因此，i)
    很难预测如此高的新用户值，ii) 这个周期对用户行为、过渡矩阵以及DAU值有着重大影响。因此，我们强烈建议谨慎地实现新用户预测。基准模型专门为圣诞节期间进行了调整，因此它超越了马尔可夫模型也就不足为奇了。
- en: When the new users prediction is accurate, the model captures trends well. It
    means that using last 365 days for the transition matrix calculation is a reasonable
    choice.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当新用户预测准确时，模型能够很好地捕捉到趋势。这意味着使用过去365天的数据来计算转移矩阵是一个合理的选择。
- en: Interestingly, the true new users data provides worse results for the 3-months
    prediction. This is nothing but a coincidence. The wrong new users prediction
    in October 2023 reversed the predicted DAU trend and made MAPE a bit lower.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 有趣的是，真实的新用户数据对于3个月的预测结果更差。这纯粹是巧合。2023年10月错误的新用户预测逆转了预测的DAU趋势，并使得MAPE略有下降。
- en: Now, let’s decompose the prediction error and see which states contribure the
    most. By error we mean here `dau_pred` - `dau_true` values, by relative error
    - ( `dau_pred` - `dau_true`) / `dau_true` - see left and right diagrams below
    correspondingly. In order to focus on this aspect, we'll narrow the configuration
    to the 3-months prediction horizon and the `new_users_mode='true'` option.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们分解预测误差，看看哪些状态贡献最大。这里的误差指的是`dau_pred` - `dau_true`的值，相对误差指的是（`dau_pred`
    - `dau_true`）/ `dau_true`，对应的左侧和右侧图表如下所示。为了聚焦于这一方面，我们将配置范围缩小到三个月的预测期以及`new_users_mode='true'`选项。
- en: '[PRE27]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: '![](../Images/bf9cbc3945f5e93adb2b3bd873e2df2a.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bf9cbc3945f5e93adb2b3bd873e2df2a.png)'
- en: From the left chart we notice that the error is basically contributed by the
    `current` state. It's not surprising since this state contributes to DAU the most.
    The error for the `reactivated`, and `resurrected` states is quite low. Another
    interesting thing is that this error is mostly negative for the `current` state
    and mostly positive for the `resurrected` state. The former might be explained
    by the fact that the new users who appeared in the prediction period are more
    engaged that the users from the past. The latter indicates that the `resurrected`
    users in reality contribute to DAU less than the transition matrix expects, so
    the `dormant`→ `resurrected` conversion rate is overestimated.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 从左侧图表中我们可以看到，误差主要由`current`状态贡献。这并不令人惊讶，因为这个状态对DAU的贡献最大。`reactivated`和`resurrected`状态的误差较低。另一个有趣的现象是，`current`状态的误差大多为负值，而`resurrected`状态的误差大多为正值。前者可能是由于在预测期内出现的新用户比过去的用户更加活跃。后者则表明，`resurrected`用户实际上对DAU的贡献低于转移矩阵的预期，因此`dormant`→`resurrected`的转化率被高估了。
- en: As for the relative error, it makes sense to analyze it for the `current` state
    only. This is because the daily amount of the reactivated and resurrected states
    are low so the relative error is high and noisy. The relative error for the `current`
    state varies between -25% and 4% which is quite high. And since we've fixed the
    new users prediction, this error is explained by the transition matrix inaccuracy
    only. In particular, the `current`→ `current` conversion rate is roughly 0.8 which
    is high and, as a result, it contributes to the error a lot. So if we want to
    improve the prediction we need to consider tuning this conversion rate foremost.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 至于相对误差，分析`current`状态的误差是有意义的。因为`reactivated`和`resurrected`状态的日活跃用户数量较少，所以相对误差较大且噪声较多。`current`状态的相对误差介于-25%到4%之间，这个范围相当大。由于我们已经固定了新用户的预测，这个误差只能用转移矩阵的不准确性来解释。特别是，`current`→`current`的转化率大致为0.8，这个值较高，因此它对误差贡献很大。所以如果我们想改善预测，首先需要考虑调整这一转化率。
- en: 4.3 Transitions period impact
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.3 转移期的影响
- en: 'In the previous section we kept the transitions period fixed: 1 year before
    a prediction start. Now we’re going to study how long this period should be to
    get more accurate prediction. We consider the same prediction horizons of 3, 6,
    and 12 months. In order to mitigate the noise from the new users prediction, we
    use the real values of the new users amount: `new_users_mode=''true''`.'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一节中，我们固定了转移期：预测开始前1年。现在我们将研究为了获得更准确的预测，这一时期应该多长。我们考虑相同的预测期：3个月、6个月和12个月。为了减少新用户预测的噪声，我们使用新用户数量的实际值：`new_users_mode='true'`。
- en: Here comes varying of the `transition_period` argument. Its values are masked
    with the `last_<N>d` pattern where `N` stands for the number of days in a transitions
    period. For each prediction horizon we calculate 12 different transition periods
    of 1, 2, ..., 12 months. Then we calculate the MAPE error for each of the options
    and plot the results.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 这里介绍了`transition_period`参数的变化。其值通过`last_<N>d`模式进行遮掩，其中`N`表示转移期的天数。对于每个预测期，我们计算了12个不同的转移期，分别为1个月、2个月、...、12个月。然后我们为每个选项计算MAPE误差并绘制结果。
- en: '[PRE28]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE28]'
- en: '![](../Images/011526da7ab75ad565b95a1720864d1e.png)'
  id: totrans-133
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/011526da7ab75ad565b95a1720864d1e.png)'
- en: 'It turns out that the optimal transitions period depends on the prediction
    horizon. Shorter horizons require shorter transitions periods: the minimal MAPE
    error is achieved at 1, 4, and 8 transition periods for the 3, 6, and 12 months
    correspondingly. Apparently, this is because the longer horizons contain some
    seasonal effects that could be captured only by the longer transitions periods.
    Also, it seems that for the longer prediction horizons the MAPE curve is U-shaped
    meaning that too long and too short transitions periods are both not good for
    the prediction. We’ll develop this idea in the next section.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 结果表明，最佳的转移期长度取决于预测范围。较短的预测期需要较短的转移期：对于3、6和12个月的预测，最小的MAPE误差分别出现在1、4和8个转移期。这显然是因为较长的预测期包含了一些只有通过较长转移期才能捕捉到的季节性效应。此外，似乎对于较长的预测期，MAPE曲线呈U形，这意味着过长或过短的转移期都不利于预测。我们将在下一节展开讨论这个想法。
- en: 4.4 Obsolence and seasonality
  id: totrans-135
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.4 过时性与季节性
- en: 'Nevertheless, fixing a single transition matrix for predicting the whole year
    ahead doesn’t seem to be a good idea: such a model would be too rigid. Usually,
    user behavior varies depending on a season. For example, users who appear after
    Christmas might have some shifts in behavior. Another typical situation is when
    users change their behavior in summer. In this section, we’ll try to take into
    account these seasonal effects.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，固定一个单一的转移矩阵来预测整个未来一年的情况似乎并不是一个好主意：这样的模型过于僵化。通常，用户行为会根据季节变化。例如，在圣诞节后出现的用户可能会有行为上的变化。另一个典型的情况是用户在夏季改变他们的行为。在本节中，我们将尝试考虑这些季节性效应。
- en: So we want to predict DAU for 1 year ahead starting from November 2022\. Instead
    of using a single transition matrix `M_base` which is calculated for the last
    8 months before the prediction start, according to the previous subsection results
    (and labeled as the `last_240d` option below), we'll consider a mixture of this
    matrix and a seasonal one `M_seasonal`. The latter is calculated on monthly basis
    lagging 1 year behind. For example, to predict DAU for November 2022 we define
    `M_seasonal` as the transition matrix for November 2021\. Then we shift the prediction
    horizon to December 2022 and calculate `M_seasonal` for December 2021, etc.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们希望预测从2022年11月开始的未来1年内的日活跃用户数（DAU）。我们不再仅使用一个计算自预测开始前8个月的单一转移矩阵`M_base`，而是根据上一小节的结果（并在下面标记为`last_240d`选项），将这个矩阵与一个季节性矩阵`M_seasonal`结合使用。后者是按月计算的，滞后1年。例如，为了预测2022年11月的DAU，我们将`M_seasonal`定义为2021年11月的转移矩阵。然后，我们将预测的时间范围转移到2022年12月，并计算2021年12月的`M_seasonal`，以此类推。
- en: In order to mix `M_base` and `M_seasonal` we define the following two options.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 为了混合`M_base`和`M_seasonal`，我们定义了以下两个选项。
- en: '`seasonal_0.3`: M = 0.3 * `M_seasonal` + 0.7 * `M_base`. 0.3 is a weight that
    was chosen as a local minimum after some experiments.'
  id: totrans-139
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`seasonal_0.3`：M = 0.3 * `M_seasonal` + 0.7 * `M_base`。0.3是经过一些实验后选择的局部最小值的权重。'
- en: '`smoothing`: M = i/(N-1) * `M_seasonal` + (1 - i/(N - 1)) * `M_base` where
    N is the number of months within the predicting period, i = 0, …, N - 1 - the
    month index. The idea of this configuration is to gradually switch from the most
    recent transition matrix `M_base` to seasonal ones as the prediction month moves
    forward from the prediction start.'
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`smoothing`：M = i/(N-1) * `M_seasonal` + (1 - i/(N - 1)) * `M_base`，其中N是预测期内的月份数，i
    = 0, …, N - 1是月份索引。这个配置的想法是随着预测月份的推进，从最新的转移矩阵`M_base`逐渐切换到季节性矩阵。'
- en: '[PRE29]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE29]'
- en: '![](../Images/6fda5e3857f98bc9a778ca757cc1d48d.png)'
  id: totrans-142
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6fda5e3857f98bc9a778ca757cc1d48d.png)'
- en: '[PRE30]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE30]'
- en: '![](../Images/e4f9865ed7eb29fbb478d7f4fd129e02.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4f9865ed7eb29fbb478d7f4fd129e02.png)'
- en: According to the MAPE errors, `seasonal_0.3` configuration provides the best
    results. Interestingly, `smoothing` approach has appeared to be even worse than
    the `last_240d`. From the diagram above we see that all three models start to
    underestimate the DAU values in July 2023, especially the `smoothing` model. It
    seems that the new users who started appearing in July 2023 are more engaged than
    the users from 2022\. Probably, the app was improved sufficiently or the marketing
    team did a great job. As a result, the `smoothing` model that much relies on the
    outdated transitions data from July 2022 - October 2022 fails more than the other
    models.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 根据 MAPE 错误，`seasonal_0.3` 配置提供了最佳结果。有趣的是，`smoothing` 方法比 `last_240d` 更差。从上面的图表可以看出，所有三个模型从
    2023 年 7 月开始都低估了 DAU 的值，尤其是 `smoothing` 模型。看起来从 2023 年 7 月开始出现的新用户比 2022 年的用户更活跃。可能是应用程序得到了足够的改善，或者市场团队做得很出色。结果，`smoothing`
    模型过度依赖 2022 年 7 月至 10 月的过时过渡数据，表现得比其他模型更差。
- en: 4.5 Final solution
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.5 最终解决方案
- en: To sum things up, let’s make a final prediction for the 2024 year. We use the
    `seasonal_0.3` configuration and the predicted values for new users.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 总结一下，让我们对 2024 年做一个最终的预测。我们使用 `seasonal_0.3` 配置和新用户的预测值。
- en: '[PRE31]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE31]'
- en: '![](../Images/3a5bc393283104377c72bb28ccdbc8d7.png)'
  id: totrans-149
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a5bc393283104377c72bb28ccdbc8d7.png)'
- en: 5\. Discussion
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5. 讨论
- en: In the [Section 4](#1375) we studied the model performance from the prediction
    accuracy perspective. Now let’s discuss the model from the practical point of
    view.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 在[第 4 节](#1375)中，我们从预测准确性角度研究了模型的表现。现在让我们从实际角度讨论该模型。
- en: Besides poor accuracy, predicting DAU as a time-series (see the [Section 4.1](#0e38))
    makes this approach very stiff. Essentially, it makes a prediction in such a manner
    so it would fit *historical* data best. In practice, when making plans for a next
    year we usually have some certain expectations about the future. For example,
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 除了准确性差之外，将 DAU 作为时间序列进行预测（参见[第 4.1 节](#0e38)）使得这种方法非常僵化。本质上，它以一种方式做出预测，使得它最能拟合*历史*数据。实际上，在为来年做规划时，我们通常对未来有一些明确的预期。例如，
- en: the marketing team is going to launch some new more effective campaings,
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 市场团队将推出一些更有效的新营销活动，
- en: the activation team is planning to improve the onboarding process,
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 激活团队计划改进用户引导流程，
- en: the product team will release some new features that would engage and retain
    users more.
  id: totrans-155
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 产品团队将发布一些新功能，以更好地吸引和留住用户。
- en: Our model can take into account such expectations. For the examples above we
    can adjust the new users prediction, the `new`→ `current` and the `current`→ `current`
    conversion rates respectively. As a result, we can get a prediction that doesn't
    match with the historical data but nevertheless would be more realistic. This
    model's property is not just flexible - it's interpretable. You can easily discuss
    all these adjustments with the stakeholders, and they can understand how the prediction
    works.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的模型可以考虑到这些预期。对于上述示例，我们可以分别调整新用户的预测、`new`→ `current` 和 `current`→ `current`
    的转化率。结果，我们可以得到一个与历史数据不完全匹配但更为现实的预测。该模型的特点不仅仅是灵活——它是可解释的。你可以轻松地与利益相关者讨论这些调整，他们也能理解预测是如何工作的。
- en: 'Another advantage of the model is that it doesn’t require predicting whether
    a certain user will be active on a certain day. Sometimes binary classifiers are
    used for this purpose. The downside of this approach is that we need to apply
    such a classifier to each user including all the dormant users and each day from
    a prediction horizon. This is a tremedous computational cost. In contrast, the
    Markov model requires only the initial amount of states ( `state0`). Moreover,
    such classiffiers are often black-box models: they are poorly interpretable and
    hard to adjust.'
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型的另一个优点是它不需要预测某个用户在某一天是否会活跃。有时，二分类器会被用于这个目的。这种方法的缺点是我们需要对每个用户（包括所有休眠用户）以及预测时间范围内的每一天应用这样的分类器。这是一个巨大的计算开销。相比之下，马尔可夫模型只需要初始状态量（`state0`）。此外，这类分类器通常是黑箱模型：它们难以解释且难以调整。
- en: 'The Markov model also has some limitations. As we already have seen, it’s sensitive
    to the new users prediction. It’s easy to totally ruin the prediction by a wrong
    new users amount. Another problem is that the Markov model is memoryless meaning
    that it doesn’t take into account the user’s history. For example, it doesn’t
    distinguish whether a `current` user is a newbie, experienced, or `reactivated`/
    `resurrected` one. The retention rate of these user types should be certainly
    different. Also, as we discussed earlier, the user behavior might be of different
    nature depending on the season, marketing sources, countries, etc. So far our
    model is not able to capture these differences. However, this might be a subject
    for further research: we could extend the model by fitting more transition matrices
    for different user segments.'
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 马尔可夫模型也有一些局限性。正如我们已经看到的，它对新用户的预测非常敏感。一个错误的新用户数量可能会完全破坏预测结果。另一个问题是，马尔可夫模型是“无记忆”的，意味着它没有考虑用户的历史。例如，它不能区分一个`当前`用户是新手、老手，还是`重新激活`/`复活`的用户。这些用户类型的留存率显然应该不同。此外，正如我们之前讨论的，用户行为可能会因季节、营销来源、国家等因素而有所不同。到目前为止，我们的模型还无法捕捉到这些差异。然而，这可能是进一步研究的一个课题：我们可以通过为不同的用户群体拟合更多的转移矩阵来扩展该模型。
- en: Finally, as we promised in the introduction, we provide a [DAU spreadsheet calculator](https://docs.google.com/spreadsheets/d/1DxbjrkSy_wvU1lzlNWhrEfWO-Kq1tJrQw0izEHu5ULU/edit?usp=sharing).
    In the `Prediction` sheet you'll need to fill the initial states distribution
    row (marked with blue) and the new users prediction column (marked with purple).
    In the `Conversions` sheet you can adjust the transition matrix values. Remember
    that the sum of each row of the matrix should be equal to 1.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，正如我们在导言中承诺的，我们提供了一个[DAU电子表格计算器](https://docs.google.com/spreadsheets/d/1DxbjrkSy_wvU1lzlNWhrEfWO-Kq1tJrQw0izEHu5ULU/edit?usp=sharing)。在`Prediction`工作表中，你需要填写初始状态分布行（标记为蓝色）和新用户预测列（标记为紫色）。在`Conversions`工作表中，你可以调整转移矩阵的值。请记住，矩阵的每一行的总和应等于1。
- en: '![](../Images/2cf0749a67ff0865d79889e8e41789ef.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cf0749a67ff0865d79889e8e41789ef.png)'
- en: That’s all for now. I hope that this article was useful for you. In case of
    any questions or suggestions, feel free to ask in the comments below or contact
    me directly on [LinkedIn](https://www.linkedin.com/in/vladimir-kukushkin-95b6487/).
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 暂时就这些。我希望这篇文章对你有所帮助。如果你有任何问题或建议，欢迎在下面的评论区提问，或者通过[LinkedIn](https://www.linkedin.com/in/vladimir-kukushkin-95b6487/)直接联系我。
- en: All the images in the post are generated by the author.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 本文中的所有图片均由作者生成。
