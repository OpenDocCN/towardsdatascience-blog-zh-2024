- en: Creating a Better Dashboard — Myth or Reality?
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个更好的仪表板——神话还是现实？
- en: 原文：[https://towardsdatascience.com/creating-a-better-dashboard-myth-or-reality-3d355b03e52c?source=collection_archive---------2-----------------------#2024-02-17](https://towardsdatascience.com/creating-a-better-dashboard-myth-or-reality-3d355b03e52c?source=collection_archive---------2-----------------------#2024-02-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/creating-a-better-dashboard-myth-or-reality-3d355b03e52c?source=collection_archive---------2-----------------------#2024-02-17](https://towardsdatascience.com/creating-a-better-dashboard-myth-or-reality-3d355b03e52c?source=collection_archive---------2-----------------------#2024-02-17)
- en: '![](../Images/2b09fa069ec35f8a21dd1160b25338d0.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2b09fa069ec35f8a21dd1160b25338d0.png)'
- en: Photo by [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 由 [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=medium&utm_medium=referral)
    提供的照片，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: My beta version 2.0 built using Dash & Plotly instead of Matplotlib
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我的2.0版本Beta版使用Dash和Plotly构建，而不是Matplotlib
- en: '[](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)[![Radmila
    M.](../Images/f3722a0ca0c96b5f6abb8f23a1162488.png)](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)
    [Radmila M.](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)[![Radmila
    M.](../Images/f3722a0ca0c96b5f6abb8f23a1162488.png)](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)
    [Radmila M.](https://radmilamandzhi.medium.com/?source=post_page---byline--3d355b03e52c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)
    ·9 min read·Feb 17, 2024
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3d355b03e52c--------------------------------)
    ·9分钟阅读·2024年2月17日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'In February 2023 I wrote my first Medium post:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 2023年2月，我写了我的第一篇Medium文章：
- en: '[](https://medium.com/geekculture/how-to-customize-infographics-in-python-tips-and-tricks-e1818aac180f?source=post_page-----3d355b03e52c--------------------------------)
    [## How to Customize Infographics in Python: Tips and Tricks'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/geekculture/how-to-customize-infographics-in-python-tips-and-tricks-e1818aac180f?source=post_page-----3d355b03e52c--------------------------------)
    [## 如何在Python中自定义信息图表：技巧与窍门'
- en: ABC of making charts in Matplotlib
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在Matplotlib中绘制图表的ABC
- en: medium.com](https://medium.com/geekculture/how-to-customize-infographics-in-python-tips-and-tricks-e1818aac180f?source=post_page-----3d355b03e52c--------------------------------)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/geekculture/how-to-customize-infographics-in-python-tips-and-tricks-e1818aac180f?source=post_page-----3d355b03e52c--------------------------------)
- en: Here I explained how to create a simplified dashboard with various diagrams,
    including a line plot, pie & bar charts, and a choropleth map. For plotting them
    I used ‘good old’ Matplotlib [1], because I was familiar with its keywords and
    main functions. I still believe that Matplotlib is a great library for starting
    your data journey with Python, as there is a very large collective knowledge base.
    If something is unclear with Matplotlib, you can google your queries and most
    likely you will get answers.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我解释了如何使用各种图表创建一个简化的仪表板，包括折线图、饼图和条形图，以及一张分布图。为了绘制这些图表，我使用了“老朋友”Matplotlib
    [1]，因为我熟悉它的关键字和主要函数。我仍然认为，Matplotlib是开始Python数据之旅的一个伟大库，因为它有一个庞大的集体知识库。如果你在使用Matplotlib时遇到不清楚的地方，可以谷歌你的问题，很可能会找到答案。
- en: However, Matplotlib may encounter some difficulties when creating interactive
    and web-based visualizations. For the latter purpose, Plotly [2] can be a good
    alternative, allowing you to create unusual interactive dashboards. Matplotlib,
    on the other hand, is a powerful library that offers better control over plot
    customization, which is good for creating publish-ready visualizations.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，Matplotlib在创建交互式和基于网页的可视化时可能会遇到一些困难。对于后者，Plotly [2] 可以是一个不错的替代方案，它允许你创建不寻常的交互式仪表板。另一方面，Matplotlib是一个功能强大的库，提供了更好的绘图定制控制，适合用于创建发布级别的可视化。
- en: In this post, I will try to substitute **code which uses Matlab** (1) with **that
    based on Plotly** (2). The structure will repeat the initial post, because the
    types of plots and input data [3] are the same. However, here I will add some
    comments on level of similarity between (1) and (2) for each type of plots. My
    main intention of writing this article is to look back to my first post and try
    to remake it with my current level of knowledge.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将尝试用**基于 Plotly 的代码**（2）替代**使用 Matlab 的代码**（1）。结构将重复初始的文章，因为图表类型和输入数据[3]是相同的。然而，在这里我将为每种图表类型添加一些关于（1）和（2）相似程度的评论。我写这篇文章的主要目的是回顾我的第一篇文章，并尝试用我当前的知识水平重新制作它。
- en: '**Note:** You will be surprised how short the Plotly code is that’s required
    for building the choropleth map :)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 你会惊讶于构建 choropleth 地图所需的 Plotly 代码是多么简短 :)'
- en: But first things first, and we will start by creating a line graph in Plotly.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 但让我们从最基本的开始，我们将首先创建一个 Plotly 线图。
- en: '#1\. Line Plot'
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#1. 线图'
- en: The line plot can be a wise choice for displaying the dynamics of changing our
    data with time. In the case below we will combine a line plot with a scatter plot
    to mark each location with its own color.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 线图可以是展示我们数据随时间变化动态的明智选择。在下面的例子中，我们将把线图与散点图结合，使用不同的颜色标记每个位置。
- en: 'Below you can find a code snippet using Plotly that produces a line chart showing
    the average attendance at the FIFA World Cup over the period 1990–2018: each value
    is marked with a label and a colored scatter point.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是使用 Plotly 的代码片段，生成一张显示 1990–2018 年间 FIFA 世界杯平均观众人数的折线图：每个值都标有标签并附有一个彩色散点。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And the result looks as follows:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 结果如下所示：
- en: '![](../Images/ebd64c831277ebf8c188774261ffe38e.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ebd64c831277ebf8c188774261ffe38e.png)'
- en: Line plot built with Plotly. Image by Author.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 构建的线图。图片来自作者。
- en: When you hover your mouse over any point of the chart in Plotly, a window pops
    up showing the number of spectators and the name of the country where the tournament
    was held.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 当你将鼠标悬停在 Plotly 图表中的任何点上时，一个窗口会弹出，显示该点的观众人数以及举办比赛的国家名称。
- en: '**Level of similarity to Matplotlib plot:** 8 out of 10.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**与 Matplotlib 图表的相似度：** 8 分（满分 10 分）。'
- en: In general, the code looks very similar to the initial snippet in terms of structure
    and the placement of the main code blocks inside it.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，代码在结构和主要代码块的放置上与初始代码片段非常相似。
- en: '**What is different:** However, some differences are also presented. For instance,
    pay attention to details how plot elements are declared (e.g. a line plot mode
    `lines+markers` which allows to display them simultaneously).'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**不同之处：** 然而，也有一些差异。例如，请注意如何声明图表元素的细节（例如，线图模式 `lines+markers`，它可以同时显示线条和标记）。'
- en: '**What is important:** For building this plot I use the `plotly.graph_objects`
    (which is imported as `go`) module. It provides an automatically-generated hierarchy
    of classes called ‘graph objects’ that may be used to represent various figures.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要：** 构建此图表时，我使用了 `plotly.graph_objects`（导入时命名为 `go`）模块。它提供了一个自动生成的类层级结构，称为“图形对象”，可以用来表示各种图形。'
- en: '#2\. Pie Chart (actually, a donut chart)'
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#2. 饼图（实际上是一个甜甜圈图）'
- en: 'Pie & donut charts are very good for demonstrating the contributions of different
    values to a total amount: they are divided in segments, which show the proportional
    value of each piece of our data.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 饼图和甜甜圈图非常适合展示不同数值对总量的贡献：它们被分为若干段，每段显示数据中每个部分的比例值。
- en: Here is a code snippet in Plotly that is used to build a pie chart which would
    display the proportion between the countries with the most World Cup titles.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个使用 Plotly 构建饼图的代码片段，显示各国世界杯冠军头衔的比例。
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The resulting visual item is given below (by the way, it is an interactive
    chart too!):'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 下面给出了最终的可视化项（顺便说一下，它也是一个互动图表！）：
- en: '![](../Images/78a806740ccdd823e9d94be75762aeff.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/78a806740ccdd823e9d94be75762aeff.png)'
- en: Pie chart built with Plotly. Image by Author.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 构建的饼图。图片来自作者。
- en: '**Level of similarity to Matplotlib plot:** 7 out of 10\. Again the code logic
    is almost the same for the two versions.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**与 Matplotlib 图表的相似度：** 7 分（满分 10 分）。再次强调，这两个版本的代码逻辑几乎相同。'
- en: '**What is different:** One might notice that with a help of `hole` keyword
    it is possible to turn a pie chart into a donut chart. And see how easy and simple
    it is to display percentages for each segment of the chart in Plotly compared
    to Matplotlib.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**不同之处：** 你可能会注意到，借助 `hole` 关键字，可以将饼图转变为甜甜圈图。并且，看看在 Plotly 中显示每个图表片段百分比是如何比
    Matplotlib 更加简单直观。'
- en: '**What is important:** Instead of using `plotly.graph_objects` module, here
    I apply `plotly.express` module (usually imported as `px`) containing functions
    that can create entire figures at once. This is the easy-to-use Plotly interface,
    which operates on a variety of types of data.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要事项：** 我没有使用 `plotly.graph_objects` 模块，而是使用了 `plotly.express` 模块（通常导入为 `px`），该模块包含可以一次性创建完整图形的函数。这是一个易于使用的
    Plotly 接口，适用于各种数据类型。'
- en: '#3\. Bar Chart'
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#3\. 条形图'
- en: Bar charts, no matter whether they are vertical or horizontal, show comparisons
    among different categories. The vertical axis (‘Stadium’) of the chart shows the
    specific categories being compared, and the horizontal axis represents a measured
    value, i.e. the ‘Capacity’itself.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 条形图，无论是垂直的还是水平的，都用于显示不同类别之间的比较。图表的垂直轴（‘Stadium’）表示被比较的具体类别，而水平轴表示测量值，即‘容量’本身。
- en: '[PRE2]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/86073cfb93a505f1e64359d6019d7bab.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/86073cfb93a505f1e64359d6019d7bab.png)'
- en: Horizontal bar chart built with Plotly. Image by Author.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 构建的水平条形图。图片由作者提供。
- en: '**Level of similarity to Matplotlib plot:** 6 out of 10.'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**与 Matplotlib 图的相似度：** 6 分（满分 10 分）。'
- en: All in all, the two code pieces have more or less the same blocks, but the code
    in Plotly is shorter.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 总的来说，两个代码片段大致相同，但 Plotly 代码更简洁。
- en: '**What is different:** The code fragment in Plotly is shorter because we don’t
    have to include a paragraph to place labels for each column — Plotly does this
    automatically thanks to its interactivity.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**不同之处：** Plotly 中的代码片段更简短，因为我们不需要写代码来为每个列添加标签——Plotly 会自动完成这一任务，得益于其交互性。'
- en: '**What is important:** For building this type of plot, `plotly.express` module
    was also used. For a horizontal bar char, we can use the `px.bar` function with
    `orientation=’h’`.'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要事项：** 在构建这种类型的图时，还使用了 `plotly.express` 模块。对于水平条形图，我们可以使用 `px.bar` 函数，并设置
    `orientation=''h''`。'
- en: '#4\. Choropleth Map'
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '#4\. 分级图'
- en: Choropleth map is a great tool for visualizing how a variable varies across
    a geographic area. A heat map is similar, but uses regions drawn according to
    a variable’s pattern rather than geographic areas as choropleth maps do.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**分级图**是一种非常适合可视化变量在地理区域内变化的工具。热力图与其相似，但热力图是根据变量模式划定的区域，而不是像分级图那样基于地理区域。'
- en: Below you can see the Plotly code to draw the chorogram. Here each country gets
    its color depending on the frequency how often it holds the FIFA World Cup. Dark
    red countries hosted the tournament 2 times, light red countries — 1, and all
    others (gray) — 0.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 下面你可以看到用于绘制分级图的 Plotly 代码。这里每个国家根据其举办 FIFA 世界杯的频率获得不同的颜色。深红色的国家举办了 2 次比赛，浅红色的国家举办了
    1 次，其他所有国家（灰色）则没有举办过。
- en: '[PRE3]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/368ffd2d6e5bf5dd497e0fd844931940.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/368ffd2d6e5bf5dd497e0fd844931940.png)'
- en: Choropleth map built with Plotly. Image by Author.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Plotly 构建的分级图。图片由作者提供。
- en: '**Level of similarity to Matplotlib plot:** 4 out of 10.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '**与 Matplotlib 图的相似度：** 4 分（满分 10 分）。'
- en: The code in Plotly is three times smaller than the code in Matplotlib.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: Plotly 中的代码比 Matplotlib 中的代码小三倍。
- en: '**What is different:** While using Matplotlib to build a choropleth map, we
    have to do a lot of additional staff, e.g.:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**不同之处：** 在使用 Matplotlib 构建分级图时，我们需要做很多额外的工作，例如：'
- en: to download a zip-folder `ne_110m_admin_0_countries.zip` with shapefiles to
    draw the map itself and to draw country boundaries, grid lines, etc.;
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 下载包含形状文件的压缩文件 `ne_110m_admin_0_countries.zip`，以绘制地图本身并显示国家边界、网格线等；
- en: to import `Basemap`, `Polygon` and `PatchCollection` items from `mpl_toolkits.basemap`
    and `matplotlib.patches` and `matplotlib.collections` libraries and to use them
    to make colored background based on the logic we suggested in `data_football.csv`
    file.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从 `mpl_toolkits.basemap` 和 `matplotlib.patches`、`matplotlib.collections` 库中导入
    `Basemap`、`Polygon` 和 `PatchCollection` 元素，并使用它们根据我们在 `data_football.csv` 文件中建议的逻辑绘制有色背景。
- en: '**What is important:** And what is the Plotly do? It takes the same `data_football.csv`
    file and with a help of the `px.choropleth` function displays data that is aggregated
    across different map regions or countries. Each of them is colored according to
    the value of a specific information given, in our case this is the `count` variable
    in the input file.'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**重要事项：** 那么 Plotly 是如何做的呢？它使用相同的 `data_football.csv` 文件，并借助 `px.choropleth`
    函数显示跨不同地图区域或国家的聚合数据。每个区域的颜色由特定信息的值决定，在我们的例子中是输入文件中的 `count` 变量。'
- en: As you can see, all Plotly codes are shorter (or the same in a case of building
    the line plot) than those in Matplotlib. This is achieved because Plotly makes
    it far easy to create complex plots. Plotly is great for creating interactive
    visualizations with just a few lines of code.
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 如你所见，所有 Plotly 代码比 Matplotlib 中的代码更简洁（或者在构建折线图时相同）。这是因为 Plotly 使得创建复杂图表变得更容易。Plotly
    非常适合用几行代码创建交互式可视化。
- en: 'Sum Up: Creating a Single Dashboard with Dash'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结：使用 Dash 创建单个仪表盘
- en: Dash allows to build an interactive dashboard on a base of Python code with
    no need to learn complex JavaScript frameworks like `React.js`.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Dash 允许在 Python 代码的基础上构建交互式仪表盘，而无需学习复杂的 JavaScript 框架，如 `React.js`。
- en: 'Here you can find the code and comments to its important parts:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这里你可以找到代码及其重要部分的注释：
- en: '[PRE4]'
  id: totrans-65
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Comments to the code:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 代码注释：
- en: First, we need to import all libraries (including HTML modules) and initialize
    dashboard with a help of the string `app = dash.Dash(__name__, external_stylesheets=external_stylesheets)`.
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，我们需要导入所有的库（包括 HTML 模块），并借助字符串 `app = dash.Dash(__name__, external_stylesheets=external_stylesheets)`
    初始化仪表盘。
- en: We then paste each graph into Dash core components to further integrate them
    with other HTML components (`dcc.Graph`). Here `className=”six columns”` needs
    to use half the screen for each row of plots.
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们将每个图形粘贴到 Dash 核心组件中，进一步将它们与其他 HTML 组件（`dcc.Graph`）集成。在这里，`className="six
    columns"` 需要为每行的图表占据屏幕的一半。
- en: After that we create 2 rows of `html.Div` components with 2 plots in each. In
    addition, a simple CSS with the `style` attribute can be used to display the header
    of our dashboard in the `layout` string. This layout is set as the layout of the
    app initialized before.
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 然后，我们创建 2 行 `html.Div` 组件，每行包含 2 个图表。此外，可以使用带有 `style` 属性的简单 CSS 来显示仪表盘的标题，并将其放入
    `layout` 字符串中。此布局被设置为之前初始化的应用布局。
- en: Finally, the last paragraph allows to run the app locally (`app.run_server(debug=False)`).
    To see the dashboard, just follow the link [http://127.0.0.1:8050/](http://127.0.0.1:8050/)
    and you will find something like the image below.
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，最后一段代码允许在本地运行应用（`app.run_server(debug=False)`）。要查看仪表盘，只需点击链接 [http://127.0.0.1:8050/](http://127.0.0.1:8050/)，你会看到如下图所示的界面。
- en: '![](../Images/01ebaa70f9ad2d6dc3768e593faad6a3.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/01ebaa70f9ad2d6dc3768e593faad6a3.png)'
- en: The final dashboard built with Dash. Image by Author.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Dash 构建的最终仪表盘。图片来源：作者。
- en: Final Remarks
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后说明
- en: Honestly, the question in the title was rhetorical, and only you, dear reader,
    can decide whether the current version of the dashboard is better than the previous
    one. But at least I tried my best (and deep inside I believe that version 2.0
    is better) :)
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，标题中的问题是修辞性的，只有你，亲爱的读者，才能决定当前版本的仪表盘是否比以前的版本更好。但至少我尽力了（而且内心深处我相信 2.0 版本更好）:)
- en: You may think that this post doesn’t contain any new information, but I couldn’t
    disagree more. By writing this post, I wanted to emphasize the importance of improving
    skills over time, even if the first version of the code may not look that bad.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能认为这篇文章没有包含任何新信息，但我完全不同意。通过写这篇文章，我想强调随着时间推移提升技能的重要性，即使代码的第一个版本看起来并不差。
- en: I hope this post encourages you to look at your finished projects and try to
    remake them using the new techniques available. That is the main reason why I
    decided to substitute Matplotlib with Plotly & Dash(plus the latter two make it
    easy to create data analysis results).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望这篇文章能鼓励你回顾已完成的项目，并尝试使用新技术重新制作它们。这也是我决定用 Plotly 和 Dash 替代 Matplotlib 的主要原因（此外，后两者使得创建数据分析结果变得更加容易）。
- en: The ability to constantly improve your work by improving an old version or using
    new libraries instead of the ones you used before is a great skill for any programmer.
    If you take this advice as a habit, you will see progress, because only practice
    makes perfect.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 通过改进旧版本或使用新的库而不是以前使用的库来不断提升工作能力，是任何程序员的伟大技能。如果你将这个建议作为习惯，你会看到进步，因为只有实践才能成就完美。
- en: And as always, thanks for reading!
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 一如既往，谢谢阅读！
- en: References
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'The main page of Matplotlib library: [https://matplotlib.org/stable/](https://matplotlib.org/stable/)'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Matplotlib 库的主页：[https://matplotlib.org/stable/](https://matplotlib.org/stable/)
- en: 'The main page of Plotly library: [https://plotly.com/python/](https://plotly.com/python/)'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Plotly 库的主页：[https://plotly.com/python/](https://plotly.com/python/)
- en: Fjelstul, Joshua C. “The Fjelstul World Cup Database v.1.0.” July 8, 2022\.
    [https://www.github.com/jfjelstul/worldcup](https://www.github.com/jfjelstul/worldcup)
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: Fjelstul, Joshua C. “The Fjelstul World Cup Database v.1.0.” 2022年7月8日。[https://www.github.com/jfjelstul/worldcup](https://www.github.com/jfjelstul/worldcup)
