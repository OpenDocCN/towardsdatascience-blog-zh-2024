- en: Graph Theory to Harmonize Model Integration
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 图论在模型集成中的协调作用
- en: 原文：[https://towardsdatascience.com/graph-theory-to-harmonize-model-integration-e11b4827135a?source=collection_archive---------7-----------------------#2024-02-21](https://towardsdatascience.com/graph-theory-to-harmonize-model-integration-e11b4827135a?source=collection_archive---------7-----------------------#2024-02-21)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/graph-theory-to-harmonize-model-integration-e11b4827135a?source=collection_archive---------7-----------------------#2024-02-21](https://towardsdatascience.com/graph-theory-to-harmonize-model-integration-e11b4827135a?source=collection_archive---------7-----------------------#2024-02-21)
- en: Optimising multi-model collaboration with graph-based orchestration
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用基于图的编排优化多模型协作
- en: '[](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)[![Ahmad
    Albarqawi](../Images/f039f134cbb10d01a838a9ad864fd3c6.png)](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)
    [Ahmad Albarqawi](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)[![Ahmad
    Albarqawi](../Images/f039f134cbb10d01a838a9ad864fd3c6.png)](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)
    [Ahmad Albarqawi](https://albarqawi.medium.com/?source=post_page---byline--e11b4827135a--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)
    ·7 min read·Feb 21, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e11b4827135a--------------------------------)
    ·阅读时间：7分钟·2024年2月21日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/50e51cf257ee05cfe54011610f330018.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50e51cf257ee05cfe54011610f330018.png)'
- en: Orchestra — photographer Arindam Mahanta by unsplash
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 管弦乐队 — 摄影师 Arindam Mahanta，图片来源于 Unsplash
- en: Integrating the capabilities of various AI models unlocks a symphony of potential,
    from automating complex tasks that require multiple abilities like vision, speech,
    writing, and synthesis to enhancing decision-making processes. Yet, orchestrating
    these collaborations presents a significant challenge in managing the inner relations
    and dependencies. Traditional linear approaches often fall short, struggling to
    manage the intricacies of diverse models and dynamic dependencies.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 整合各种AI模型的能力释放了潜力的交响乐，从自动化需要多种能力的复杂任务（如视觉、语音、写作和合成）到增强决策过程。然而，协调这些协作在管理内部关系和依赖性方面存在重大挑战。传统的线性方法往往力不从心，难以处理不同模型和动态依赖关系的复杂性。
- en: By translating your machine learning workflow into a graph, you gain avisualisationof
    how each model interacts and contributes to the overall outcome that combines
    natural language processing, computer vision, and speech models. With the graph
    approach, the nodes represent models or tasks, and edges define dependencies between
    them. This graph-based mapping offers several advantages, identifying which models
    rely on the output of others and leveraging parallel processing for independent
    tasks. Additionally, we can execute the tasks using existing graph navigation
    strategies like breadth-first or depth-first according to the task priorities.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将你的机器学习工作流程转化为图形，你可以可视化每个模型如何相互作用并为结合自然语言处理、计算机视觉和语音模型的整体结果做出贡献。采用图形方法时，节点代表模型或任务，边定义它们之间的依赖关系。这种基于图的映射提供了多个优势，可以识别哪些模型依赖于其他模型的输出，并利用并行处理来执行独立任务。此外，我们还可以根据任务的优先级，使用现有的图形导航策略，如广度优先或深度优先，来执行这些任务。
- en: The road to harmonious AI models collaboration is not without hurdles. Imagine
    conducting an orchestra where each individual speaks different languages and instruments
    operate independently. This challenge mirrors the communication gaps when integrating
    diverse AI models, requiring a framework to manage the relations and which models
    can receive each input format.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通向和谐的AI模型协作之路并非没有障碍。想象一下，指挥一个管弦乐队，每个乐器演奏者都说不同的语言，乐器之间相互独立。这个挑战反映了在整合不同AI模型时的沟通障碍，需要一个框架来管理模型之间的关系，并明确哪些模型可以接收每种输入格式。
- en: 'From Theory to Practice: Expected Use Cases'
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 从理论到实践：预期的使用案例
- en: 'The graph-based orchestration approach opens doors to exciting possibilities
    across various domains:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 基于图的协调方法为各个领域开辟了激动人心的可能性：
- en: '**Collaborative tasks for drug discovery**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**药物发现的协同任务**'
- en: '![](../Images/e82bbc6d32b6602982657fa89fd639f5.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e82bbc6d32b6602982657fa89fd639f5.png)'
- en: Diagram of three models collaboration as part of data analysis task — image
    by author
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 三个模型协作作为数据分析任务的一部分示意图 — 图片来自作者
- en: Researchers can accelerate the drug discovery process with a sequence of AI-powered
    assistants, each designed for a specific task, for example, using a three-step
    discovery mission. The first step involves a language model that scans vast scientific
    data to highlight potential protein targets strongly linked to specific diseases,
    followed by a vision model to explain complex diagrams or images, providing detailed
    insights into the structures of the identified proteins. This visual is crucial
    for understanding how potential drugs might interact with the protein. Finally,
    a third model integrates input from the language and vision models to predict
    how chemical compounds might affect the targeted proteins, offering the researchers
    valuable insights to lead the process efficiently.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 研究人员可以通过一系列由人工智能驱动的助手加速药物发现过程，每个助手都专门为特定任务设计，例如，采用三步药物发现任务。第一步涉及使用语言模型扫描大量科学数据，突出与特定疾病密切相关的潜在蛋白质靶点，接着是视觉模型来解释复杂的图表或图像，为已识别的蛋白质结构提供详细见解。这个视觉模型对于理解潜在药物如何与蛋白质相互作用至关重要。最后，第三个模型结合语言和视觉模型的输入，预测化学化合物可能如何影响目标蛋白质，为研究人员提供有价值的见解，从而有效推动整个过程。
- en: 'Several challenges will emerge during the model integration to deliver the
    entire pipeline. Extracting relevant images from the scanned content and feeding
    them to the vision model isn’t as simple as it seems. An intermediate processor
    is needed between the text scan and vision tasks to filter the relevant images.
    Secondly, the analysis task itself should merge multiple inputs: the data scan
    output, the vision model’s explanation, and user-specified instructions. This
    requires a template to combine the information for the language model to process
    them. The following sections will describe how to utilise a python framework to
    handle the complex relations.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在模型集成过程中会出现若干挑战，以便交付完整的流程。将从扫描内容中提取相关图像并将其输入视觉模型并不像看起来那么简单。需要在文本扫描和视觉任务之间加入一个中介处理器，以过滤相关图像。其次，分析任务本身应当整合多个输入：数据扫描输出、视觉模型的解释以及用户指定的指令。这需要一个模板来将信息组合在一起，以便语言模型进行处理。以下部分将描述如何利用Python框架来处理这些复杂的关系。
- en: '**Creative Content Generation**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**创意内容生成**'
- en: '![](../Images/9002dfceb80310637827fd6c08a9cc86.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9002dfceb80310637827fd6c08a9cc86.png)'
- en: Diagram of four tasks to generate animation — image by author
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 四个任务生成动画的示意图 — 图片来自作者
- en: The models collaboration can facilitate interactive content creation by integrating
    elements such as music composition, animation, and design models to generate animated
    scenes. For instance, in a graph-based collaboration approach, the first task
    can plan a scene like a director and pass the input for each music and image generation
    task. Finally, an animation model will use the output of the art and music models
    to generate a short video.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 模型协作可以通过整合音乐创作、动画制作和设计模型等元素来促进互动内容的创作。例如，在基于图的协作方法中，第一个任务可以像导演一样规划一个场景，并传递每个音乐和图像生成任务的输入。最后，动画模型将使用艺术和音乐模型的输出生成一个短视频。
- en: To optimise this process, we aim to achieve parallel execution of music and
    graphics generation as they are independent tasks. So there’s no need for music
    to wait for graphics completion. Additionally, we need to address the diverse
    input formats by the animation task. While some models like Stable Video Diffusion
    work with images only, the music can be combined using a post-processor.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化这个过程，我们旨在实现音乐和图形生成的并行执行，因为它们是独立的任务。因此，不需要等待图形完成才能生成音乐。此外，我们还需要解决动画任务的多样化输入格式问题。虽然一些模型如Stable
    Video Diffusion只处理图像，但音乐可以通过后处理器与之结合。
- en: These examples provide just a glimpse of the graph theory potential in model
    integration. The graph integration approach allows you to tailor multiple tasks
    to your specific needs and unlock innovative solutions.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 这些例子仅展示了图论在模型整合中的潜力。图集成方法允许您根据特定需求定制多个任务，开启创新解决方案。
- en: Intelli Framework Orchestrates AI Models with Graph Theory
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Intelli框架通过图论协调人工智能模型
- en: '![](../Images/0024fdb638ecb31b16278d49ed944fd2.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0024fdb638ecb31b16278d49ed944fd2.png)'
- en: Tasks represented with a graph — image by author
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 任务以图形形式表示 — 图片由作者提供
- en: 'Intelli is an open source python module to orchestrate AI workflows, by leveraging
    graph principles through three key components:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Intelli 是一个开源 Python 模块，用于协调 AI 工作流，利用图形原则通过三个关键组件实现：
- en: '**Agents** act as representatives of your AI models, you define each agent
    by specifying its type (text, image, vision, or speech), its provider (openai,
    gemini, stability, mistral, etc.), and the mission.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**代理** 充当你的 AI 模型的代表，你通过指定其类型（文本、图像、视觉或语音）、提供者（openai、gemini、stability、mistral
    等）和任务来定义每个代理。'
- en: '**Tasks** are individual units within your AI workflow. Each task leveraging
    an agent to perform a specific action and applies custom pre-processing and post-processing
    provided by the user.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**任务** 是 AI 工作流中的单个单元。每个任务利用代理执行特定操作，并应用用户提供的自定义预处理和后处理。'
- en: '**Flow** binds everything together, orchestrating the execution of your tasks,
    adhering to the dependencies you’ve established through the graph structure. Flow
    management ensures tasks are executed efficiently and in the correct order, enabling
    both sequential and parallel processing where possible.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**Flow** 将一切连接在一起，协调任务的执行，遵循你通过图形结构建立的依赖关系。流管理确保任务高效且按正确顺序执行，能够在可能的情况下支持顺序和并行处理。'
- en: Using the flow component to manage the tasks relation as a graph provide several
    benefits when connecting multiple models, however for the case of one task only
    this might be overkill and direct call of the model will be sufficient.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 使用流组件将任务关系管理为图形在连接多个模型时提供了几个好处，但对于仅有一个任务的情况，这可能有些过度，直接调用模型就足够了。
- en: '**Scaling**: As your project grows in complexity, adding more models and tasks
    requires repetitive code updates to account for data format mismatches and complex
    dependency. The graph approach simplifies this by defining a new node representing
    the task, and the framework automatically resolves input/output differences to
    orchestrates data flow.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**扩展性**：随着项目复杂性的增长，增加更多模型和任务需要反复更新代码，以处理数据格式不匹配和复杂的依赖关系。图形方法通过定义一个新的节点来表示任务，简化了这一过程，框架会自动解决输入/输出差异，从而协调数据流。'
- en: '**Dynamic Adaptation**: With traditional approaches, changes for complex tasks
    will impact the entire workflow, requiring adjustments. When using the flow, it
    will handle adding, removing, or modifying connections automatically.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**动态适应**：在传统方法中，复杂任务的变化会影响整个工作流，需要进行调整。而使用流时，它会自动处理添加、删除或修改连接。'
- en: '**Explainability**: The graph empowers deeper understanding of your AI workflow
    by visualising how the models interact, and optimise the tasks path navigation.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**可解释性**：图形通过可视化模型如何交互并优化任务路径导航，增强了你对 AI 工作流的深入理解。'
- en: 'Note: the author participated in designing and developing the intelli framework.
    it is an open source project with Apache licence.'
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：作者参与了 Intelli 框架的设计和开发。它是一个具有 Apache 许可证的开源项目。
- en: '**Getting Started**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**开始使用**'
- en: 'First, ensure you have python 3.7+, as intelli leverages the latest python
    asyncio features, and install:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，确保你使用的是 Python 3.7 及以上版本，因为 Intelli 利用了最新的 Python asyncio 特性，然后安装：
- en: '[PRE0]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Agents: The Task Executors**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**代理：任务执行者**'
- en: Agents in Intelli are designed to interface with specific AI model. Each agent
    includes a unified input layer to access any model type and provides a dictionary
    allowing to pass custom parameters to the model, such as the maximum size, temperature
    and model version.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Intelli 中的代理旨在与特定的 AI 模型接口。每个代理都包括一个统一的输入层，可以访问任何类型的模型，并提供一个字典，允许传递自定义参数，如最大大小、温度和模型版本。
- en: '[PRE1]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '**Tasks: The Building Blocks**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**任务：构建块**'
- en: Tasks represent individual units of work or operations to be performed by agents,
    and include the logic to handle the output of the previous task. Each task can
    be a simple operation like generating text or a more complex process, like analysing
    the sentiment of user feedback.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 任务表示由代理执行的单个工作单元或操作，并包含处理前一个任务输出的逻辑。每个任务可以是一个简单的操作，如生成文本，或是一个更复杂的过程，如分析用户反馈的情感。
- en: '[PRE2]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Processors: Tuned I/O**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**处理器：优化的输入/输出**'
- en: Processors add an extra layer of control by defining a custom pre-process for
    the task input and post-process for the output. The example below demonstrates
    creating a function to shorten the text output of the previous step before calling
    the image model.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 处理器通过定义任务输入的自定义预处理和输出的后处理，提供了额外的控制层。下面的示例演示了在调用图像模型之前，创建一个函数来缩短上一步骤的文本输出。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Flow: Specifying the dependencies**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**Flow: 指定依赖关系**'
- en: Flow translates your AI workflow into a Directed Acyclic Graph (DAG) and leverage
    the graph theory for dependency management. This enables you to easily visualise
    the task relations, and optimise the execution order of your tasks.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: Flow 将您的 AI 工作流转换为有向无环图（DAG），并利用图论进行依赖管理。这使得您可以轻松地可视化任务之间的关系，并优化任务的执行顺序。
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The map_paths dictates the task dependencies, guiding Flow to orchestrate the
    execution order and ensuring each task receives the necessary output from its
    predecessors.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: map_paths 决定了任务的依赖关系，引导 Flow 编排执行顺序，确保每个任务从其前置任务获得必要的输出。
- en: 'Here’s how Flow navigates the nodes:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是 Flow 如何遍历节点的方式：
- en: 'Mapping the Workflow: Flow constructs a DAG using tasks as nodes and dependencies
    as edges. This visual representation clarifies the task execution sequence and
    data flow.'
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 映射工作流：Flow 使用任务作为节点、依赖关系作为边构建 DAG。这种可视化表示清晰地显示了任务执行顺序和数据流动。
- en: 'Topological Sorting: The flow analyses the graph to determine the optimal execution
    order. Tasks without incoming dependencies are prioritised, ensuring each task
    receives necessary inputs from predecessors before execution.'
  id: totrans-54
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 拓扑排序：Flow 分析图形，以确定最佳执行顺序。没有输入依赖的任务优先执行，确保每个任务在执行之前能够从前置任务中获得必要的输入。
- en: 'Task Execution: The framework iterates through the sorted tasks, executing
    each with corresponding input. Based on the dependency map, inputs might come
    from previous task outputs and user-defined values.'
  id: totrans-55
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 任务执行：框架遍历排序后的任务，逐个执行每个任务并提供相应的输入。根据依赖图，输入可能来自之前任务的输出或用户定义的值。
- en: 'Input Preparation: Before execution, the task applies any pre-processing functions
    defined for the task, modifying the input data as needed and calls the assigned
    agent.'
  id: totrans-56
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入准备：在执行之前，任务应用为任务定义的任何预处理功能，根据需要修改输入数据，并调用分配的代理。
- en: 'Output Management: The agent returns an output, which is stored in a dictionary
    with task name as a key and returned to the user.'
  id: totrans-57
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输出管理：代理返回输出，并将其存储在以任务名称为键的字典中，然后返回给用户。
- en: 'To visualise your flow as a graph:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 要将您的工作流可视化为图形：
- en: '[PRE5]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/159e0a980ca352141cf8619c60023480.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/159e0a980ca352141cf8619c60023480.png)'
- en: The visual of the tasks and assigned agents — image by intelli graph function
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 任务和分配代理的可视化 —— 由 Intelli 图形功能生成的图像
- en: Conclusion
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Using graph theory has transformed the traditional linear approaches to orchestrating
    AI models by providing a symphony of collaboration between diverse models.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 使用图论已经改变了传统的线性 AI 模型编排方式，通过提供不同模型之间协作的交响乐式方法。
- en: Frameworks like Intelli translate your workflow into a visual representation,
    where tasks become nodes and dependencies are mapped as edges, creating an overview
    of your entire process to automate complex tasks.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Intelli 这样的框架将您的工作流转化为可视化表示，其中任务成为节点，依赖关系被映射为边，从而创建一个完整的流程概览，用于自动化复杂的任务。
- en: This approach extends to diverse fields requiring collaborative AI models, including
    scientific research, business decision automation, and interactive content creation.
    However, effective scale requires further refinement in managing the data exchange
    between the models.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法扩展到需要协作 AI 模型的各个领域，包括科学研究、商业决策自动化和互动内容创作。然而，有效的规模化需要在管理模型之间的数据交换方面进一步改进。
- en: References
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Intelli git repo: [https://github.com/intelligentnode/Intelli](https://github.com/intelligentnode/Intelli)'
  id: totrans-67
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Intelli git 仓库：[https://github.com/intelligentnode/Intelli](https://github.com/intelligentnode/Intelli)
- en: 'Graph theory: [https://www.britannica.com/topic/graph-theory](https://www.britannica.com/topic/graph-theory)'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图论：[https://www.britannica.com/topic/graph-theory](https://www.britannica.com/topic/graph-theory)
