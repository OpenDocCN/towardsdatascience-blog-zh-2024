- en: Seamless Parsing of Nested JSON and Schema Evolution in Delta Live Tables Without
    Restarting Pipelines
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 无需重启管道，Delta Live Tables 中嵌套 JSON 和架构演化的无缝解析
- en: 原文：[https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05](https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05](https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05)
- en: Based on a customer case study, an advanced tutorial on using Delta Live Tables
    to process JSON schema evolution without requiring to restart
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 基于一个客户案例研究，本教程介绍了如何使用 Delta Live Tables 处理 JSON 架构演化，而无需重启。
- en: '[](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[![Irfan
    Elahi](../Images/f31feb75a9fc8f58d82de12c3d372b83.png)](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    [Irfan Elahi](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[![Irfan
    Elahi](../Images/f31feb75a9fc8f58d82de12c3d372b83.png)](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    [Irfan Elahi](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    ·15 min read·Oct 5, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    ·阅读时间：15 分钟·2024年10月5日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/1b6f46531a4eddd4e3d01f650d342ab6.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1b6f46531a4eddd4e3d01f650d342ab6.png)'
- en: Generated via DALL-E
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由 DALL-E 生成
- en: '***Disclaimer:*** *I am a solutions architect at Databricks. The views and
    opinions expressed in this article are my own and do not necessarily reflect those
    of Databricks.*'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '***免责声明：*** *我是 Databricks 的解决方案架构师。本文表达的观点和看法仅代表我个人，不一定反映 Databricks 的立场。*'
- en: Schema evolution is a common phenomenon in the world of data engineering. When
    extracting data from sources and loading it into a destination, changes in the
    source schema are inevitable. This challenge is amplified when dealing with source
    systems that include JSON payloads, such as JSON-type columns in PostgreSQL. The
    likelihood of schema changes within these JSON payloads is high — new fields can
    be added at any time, often deeply nested at various levels. These frequent changes
    significantly increase the complexity of building robust data pipelines that parse
    such schema changes and evolve the schema seamlessly.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 架构演化是数据工程领域中的常见现象。在从数据源提取数据并加载到目标位置时，源架构的变化是不可避免的。当涉及到包含 JSON 负载的源系统时，这一挑战更加突出，比如
    PostgreSQL 中的 JSON 类型列。这些 JSON 负载中发生架构变化的可能性很高——新字段可以随时添加，并且通常嵌套在不同的层次中。这些频繁的变化大大增加了构建强大数据管道的复杂性，这些管道需要解析这些架构变化并无缝地演化架构。
- en: The Databricks Intelligence Platform, powered by the Delta Lake format, offers
    robust support for schema evolution, ensuring flexibility and resilience when
    dealing with changes in data structure. Delta Lake can…
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 由 Delta Lake 格式提供支持的 Databricks 智能平台，提供强大的架构演化支持，在处理数据结构变化时，确保灵活性和弹性。Delta Lake
    可以…
