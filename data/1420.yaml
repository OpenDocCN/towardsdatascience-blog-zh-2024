- en: YOLO — By Hand
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: YOLO — 手动实现
- en: 原文：[https://towardsdatascience.com/yolo-by-hand-4c1ba2a9f72c?source=collection_archive---------2-----------------------#2024-06-07](https://towardsdatascience.com/yolo-by-hand-4c1ba2a9f72c?source=collection_archive---------2-----------------------#2024-06-07)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/yolo-by-hand-4c1ba2a9f72c?source=collection_archive---------2-----------------------#2024-06-07](https://towardsdatascience.com/yolo-by-hand-4c1ba2a9f72c?source=collection_archive---------2-----------------------#2024-06-07)
- en: Machine Learning | Computer Vision | Object Detection
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 机器学习 | 计算机视觉 | 物体检测
- en: A breakdown of the math within YOLO
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: YOLO 中的数学分解
- en: '[](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)[![Daniel
    Warfield](../Images/c1c8b4dd514f6813e08e401401324bca.png)](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)
    [Daniel Warfield](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)[![Daniel
    Warfield](../Images/c1c8b4dd514f6813e08e401401324bca.png)](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)
    [Daniel Warfield](https://medium.com/@danielwarfield1?source=post_page---byline--4c1ba2a9f72c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)
    ·6 min read·Jun 7, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4c1ba2a9f72c--------------------------------)
    ·阅读时间 6 分钟·2024年6月7日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f5f2e5e5810aa881e1949532017cab2f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f5f2e5e5810aa881e1949532017cab2f.png)'
- en: “Eye By Hand” by Daniel Warfield using MidJourney. All images by the author
    unless otherwise specified.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: “手动 YOLO”由 Daniel Warfield 使用 MidJourney 创作。除非另有说明，所有图像均由作者提供。
- en: YOLO is a landmark object detection model which can quickly classify and localize
    numerous objects within an image. This summary goes over all critical mathematical
    operations within a YOLO model. If you’d like to learn more about the intuition
    behind YOLO, check out the IAEE article.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: YOLO 是一个具有里程碑意义的物体检测模型，可以快速分类和定位图像中的多个物体。本文总结了 YOLO 模型中的所有关键数学操作。如果你想深入了解 YOLO
    背后的直觉，查看 IAEE 文章。
- en: '[](/yolo-intuitively-and-exhaustively-explained-83143925c7a9?source=post_page-----4c1ba2a9f72c--------------------------------)
    [## YOLO — Intuitively and Exhaustively Explained'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/yolo-intuitively-and-exhaustively-explained-83143925c7a9?source=post_page-----4c1ba2a9f72c--------------------------------)
    [## YOLO — 直观而全面的解释'
- en: The genesis of the most widely used object detection models.
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 最广泛使用的物体检测模型的起源。
- en: towardsdatascience.com](/yolo-intuitively-and-exhaustively-explained-83143925c7a9?source=post_page-----4c1ba2a9f72c--------------------------------)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/yolo-intuitively-and-exhaustively-explained-83143925c7a9?source=post_page-----4c1ba2a9f72c--------------------------------)
- en: 'Step 1: Defining the Input'
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：定义输入
- en: To use a YOLO model, an RGB image must first be converted into a 448 x 448 x
    3 tensor
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 要使用 YOLO 模型，必须首先将 RGB 图像转换为 448 x 448 x 3 的张量。
- en: '![](../Images/f527329d5ace20438a37b6b185bb2aa3.png)'
  id: totrans-15
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f527329d5ace20438a37b6b185bb2aa3.png)'
- en: An image can be stretched into the correct dimension and, constructing a 448x448x3
    tensor. [Dog image source](https://www.pexels.com/photo/two-yellow-labrador-retriever-puppies-1108099/).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 图像可以拉伸到正确的维度，从而构建一个 448x448x3 的张量。[狗的图片来源](https://www.pexels.com/photo/two-yellow-labrador-retriever-puppies-1108099/)。
- en: We’ll be using a simplified 5 x 5 x 1 tensor so the math takes up less space.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用简化的 5 x 5 x 1 张量，以便数学表达式占用更少的空间。
- en: '![](../Images/6aeb557a7e46252e4a0ca7c5a9ae21ec.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6aeb557a7e46252e4a0ca7c5a9ae21ec.png)'
- en: The input is idealized as a smaller 2D matrix. You can refer to [my article
    on convolution](https://medium.com/towards-data-science/convolutional-networks-intuitively-and-exhaustively-explained-ab08f6353f96)
    to get a better idea of how this impacts the math.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 输入被理想化为一个较小的 2D 矩阵。你可以参考[我关于卷积的文章](https://medium.com/towards-data-science/convolutional-networks-intuitively-and-exhaustively-explained-ab08f6353f96)，以更好地理解这如何影响数学运算。
- en: 'Step 2: Layer Normalization'
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二步：层归一化
