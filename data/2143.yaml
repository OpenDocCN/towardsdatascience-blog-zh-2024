- en: 5 Pillars for a Hyper-Optimized AI Workflow
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超优化AI工作流的5个支柱
- en: 原文：[https://towardsdatascience.com/5-pillars-for-a-hyper-optimized-ai-workflow-21fcaefe48ca?source=collection_archive---------3-----------------------#2024-09-03](https://towardsdatascience.com/5-pillars-for-a-hyper-optimized-ai-workflow-21fcaefe48ca?source=collection_archive---------3-----------------------#2024-09-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/5-pillars-for-a-hyper-optimized-ai-workflow-21fcaefe48ca?source=collection_archive---------3-----------------------#2024-09-03](https://towardsdatascience.com/5-pillars-for-a-hyper-optimized-ai-workflow-21fcaefe48ca?source=collection_archive---------3-----------------------#2024-09-03)
- en: An introduction to a methodology for creating production-ready, extensible &
    highly optimized AI workflows
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建适用于生产的、可扩展且高度优化的AI工作流的方法论简介
- en: '[](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)[![Gilad
    Rubin](../Images/e98728582365c22c2803d5db0a0f3ca6.png)](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)
    [Gilad Rubin](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)[![Gilad
    Rubin](../Images/e98728582365c22c2803d5db0a0f3ca6.png)](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)
    [Gilad Rubin](https://medium.com/@giladrubin?source=post_page---byline--21fcaefe48ca--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)
    ·7 min read·Sep 3, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--21fcaefe48ca--------------------------------)
    ·阅读时间：7分钟·2024年9月3日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c2981f3bf6f6dd818737a86793759b75.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c2981f3bf6f6dd818737a86793759b75.png)'
- en: '*Credit: Google Gemini, prompt by the Author*'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '*致谢：Google Gemini，作者提供的提示*'
- en: Intro
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: 'In the last decade, I carried with me a deep question in the back of my mind
    in every project I’ve worked on:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在过去十年中，每个我参与的项目中，我心里都怀揣着一个深刻的问题：
- en: '**How** (the hell) **am I supposed to structure and develop my AI & ML projects?**'
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**我该如何**（究竟怎么）**构建和开发我的AI和机器学习项目？**'
- en: I wanted to know — is there an elegant way to build **production-ready** code
    in an iterative way? A codebase that is **extensible, optimized, maintainable
    & reproducible**?
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我想知道——是否有一种优雅的方式，以迭代的方式构建**适用于生产的**代码？一种**可扩展、优化、可维护且可重现**的代码库？
- en: And if so — where does this secret lie? Who owns the knowledge to this dark
    art?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，这个秘密到底在哪里呢？谁掌握了这门黑暗艺术的知识？
- en: I searched intensively for an answer over the course of many years — reading
    articles, watching tutorials and trying out different methodologies and frameworks.
    But I couldn’t find a satisfying answer. Every time I thought I was getting close
    to a solution, something was still missing.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 多年来，我一直在全力以赴寻找答案——阅读文章、观看教程，并尝试不同的方法论和框架。但我始终未能找到一个令人满意的答案。每当我觉得自己接近解决方案时，总有某些东西仍然缺失。
- en: After about 10 years of trial and error, with a focused effort in the last two
    years, I think I’ve finally found a satisfying answer to my long-standing quest.
    This post is the beginning of my journey of sharing what I’ve found.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 经过大约10年的试验与错误，尤其是在过去两年专注努力之后，我认为我终于找到了一个令人满意的答案，结束了我长期以来的追寻。这篇文章是我分享所发现内容的旅程的开始。
- en: My research has led me to identify **5 key pillars** that form the foundation
    of what I call a **hyper-optimized AI workflow**. In the post I will shortly introduce
    each of them — giving you an overview of what’s to come.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我的研究让我识别出了**5个关键支柱**，它们构成了我所称之为**超优化AI工作流**的基础。在这篇文章中，我将简要介绍每个支柱——为你概述即将到来的内容。
- en: 'I want to emphasize that each of the pillars that I will present is grounded
    in practical methods and tools, which I’ll elaborate on in future posts. If you’re
    already curious to see them in action, feel free to check out this video from
    Hamilton’s meetup where I present them live:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我想强调的是，我将介绍的每个支柱都基于实际的方法和工具，我将在未来的文章中详细阐述。如果你已经迫不及待想看到它们的实际应用，可以查看我在Hamilton见面会上的这段视频，现场展示了这些内容：
- en: '*Note: Throughout this post and series, I’ll use the terms Artificial Intelligence
    (AI), Machine Learning (ML), and Data Science (DS) interchangeably. The concepts
    we’ll discuss apply equally to all these fields.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：在本文及系列文章中，我将交替使用人工智能（AI）、机器学习（ML）和数据科学（DS）这几个术语。我们讨论的概念适用于所有这些领域。*'
- en: Now, let’s explore each pillar.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们探索每个支柱。
- en: 1 — Metric-Based Optimization
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1 — 基于指标的优化
- en: In every AI project there is a certain goal we want to achieve, and ideally
    — a set of metrics we want to optimize.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每个AI项目都有一个我们想要实现的目标，理想情况下——还有一组我们想要优化的指标。
- en: 'These metrics can include:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这些指标可以包括：
- en: '**Predictive quality metrics**: Accuracy, F1-Score, Recall, Precision, etc…'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**预测质量指标**：准确率、F1-Score、召回率、精确率等……'
- en: '**Cost metrics**: Actual $ amount, FLOPS, Size in MB, etc…'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本指标**：实际金额、FLOPS、大小（以MB为单位）等……'
- en: '**Performance metrics**: Training speed, inference speed, etc…'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**性能指标**：训练速度、推理速度等……'
- en: 'We can choose one metric as our “north star” or create an aggregate metric.
    For example:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以选择一个指标作为我们的“北极星”，或者创建一个综合指标。例如：
- en: 0.7 × F1-Score + 0.3 × (1 / Inference Time in ms)
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0.7 × F1-Score + 0.3 × (1 / 推理时间（毫秒）)
- en: 0.6 × AUC-ROC + 0.2 × (1 / Training Time in hours) + 0.2 × (1 / Cloud Compute
    Cost in $)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 0.6 × AUC-ROC + 0.2 × (1 / 训练时间（小时）) + 0.2 × (1 / 云计算成本（美元）)
- en: '*There’s a* [*wonderful short video*](https://www.youtube.com/watch?v=sofffBNhVSo)
    *by Andrew Ng. where here explains about the topic of a* ***Single Number Evaluation
    Metric****.*'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '*有一个* [*安德鲁·吴的精彩短视频*](https://www.youtube.com/watch?v=sofffBNhVSo) *，在视频中他解释了*
    ***单一数字评估指标*** *的话题。*'
- en: Once we have an agreed-upon metric to optimize and a set of constraints to meet,
    **our goal is to build a workflow that maximizes this metric while satisfying
    our constraints.**
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们确定了一个需要优化的指标并设定了要满足的约束条件，**我们的目标是构建一个在满足约束条件的同时最大化该指标的工作流。**
- en: 2 — Interactive Developer Experience
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2 — 交互式开发者体验
- en: In the world of Data Science and AI development — interactivity is key.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据科学和AI开发的世界里——交互性是关键。
- en: As AI Engineers (or whatever title we Data Scientists go by these days), we
    need to build code that works bug-free across different scenarios.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 作为AI工程师（或者我们数据科学家现在使用的任何头衔），我们需要编写在不同场景下都能无错运行的代码。
- en: Unlike traditional software engineering, our role extends beyond writing code
    that “just” works. A significant aspect of our work involves examining the data
    and inspecting our models’ outputs and the results of various processing steps.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统软件工程不同，我们的角色不仅仅是编写“能工作”的代码。我们工作的重要部分是审视数据，检查模型的输出和各个处理步骤的结果。
- en: The most common environment for this kind of interactive exploration is Jupyter
    Notebooks.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最常见的交互式探索环境是Jupyter笔记本。
- en: Working within a notebook allows us to **test different implementations, experiment
    with new APIs and inspect the intermediate results of our workflows and make decisions
    based on our observations.** This is the core of the second pillar.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在笔记本环境中工作允许我们**测试不同的实现，尝试新的API，检查工作流的中间结果，并基于我们的观察做出决策。** 这是第二个支柱的核心。
- en: However, As much as we enjoy these benefits in our day-to-day work, notebooks
    can sometimes contain notoriously bad code that can only be executed in a non-trivial
    order.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，尽管我们在日常工作中享受这些好处，笔记本有时也会包含臭名昭著的坏代码，这些代码只能按非平凡的顺序执行。
- en: In addition, some exploratory parts of the notebook might not be relevant for
    production settings, making it unclear how these can effectively be shipped to
    production.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，笔记本中的一些探索性部分可能与生产环境无关，因此不清楚这些部分如何有效地交付到生产中。
- en: 3 — Production-Ready Code
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3 — 生产就绪代码
- en: “Production-Ready” can mean different things in different contexts. For one
    organization, it might mean serving results within a specified time frame. For
    another, it could refer to the service’s uptime (SLA). And yet for another, it
    might mean the code, model, or workflow has undergone sufficient testing to ensure
    reliability.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: “生产就绪”在不同的上下文中可能意味着不同的事情。对于一个组织来说，它可能意味着在指定的时间范围内提供结果。对于另一个组织来说，它可能指的是服务的正常运行时间（SLA）。而对于第三个组织，它可能意味着代码、模型或工作流经过充分测试，以确保其可靠性。
- en: 'These are all important aspects of shipping reliable products, and the specific
    requirements may vary from place to place. Since my exploration is focused on
    the “meta” aspect of building AI workflows, I want to discuss a common denominator
    across these definitions: **wrapping our workflow as a serviceable API and deploying
    it to an environment where it can be queried by external applications or users.**'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这些都是交付可靠产品的重要方面，具体要求可能因地而异。由于我的探索侧重于构建AI工作流的“元”层面，我想讨论这些定义之间的共同点：**将我们的工作流封装为一个可服务的API，并将其部署到一个可以被外部应用程序或用户查询的环境中。**
- en: 'This means we need to have a way to abstract the complexity of our codebase
    into a clearly defined interface that can be used across various use-cases. Let’s
    consider an example:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们需要有一种方法，将代码库的复杂性抽象为一个明确定义的接口，以便在各种用例中使用。让我们考虑一个例子：
- en: Imagine a complex RAG (Retrieval-Augmented Generation) system over PDF files
    that we’ve developed. It may contain 10 different parts, each consisting of hundreds
    of lines of code.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，我们开发了一个复杂的RAG（检索增强生成）系统，运行在PDF文件之上。它可能包含10个不同的部分，每个部分由数百行代码组成。
- en: 'However, we can still wrap them into a simple API with just two main functions:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们仍然可以将它们包装成一个简单的API，只有两个主要功能：
- en: 'upload_document(file: PDF) -> document_id: str'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'upload_document(file: PDF) -> document_id: str'
- en: 'query_document(document_id: str, query: str, output_format: str) -> response:
    str'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 'query_document(document_id: str, query: str, output_format: str) -> response:
    str'
- en: 'This abstraction allows users to:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这种抽象使用户能够：
- en: Upload a PDF document and receive a unique identifier.
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 上传PDF文档并接收一个唯一的标识符。
- en: Ask questions about the document using natural language.
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用自然语言提问关于文档的问题。
- en: Specify the desired format for the response (e.g., markdown, JSON, Pandas Dataframe).
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 指定所需的响应格式（例如，Markdown、JSON、Pandas DataFrame）。
- en: By providing this clean interface, we’ve effectively hidden the complexities
    and implementation details of our workflow.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 通过提供这个简洁的接口，我们有效地隐藏了工作流的复杂性和实现细节。
- en: '**Having a systematic way to convert arbitrarily complex workflows into deployable
    APIs is our third pillar.**'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '**拥有一种系统化的方式，将任意复杂的工作流程转换为可部署的API，是我们的第三个支柱。**'
- en: In addition, we would ideally want to establish a methodology that ensures that
    our **iterative, daily work stays in sync with our production code**.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们理想中希望建立一种方法，确保我们的**迭代性日常工作与生产代码保持同步**。
- en: This means if we make a change to our workflow — fixing a bug, adding a new
    implementation, or even tweaking a configuration — we should be able to deploy
    these changes to our production environment with just a click of a button.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着如果我们对工作流进行更改——修复一个bug、添加新的实现，甚至调整一个配置——我们应该能够通过点击一个按钮，将这些更改部署到生产环境中。
- en: 4 — Modular & Extensible Code
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4 — 模块化和可扩展的代码
- en: Another crucial aspect of our methodology is maintaining a **Modular & Extensible**
    codebase.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们方法论的另一个关键方面是保持**模块化和可扩展**的代码库。
- en: This means that we can **add new implementations and test them against existing
    ones** that occupy the same logical step without modifying our existing code or
    overwriting other configurations.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着我们可以**添加新的实现，并与现有的实现进行对比测试**，这些实现占据了相同的逻辑步骤，而无需修改现有的代码或覆盖其他配置。
- en: 'This approach aligns with the [**open-closed principle**](https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle),
    where our code is open for extension but closed for modification. It allows us
    to:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法与[**开放-封闭原则**](https://en.wikipedia.org/wiki/Open%E2%80%93closed_principle)相一致，其中我们的代码可以扩展，但不能修改。它使我们能够：
- en: Introduce new implementations alongside existing ones
  id: totrans-58
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在现有实现的基础上引入新实现
- en: Easily compare the performance of different approaches
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 容易比较不同方法的性能
- en: Maintain the integrity of our current working solutions
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 维护当前工作解决方案的完整性
- en: Extend our workflow’s capabilities without risking the stability of the whole
    system
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在不危及整个系统稳定性的情况下扩展我们工作流的功能
- en: 'Let’s look at a toy example:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个简单的例子：
- en: '![](../Images/76759faaabe47220288d951e11385ba8.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76759faaabe47220288d951e11385ba8.png)'
- en: Image by the Author
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '![](../Images/56292fd73a23bbfc6d6dd636de73b554.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/56292fd73a23bbfc6d6dd636de73b554.png)'
- en: Image by the Author
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: 'In this example, we can see a (pseudo) code that is modular and configurable.
    In this way, we can easily add new configurations and test their performance:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个示例中，我们可以看到一段模块化和可配置的（伪）代码。通过这种方式，我们可以轻松地添加新的配置并测试它们的性能：
- en: '![](../Images/04c39fc215cbe886f28c8bba50baf51e.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04c39fc215cbe886f28c8bba50baf51e.png)'
- en: Image by the Author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Once our code consists of multiple competing implementations & configurations,
    we enter a state that I like to call a **“superposition of workflows”**. In this
    state we can instantiate and execute a workflow using a specific set of configurations.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们的代码由多个竞争的实现和配置组成，我们进入了一个我称之为**“工作流的叠加态”**的状态。在这种状态下，我们可以使用特定的配置集来实例化和执行工作流。
- en: 5 — Hierarchical & Visual Structures
  id: totrans-71
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5 — 分层和可视化结构
- en: What if we take modularity and extensibility a step further? What if we apply
    this approach to entire sections of our workflow?
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们进一步推进模块化和可扩展性呢？如果我们将这种方法应用于我们工作流的整个部分呢？
- en: So now, instead of configuring **this** LLM or **that** retriever, we can configure
    our whole preprocessing, training, or evaluation steps.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 所以现在， instead of configuring **this** LLM or **that** retriever, 我们可以配置整个预处理、训练或评估步骤。
- en: 'Let’s look at an example:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一个例子：
- en: '![](../Images/5425e8ced3cd5f570509c5f16dc98b29.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5425e8ced3cd5f570509c5f16dc98b29.png)'
- en: Image by the Author
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: 'Here we see our entire ML workflow. Now, let’s add a new Data Prep implementation
    and zoom into it:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们看到整个机器学习工作流。现在，让我们添加一个新的数据准备实现并放大查看：
- en: '![](../Images/3fb1f2958404c2d54145cd6abd7dc377.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3fb1f2958404c2d54145cd6abd7dc377.png)'
- en: Image by the Author
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 作者图片
- en: When we work in this hierarchical and visual way, we can select a section of
    our workflow to improve and add a new implementation with the same input/output
    interface as the existing one.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们以这种分层和可视化的方式工作时，我们可以选择工作流中的某一部分进行改进，并添加一个与现有部分具有相同输入/输出接口的新实现。
- en: We can then “zoom in” to that specific section, focusing solely on it without
    worrying about the rest of the project. Once we’re satisfied with our implementation
    — we can start testing it out alongside other various configurations in our workflow.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以“放大”到这个特定部分，专注于它，而不必担心项目的其他部分。一旦我们对实现感到满意——我们就可以开始在工作流中的其他不同配置下进行测试。
- en: 'This approach unlocks several benefits:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法解锁了几个好处：
- en: '**Reduced mental overload**: Focus on one section at a time, providing clarity
    and reducing complexity in decision-making.'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**减少心理负担：** 每次专注于一个部分，提供清晰度并减少决策时的复杂性。'
- en: '**Easier collaboration**: A modular structure simplifies task delegation to
    teammates or AI assistants, with clear interfaces for each component.'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**更容易的协作：** 模块化结构简化了任务分配给队友或AI助手，并且每个组件都有清晰的接口。'
- en: '**Reusability:** These encapsulated implementations can be utilized in different
    projects, potentially without modification to their source code.'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**可重用性：** 这些封装的实现可以在不同的项目中使用，可能无需修改其源代码。'
- en: '**Self-documentation**: Visualizing entire workflows and their components makes
    it easier to understand the project’s structure and logic without diving into
    unnecessary details.'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**自我文档化：** 可视化整个工作流及其组件，使得理解项目的结构和逻辑变得更加容易，而无需深入到不必要的细节。'
- en: Summary
  id: totrans-87
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: 'These are the 5 pillars that I’ve found to hold the foundation to a **“hyper-optimized
    AI workflow”**:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我认为构成**“超优化AI工作流”**基础的五大支柱：
- en: '**Metric-Based Optimization**: Define and optimize clear, project-specific
    metrics to guide decision-making and workflow improvements.'
  id: totrans-89
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**基于指标的优化：** 定义并优化清晰的、项目特定的指标，以指导决策和工作流的改进。'
- en: '**Interactive Developer Experience**: Utilize tools for iterative coding &
    data inspection like Jupyter Notebooks.'
  id: totrans-90
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**互动开发者体验：** 使用像Jupyter Notebooks这样的工具进行迭代编码和数据检查。'
- en: '**Production-Ready Code**: Wrap complete workflows into deployable APIs and
    sync development and production code.'
  id: totrans-91
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**生产就绪代码：** 将完整的工作流封装成可部署的API，并同步开发与生产代码。'
- en: '**Modular & Extensible Code**: Structure code to easily add, swap, and test
    different implementations.'
  id: totrans-92
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**模块化和可扩展代码：** 结构化代码，使其能够轻松添加、替换和测试不同的实现。'
- en: '**Hierarchical & Visual Structures**: Organize projects into visual, hierarchical
    components that can be independently developed and easily understood at various
    levels of abstraction.'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**分层和可视化结构：** 将项目组织为可视化的分层组件，这些组件可以独立开发，并且在不同的抽象层次上易于理解。'
- en: In the upcoming blog posts, I’ll dive deeper into each of these pillars, providing
    more detailed insights, practical examples, and tools to help you implement these
    concepts in your own AI projects.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的博客文章中，我将深入探讨这些支柱，提供更详细的见解、实际示例和工具，帮助你在自己的AI项目中实现这些概念。
- en: 'Specifically, I intend to introduce the methodology and tools I’ve built on
    top of [DAGWorks Inc](https://open.substack.com/users/141841981-dagworks-inc?utm_source=mentions)*
    Hamilton framework and my own packages: [Hypster](https://github.com/gilad-rubin/hypster)
    and [HyperNodes](https://github.com/gilad-rubin/hypernodes) (still in its early
    days).'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 具体来说，我打算介绍我在[DAGWorks Inc](https://open.substack.com/users/141841981-dagworks-inc?utm_source=mentions)*
    Hamilton框架之上构建的方法论和工具，以及我自己的软件包：[Hypster](https://github.com/gilad-rubin/hypster)和[HyperNodes](https://github.com/gilad-rubin/hypernodes)（目前仍处于早期阶段）。
- en: Stay tuned for more!
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 敬请期待更多内容！
- en: '*I am not affiliated with or employed by DAGWorks Inc.'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '*我与DAGWorks Inc没有任何隶属关系，也没有为其工作。'
