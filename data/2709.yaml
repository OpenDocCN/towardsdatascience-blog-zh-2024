- en: How to Clean Messy Text Data with Python’s Regex
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Python 的正则表达式清理杂乱的文本数据
- en: 原文：[https://towardsdatascience.com/how-to-clean-messy-text-data-with-pythons-regex-f6a4a8cff02c?source=collection_archive---------6-----------------------#2024-11-06](https://towardsdatascience.com/how-to-clean-messy-text-data-with-pythons-regex-f6a4a8cff02c?source=collection_archive---------6-----------------------#2024-11-06)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-clean-messy-text-data-with-pythons-regex-f6a4a8cff02c?source=collection_archive---------6-----------------------#2024-11-06](https://towardsdatascience.com/how-to-clean-messy-text-data-with-pythons-regex-f6a4a8cff02c?source=collection_archive---------6-----------------------#2024-11-06)
- en: How to go from a semi-structured text to usable data with Regex
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何使用正则表达式将半结构化文本转化为可用数据
- en: '[](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[![Ari
    Joury, PhD](../Images/5b9e49279fb3f26373b393f29a4daaf7.png)](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)
    [Ari Joury, PhD](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[![Ari
    Joury, PhD](../Images/5b9e49279fb3f26373b393f29a4daaf7.png)](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)
    [Ari Joury, PhD](https://arijoury.medium.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)
    ·9 min read·Nov 6, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f6a4a8cff02c--------------------------------)
    ·9分钟阅读·2024年11月6日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ac0932f20a14bb4e33a9c07f8d4a07f0.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ac0932f20a14bb4e33a9c07f8d4a07f0.png)'
- en: We can comb through messy data to find regular expressions using Python. Image
    generated with [Leonardo AI](https://app.leonardo.ai/image-generation)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过 Python 对杂乱的数据进行筛查，寻找正则表达式。图片由[Leonardo AI](https://app.leonardo.ai/image-generation)生成。
- en: 'Consider this: You are tasked with analyzing numerical data from a lengthy
    PDF report consisting of text and tables. A colleague has already extracted the
    information using Optical Character Recognition (see [last week’s post](/python-might-be-your-best-pdf-data-extractor-f5d42e2634b7)).'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下：你被分配了分析一份包含文本和表格的冗长 PDF 报告中的数值数据的任务。一位同事已经使用光学字符识别技术提取了信息（见[上周的文章](/python-might-be-your-best-pdf-data-extractor-f5d42e2634b7)）。
- en: Unfortunately, rather than a structured dataset, this file is rather messy —
    you find redundant headers, extraneous footnotes, and irregular line breaks. Numbers
    are inconsistently formatted, and data descriptors are scattered throughout, rendering
    any meaningful analysis nearly impossible without significant preprocessing. It
    looks like you will be facing hours of tedious data cleaning today.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，这个文件并不是一个结构化的数据集，而是相当杂乱——你会发现多余的标题、冗余的脚注和不规则的换行符。数字格式不一致，数据描述散布各处，这使得没有经过大量预处理就几乎无法进行有意义的分析。看起来，今天你将面对数小时的繁琐数据清理工作。
- en: Gladly, though, you have stumbled on Regex. Short for “regular expressions,”
    it is a powerful tool for pattern matching in text. It sounds simple, but allowing
    users to define, search, and manipulate specific patterns within text makes it
    an excellent tool for cutting through messy data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，你已经发现了正则表达式。正则表达式（Regex）是用于文本模式匹配的强大工具。它听起来简单，但允许用户定义、搜索并操作文本中的特定模式，这使得它在处理杂乱数据时非常有效。
- en: This piece shall provide a bit more background on Regex, and how it is implemented
    in Python. We then dig deeper into the essential Regex features for data cleaning,
    and provide a hands-on example (that we very recently faced at Wangari) to illustrate
    how this works in practice. If you…
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 本文将为你提供一些关于正则表达式的背景知识，并介绍它在 Python 中的实现。接着我们会深入探讨用于数据清理的正则表达式的关键功能，并提供一个实际操作的示例（这是我们最近在
    Wangari 遇到的），以说明这在实践中的应用。如果你…
