- en: Map-Matching for Speed Prediction
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于地图匹配的车速预测
- en: 原文：[https://towardsdatascience.com/map-matching-for-speed-prediction-f1a534626368?source=collection_archive---------6-----------------------#2024-01-19](https://towardsdatascience.com/map-matching-for-speed-prediction-f1a534626368?source=collection_archive---------6-----------------------#2024-01-19)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/map-matching-for-speed-prediction-f1a534626368?source=collection_archive---------6-----------------------#2024-01-19](https://towardsdatascience.com/map-matching-for-speed-prediction-f1a534626368?source=collection_archive---------6-----------------------#2024-01-19)
- en: How fast will you drive?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 你会开多快？
- en: '[](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)[![João
    Paulo Figueira](../Images/54e4176f66e4ab0324d86ec71d8b033d.png)](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)
    [João Paulo Figueira](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)[![João
    Paulo Figueira](../Images/54e4176f66e4ab0324d86ec71d8b033d.png)](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)
    [João Paulo Figueira](https://medium.com/@joao.figueira?source=post_page---byline--f1a534626368--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)
    ·14 min read·Jan 19, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f1a534626368--------------------------------)
    ·14分钟阅读·2024年1月19日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b7afc8f369f6eb24fe5c635ffc56dc59.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7afc8f369f6eb24fe5c635ffc56dc59.png)'
- en: Photo by [Julian Hochgesang](https://unsplash.com/@julianhochgesang?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Julian Hochgesang](https://unsplash.com/@julianhochgesang?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: When planning future vehicle routes, you trust the digital map providers for
    accurate speed predictions. You do this when picking your phone up to prepare
    for a car trip or, in a professional setting, when planning routes for your vehicle
    fleet. The forecasted speeds are an essential component of the trip’s cost, especially
    as they are one of the fundamental drivers of energy consumption in electric and
    combustion vehicles.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在规划未来的车辆路线时，你依赖数字地图服务提供商来准确预测车速。无论是在准备驾车出行时拿起手机，还是在专业环境中为你的车队规划路线时，都是如此。预测的车速是行程成本的一个重要组成部分，特别是它们是电动车和内燃机车能耗的主要驱动因素之一。
- en: The digital mapping service providers collect information from live traffic
    and historical records to estimate how fast you can drive along a specific road
    at any given time. With this data and intelligent algorithms, they estimate how
    quickly an average vehicle will travel through the planned route. Some services
    will accept each vehicle’s features to tune the route path and the expected trip
    times.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 数字地图服务提供商通过收集实时交通信息和历史记录来估算你在任何特定时刻沿着某条特定道路的行驶速度。借助这些数据和智能算法，他们估算出一辆普通车辆在规划路线中行驶的速度。有些服务还会根据每辆车的特征来调整路线和预计行程时间。
- en: But what about specific vehicles and drivers like yours? Do these predictions
    apply? Your cars and drivers might have particular requirements or habits that
    do not fit the standardized forecasts. Can we do better than the digital map service
    providers? We have a chance if you keep a good record of your historical telematics
    data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，针对像你这样的特定车辆和驾驶员呢？这些预测适用吗？你的车辆和驾驶员可能有一些特殊需求或习惯，这些并不符合标准化的预测。我们能做得比数字地图服务提供商更好吗？如果你保持良好的历史远程信息处理数据记录，我们就有机会。
- en: Introduction
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: In this article, we will improve the quality of speed predictions from digital
    map providers by leveraging the historical speed profiles from a telematics database.
    This database contains records of past trips that we use to modulate the standard
    speed inferences from a digital map provider.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将通过利用来自远程信息处理数据库的历史车速数据，提升数字地图服务提供商的车速预测质量。这个数据库包含了过去行程的记录，我们利用这些数据来调节数字地图服务提供商的标准车速推断。
- en: Central to this is map-matching, the process by which we “snap” the observed
    GPS locations to the underlying digital map. This correcting step allows us to
    bring the GPS measurements in line with the map’s road network representation,
    thus making all location sources comparable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 其中的核心是地图匹配，即我们通过该过程将观测到的GPS位置“匹配”到底层数字地图。这一修正步骤使我们能够将GPS测量结果与地图上的道路网络表示对齐，从而使所有位置来源具有可比性。
- en: The Road Network
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 道路网络
- en: A road network is a mathematical concept that supports most digital mapping
    applications. Usually implemented as a [directed multi-graph](https://en.wikipedia.org/wiki/Multigraph),
    each node represents a known geospatial location, usually some noteworthy landmark
    such as an intersection or a defining point on a road bend, and the connecting
    directed edges represent straight-line paths along the road. **Figure 1** below
    illustrates the concept.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 道路网络是一个数学概念，支持大多数数字地图应用。通常以[有向多重图](https://en.wikipedia.org/wiki/Multigraph)实现，每个节点代表一个已知的地理位置，通常是一些显著的地标，如交叉口或道路转弯的关键点，而连接的有向边则代表沿道路的直线路径。下面的**图1**展示了这一概念。
- en: '![](../Images/a8da38c3b7d740969b46410ce73f6739.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a8da38c3b7d740969b46410ce73f6739.png)'
- en: '**Figure 1** — The diagram above shows the simplified representation of a road
    segment as represented by a digital map. Each node, represented by a red dot,
    corresponds to a known geospatial location defined by latitude, longitude, and
    altitude coordinates. Each connecting line is an edge, and digital maps use these
    to represent the roads (the travel direction is omitted here). When we ask a digital
    map provider for directions, we get a long sequence of these nodes and edges and
    an estimate of the time it will take to travel such roads. (Image source: Author)'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**图1** — 上图展示了数字地图上简化表示的道路段。每个节点，由红点表示，代表由经度、纬度和海拔坐标定义的已知地理位置。每条连接线是一个边，数字地图使用这些边表示道路（此处省略了行驶方向）。当我们向数字地图提供商请求路线时，我们会得到这些节点和边的长序列，以及预计行驶这些道路所需的时间。（图像来源：作者）'
- en: When we request a route from a digital map provider, we get a sequence of road
    network nodes and their connecting edges. The service also provides the estimated
    travel times and corresponding speeds between all pairs of nodes (in some cases,
    the speed estimates cover a range of nodes). We get the total trip duration by
    adding all the partial times together.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们向数字地图提供商请求路线时，我们会获得一系列道路网络节点及其连接的边。该服务还提供了所有节点对之间的估计行驶时间和相应的速度（在某些情况下，速度估算覆盖多个节点）。我们通过将所有部分时间相加，得出整个行程的持续时间。
- en: If we get better estimates for these times, we will also have better speed estimates
    and a better route prediction overall. The source for these better estimates is
    your historical telematics data. But knowing the historic speeds is just a part
    of the process. Before we can use these speeds, we must make sure that we can
    project them onto the digital map, and for this, we use map-matching.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能更好地估算这些时间，我们也能得到更准确的速度估算，整体的路线预测也会更好。这些更好的估算来源于你的历史远程信息数据。但仅仅知道历史速度只是过程的一部分。在我们能够使用这些速度之前，我们必须确保能够将它们投影到数字地图上，为此，我们使用地图匹配。
- en: Map-Matching
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 地图匹配
- en: '[Map-matching](https://en.wikipedia.org/wiki/Map_matching) projects sequences
    of GPS coordinates sampled from a moving object’s path to an existing road graph.
    The matching process uses a [Hidden Markov Model](https://medium.com/@joao.figueira/list/hmm-9940e39b81d9)
    to map the sampled locations to the most likely graph edge sequence. As a result,
    this process produces both the edge projections and the implicit node sequence.
    You can read a more detailed explanation in my previous article on map matching:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[地图匹配](https://en.wikipedia.org/wiki/Map_matching)将从移动物体路径采样的GPS坐标序列映射到现有的道路图。匹配过程使用[隐马尔可夫模型](https://medium.com/@joao.figueira/list/hmm-9940e39b81d9)将采样位置映射到最可能的图边序列。因此，这一过程同时生成图边投影和隐含的节点序列。你可以在我之前的地图匹配文章中阅读更详细的解释：'
- en: '[](/map-matching-for-trajectory-prediction-be307a1547f0?source=post_page-----f1a534626368--------------------------------)
    [## Map-Matching for Trajectory Prediction'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/map-matching-for-trajectory-prediction-be307a1547f0?source=post_page-----f1a534626368--------------------------------)
    [## 用于轨迹预测的地图匹配'
- en: Where are you going? Should you be going that way?
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 你要去哪里？你应该朝这个方向走吗？
- en: towardsdatascience.com](/map-matching-for-trajectory-prediction-be307a1547f0?source=post_page-----f1a534626368--------------------------------)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/map-matching-for-trajectory-prediction-be307a1547f0?source=post_page-----f1a534626368--------------------------------)
- en: After reading the above article, you will understand that the [Valhalla](https://valhalla.github.io/valhalla/)
    map-matching algorithm projects the sampled GPS locations into road network edges,
    not to the nodes. The service may also return the matched poly-line defined in
    terms of the road network nodes. So, we can get both edge projections and the
    implicit node sequence.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 阅读上述文章后，你将理解[Valhalla](https://valhalla.github.io/valhalla/)地图匹配算法将采样的GPS位置投影到路网边缘，而不是节点。该服务还可能返回根据路网节点定义的匹配折线。因此，我们可以同时获得边缘投影和隐式节点序列。
- en: On the other hand, when retrieving a route plan from the same provider, we also
    get a sequence of road network nodes. By matching these nodes to the previously
    map-matched ones, we can overlay the known telematics information to the newly
    generated route and thus improve the time and speed estimates with actual data.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，当从同一提供者获取路线规划时，我们也会得到一系列的路网节点。通过将这些节点与之前的地图匹配节点进行匹配，我们可以将已知的远程信息叠加到新生成的路线中，从而利用实际数据改进时间和速度的估算。
- en: Before using the map-matched locations to infer actual speeds, we must project
    them to the nodes and adjust the known travel times, as illustrated in **Figure
    2** below.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用地图匹配的位置推断实际速度之前，我们必须将它们投影到节点上，并调整已知的旅行时间，如下面**图 2**所示。
- en: '![](../Images/06535e699f86a2d8135667d9726725f9.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06535e699f86a2d8135667d9726725f9.png)'
- en: '**Figure 2** — The diagram above illustrates the challenge of mapping the implicit
    speeds of sampled GPS locations, displayed as green dots, to the speeds between
    the map nodes, represented as red dots. The orange diamonds represent the map-matched
    sampled GPS locations. In this problem, we know the average speeds between the
    green dots and want to infer the average speeds between the red dots. (Image source:
    Author)'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 2** — 上面的图示说明了将采样的GPS位置的隐式速度（显示为绿色圆点）映射到地图节点之间的速度（表示为红色圆点）时所面临的挑战。橙色菱形表示地图匹配的GPS采样位置。在这个问题中，我们知道绿色圆点之间的平均速度，并希望推断红色圆点之间的平均速度。（图片来源：作者）'
- en: As a prerequisite, we must correctly sequence both sets of locations, the nodes,
    and the map matches. This process is depicted in **Figure 2** above, where the
    map matches, represented by the orange diamonds, are sequenced along with the
    road network nodes, represented as red dots. The travel sequence is obviously
    from left to right.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 作为先决条件，我们必须正确地对两组位置进行排序，即节点和地图匹配的位置。这个过程如上面**图 2**所示，其中地图匹配位置（橙色菱形）与路网节点（红色圆点）一起排序。旅行顺序显然是从左到右。
- en: We assume the time differences between the GPS locations are the same as the
    map-matched ones. This assumption, illustrated by **Figure 3** below, is essential
    because there is no way to infer what effect in time the map matching has. This
    assumption simplifies the calculation while keeping a good approximation.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设GPS位置之间的时间差与地图匹配的时间差相同。下面**图 3**所示的假设至关重要，因为我们无法推断出地图匹配在时间上带来的影响。这个假设简化了计算，同时保持了较好的近似值。
- en: '![](../Images/f75f570ad3f325ec79cdfb99a7119eaf.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f75f570ad3f325ec79cdfb99a7119eaf.png)'
- en: '**Figure 3** — We assume that the time differences between consecutive samples
    are the same as the corresponding map-matched ones. (Image source: Author)'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 3** — 我们假设连续样本之间的时间差与对应的地图匹配时间差相同。（图片来源：作者）'
- en: Now that we know the time differences between consecutive orange diamonds, our
    challenge is to use this information to infer the time differences between consecutive
    red dots (nodes). **Figure 4** below shows the relationship between the two sequences
    of time differences.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们知道了连续橙色菱形之间的时间差，我们的挑战是利用这些信息推断连续红色圆点（节点）之间的时间差。下面**图 4**展示了这两组时间差序列之间的关系。
- en: '![](../Images/b2ffe8d3f5a9e098781f0d9bdb86ab20.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b2ffe8d3f5a9e098781f0d9bdb86ab20.png)'
- en: '**Figure 4** — The diagram above helps us understand how we interpolate the
    time differences between road network nodes (red dots) using the time differences
    from the sequence of map-matched locations (orange diamonds). (Image source: Author)'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 4** — 上面的图示帮助我们理解如何利用从地图匹配位置序列（橙色菱形）中获取的时间差，来插值计算路网节点（红色圆点）之间的时间差。（图片来源：作者）'
- en: We can safely assume that the *average speeds* between consecutive orange diamonds
    are constant. This assumption is essential for what comes next. But before we
    proceed, let’s define some terminology. We will use some simplifications due to
    Medium’s typesetting limitations.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以安全地假设连续的橙色菱形之间的*平均速度*是恒定的。这个假设对于接下来的计算至关重要。但在继续之前，让我们先定义一些术语。由于Medium排版的限制，我们将使用一些简化。
- en: 'We need to deal with two fundamental quantities: distances and timespans. Using
    **Figure 4** above as a reference, we define the distance between the orange diamond
    one and red dot one as *d(n1, m1)*. Here, the letter “*m*” stands for “map-matched,”
    and the letter “*n*” stands for node. Similarly, the corresponding timespan is
    *t(n1, m1)*, and the average speed is *v(n1, m1)*.'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要处理两个基本量：距离和时间段。以上**图 4**为参考，我们将橙色菱形1和红色点1之间的距离定义为*d(n1, m1)*。其中，字母“*m*”代表“地图匹配”，字母“*n*”代表节点。类似地，相应的时间段为*t(n1,
    m1)*，而平均速度为*v(n1, m1)*。
- en: 'Let us focus on the first two nodes and see how we can derive the average speed
    (and the corresponding timespan) using the known timespans from orange diamonds
    one to four. The average speed of travel between the first two map-matched locations
    is thus:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们专注于前两个节点，看看如何利用已知的从橙色菱形1到4的时间段来推导平均速度（以及相应的时间段）。因此，两个地图匹配位置之间的平均旅行速度为：
- en: '![](../Images/8f3327843f5029f436555f7519e2b5d5.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8f3327843f5029f436555f7519e2b5d5.png)'
- en: Because the average speed is constant, we can now compute the first timespan.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 因为平均速度是恒定的，我们现在可以计算第一个时间段。
- en: '![](../Images/b94d68d33cacaedd0d1ffd808be12b6a.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b94d68d33cacaedd0d1ffd808be12b6a.png)'
- en: 'The second timespan is just *t(m2, m3)*. For the final period, we can repeat
    the process above. The total time is thus:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个时间段就是*t(m2, m3)*。对于最后一个时间段，我们可以重复上面的过程。总时间为：
- en: '![](../Images/9afe8ec325448a286630b196446e8916.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9afe8ec325448a286630b196446e8916.png)'
- en: We must repeat this process, adapting it to the sequence of nodes and map matches
    to calculate the projected trip times between all nodes.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们必须重复这个过程，并将其调整为节点序列和地图匹配，以计算所有节点之间的预计旅行时间。
- en: Now that we have seen how to project measured speeds onto a digital map let’s
    see where to get the data.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们已经看到了如何将测量的速度投影到数字地图上，让我们看看数据来源在哪里。
- en: Telematics Database
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 车联网数据库
- en: This article uses a telematics database to infer unknown road segment average
    speeds. All the geospatial data in the database is already map-matched to the
    underlying digital map. This characteristic helps us match future service-provided
    routes to the known or projected road segment speeds using the abovementioned
    process.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用车联网数据库推断未知道路段的平均速度。数据库中的所有地理空间数据已经与基础数字地图进行了地图匹配。这个特性帮助我们在未来的服务提供路线上匹配已知或预测的道路段速度，使用上述过程。
- en: Here, we will use a tried-and-true open-source telematics database I have been
    exploring lately and presented in a previously published article, the [Extended
    Vehicle Energy Dataset](https://arxiv.org/pdf/2203.08630.pdf#:~:text=We%20present%20an%20eVED%20dataset,vehicle%20behavior%20and%20traffic%20dynamics.)
    (EVED), licensed under Apache 2.0.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这里，我们将使用一个经过验证的开源车联网数据库，我最近一直在探索，并在之前发布的文章中展示过，名为[扩展车辆能量数据集](https://arxiv.org/pdf/2203.08630.pdf#:~:text=We%20present%20an%20eVED%20dataset,vehicle%20behavior%20and%20traffic%20dynamics.)（EVED），其许可证为Apache
    2.0。
- en: '[](/travel-time-estimation-using-quadkeys-ecf6d54823b4?source=post_page-----f1a534626368--------------------------------)
    [## Travel Time Estimation Using Quadkeys'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/travel-time-estimation-using-quadkeys-ecf6d54823b4?source=post_page-----f1a534626368--------------------------------)
    [## 使用四叉树键估算旅行时间'
- en: This article explains how to estimate travel times using known speed vectors
    indexed by quadkeys.
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 本文解释了如何使用已知的速度向量和四叉树键来估算旅行时间。
- en: towardsdatascience.com](/travel-time-estimation-using-quadkeys-ecf6d54823b4?source=post_page-----f1a534626368--------------------------------)
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/travel-time-estimation-using-quadkeys-ecf6d54823b4?source=post_page-----f1a534626368--------------------------------)
- en: Proposed Solution
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 提出的解决方案
- en: 'We develop the solution in two steps: data preparation and prediction. In the
    data preparation step, we traverse all known trips in the telematics database
    and project the measured trip times to the corresponding road network edges. These
    computed edge traversal times are then stored in another database using maximum
    resolution [H3](https://h3geo.org/docs/) indices for faster searches during exploration.
    At the end of the process, we have collected traversal time distributions for
    the known edges, information that will allow us to estimate travel speeds in the
    prediction phase.'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将解决方案分为两个步骤：数据准备和预测。在数据准备步骤中，我们遍历电信数据库中所有已知的行程，并将测量到的行程时间映射到相应的道路网络边缘。这些计算出的边缘遍历时间然后使用最大分辨率的[H3](https://h3geo.org/docs/)索引存储在另一个数据库中，以便在探索过程中进行更快的查询。在该过程的最后，我们收集了已知边缘的遍历时间分布，这些信息将帮助我们在预测阶段估计行驶速度。
- en: The prediction phase requires a source route expressed as a sequence of road
    network nodes, such as what we get from the Valhalla route planner. We query each
    pair of consecutive nodes' corresponding traversal time distribution (if any)
    from the speed database and use its mean (or median) to estimate the local average
    speed. By adding all edge estimates, we get the intended result, the expected
    total trip time.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 预测阶段需要一个源路线，该路线以道路网络节点的序列表示，例如我们从 Valhalla 路线规划器中获得的那样。我们查询每一对相邻节点的相应遍历时间分布（如果有的话），并使用其均值（或中位数）来估算局部平均速度。通过将所有边缘估算值相加，我们得到预期的结果，即总行程时间的预期值。
- en: Data Preparation
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据准备
- en: To prepare the data and generate the reference time distribution database, we
    must iterate through all the trips in the source data. Fortunately, the source
    database makes this easy by readily identifying all the trips (see the article
    above).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 为了准备数据并生成参考时间分布数据库，我们必须遍历源数据中的所有行程。幸运的是，源数据库通过方便地标识所有行程来使这一过程变得容易（请参见上文）。
- en: Let us look at the [code](https://github.com/joaofig/eved-explore/blob/main/compute-seg-speed.py)
    that prepares the edge traversal times.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下准备边缘遍历时间的[代码](https://github.com/joaofig/eved-explore/blob/main/compute-seg-speed.py)。
- en: '**Figure 5**— The code above shows the main loop for the data preparation script.
    (Image source: Author)'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 5**— 上面的代码展示了数据准备脚本的主要循环。（图片来源：作者）'
- en: The code in **Figure 5** above shows the main loop of the data preparation code.
    We use the previously created EVED database and save the output data to a new
    speed database. Each record is a time traversal sample for a single road network
    edge. For the same edge, a set of these samples makes up for a statistical time
    distribution, for which we calculate the average, median, and other statistics.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 上述**图 5**中的代码展示了数据准备代码的主循环。我们使用先前创建的 EVED 数据库，并将输出数据保存到一个新的速度数据库中。每条记录都是单一道路网络边缘的时间遍历样本。对于同一边缘，这些样本集构成了统计时间分布，我们将计算均值、中位数以及其他统计数据。
- en: The call on line 5 retrieves a list of all the known trips in the source database
    as triplets containing the trajectory identifier (the table sequential identifier),
    the vehicle identifier, and the trip identifier. We need these last two items
    to retrieve the trip’s signals, as shown in line 10.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 第5行的调用检索了源数据库中所有已知行程的列表，列表中的每个元素都是包含轨迹标识符（表的顺序标识符）、车辆标识符和行程标识符的三元组。我们需要这两个最后的元素来检索行程的信号，如第10行所示。
- en: Lines 10 to 16 contain the code that retrieves the trip’s trajectory as a sequence
    of latitude, longitude, and timestamps. These locations do not necessarily correspond
    to road network nodes; they will mostly be projections into the edges (the orange
    diamonds in **Figure 2**).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 第10到16行包含了获取行程轨迹作为纬度、经度和时间戳序列的代码。这些位置不一定对应于道路网络节点；它们大多是映射到边缘上的（**图 2**中的橙色菱形）。
- en: Now, we can ask the Valhalla map-matching engine to take these points and return
    a poly-line with the corresponding road network node sequence, as shown in lines
    18 to 25\. These are the nodes that we store in the database, along with the projected
    traversal times, which we derive in the final lines of the code.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们可以请求 Valhalla 地图匹配引擎，将这些点传入并返回一个包含相应道路网络节点序列的折线，如第18至25行所示。这些节点将被存储在数据库中，并与我们在代码最后几行中推导出的遍历时间一起存储。
- en: The traversal time projection from the map-matched locations to the node locations
    occurs in two steps. First, line 27 creates a “compound trajectory” object that
    merges the map-matched locations and the corresponding nodes in the trip sequence.
    The object stores each map-matched segment separately for later joining. **Figure
    6** below shows the object constructor ([source file](https://github.com/joaofig/eved-explore/blob/main/common/models.py)).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 从地图匹配位置到节点位置的遍历时间投影分为两步。首先，第27行创建了一个“复合轨迹”对象，将地图匹配位置和相应的节点按旅行顺序合并。该对象将每个地图匹配段单独存储，以便稍后连接。下图**图6**显示了该对象构造器（[源文件](https://github.com/joaofig/eved-explore/blob/main/common/models.py)）。
- en: '**Figure 6** — The compound trajectory constructor receives the map-matched
    trajectory and the map nodes as separate arrays of latitudes and longitudes. The
    code merges both trajectories into a list of segments and later converts these
    to a trajectory list. (Image source: Author)'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**图6** — 复合轨迹构造器接收地图匹配轨迹和地图节点作为分别的纬度和经度数组。代码将这两个轨迹合并为一个段列表，然后再将这些段转换为轨迹列表。（图片来源：作者）'
- en: The compound trajectory constructor starts by merging the sequence of map-matched
    points to the corresponding road network nodes. Referring to the symbols in **Figure
    2** above, the code combines the orange diamond sequence with the red dot sequence
    so they keep the trip order. In the first step, listed in **Figure 7** below,
    we create a list of sequences of orange diamond pairs with any red dots in between.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 复合轨迹构造器通过将地图匹配点序列与相应的道路网络节点合并开始。参考上图**图2**中的符号，代码将橙色菱形序列与红点序列结合，使其保持旅行顺序。在第一步中，如下图**图7**所示，我们创建了一个包含中间有红点的橙色菱形对的序列列表。
- en: '**Figure 7** — The above function merges the map-matched trajectory points
    with the corresponding road network node sequence. The function tries to assign
    sequential nodes, if any, between each pair of trajectory points. A list collects
    all merged sequences for a final consolidation step. (Image source: Author)'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: '**图7** — 上述函数将地图匹配轨迹点与相应的道路网络节点序列合并。该函数尝试为每对轨迹点分配顺序节点（如果有的话）。一个列表将收集所有合并的序列，以便最终整合步骤。（图片来源：作者）'
- en: Once merged, we convert the trajectory segments to node-based trajectories,
    removing the map-matched endpoints and recomputing the traversal times. **Figure
    8** below shows the function that computes the equivalent between-node traversal
    times.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 合并后，我们将轨迹段转换为基于节点的轨迹，移除地图匹配端点并重新计算遍历时间。下图**图8**显示了计算节点间等效遍历时间的函数。
- en: '**Figure 8** — The conversion from a segment to a trajectory requires calculating
    the equivalent times between road network nodes. (Image source: Author)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**图8** — 从段到轨迹的转换需要计算道路网络节点之间的等效时间。（图片来源：作者）'
- en: Using the symbology of **Figure 2**, the code above uses the traversal times
    between two orange diamonds and calculates the times for all sub-segment traversals,
    namely between node-delimited ones. This way, we can later reconstruct all between-node
    traversal times through simple addition.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**图2**中的符号，上述代码使用两个橙色菱形之间的遍历时间，并计算所有子段遍历时间，即节点分隔的时间。通过这种方式，我们可以通过简单的加法，后续重建所有节点间的遍历时间。
- en: The final conversion step occurs on line 28 of **Figure 5** when we convert
    the compound trajectory to a simple trajectory using the functions listed in **Figure
    9** below.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的转换步骤发生在**图5**的第28行，当我们使用**图9**中列出的函数将复合轨迹转换为简单轨迹时。
- en: '**Figure 9** — The final reconstruction step concatenates the projected trajectory
    segments. Note how arrays with more than two elements are clipped. The clipped
    elements correspond to the map-matched positions and are thus removed. Arrays
    with only two components have map-matched positions that coincide with road network
    nodes. (Image source: Author)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**图9** — 最终重建步骤将投影的轨迹段连接起来。注意，包含两个以上元素的数组被裁剪。被裁剪的元素对应于地图匹配的位置，因此被移除。只有两个元素的数组表示地图匹配位置与道路网络节点重合。（图片来源：作者）'
- en: The final step of the code in **Figure 5** (lines 30–32) is to save the computed
    edge traversal times to the database for posterior use.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 代码的最终步骤见**图5**（第30–32行），将计算出的边遍历时间保存到数据库，以供后续使用。
- en: Data Quality
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据质量
- en: How good is the data that we just prepared? Does the EVED allow for good speed
    predictions? Unfortunately, this database was not designed for this purpose so
    that we will see some issues.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚准备的数据有多好？EVED是否能提供良好的速度预测？不幸的是，这个数据库并不是为了这个目的设计的，因此我们会看到一些问题。
- en: The first issue is the number of single-edge records in the final database,
    in this case, a little over two million. The total number of rows is over 5.6
    million, so the unusable single-edge records represent a sizable proportion of
    the database. Almost half the rows are from edges with ten or fewer records.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个问题是最终数据库中单边记录的数量，在这种情况下，超过两百万条。总行数超过560万，因此不可用的单边记录占据了数据库的相当大比例。几乎一半的行来自于仅有十条或更少记录的边。
- en: 'The second issue is trips with very low frequencies. When querying an ad-hoc
    trip, we may fall into areas of very low density, where edge time records are
    scarce or nonexistent. In such conditions, the prediction code tries to compensate
    for the data loss using a simple heuristic: assume the same average speed as in
    the last edge. For larger road sections, and as we see below, we may even copy
    the data from the Valhalla route predictor.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个问题是频率非常低的行程。当查询一个临时行程时，我们可能会进入低密度区域，这里边的时间记录稀缺甚至不存在。在这种情况下，预测代码会尝试使用一个简单的启发式方法来弥补数据的丢失：假设与上一个边的平均速度相同。对于较大的路段，正如我们下面看到的，甚至可能会从Valhalla路线预测器中复制数据。
- en: The bottom line is that some of these predictions will be bad. A better use
    case for this algorithm would be to use a telematics database from fleets that
    frequently travel through the same routes. It would be even better to get more
    data for the same routes.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 底线是，部分预测会很差。这个算法的更好使用场景是使用来自经常通过相同路线的车队的远程信息数据库。如果能为同一路线获取更多数据，效果会更好。
- en: Prediction
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 预测
- en: 'To explore this time-prediction enhancement algorithm, we will use two different
    scripts: one interactive [Streamlit](https://streamlit.io/) application that allows
    you to freely use the map and an analytics script that tries to assess the quality
    of the predicted times by comparing them to known trip times in a [LOOCV](/what-is-cross-validation-622d5a962231)
    type of approach.'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 为了探索这个时间预测增强算法，我们将使用两个不同的脚本：一个交互式的[Streamlit](https://streamlit.io/)应用程序，允许你自由使用地图；另一个是分析脚本，尝试通过将预测的时间与已知的行程时间进行比较来评估预测质量，采用的是一种[LOOCV](/what-is-cross-validation-622d5a962231)类型的方法。
- en: '**Interactive Map**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**交互式地图**'
- en: 'You run the interactive application by executing the following command line
    at the project root:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过在项目根目录下执行以下命令行来运行交互式应用程序：
- en: '[PRE0]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The [interactive application](https://github.com/joaofig/eved-explore/blob/main/speed-predict.py)
    allows you to specify endpoints of a route for Valhalla to predict. **Figure 10**
    below shows what the user interface looks like.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '[交互式应用程序](https://github.com/joaofig/eved-explore/blob/main/speed-predict.py)允许你指定一个路线的起点和终点，供Valhalla进行预测。下面的**图10**展示了用户界面的样子。'
- en: '![](../Images/151e29d40c95efecadca610c445af475.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/151e29d40c95efecadca610c445af475.png)'
- en: '**Figure 10** — The picture above displays a screenshot of the interactive
    application. See the text below for instructions on how to use it. (Image source:
    Author using Folium and OpenStreetMap imagery)'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**图10** — 上面的图片展示了交互式应用程序的截图。请参阅下面的文本了解如何使用它。（图片来源：作者使用Folium和OpenStreetMap影像）'
- en: To operate the application, use the drawing button below the zoom control to
    select the source, destination, and optional waypoints. The application draws
    the sequence as a blue line, as depicted. Next, press the “Predict” button on
    the top left, under the title. The application calls the Valhalla route predictor
    and draws its result as a red line. To the left, you see some of the output, namely
    the time estimates of the map provider and the two below from the algorithm described
    here. The first estimate uses the average of the matching edge time distributions,
    and the second uses the median. For missing data, the algorithm uses the map estimate.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要操作该应用程序，使用缩放控件下方的绘制按钮选择起点、终点和可选的途经点。应用程序会将路线以蓝线的形式绘制出来，如图所示。接下来，点击左上方标题下的“预测”按钮。应用程序会调用Valhalla路线预测器，并将结果以红线的形式绘制出来。左侧显示了一些输出，特别是地图提供商的时间估算，以及下方的两个估算值，这两个估算值来自这里描述的算法。第一个估算使用匹配边时间分布的平均值，第二个估算使用中位数。对于缺失数据，算法会使用地图估算值。
- en: Note that the application draws a black rectangle around the area where data
    is available. Outside of that area, all predictions will be the same as the map’s.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，该应用程序会在数据可用的区域周围绘制一个黑色矩形。该区域之外的所有预测将与地图上的预测相同。
- en: '**Accuracy Estimator**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**准确度估算器**'
- en: To estimate the accuracy of this time predictor, we will test it against known
    trips taken from the database. We will match the edge projections to the corresponding
    map nodes for each sampled trip and then query their duration distributions, excluding
    the data from the trip we want to estimate. This is a process akin to the known
    Leave-One-Out Cross Validation process.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 为了估算该时间预测器的准确性，我们将其与数据库中已知的旅行进行比较。我们将每个采样旅行的边缘投影与相应的地图节点匹配，然后查询它们的持续时间分布，排除我们希望估算的旅行的数据。这是一个类似于已知的“留一交叉验证”（Leave-One-Out
    Cross Validation）过程。
- en: 'Use the following command line to invoke the accuracy estimator script:'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 使用以下命令行来调用准确度估算器脚本：
- en: '[PRE1]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: When finished, the script outputs the estimates to a CSV file that you can use
    for accuracy analysis, as illustrated in **Figure 11** below.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 完成后，脚本将估算结果输出到CSV文件中，你可以用它进行准确性分析，如下图**图 11**所示。
- en: '![](../Images/2cf66f979637bf3f5531fca38a348ffa.png)'
  id: totrans-94
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2cf66f979637bf3f5531fca38a348ffa.png)'
- en: '**Figure 11** — The output CSV file contains four columns with estimates for
    the total trip time: minimum, average, median, and maximum. The sample shown above
    displays the validation for the first twenty trajectories. The four rightmost
    columns were computed directly in the spreadsheet, containing accuracy and data
    quality measures. (Image source: Author)'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 11** — 输出的CSV文件包含四列估算的总旅行时间：最小值、平均值、中位数和最大值。上面显示的样本展示了前20个轨迹的验证。最右边的四列是在电子表格中直接计算的，包含准确性和数据质量度量。（图片来源：作者）'
- en: The output CSV file contains columns with the computed estimates for the trip
    time, including the minimum, average, median, and maximum times. These statistics
    deserve an explanation. The algorithm computes the average time using the average
    of each edge time distribution. It uses the same process to calculate the median.
    The minimum and maximum values derive from the limits of a two-sigma range, ensuring
    that the minimum value never goes below zero. The maximum is 𝜇+2𝜎, and the minimum
    is 𝜇-2𝜎 provided that this value is positive. When negative, the algorithm replaces
    it with the minimum value of the time range.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 输出的CSV文件包含计算得出的旅行时间估算值，包括最小值、平均值、中位数和最大值。这些统计数据需要解释。该算法使用每个边缘时间分布的平均值来计算平均时间。它使用相同的过程来计算中位数。最小值和最大值来自二倍标准差范围的限制，确保最小值永远不会低于零。最大值为𝜇+2𝜎，最小值为𝜇-2𝜎，前提是该值为正数。如果为负数，算法将其替换为时间范围的最小值。
- en: In the image above, the column with the prediction calculated using the average
    is green, while the column with the actual times is blue. To the right of it are
    three columns that help assess the quality of the underlying data. The first column
    counts the number of trip edges with no time data. You can compare it to the next
    column, which contains the number of queried edges for that trip. The ratio is
    in the "***quality***" computed column to the right. Lower values of this metric,
    such as in rows 7 and 12, reflect the lack of edge traversal time data. The final
    column contains the absolute relative error (computed against the average). Values
    in this column tend to have extreme values that negatively correlate to the data
    quality values, but this is just a hint.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图像中，使用平均值计算的预测列是绿色的，而实际时间的列是蓝色的。右侧是三个帮助评估基础数据质量的列。第一列计算没有时间数据的旅行边数。你可以将其与下一列进行比较，后者包含该旅行的查询边数。该比率位于右侧的"***质量***"计算列中。该指标的较低值，如第7行和第12行，反映了缺乏边缘遍历时间数据。最后一列包含绝对相对误差（与平均值进行比较）。该列中的值往往会有极端值，这些值与数据质量值呈负相关，但这仅仅是一个提示。
- en: By the very nature of this algorithm, the more data, the better it should predict
    trip times.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 根据此算法的本质，数据越多，预测旅行时间的准确度应该越高。
- en: Conclusion
  id: totrans-99
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, I presented a data-based alternative to improve the trip duration
    predictions of digital map service providers using a telematics database and map
    matching. The principle behind this solution is using a telematics database with
    data from the vehicles we want to model and their existing time distributions
    to project a planned trip.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我提出了一种基于数据的替代方法，通过使用遥感数据库和地图匹配技术，改进数字地图服务提供商的旅行时间预测。这种解决方案背后的原理是，利用来自我们要建模的车辆的遥感数据库数据及其现有的时间分布，来预测计划的行程。
- en: 'This data-intensive process requires the collection of several samples of travel
    times between the most essential elements of a digital map: the edges between
    each node. We alleviate the search process using H3 indices, enabling simple indexation
    techniques.'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 这个数据密集型过程需要收集多个样本的旅行时间，这些样本涵盖数字地图中最关键的元素：各节点之间的边缘。我们通过使用H3索引来简化搜索过程，从而实现简单的索引技术。
- en: The quality of the prediction will depend a lot on how adequate the data is
    for this process. We expect the best results with telematics databases from fleets
    with repeatable and stable routes.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 预测的质量将很大程度上依赖于数据是否适合此过程。我们预期，来自有可重复和稳定路线的车队的遥感数据库会产生最佳结果。
- en: Future Work
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未来工作
- en: One of the areas for improvement of this prediction method is the data availability
    from past telematics. If you run a fleet that travels through repeated trajectories,
    data will be OK, but this might be an issue if your routes are more varied.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 这种预测方法的改进之一是过去遥感数据的可用性。如果你运营一支经常经过重复路线的车队，数据将是充足的，但如果你的路线更加多样化，这可能会成为一个问题。
- en: A possible line of research would be to find a way to extrapolate known time
    distributions to other road network edges with missing or insufficient data. Can
    we derive similarity measures between edges, or groups of edges, within the same
    road network? If so, and in case of missing data, we could use time distributions
    from other similar edges in the network to calculate the time prediction.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 一个可能的研究方向是寻找一种方法，将已知的时间分布外推到缺少或数据不足的其他道路网络边缘。我们能否在同一道路网络内推导出边缘或边缘组之间的相似性度量？如果可以，并且在数据缺失的情况下，我们可以利用网络中其他相似边缘的时间分布来计算时间预测。
- en: Another area that deserves some attention is the nature of the time distributions.
    This article assumes that no other factors impact the time distributions, which
    is likely untrue. We all know that traffic times vary throughout the day and week
    (to mention just two cycles). We should expect better results by studying and
    incorporating these behaviors into the predictions.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个值得关注的领域是时间分布的性质。本文假设没有其他因素会影响时间分布，而这很可能是不真实的。我们都知道，交通时间在一天和一周内是有变化的（仅举两个周期为例）。通过研究并将这些行为纳入预测，我们应当能够取得更好的结果。
- en: Finally, it would be very valuable for future development to include a provision
    for conditioning the edge time distributions along parameters such as the vehicle
    type, driver profile, or other relevant parameters. The algorithm would better
    predict trip times for the relevant conditions through conditioning and abundant
    data.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，为未来的发展增加一个条件设置，用于调整基于诸如车辆类型、驾驶员档案或其他相关参数的边缘时间分布，将非常有价值。通过条件设置和丰富的数据，算法可以更好地预测相关条件下的旅行时间。
- en: Licensing Information
  id: totrans-108
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 许可信息
- en: The Extended Vehicle Energy Dataset is licensed under Apache 2.0, like its originator,
    the [Vehicle Energy Dataset](https://github.com/gsoh/VED).
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展车辆能量数据集采用Apache 2.0许可证，与其来源，[车辆能量数据集](https://github.com/gsoh/VED)相同。
- en: Reference Material
  id: totrans-110
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: '[joaofig/eved-explore: An exploration of the Extended Vehicle Energy Dataset
    (github.com)](https://github.com/joaofig/eved-explore)'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '[joaofig/eved-explore: 扩展车辆能量数据集的探索（github.com）](https://github.com/joaofig/eved-explore)'
- en: '[Vehicle Energy Dataset](https://ieeexplore.ieee.org/document/9262035)'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '[车辆能量数据集](https://ieeexplore.ieee.org/document/9262035)'
- en: '[Extended vehicle energy dataset (eVED): an enhanced large-scale dataset for
    deep learning on vehicle trip energy consumption](https://github.com/zhangsl2013/eVED)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[扩展车辆能量数据集（eVED）：一个用于深度学习的增强大规模车辆行程能量消耗数据集](https://github.com/zhangsl2013/eVED)'
- en: '[H3 | H3 (h3geo.org)](https://h3geo.org/)'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '[H3 | H3 (h3geo.org)](https://h3geo.org/)'
- en: João Paulo Figueira is a Data Scientist at [tb.lx by Daimler Truck](https://tblx.io/)
    in Lisbon, Portugal.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: João Paulo Figueira是[tb.lx by Daimler Truck](https://tblx.io/)葡萄牙里斯本的数据科学家。
