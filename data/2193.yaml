- en: Intuitive Explanation of Async / Await in JavaScript
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: JavaScript 中 async/await 的直观解释
- en: 原文：[https://towardsdatascience.com/intuitive-explanation-of-async-await-in-javascript-730174c000bd?source=collection_archive---------1-----------------------#2024-09-08](https://towardsdatascience.com/intuitive-explanation-of-async-await-in-javascript-730174c000bd?source=collection_archive---------1-----------------------#2024-09-08)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/intuitive-explanation-of-async-await-in-javascript-730174c000bd?source=collection_archive---------1-----------------------#2024-09-08](https://towardsdatascience.com/intuitive-explanation-of-async-await-in-javascript-730174c000bd?source=collection_archive---------1-----------------------#2024-09-08)
- en: Designing asynchronous pipelines for efficient data processing
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 设计高效数据处理的异步管道
- en: '[](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)[![Vyacheslav
    Efimov](../Images/441e600862b2b93564c6cd81abb0092d.png)](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)
    [Vyacheslav Efimov](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)[![Vyacheslav
    Efimov](../Images/441e600862b2b93564c6cd81abb0092d.png)](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)
    [Vyacheslav Efimov](https://medium.com/@slavahead?source=post_page---byline--730174c000bd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)
    ·10 min read·Sep 8, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--730174c000bd--------------------------------)
    ·阅读时长 10 分钟·2024年9月8日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/b5cfe111c12bf37450e018b376f9c41b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b5cfe111c12bf37450e018b376f9c41b.png)'
- en: '**Note.** This article already assumes that you are familiar with callbacks,
    promises, and have a basic understanding of the asynchronous paradigm in JavaScript.'
  id: totrans-7
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意。** 本文假设你已经熟悉回调函数、Promise，并且对 JavaScript 中的异步编程模式有基本的理解。'
- en: Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 引言
- en: The asynchronous mechanism is one of the most important concepts in JavaScript
    and programming in general. It allows a program to separately execute secondary
    tasks in the background without blocking the current thread from executing primary
    tasks. When a secondary task is completed, its result is returned and the program
    continues to run normally. In this context, such secondary tasks are called **asynchronous**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 异步机制是 JavaScript 中最重要的概念之一，也是编程中的关键概念。它允许程序在后台独立执行次要任务，而不阻塞当前线程执行主要任务。当次要任务完成时，其结果被返回，程序继续正常运行。在这个背景下，这些次要任务被称为**异步**任务。
- en: '**Asynchronous tasks typically include making requests to external environments
    like databases, web APIs or operating systems**. If the result of an asynchronous
    operation does not affect the logic of the main program, then instead of just
    waiting before the task will have completed, it is much better not to waste this
    time and continue executing primary tasks.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**异步任务通常包括向外部环境发送请求，比如数据库、Web API 或操作系统**。如果异步操作的结果不影响主程序的逻辑，那么与其只是等待任务完成，不如充分利用这段时间，继续执行主要任务。'
- en: Nevertheless, sometimes the result of an asynchronous operation is used immediately
    in the next code lines. In such cases, the succeeding code lines should not be
    executed until the asynchronous operation is…
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，有时候异步操作的结果会立即在后续代码行中使用。在这种情况下，后续的代码行应该在异步操作完成之前不执行…
