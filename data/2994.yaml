- en: CV VideoPlayer — Once and For All
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: CV VideoPlayer — 一劳永逸
- en: 原文：[https://towardsdatascience.com/cv-videoplayer-once-and-for-all-b7e1b3349975?source=collection_archive---------6-----------------------#2024-12-12](https://towardsdatascience.com/cv-videoplayer-once-and-for-all-b7e1b3349975?source=collection_archive---------6-----------------------#2024-12-12)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/cv-videoplayer-once-and-for-all-b7e1b3349975?source=collection_archive---------6-----------------------#2024-12-12](https://towardsdatascience.com/cv-videoplayer-once-and-for-all-b7e1b3349975?source=collection_archive---------6-----------------------#2024-12-12)
- en: A Python video player package made for computer vision research
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为计算机视觉研究专门开发的 Python 视频播放器包
- en: '[](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)[![Daniel
    Tomer](../Images/872d23ccef8f51ab54d69c99cb654955.png)](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)
    [Daniel Tomer](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)[![Daniel
    Tomer](../Images/872d23ccef8f51ab54d69c99cb654955.png)](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)
    [Daniel Tomer](https://medium.com/@daniel_92063?source=post_page---byline--b7e1b3349975--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)
    ·6 min read·Dec 12, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b7e1b3349975--------------------------------)
    ·6 分钟阅读·2024年12月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/fe525d3da0b40b616d63db54a0c0a9fc.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fe525d3da0b40b616d63db54a0c0a9fc.png)'
- en: Image by author
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: When developing computer vision algorithms, the journey from concept to working
    implementation often involves countless iterations of watching, analyzing, and
    debugging video frames. As I dove deeper into computer vision projects, I found
    myself repeatedly writing the same boilerplate code for video visualization and
    debugging.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在开发计算机视觉算法时，从概念到可用实现的过程通常涉及无数次观看、分析和调试视频帧的迭代。随着我深入计算机视觉项目，我发现自己反复编写相同的样板代码来进行视频可视化和调试。
- en: At some point, I decided enough was enough, so I created [**CV VideoPlayer**](https://pypi.org/project/cvvideoplayer/),
    a Python-based open-source video player package, specifically designed for computer
    vision practitioners that will solve this problem once and for all.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有一天，我决定不再忍受，于是我创建了 [**CV VideoPlayer**](https://pypi.org/project/cvvideoplayer/)，这是一个基于
    Python 的开源视频播放器包，专为计算机视觉从业者设计，旨在一劳永逸地解决这个问题。
- en: '![](../Images/fb722b9a39bac8d52043f3f1eedd1ce4.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb722b9a39bac8d52043f3f1eedd1ce4.png)'
- en: CV video player “Double frame mode” with added visualizations and keyboard shortcuts.
    Image by author
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: CV 视频播放器“双帧模式”加入了可视化和键盘快捷键。图片由作者提供
- en: Debugging video-related algorithms is hard
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 调试视频相关算法很困难
- en: 'If you’ve ever developed an algorithm for video analysis, you’ve probably written
    some version of the following code to help you visualize and debug it:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你曾经开发过视频分析算法，你可能已经编写过以下某个版本的代码，帮助你进行可视化和调试：
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: But in almost all projects I’ve worked on this code was rarely enough. As the
    project went on I found myself adding more and more functionality to help me understand
    what was going on.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但在我参与的几乎所有项目中，这段代码都远远不够。随着项目的推进，我发现自己不断添加更多功能，以帮助我理解发生了什么。
- en: '**For example:**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**例如：**'
- en: Navigation through the video back and forth frame by frame.
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在视频中逐帧前后导航。
- en: The ability to record the output to a file.
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 具备将输出记录到文件的能力。
- en: Supporting sources other than a simple video file (frame folder, stream, remote
    storage, etc.)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支持除简单视频文件之外的其他数据源（帧文件夹、流、远程存储等）
- en: '**But the thing that annoyed me the most was the lack of interactivity**. Using
    this kind of code, The visualization is created before rendering and cannot change
    once displayed. And, while this is okay for simple algorithms, for the more complex
    ones, there is just way too much information needed for each frame. And without
    the ability to decide, on the fly, what you want to display, you find yourself
    running the same video again and again, each time with different visualization
    parameters.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: '**但最让我烦恼的事是缺乏交互性**。使用这种代码，视觉化效果在渲染之前就已创建，且一旦显示出来便无法更改。而且，虽然这种方式适用于简单的算法，但对于更复杂的算法来说，每一帧所需的信息量实在太多了。而且，如果不能动态决定要显示什么，你会发现自己一次又一次地重复播放同一个视频，每次使用不同的可视化参数。'
- en: This process was tedious and exhausting.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程既繁琐又令人疲惫。
- en: Enter CV VideoPlayer
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 进入CV VideoPlayer
- en: '![](../Images/321d31566897a63f73c1694372814775.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/321d31566897a63f73c1694372814775.png)'
- en: Image by author
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: '[CV VideoPlayer](https://pypi.org/project/cvvideoplayer/) was born from the
    need for a simple customizable solution for interactively rendering videos and
    frames. It allows any number of overlays, sidebars, or any other frame edits,
    each of which can be easily switched on and off by the user during run time. let’s
    see an example of how this is done:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '[CV VideoPlayer](https://pypi.org/project/cvvideoplayer/)的诞生源于对一个简单可定制解决方案的需求，该方案能够交互式地渲染视频和帧。它允许添加任意数量的叠加层、侧边栏或其他帧编辑，用户可以在运行时轻松开启或关闭这些功能。让我们看看如何实现这一点的示例：'
- en: Installation
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 安装
- en: We start by installing the package using `pip install cvvideoplayer`
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先通过`pip install cvvideoplayer`安装这个包。
- en: Playing vanilla video
  id: totrans-28
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 播放原始视频
- en: 'We can then import the video player and run an unedited video with the following
    code:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，我们可以导入视频播放器并使用以下代码运行未编辑的视频：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This will open the video player and allow you to play it with the spacebar or
    using the arrows, it will also add some default built-in `frame-edit-callbacks`
    which we will elaborate on in the following section.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这将打开视频播放器，并允许你使用空格键或箭头键播放视频，还会添加一些默认的内置`frame-edit-callbacks`，我们将在接下来的部分详细阐述。
- en: '![](../Images/0f99aa9cb9dbb81615f8607d90bafae6.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0f99aa9cb9dbb81615f8607d90bafae6.png)'
- en: Image by author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 作者提供的图片
- en: Editing the frames to add visualization
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编辑帧以添加可视化效果
- en: 'To add custom-built visualization to the video we can use the `frame_edit_callbacks`
    argument of the `create_video_player` constructor function like so:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 要为视频添加自定义的可视化效果，我们可以像这样使用`create_video_player`构造函数的`frame_edit_callbacks`参数：
- en: '[PRE2]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: When unspecified, the default list will be exactly the one in the example above.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果未指定，默认列表将与上面示例中的列表完全一致。
- en: Built-in callbacks
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 内置回调
- en: 'There are a bunch of built-in callbacks to use such as:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多内置的回调可以使用，例如：
- en: '`FitFrameToScreen` — Automatically resizes the frame to fit the screen size.'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FitFrameToScreen` — 自动调整帧的大小以适应屏幕尺寸。'
- en: '`FrameInfoOverlay` — Prints the frame number and original frame resolution
    on the top left corner.'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FrameInfoOverlay` — 在左上角打印帧编号和原始帧分辨率。'
- en: '`KeyMapOverlay` — Automatically detects and prints all available keyboard shortcuts
    (Also those added by the user).'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`KeyMapOverlay` — 自动检测并打印所有可用的快捷键（包括用户自定义的快捷键）。'
- en: '`DetectionCsvPlotter` — Plots Bounding boxes specified in a CSV with the following
    Header: frame_id, label, x1, y1, width, height, score'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`DetectionCsvPlotter` — 绘制CSV文件中指定的边界框，CSV的表头为：frame_id, label, x1, y1, width,
    height, score'
- en: '`FrameNormlizer` — Allows the user to adjust the dynamic range of the image.'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`FrameNormlizer` — 允许用户调整图像的动态范围。'
- en: '`HistogramEqulizer` — self-explanatory'
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`HistogramEqulizer` — 不言自明'
- en: And more are added with each version.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 每个版本都会添加更多功能。
- en: Creating a custom callback
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 创建自定义回调
- en: 'Here is where the usefulness of the package shines. To add your own custom
    visualization you create a new class that inherits `BaseFrameEditCallback` and
    implements the `edit_frame` method, for example:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 这里正是这个包的有用之处。为了添加你自己的自定义可视化，你需要创建一个继承自`BaseFrameEditCallback`的新类，并实现`edit_frame`方法，例如：
- en: '[PRE3]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Additionally, you can add setup and teardown methods by overriding these methods
    in the parent class:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你还可以通过重写父类中的这些方法来添加设置和清理方法：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Adding Custom keyboard shortcuts
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 添加自定义快捷键
- en: For each callback, CV Video Player allows you to add custom keyboard shortcuts
    that can change the visualization it does at run time.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个回调，CV Video Player允许你添加自定义快捷键，这些快捷键可以在运行时改变可视化效果。
- en: 'The most basic shortcut is enabling/disabling the callback and is created using
    the `enable_disable_key` parameter like so:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 最基本的快捷键是启用/禁用回调，它是通过 `enable_disable_key` 参数创建的，像这样：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'The string passed here can be any combination of modifiers (ctrl, alt, and
    shift) with a letter or number for example: **“crtl+alt+s”**, **“g”**, **“shift+v”**,
    **“crtl+1”** and so on.'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 传递的字符串可以是任何修饰符（ctrl、alt 和 shift）与字母或数字的组合，例如：**“ctrl+alt+s”**、**“g”**、**“shift+v”**、**“ctrl+1”**，等等。
- en: To add shortcuts that change the visualization itself, you can override the`additional_keyboard_shortcuts`
    property which returns a list of the dataclass`KeyFunction` .
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 要添加更改可视化本身的快捷键，你可以覆盖 `additional_keyboard_shortcuts` 属性，该属性返回一个包含 `KeyFunction`
    数据类的列表。
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'A `KeyFunction` is constructed using three arguments:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '`KeyFunction` 是通过三个参数构造的：'
- en: 'The `key` argument — Same as for `enable_disable_key` , The string passed here
    can be any combination of modifiers (ctrl, alt, and shift) with a letter or number
    for example: **“crtl+alt+s”**, **“g”**, **“shift+v”**, **“crtl+1”**'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`key` 参数——与 `enable_disable_key` 相同，传递的字符串可以是任何修饰符（ctrl、alt 和 shift）与字母或数字的组合，例如：**“ctrl+alt+s”**、**“g”**、**“shift+v”**、**“ctrl+1”**。'
- en: The `description` argument — This is used by the `KeyMapOverlay` callback to
    print all the available shortcuts on the screen.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`description` 参数——这个参数由 `KeyMapOverlay` 回调使用，用于在屏幕上打印所有可用的快捷键。'
- en: The `function` argument — Has to be a function that accepts no arguments.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`function` 参数——必须是一个不接受任何参数的函数。'
- en: 'In many cases, the KeyFunction will receive a function that toggles some boolean
    attribute of the callback, which will change something that the `edit_frame`method
    does. So something like:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在许多情况下，KeyFunction 将接收一个函数，该函数切换回调的某些布尔属性，从而改变 `edit_frame` 方法的某些行为。所以像这样：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Double Frame Mode
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 双帧模式
- en: Many times, I found myself wanting to compare two different visualizations side
    by side. For example, comparing two detectors or an algorithm's output with the
    original frame without modifications, and so on.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 很多时候，我发现自己想要并排比较两种不同的可视化。例如，比较两个探测器，或将算法的输出与原始帧进行对比（没有修改），等等。
- en: 'To do that I added `double_frame_mode` which can be turned on by:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 为了做到这一点，我添加了 `double_frame_mode`，可以通过以下方式开启：
- en: '[PRE8]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: The video at the beginning of this blog is an example of what this mode looks
    like.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 本博客开头的视频展示了此模式的样子。
- en: In this mode, you can use “ctrl+1” and “ctrl+2" to decide which frame visualization
    you want to control with the keyboard.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在此模式下，你可以使用“ctrl+1”和“ctrl+2”来决定用键盘控制哪个帧的可视化。
- en: 'By default, both frames will have the same callbacks available but if you want
    different callbacks for the right frame you can use the `right_frame_callback`
    argument to give the right frame a different set of callbacks (the left frame
    will have the ones passed to the `frame_edit_callback` argument):'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，两个帧将具有相同的回调可用，但如果你希望右帧使用不同的回调，你可以使用 `right_frame_callback` 参数为右帧提供不同的回调集合（左帧将使用传递给
    `frame_edit_callback` 参数的回调）。
- en: '[PRE9]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: To conclude
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: I Hope this tool comes in handy for all of you. If you have any ideas on how
    to improve it, please let me know in the issues tab on the project’s [**GitHub
    page**](https://github.com/danieltomer1/CVVideoPlayer), and don’t forget to leave
    a star while you're at it :) …
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这个工具能对大家有所帮助。如果你有任何改进的想法，请在项目的 [**GitHub 页面**](https://github.com/danieltomer1/CVVideoPlayer)
    的问题标签中告诉我，顺便别忘了给项目加个星标 :) …
