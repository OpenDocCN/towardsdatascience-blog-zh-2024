- en: Unit Disk and 2D Bounded KDE
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 单位圆盘与2D有界核密度估计
- en: 原文：[https://towardsdatascience.com/unit-disk-and-2d-bounded-kde-2cb5c3544f1c?source=collection_archive---------8-----------------------#2024-07-25](https://towardsdatascience.com/unit-disk-and-2d-bounded-kde-2cb5c3544f1c?source=collection_archive---------8-----------------------#2024-07-25)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/unit-disk-and-2d-bounded-kde-2cb5c3544f1c?source=collection_archive---------8-----------------------#2024-07-25](https://towardsdatascience.com/unit-disk-and-2d-bounded-kde-2cb5c3544f1c?source=collection_archive---------8-----------------------#2024-07-25)
- en: How to extend Bounded Kernel Density Estimation to the 2D case? Let’s explore
    how to fix boundary bias around the unit disk.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何将有界核密度估计扩展到二维情况？让我们探索如何修正单位圆盘周围的边界偏差。
- en: '[](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)[![Thomas
    Rouch](../Images/a8440bbed59cd8d9cdd752cf1fea2831.png)](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)
    [Thomas Rouch](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)[![Thomas
    Rouch](../Images/a8440bbed59cd8d9cdd752cf1fea2831.png)](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)
    [Thomas Rouch](https://medium.com/@thom01.rouch?source=post_page---byline--2cb5c3544f1c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)
    ·12 min read·Jul 25, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--2cb5c3544f1c--------------------------------)
    ·12分钟阅读·2024年7月25日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/ec9b89e02ffca87b6de3078ca825c636.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ec9b89e02ffca87b6de3078ca825c636.png)'
- en: Photo by [Leo_Visions](https://unsplash.com/@leo_visions_?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Leo_Visions](https://unsplash.com/@leo_visions_?utm_source=medium&utm_medium=referral)提供，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 0\. Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 0. 引言
- en: MonteCarlo Integration
  id: totrans-9
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 蒙特卡洛积分
- en: Numerical methods become essential when closed-form solutions for integrals
    are unavailable. While traditional numerical integration techniques like trapezoidal
    integration are highly effective for low-dimensional and smooth integrals, their
    efficiency diminishes rapidly, becoming clearly intractable as the dimensionality
    of the integrand increases.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当积分的闭式解不可用时，数值方法变得至关重要。虽然传统的数值积分技术如梯形积分对于低维和平滑积分非常有效，但随着被积函数维度的增加，它们的效率迅速下降，变得明显不可行。
- en: Unlike traditional techniques, the convergence rate of Monte Carlo methods,
    which leverage randomness to evaluate integrals, does not depend on the dimensionality
    of the integrand. It depends solely on the number of random samples drawn.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 与传统技术不同，蒙特卡洛方法通过利用随机性来评估积分，其收敛速度不依赖于被积函数的维度。它仅依赖于抽取的随机样本数量。
- en: Sampling
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 采样
- en: As described in the equation below, the Monte Carlo estimates the integral by
    a weighted mean of the operand evaluated at samples drawn from a given distribution.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 如下方公式所示，蒙特卡洛通过加权平均被积函数在从给定分布中抽取的样本点上的值来估计积分。
- en: '![](../Images/6d160d6f1e82e716632aebce4d6465d3.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6d160d6f1e82e716632aebce4d6465d3.png)'
- en: Monte Carlo Integration thus requires to be able to sample from arbitrary distributions
    across arbitrary dimensions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，蒙特卡洛积分要求能够在任意维度上从任意分布中进行采样。
- en: With `n` samples, these methods converge to the correct result at a rate of
    `O(1/sqrt(n))`. To halve the error, you need four times as many samples. Therefore,
    optimizing the sampling process to make the most of each sample is crucial.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`n`个样本时，这些方法以`O(1/sqrt(n))`的速率收敛到正确结果。为了将误差减半，您需要四倍的样本量。因此，优化采样过程以最大化每个样本的效用至关重要。
- en: Uniform sampling helps ensuring that all regions of the integrand are equally
    likely to be sampled, avoiding the redundancy of closely spaced samples that provide
    little additional information.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 均匀采样有助于确保被积函数的所有区域都有相同的概率被采样，从而避免提供少量附加信息的紧密间隔样本的冗余。
- en: Other techniques like importance sampling for instance aims at reducing the
    variance by prioritizing the sampling of more significant regions of the integrand.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 其他技术，如重要性采样，旨在通过优先采样被积函数的更重要区域来减少方差。
- en: Visualize 2D Disk Sampling
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化 2D 磁盘采样
- en: 'The book [*PBRT (Physically Based Rendering: From Theory To Implementation)*](https://pbrt.org/)
    does a great job at explaining methods to sample from different geometries like
    disks, triangles or hemispheres to compute solutions to the integral equations
    that describe light scattering.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 书籍 [*PBRT（基于物理的渲染：从理论到实现）*](https://pbrt.org/) 很好地解释了如何从不同几何体（如磁盘、三角形或半球）中进行采样，以计算描述光散射的积分方程的解。
- en: I was excited by the variety of methods I discovered for sampling a disk and
    intrigued by their underlying principles. To better understand and visually compare
    these 2D distributions, I decided to plot a density map for each method.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我对发现的多种磁盘采样方法感到兴奋，并对它们的基本原理充满兴趣。为了更好地理解并直观比较这些 2D 分布，我决定为每种方法绘制一个密度图。
- en: However, a boundary bias occurs when running kernel density estimation (KDE)
    on a disk because the kernel function extends beyond the boundary of the disk,
    leading to an underestimation of the density near the edges.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在对磁盘进行核密度估计（KDE）时，会发生边界偏差，因为核函数扩展到磁盘的边界之外，导致边缘附近的密度被低估。
- en: This article aims at providing a way to visualize an unbiased density map of
    the 2D unit disk.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在提供一种可视化 2D 单位磁盘无偏密度图的方法。
- en: Article Outline
  id: totrans-24
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文章大纲
- en: 'Building upon my previous article [*Bounded Kernel Density Estimation*](https://medium.com/towards-data-science/bounded-kernel-density-estimation-2082dff3f47f),
    where I explored various methods used to address the boundary bias in the 1D context,
    we’ll test the following methods:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 基于我之前的文章 [*有界核密度估计*](https://medium.com/towards-data-science/bounded-kernel-density-estimation-2082dff3f47f)，在文章中我探讨了在
    1D 上解决边界偏差的各种方法，我们将测试以下方法：
- en: '*Reflection*: Reflect points with respect to the circle’s edge'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*反射*：相对于圆的边缘反射点'
- en: '*Transform*: Map bounded disk to an unbounded space to perform KDE'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*变换*：将有界磁盘映射到无界空间，以执行 KDE'
- en: '*Weighting*: Cut and normalize the kernels spreading outside the disk'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '*加权*：裁剪并归一化超出磁盘的核心扩展'
- en: '![](../Images/b9ef2f835f1665dd3581a0c8ba5c5944.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b9ef2f835f1665dd3581a0c8ba5c5944.png)'
- en: Photo by [Nathan Shipps](https://unsplash.com/@nateshipps?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Nathan Shipps](https://unsplash.com/@nateshipps?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 1\. Boundary Bias around the disk
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1. 磁盘周围的边界偏差
- en: Boundary bias
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 边界偏差
- en: As As discussed in the introduction, conventional Kernel Density Estimations
    (KDE) struggle to effectively manage distributions with compact support, such
    as points within a disk.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 正如在引言中讨论的那样，传统的核密度估计（KDE）在处理具有紧凑支持的分布时表现不佳，例如磁盘内的点。
- en: Indeed, as illustrated in the figure below with a square domain, kernel span
    tends to leak beyond the boundary, artificially lowering the density near the
    edges.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 确实，如下图所示，在一个正方形领域中，核的扩展往往会超出边界，人工降低了边缘附近的密度。
- en: '![](../Images/9f37564088b91ec08ce16c5e5d9ccd74.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f37564088b91ec08ce16c5e5d9ccd74.png)'
- en: Kernel leaking beyond the boundaries of a square — Figure by the author
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 核心泄漏超出正方形边界 — 图自作者
- en: Vanilla Gaussian KDE
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 传统高斯 KDE
- en: The code below samples points on a grid at regular intervals across the unit
    square, retaining only those within the disk to input into a vanilla Gaussian
    KDE. Predicted densities are then set to zero outside the disk after the KDE evaluation
    to keep the boundary constraint.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码在单位正方形上按规律间隔采样网格点，仅保留位于磁盘内部的点，然后将其输入到传统高斯 KDE 中。KDE 评估后，磁盘外的预测密度被设为零，以保持边界约束。
- en: Finally, the density is normalized by multiplying it by the disk area (π), ensuring
    an expected density of 1.0 throughout the interior of the disk.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，通过将密度乘以磁盘面积（π）来归一化密度，确保磁盘内部的预期密度为 1.0。
- en: In practice, the input points are not lying on a regular grid, and thus we need
    to sample a grid at display resolution to evaluate the estimated KDE.
  id: totrans-40
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 实际上，输入点并非位于规则的网格上，因此我们需要以显示分辨率对网格进行采样，以评估估计的 KDE。
- en: The left figure below has been obtained by running the code above. A noticeable
    density decrease can be observed around the disk’s edge. To better illustrate
    the falloff near the edge, I have also extracted the density profile along the
    diagonal, which ideally should be a perfect step function.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 以下左图是通过运行上述代码得到的。可以观察到圆盘边缘附近的密度明显下降。为了更好地展示边缘附近的下降，我还提取了沿对角线的密度分布图，理想情况下它应该是一个完美的阶跃函数。
- en: '![](../Images/3e6859b460524a0397a5bd55438960df.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e6859b460524a0397a5bd55438960df.png)'
- en: 'Left: Base KDE on samples drawn uniformly within the unit disk. Right: Corresponding
    1D density profile along the diagonal of the density map — Figure by the author'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 左图：基于在单位圆盘内均匀抽取样本的KDE。右图：对应的1D密度分布图沿密度图的对角线方向 — 作者提供的图。
- en: '![](../Images/a451c14e76bf8026d821782d91e85316.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a451c14e76bf8026d821782d91e85316.png)'
- en: Photo by [Михаил Секацкий](https://unsplash.com/@sekatsky?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 照片由[Михаил Секацкий](https://unsplash.com/@sekatsky?utm_source=medium&utm_medium=referral)提供，来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 2\. Reflection Trick
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2. 反射技巧
- en: Reflection
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 反射
- en: In 1D, the trick consists in augmenting the set of samples by reflecting them
    across the left and right boundaries. It helps compensating the lack of neighbors
    on the other side of the boundary. This is equivalent to reflecting the tails
    of the local kernels to keep them in the bounded domain. The formula below is
    used to reflect positive 1D values.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在1D中，这个技巧的核心是通过将样本反射到左右边界外来增加样本集。这有助于弥补边界另一侧邻居的缺失。这相当于将局部核函数的尾部反射回来，保持它们在有界区域内。下面的公式用于反射正的1D值。
- en: Note that it works best when the density derivative is zero at the boundary.
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意，当密度导数在边界处为零时，这种方法效果最佳。
- en: '![](../Images/98530866e0af243fd41b016f0e38e7e5.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/98530866e0af243fd41b016f0e38e7e5.png)'
- en: However, in 2D, there isn’t a universal reflection formula; it depends on the
    boundary shape. Intuitively, the reflection should align with the boundary normals.
    Therefore, for a disk, it makes sense to reflect points along the radial direction,
    which means that the reflection only modifies the radius.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在2D中，并没有通用的反射公式；它取决于边界的形状。直观上，反射应该与边界法线对齐。因此，对于圆盘来说，将点沿径向反射是有意义的，这意味着反射只会修改半径。
- en: '![](../Images/ddcf038f7fde1be4df50505f03c5a337.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ddcf038f7fde1be4df50505f03c5a337.png)'
- en: Note that handling boundary reflections of the unit square is more challenging
    than the disk due to the non-differentiability of its boundary line at the corners.
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意，处理单位正方形的边界反射比处理圆盘要更具挑战性，因为正方形在角落处的边界线不可微。
- en: Intuitive Disk Reflection
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 直观的圆盘反射
- en: Intuitively, we can mimic the 1D case by reflecting the point symmetrically
    across the boundary. A point at radius `r` is at a distance of `1-r` from the
    edge. By adding this distance beyond the boundary, we get `2-r`. The equation
    and figure below demonstrate how points are reflected across the edge of the unit
    disk using this symmetry.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 直观上，我们可以通过将点对称地反射到边界外来模拟1D的情况。一个半径为`r`的点离边缘的距离为`1-r`。通过在边界外增加这个距离，我们得到`2-r`。下面的方程和图示演示了如何利用这种对称性将点反射到单位圆盘的边界外。
- en: '![](../Images/c43146ac1fac68bc6df51db91490fe1f.png)![](../Images/978bb2781e207ce52a903fd5cc3d4cdc.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c43146ac1fac68bc6df51db91490fe1f.png)![](../Images/978bb2781e207ce52a903fd5cc3d4cdc.png)'
- en: Colored points reflected symmetrically across the unit disk edge using f(r)=2-r.
    Circles at radius r=1 and r=2\. — Figure by the author
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用f(r)=2-r公式对单位圆盘边缘对称反射的彩色点。半径r=1和r=2的圆圈。 — 作者提供的图。
- en: However, when this method is applied to correct the density map, a slight falloff
    around the edge is still noticeable, although it significantly improves upon the
    standard KDE.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，当这种方法应用于校正密度图时，尽管它相较于标准KDE有了显著改善，但在边缘附近仍然可以看到轻微的下降。
- en: '![](../Images/b884385683ef61bf3bf280acaa30518f.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b884385683ef61bf3bf280acaa30518f.png)'
- en: 'Left: Reflection KDE on samples drawn uniformly within the unit disk. Right:
    Corresponding 1D density profile along the diagonal of the density map — Figure
    by the author'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 左图：在单位圆盘内均匀抽取样本的反射KDE。右图：对应的1D密度分布图沿密度图的对角线方向 — 作者提供的图。
- en: Optimized Disk Reflection
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 优化的圆盘反射
- en: Let’s see how we can improve this reflection function to better suit the disk
    boundary. Unlike the 1D case, the `f(r)=2-r` reflection distorts the space and
    maps the unit disk of area π to a larger ring of area 3π.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看如何改进这个反射函数，以更好地适应圆盘边界。与一维情况不同，`f(r)=2-r` 的反射会扭曲空间，将面积为π的单位圆盘映射到一个面积为3π的更大圆环上。
- en: Ideally we’d like that the area of each differential surface inside the disk
    remains invariant during the reflection mapping. As illustrated in the figure
    below, we consider differential variations dr and dθ around a point at radius
    r.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们希望圆盘内每个微分面在反射映射过程中保持不变。如下面的图所示，我们考虑在半径r处的点周围的微分变化dr和dθ。
- en: '![](../Images/607de0ee48e70824896038fb61d2c310.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/607de0ee48e70824896038fb61d2c310.png)'
- en: Differential surface before (r, dr, dθ) and after the reflection — Figure by
    the author
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 反射前后的微分面（r, dr, dθ） — 图由作者提供
- en: '![](../Images/3720ba80ee5feeef4ebad68f7c0fee6f.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3720ba80ee5feeef4ebad68f7c0fee6f.png)'
- en: The conservation of area results in a differential equation that the reflection
    function must satisfy. Note that the minus sign arises because the function f
    is necessarily decreasing due to its reflective nature.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 面积守恒导致了反射函数必须满足的微分方程。请注意，负号的出现是因为由于反射性质，函数f必然是递减的。
- en: '![](../Images/ce8684a6bdcce66d55a294d7c1a33ea1.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce8684a6bdcce66d55a294d7c1a33ea1.png)'
- en: Given the boundary condition `f(1)=1` , there’s a single solution to the differential
    equation `-x=yy'`.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 给定边界条件`f(1)=1`，该微分方程`-x=yy'`有唯一解。
- en: '![](../Images/c11701f3d19077d43ee4f32d22b606e8.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c11701f3d19077d43ee4f32d22b606e8.png)'
- en: We just have to update our code with the new reflection formula. Reflected points
    are now contained within the ring between radii 1 and √2\. As we can see, reflected
    points are not too distorted and keep a similar local density.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只需要用新的反射公式更新我们的代码。现在，反射点被限制在半径为1和√2之间的圆环内。如我们所见，反射点没有被过度扭曲，并保持相似的局部密度。
- en: '![](../Images/5713b62b40d16b0e1158ed018bf357da.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5713b62b40d16b0e1158ed018bf357da.png)'
- en: Colored points reflected across the unit disk edge using f(r)=sqrt(2-r²). Circles
    at radius r=1, r=sqrt(2) and r=2\. — Figure by the author
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`f(r)=sqrt(2-r²)`反射穿过单位圆盘边缘的彩色点。半径为r=1、r=sqrt(2)和r=2的圆圈。 — 图由作者提供
- en: This time, the resulting density estimate looks nearly perfect!
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这次，得到的密度估计看起来几乎完美！
- en: '![](../Images/d18de7cdf9572a7a9f18ba3c79502412.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d18de7cdf9572a7a9f18ba3c79502412.png)'
- en: 'Left: Optimized reflection KDE on samples drawn uniformly within the unit disk.
    Right: Corresponding 1D density profile along the diagonal of the density map
    — Figure by the author'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 左：在单位圆盘内均匀抽样的优化反射KDE。右：沿密度图对角线的相应一维密度分布 — 图由作者提供
- en: '![](../Images/03232e5fa3a128665deea8c6fe3bb939.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/03232e5fa3a128665deea8c6fe3bb939.png)'
- en: Photo by [SpaceX](https://unsplash.com/@spacex?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 照片来自[SpaceX](https://unsplash.com/@spacex?utm_source=medium&utm_medium=referral)提供，图片来源于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 3\. Transformation Trick
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 变换技巧
- en: KDE in transformed space
  id: totrans-80
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 转换空间中的 KDE
- en: The transformation trick maps the bounded data to an unbounded space, where
    the vanilla KDE can be safely applied. This results in using a different kernel
    function for each input sample.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 变换技巧将有界数据映射到无界空间，在那里可以安全地应用普通的KDE。这意味着每个输入样本将使用不同的核函数。
- en: However, as seen in previous article [*Bounded Kernel Density Estimation*](https://medium.com/towards-data-science/bounded-kernel-density-estimation-2082dff3f47f),
    , when the density is non-zero at the boundary and does not tend to infinity,
    it often results in unwanted artifacts.
  id: totrans-82
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 然而，正如在上一篇文章[*有界核密度估计*](https://medium.com/towards-data-science/bounded-kernel-density-estimation-2082dff3f47f)中所看到的，当密度在边界处非零且不趋向于无穷大时，往往会导致不想要的伪影。
- en: Transformation
  id: totrans-83
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 变换
- en: Building upon our approach from the previous section, we will again use central
    symmetry and choose a transformation `f` that alters only the radius. Transformed
    variables will be indicated with a tilde `~`.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 基于我们上一节的方法，我们将再次使用中心对称性，并选择一个仅改变半径的变换`f`。变换后的变量将用波浪符号`~`表示。
- en: '![](../Images/5b4f6a1a2a188469ad2b463c870c6ed2.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b4f6a1a2a188469ad2b463c870c6ed2.png)'
- en: However, unlike the reflection case, where we preserved the unit disk and used
    the transformation solely to add new points, here we directly transform and use
    the points from within the unit disk.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，与反射情况不同，在那里我们保持单位圆盘并仅使用变换来添加新点，在这里我们直接变换并使用单位圆盘内的点。
- en: Thus the boundary conditions are different and enforce instead to left the origin
    untouched and to dilate the disk to infinity.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，边界条件是不同的，强制要求保持原点不变并将圆盘膨胀到无穷大。
- en: '![](../Images/955be14ee2706712da691cf257bfd8ba.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/955be14ee2706712da691cf257bfd8ba.png)'
- en: Density Transformation
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 密度变换
- en: When applying a transformation T to a multi-dimensional random variable U, the
    resulting density is found by dividing by the absolute value of the determinant
    of the Jacobian matrix of T.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 当对多维随机变量 U 应用变换 T 时，得到的密度是通过除以 T 的雅可比矩阵行列式的绝对值来计算的。
- en: '![](../Images/198b30a69bbf3e6710e4b3f31a971c8d.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/198b30a69bbf3e6710e4b3f31a971c8d.png)'
- en: For instance, the polar transformation gives us the following density.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，极坐标变换给我们带来了以下密度。
- en: '![](../Images/d67aab7843e4c3b8a8829d0c4d9da02e.png)'
  id: totrans-93
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d67aab7843e4c3b8a8829d0c4d9da02e.png)'
- en: Based on the two previous properties, we can derive the relationship between
    the density before and after the transformation. This will enable us to recover
    the true density from the density estimated on the transformed points.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 基于之前的两个性质，我们可以推导出变换前后密度之间的关系。这将使我们能够从变换后的点估算的密度中恢复真实的密度。
- en: '![](../Images/8647eca330ee2cb37f89ee21b4bb4579.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8647eca330ee2cb37f89ee21b4bb4579.png)'
- en: Which transformation to choose? Log, Inverse ?
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 该选择哪种变换？对数变换，还是反向变换？
- en: There are plenty of functions that start from zero and increase to infinity
    as they approach 1\. There is no one-size-fits-all answer.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多从零开始并在接近 1 时增加到无穷大的函数。没有一种通用的答案。
- en: The figure below showcases potential candidate functions created using logarithmic
    and inverse transformations to introduce a singularity at `r=-1` and `r=1`.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了使用对数和反向变换创建的潜在候选函数，用于在 `r=-1` 和 `r=1` 处引入奇异性。
- en: '![](../Images/7cb4fa038b8fdca1a34f48f27ca9ffce.png)'
  id: totrans-99
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7cb4fa038b8fdca1a34f48f27ca9ffce.png)'
- en: Examples of functions that equal zero at the origin and tend to infinity as
    they approach +/-1 — Figure by the author
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些在原点为零并在接近 +/-1 时趋向于无穷大的函数示例 —— 图由作者提供
- en: Based on the equation describing the transformed density, we aim to find a transformation
    that maps the uniform distribution to a form easily estimable by vanilla KDE.
    If we have a uniform distribution `p(x,y)`, the density in transformed space is
    thus proportional to the function `g` below.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 基于描述变换后的密度的方程，我们旨在找到一个变换，将均匀分布映射到一个通过普通 KDE 易于估算的形式。如果我们有一个均匀分布 `p(x,y)`，那么在变换后的空间中的密度与下方函数
    `g` 成正比。
- en: '![](../Images/cda78ca4d98f029d2cf455cc0c8c9da8.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cda78ca4d98f029d2cf455cc0c8c9da8.png)'
- en: Logarithmic and inverse candidates give the following `g` functions.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 对数和反向变换候选给出了以下 `g` 函数。
- en: '![](../Images/42e89020c8d230eb49779cafba117417.png)![](../Images/39c366866c1df22882164b364a735321.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/42e89020c8d230eb49779cafba117417.png)![](../Images/39c366866c1df22882164b364a735321.png)'
- en: They’re both equivalent when `r` approaches zero and only converge to a meaningful
    value when α is equal to one.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 当 `r` 接近零时，它们是等价的，只有当 α 等于一时，它们才会收敛到有意义的值。
- en: '![](../Images/f7d4637b486fd2ea9d5c7ef4c8f4b641.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f7d4637b486fd2ea9d5c7ef4c8f4b641.png)'
- en: The figure below illustrates the three cases, with each column corresponding
    to the log transform with alpha values of 0.5, 1 and 2.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 下图展示了三种情况，每列对应具有 0.5、1 和 2 的 alpha 值的对数变换。
- en: The first row shows the transformed space, comparing the density along the diagonal
    as estimated by the KDE on the transformed points (blue) against the expected
    density profile corresponding to the uniform distribution in the original space
    (red). The second row displays these same curves, but mapped back to the original
    space.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 第一行显示了变换后的空间，比较了沿对角线的密度，蓝色表示在变换后的点上通过 KDE 估算的密度，红色表示原始空间中均匀分布对应的预期密度曲线。第二行显示了这些相同的曲线，但它们已映射回原始空间。
- en: Keep in mind that the transformation and KDE are still performed in 2D on the
    disk. The one-dimensional curves shown below are extracted from the 2D results.
  id: totrans-109
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请记住，变换和 KDE 仍然在圆盘上的 2D 空间中执行。下面显示的一维曲线是从 2D 结果中提取的。
- en: '![](../Images/d74c925d22997679fcec81e4e6300eac.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d74c925d22997679fcec81e4e6300eac.png)'
- en: Density along the diagonal in transformed and original domain (first and second
    row). The columns correspond to the log-based transformation with alpha equal
    to 0.5 / 1 / 2 — Figure by the author
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 变换后和原始域内沿对角线的密度（第一行和第二行）。列对应于具有 alpha 值为 0.5 / 1 / 2 的对数变换 —— 图由作者提供
- en: Both **α<1** and **α>1** introduce singularities near the origin, which completely
    ruin the interior density estimate. As for **α=1**, the expected density in transformed
    space is highly non-differentiable at the origin, resembling a pointed hat shape,
    which is impossible to fit with gaussian kernels.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: '**α<1**和**α>1**在原点附近引入了奇点，完全破坏了内部密度估计。而对于**α=1**，变换空间中的预期密度在原点处是高度不可微的，呈现出尖顶形状，这种形状无法使用高斯核进行拟合。'
- en: Moreover, the tail density is highly sensible to noise, which can produce high-frequency
    artifacts near the boundaries. In my opinion, this issue is more problematic than
    the original bias we are trying to address.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，尾部密度对噪声非常敏感，可能会在边界附近产生高频伪影。在我看来，这个问题比我们试图解决的原始偏差更具挑战性。
- en: Try with another Kernel?
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试使用另一个核？
- en: To achieve more accurate fit for the expected pointed shape when **α=1**, I
    estimated the density using a triangular kernel instead of a Gaussian one, as
    shown in the code below.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在**α=1**时实现更精确的拟合预期的尖形，我使用三角核而非高斯核来估计密度，如下面的代码所示。
- en: Although the fit is slightly better, it remains highly biased at the origin.
    Additionally, the boundary becomes completely unstable, oscillating at high frequency
    due to the low bandwidth required to fit the very steep pointed shape at the origin.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管拟合稍有改善，但它在原点处仍然高度偏斜。此外，由于需要低带宽来拟合原点处非常陡峭的尖形，边界变得完全不稳定，并在高频率下振荡。
- en: '![](../Images/2d3763d0cec90680876ade34c66beb03.png)'
  id: totrans-117
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2d3763d0cec90680876ade34c66beb03.png)'
- en: Density along the diagonal in transformed and original domain (first and second
    row), for the log-based transformation with alpha equal 1, using a triangle filter
    — Figure by the author
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 在变换后和原始域中的对角线上的密度（第一行和第二行），使用基于对数的变换和α等于1的三角滤波器 — 图由作者提供
- en: Try with the tangent function?
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尝试使用切线函数？
- en: The tangent function also proves to be a suitable candidate to introduce a singularity
    at `r=1`.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 切线函数也被证明是一个合适的候选者，可以在`r=1`处引入奇点。
- en: '![](../Images/c518663356641f0e3a3a74fa5f30ace8.png)![](../Images/d8d5c736e87d89e16ee3aa2e47569a0d.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c518663356641f0e3a3a74fa5f30ace8.png)![](../Images/d8d5c736e87d89e16ee3aa2e47569a0d.png)'
- en: Tangent function modified to tend to infinity as the radius approaches +/-1
    — Figure by the author
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 切线函数经过修改，趋向于无穷大，随着半径接近+/-1 — 图由作者提供
- en: Fortunately, its corresponding `g` function turns out to be differentiable at
    the origin, which should make it much easier to fit.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，它对应的`g`函数在原点处是可微的，这应该使得拟合变得更容易。
- en: To maintain readability and avoid redundancy, I will not include the mathematical
    details that led to these results.
  id: totrans-124
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 为了保持可读性并避免冗余，我将不包括导致这些结果的数学细节。
- en: '![](../Images/83026a897d26229483f8e6ce6dd3b7a9.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/83026a897d26229483f8e6ce6dd3b7a9.png)'
- en: However, as illustrated in the figure below, we’re still subject to the same
    instability around the boundary.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，正如下面的图所示，我们仍然受到边界附近相同的不稳定性的影响。
- en: '![](../Images/f9637ffbd11644ad0df22aafb2107245.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f9637ffbd11644ad0df22aafb2107245.png)'
- en: Density along the diagonal in transformed and original domain (first and second
    row), for the tan-based transformation — Figure by the author
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 在变换后和原始域中的对角线上的密度（第一行和第二行），使用基于切线的变换 — 图由作者提供
- en: Conclusion
  id: totrans-129
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: The transformation method appears unsuitable for our uniform distribution within
    the 2D disk. It introduces excessive variance near the boundaries and significantly
    disrupts the interior, which was already perfectly unbiased.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 该变换方法似乎不适用于我们在二维圆盘内的均匀分布。它在边界附近引入了过多的方差，并显著干扰了原本已经完全无偏的内部。
- en: Despite the poor performance, I’ve also generated the resulting 2D density map
    obtained with the Transform KDE using the log and tangent transformations.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管性能较差，我还是生成了使用对数和切线变换的Transform KDE得到的结果2D密度图。
- en: '![](../Images/de437992636891765c692b65831f8da1.png)'
  id: totrans-132
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/de437992636891765c692b65831f8da1.png)'
- en: 'Left: Log Transform KDE on samples drawn uniformly within the unit disk. Right:
    Corresponding 1D density profile along the diagonal of the density map — Figure
    by the author'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 左：在单位圆盘内均匀抽样的对数变换KDE。右：沿密度图对角线的相应一维密度轮廓 — 图由作者提供
- en: '![](../Images/6469a37826922a1ce11469f73cf0b55a.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6469a37826922a1ce11469f73cf0b55a.png)'
- en: 'Left: Tangent Transform KDE on samples drawn uniformly within the unit disk.
    Right: Corresponding 1D density profile along the diagonal of the density map
    — Figure by the author'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 左：在单位圆盘内均匀抽样的切线变换KDE。右：沿密度图对角线的相应一维密度轮廓 — 图由作者提供
- en: '![](../Images/d05eb760e26f8b70089908e9aae880ee.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d05eb760e26f8b70089908e9aae880ee.png)'
- en: Photo by [Piret Ilver](https://unsplash.com/@saltsup?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[Piret Ilver](https://unsplash.com/@saltsup?utm_source=medium&utm_medium=referral)拍摄的照片，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: 4\. Cut-and-Normalize Trick
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4. 切割与归一化技巧
- en: Weighting
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 加权
- en: Since the density is artificially lower around he boundary because of the lack
    of neighbors, we could compute how much of our local kernel has been lost outside
    the bounded domain and leverage it to correct the bias.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 由于边界周围的密度由于缺乏邻居而人为降低，我们可以计算出我们局部核在边界外丧失的部分，并利用它来修正偏差。
- en: In 1D, this involves computing the integral of a Gaussian over an interval.
    It’s straightforward, as it can be done by estimating the Cumulative Density Function
    at both ends of the interval and subtracting the values.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 在一维中，这涉及到计算高斯在某个区间上的积分。这是直接的，因为它可以通过估计区间两端的累积分布函数并相减来完成。
- en: However, in 2D, this requires computing the integral of a 2D Gaussian over a
    disk. Since there is no analytical solution for this, it must be numerically approximated,
    making it more computationally expensive.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在二维中，这需要计算一个二维高斯在圆盘上的积分。由于没有解析解，必须进行数值近似，从而使计算开销更大。
- en: Numerical Approximation
  id: totrans-143
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数值近似
- en: It would be too expensive to perform numerical integration for each single predicted
    density. Since we are essentially computing the convolution between a binary disk
    and a Gaussian kernel, I propose discretizing the unit square to perform numerical
    convolution.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 对每个单独预测的密度执行数值积分将会非常昂贵。因为我们本质上是在计算一个二进制圆盘与高斯核之间的卷积，我建议对单位正方形进行离散化，以执行数值卷积。
- en: In the code below, we assume an isotropic Gaussian and retrieve the kernel standard
    deviation. Subsequently, we perform the convolution on the binary disk mask using
    OpenCV, resulting in the array shown in the figure below. Notice how closely it
    approximates the biased vanilla KDE.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我们假设一个各向同性的高斯分布，并获取核的标准差。随后，我们使用 OpenCV 对二进制圆盘掩码进行卷积，得到下图所示的数组。请注意，它与有偏
    vanilla KDE 的接近程度。
- en: '![](../Images/a580a9450e42692374802764e4dedbf7.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a580a9450e42692374802764e4dedbf7.png)'
- en: Gaussian Blur applied on the binary image of the Unit Disk. Circle at radius
    1— Figure by the author
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 对单位圆盘的二进制图像应用高斯模糊。半径为1的圆——图示由作者提供
- en: Result
  id: totrans-148
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果
- en: Once the correction weight map has been computed, we can apply it to the biased
    predicted density. The corrected density map is then almost perfect.
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦修正的权重图被计算出来，我们可以将其应用于有偏的预测密度。修正后的密度图几乎是完美的。
- en: '![](../Images/927a7a7233330a6f97e6a3a168970531.png)'
  id: totrans-150
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/927a7a7233330a6f97e6a3a168970531.png)'
- en: 'Left: Cut-and-Normalize KDE on samples drawn uniformly within the unit disk.
    Right: Corresponding 1D density profile along the diagonal of the density map
    — Figure by the author'
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧：在单位圆盘内均匀抽样的切割与归一化 KDE。右侧：对应的沿密度图对角线的1D密度轮廓——图示由作者提供
- en: '![](../Images/9fb00bbf65647ea62f693c37a2f9672e.png)'
  id: totrans-152
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9fb00bbf65647ea62f693c37a2f9672e.png)'
- en: Photo by [Florian Schmetz](https://unsplash.com/@floschmaezz?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '[Florian Schmetz](https://unsplash.com/@floschmaezz?utm_source=medium&utm_medium=referral)拍摄的照片，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)'
- en: Conclusion
  id: totrans-154
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Performance
  id: totrans-155
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 性能
- en: The **Reflection** and **Cut-and-Normalize** methods are very easy to use and
    effectively mitigate the boundary bias. In contrast, the **Transform** method
    shows poor performance on the uniform 2D disk, despite testing various singular
    functions and kernel types.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: '**反射**和**切割与归一化**方法非常容易使用，并有效减轻了边界偏差。相比之下，**变换**方法在均匀的二维圆盘上表现不佳，尽管我们测试了多种特殊函数和核类型。'
- en: Speed
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 速度
- en: The **Reflection** method transforms the input of the KDE, whereas the **Cut-and-Normalize**
    method transforms its output.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: '**反射**方法转换了 KDE 的输入，而**切割与归一化**方法转换了其输出。'
- en: Since the Gaussian KDE has a time complexity that is quadratic in the number
    of samples, i.e. O(n²), **Reflection** is approximately four times slower than
    **Cut-and-Normalize** because it requires twice as many samples.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 由于高斯 KDE 的时间复杂度是样本数量的平方，即 O(n²)，**反射**比**切割与归一化**慢大约四倍，因为它需要两倍于样本数。
- en: Thus, the **Cut-and-Normalize** method seems to be the easiest and fastest way
    to compensate the boundary bias on the 2D uniform Disk distribution.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，**Cut-and-Normalize**方法似乎是补偿二维均匀圆盘分布边界偏差的最简单和最快捷的方式。
- en: Visualize 2D Disk Sampling
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可视化二维圆盘采样
- en: We can now simulate different disk sampling strategies and compare them based
    on their density map, without having to worry about the boundary bias.
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以模拟不同的圆盘采样策略，并基于它们的密度图进行比较，而无需担心边界偏差。
- en: I hope you enjoyed reading this article and that it gave you more insights on
    how to perform bounded Kernel Density Estimation in the 2D case.
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 希望你喜欢阅读这篇文章，并且它为你提供了更多关于如何在二维情况下执行有界核密度估计的见解。
