- en: 'Encoding Categorical Data, Explained: A Visual Guide with Code Example for
    Beginners'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 类别数据编码，详解：面向初学者的可视化指南与代码示例
- en: 原文：[https://towardsdatascience.com/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae?source=collection_archive---------0-----------------------#2024-09-02](https://towardsdatascience.com/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae?source=collection_archive---------0-----------------------#2024-09-02)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae?source=collection_archive---------0-----------------------#2024-09-02](https://towardsdatascience.com/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae?source=collection_archive---------0-----------------------#2024-09-02)
- en: DATA PREPROCESSING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据预处理
- en: Six ways of matchmaking categories and numbers
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 六种类别与数字的配对方式
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--b169ac4193ae--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)
    ·10 min read·Sep 2, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b169ac4193ae--------------------------------)
    ·阅读时长10分钟·2024年9月2日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/389bb09672932e42606d764b20186804.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/389bb09672932e42606d764b20186804.png)'
- en: '`⛳️ More [DATA PREPROCESSING](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4),
    explained: · [Missing Value Imputation](/missing-value-imputation-explained-a-visual-guide-with-code-examples-for-beginners-93e0726284eb)
    ▶ [Categorical Encoding](/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae)
    · [Data Scaling](/scaling-numerical-data-explained-a-visual-guide-with-code-examples-for-beginners-11676cdb45cb)
    · [Discretization](/discretization-explained-a-visual-guide-with-code-examples-for-beginners-f056af9102fa?gi=c1bf25229f86)
    · [Oversampling & Undersampling](/oversampling-and-undersampling-explained-a-visual-guide-with-mini-2d-dataset-1155577d3091)
    · [Data Leakage in Preprocessing](/data-leakage-in-preprocessing-explained-a-visual-guide-with-code-examples-33cbf07507b7)`'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '`⛳️ 更多 [数据预处理](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4)
    详解： · [缺失值填补](/missing-value-imputation-explained-a-visual-guide-with-code-examples-for-beginners-93e0726284eb)
    ▶ [类别编码](/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae)
    · [数据标准化](/scaling-numerical-data-explained-a-visual-guide-with-code-examples-for-beginners-11676cdb45cb)
    · [离散化](/discretization-explained-a-visual-guide-with-code-examples-for-beginners-f056af9102fa?gi=c1bf25229f86)
    · [过采样与欠采样](/oversampling-and-undersampling-explained-a-visual-guide-with-mini-2d-dataset-1155577d3091)
    · [数据泄漏预防](/data-leakage-in-preprocessing-explained-a-visual-guide-with-code-examples-33cbf07507b7)`'
- en: Ah, categorical data — the colorful characters in our datasets that machines
    just can’t seem to understand. This is where “red” becomes 1, “blue” 2, and data
    scientists turn into language translators (or more like matchmakers?).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 啊，类别数据——我们数据集中那些色彩斑斓的角色，机器似乎总是难以理解它们。在这里，“红色”变成 1，“蓝色”变成 2，而数据科学家则变成了语言翻译者（或者更像是媒人？）。
- en: 'Now, I know what you’re thinking: “Encoding? Isn’t that just assigning numbers
    to categories?” Oh, if only it were that simple! We’re about to explore six different
    encoding methods, all on ([again](/missing-value-imputation-explained-a-visual-guide-with-code-examples-for-beginners-93e0726284eb))
    a single, tiny dataset (with visuals, of course!) From simple labels to mind-bending
    cyclic transformations, you’ll see why choosing the right encoding can be as important
    as picking the perfect algorithm.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我知道你在想什么：“编码？不就是给类别分配数字吗？”哦，要是那么简单就好了！我们将探讨六种不同的编码方法，全部基于（[再次](/missing-value-imputation-explained-a-visual-guide-with-code-examples-for-beginners-93e0726284eb)）一个小小的数据集（当然有视觉示例！）从简单的标签到令人费解的循环转换，你将看到为什么选择正确的编码和选择完美的算法一样重要。
- en: '![](../Images/352a0dcc36660bb12d01eed09f4a7d2b.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/352a0dcc36660bb12d01eed09f4a7d2b.png)'
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 所有视觉内容：作者使用Canva Pro创建。为移动设备优化；在桌面端可能显得过大。
- en: What Is Categorical Data and Why Does It Need Encoding?
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是分类数据，为什么它需要编码？
- en: Before we jump into our dataset and encoding methods, let’s take a moment to
    understand what categorical data is and why it needs special treatment in the
    world of machine learning.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们进入数据集和编码方法之前，让我们先花一点时间理解什么是分类数据，以及为什么它在机器学习中需要特殊处理。
- en: What Is Categorical Data?
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是分类数据？
- en: Categorical data is like the descriptive labels we use in everyday life. It
    represents characteristics or qualities that can be grouped into categories.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 分类数据就像我们日常生活中使用的描述性标签。它代表了可以分组为类别的特征或性质。
- en: Why Does Categorical Data Need Encoding?
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么分类数据需要编码？
- en: 'Here’s the catch: most machine learning algorithms are like picky eaters —
    they only digest numbers. They can’t directly understand that “sunny” is different
    from “rainy”. That’s where encoding comes in. It’s like translating these categories
    into a language that machines can understand and work with.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是：大多数机器学习算法就像挑食的食客——它们只能处理数字。它们不能直接理解“晴天”和“雨天”有何不同。这就是编码的作用。编码就像是将这些类别翻译成机器可以理解并操作的语言。
- en: Types of Categorical Data
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类数据的类型
- en: 'Not all categories are created equal. We generally have two types:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 不是所有的类别都是平等的。我们通常有两种类型：
- en: '**Nominal**: These are categories with *no inherent order*.'
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**名义型**：这些是*没有固有顺序*的类别。'
- en: '*Ex: “*Outlook” (sunny, overcast, rainy) is nominal. There’s no natural ranking
    between these weather conditions.'
  id: totrans-22
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*示例：* “*Outlook*”（晴天、阴天、雨天）是名义型的。这些天气条件之间没有自然的排序。'
- en: '**Ordinal**: These categories have a *meaningful order*.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**有序型**：这些类别有*有意义的顺序*。'
- en: '*Ex:* “Temperature” (Very Low, Low, High, Very High) is ordinal. There’s a
    clear progression from coldest to hottest.'
  id: totrans-24
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '*示例：* “温度”（非常低、低、高、非常高）是有序的。这些类别从最冷到最热有一个明显的顺序。'
- en: '![](../Images/f5b91bc4572d0f9c937f3d23ab1c1210.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f5b91bc4572d0f9c937f3d23ab1c1210.png)'
- en: Why Care About Proper Encoding?
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为什么要关心正确的编码？
- en: It preserves important information in your data.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它保留了数据中重要的信息。
- en: It can significantly impact your model’s performance.
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它可能会显著影响模型的性能。
- en: Incorrect encoding can introduce unintended biases or relationships.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 错误的编码可能会引入不必要的偏差或关系。
- en: Imagine if we encoded “sunny” as 1 and “rainy” as 2\. The model might think
    rainy days are “greater than” sunny days, which isn’t what we want!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果我们将“晴天”编码为1，将“雨天”编码为2，模型可能会认为雨天“比”晴天更“大”，这不是我们想要的！
- en: Now that we understand what categorical data is and why it needs encoding, let’s
    take a look at our dataset and see how we can tackle its categorical variables
    using six different encoding methods.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们理解了什么是分类数据以及为什么它需要编码，让我们来看看我们的数据集，并看看如何使用六种不同的编码方法处理其分类变量。
- en: The Dataset
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据集
- en: Let’s use a simple golf dataset to illustrate our encoding methods (and it has
    mostly categorical columns). This dataset records various weather conditions and
    the resulting crowdedness at a golf course.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个简单的高尔夫数据集来说明我们的编码方法（而且它主要包含分类列）。该数据集记录了不同的天气条件以及高尔夫球场的拥挤程度。
- en: '![](../Images/08ad89fd65ebc9089f7517e8d617deb8.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08ad89fd65ebc9089f7517e8d617deb8.png)'
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As we can see, we have a lot of categorical variables. Our task is to encode
    these variables so that a machine learning model can use them to predict, say,
    the Crowdedness of the golf course.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 如我们所见，我们有许多分类变量。我们的任务是对这些变量进行编码，以便机器学习模型可以使用它们来预测，比如高尔夫球场的拥挤程度。
- en: Let’s get into it.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们深入了解一下。
- en: 'Method 1: Label Encoding'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法1：标签编码
- en: Label Encoding assigns a unique integer to each category in a categorical variable.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 标签编码（Label Encoding）为类别变量中的每个类别分配一个唯一的整数。
- en: '**Common Use 👍**: It’s often used for ordinal variables where there’s a clear
    order to the categories, such as education levels (e.g., primary, secondary, tertiary)
    or product ratings (e.g., 1 star, 2 stars, 3 stars).'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法 👍**：它通常用于有序变量，其中类别之间有明确的顺序，例如教育水平（如小学、中学、高等教育）或产品评分（如 1 星、2 星、3 星）。'
- en: '**In Our Case**: We could use Label Encoding for the ‘Weekday’ column in our
    golf dataset. Each day of the week would be assigned a unique number (e.g., Monday
    = 0, Tuesday = 1, etc.). However, we need to be careful as this might imply that
    Sunday (6) is “greater than” Saturday (5), which may not be meaningful for our
    analysis.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：我们可以对高尔夫数据集中的“星期几”列使用标签编码（Label Encoding）。每个星期几都会分配一个唯一的数字（例如，星期一
    = 0，星期二 = 1，等等）。然而，我们需要小心，因为这可能意味着星期天（6）比星期六（5）“更大”，这对我们的分析可能没有意义。'
- en: '![](../Images/8aaa58914826d59dc04181e3f8bb16dc.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8aaa58914826d59dc04181e3f8bb16dc.png)'
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Method 2: One-Hot Encoding'
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法 2：独热编码
- en: One-Hot Encoding creates a new binary column for each category in a categorical
    variable.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 独热编码（One-Hot Encoding）为类别变量中的每个类别创建一个新的二进制列。
- en: '**Common Use 👍**: It’s typically used for nominal variables where there’s no
    inherent order to the categories. It’s particularly useful when dealing with variables
    that have a relatively small number of categories.'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法 👍**：通常用于类别之间没有固有顺序的名义变量。当处理类别数相对较少的变量时，特别有用。'
- en: '**In Our Case**: One-Hot Encoding would be ideal for our ‘Outlook’ column.
    We’d create three new columns: ‘Outlook_sunny’, ‘Outlook_overcast’, and ‘Outlook_rainy’.
    Each row would have a 1 in one of these columns and 0 in the others, representing
    the weather condition for that day.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：独热编码非常适合我们的“天气”列。我们将创建三个新列：“天气_晴天”，“天气_阴天”和“天气_雨天”。每一行将会在其中一个列中标记为
    1，其他列为 0，表示当天的天气情况。'
- en: '![](../Images/61228288809b5e3a8ee325a941fd5ba0.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/61228288809b5e3a8ee325a941fd5ba0.png)'
- en: '[PRE2]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Method 3: Binary Encoding'
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法 3：二进制编码
- en: Binary Encoding represents each category as a binary number (0 and 1).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 二进制编码（Binary Encoding）将每个类别表示为一个二进制数字（0 和 1）。
- en: '**Common Use 👍**: It’s often used when there are only two categories, mostly
    in a yes-no situation.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法 👍**：通常用于只有两个类别的情况，大多是是/否的情境。'
- en: '**In Our Case**: While our ‘Windy’ column only has two categories (Yes and
    No), we could use Binary Encoding to demonstrate the technique. It would result
    in a single binary column, where one category (e.g., No) is represented as 0 and
    the other (Yes) as 1.'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：尽管我们的“风向”列只有两个类别（是和否），我们可以使用二进制编码来演示这一技术。它将生成一个二进制列，其中一个类别（例如“否”）表示为
    0，另一个类别（例如“是”）表示为 1。'
- en: '![](../Images/d7e5f059c8d9740139ffae766aaa36ab.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d7e5f059c8d9740139ffae766aaa36ab.png)'
- en: '[PRE3]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Method 4: Target Encoding'
  id: totrans-56
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法 4：目标编码
- en: Target Encoding replaces each category with the mean of the target variable
    for that category.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 目标编码（Target Encoding）将每个类别替换为该类别的目标变量的均值。
- en: '**Common Use 👍:** It’s used when there’s likely a relationship between the
    categorical variable and the target variable. It’s particularly useful for high-cardinality
    features in datasets with a reasonable number of rows.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法 👍**：当类别变量和目标变量之间可能存在关系时使用。它特别适用于在数据集中具有合理行数的高基数特征。'
- en: '**In Our Case:** We could apply Target Encoding to our ‘Humidity’ column, using
    ‘Crowdedness’ as the target. Each ‘Dry’ or ‘Humid’ in the ‘Windy’ column would
    be replaced with the average crowdedness observed for humid and dry days respectively.'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：我们可以对“湿度”列应用目标编码，以“拥挤度”作为目标变量。“风向”列中的每个“干燥”或“湿润”都会分别被替换为湿润和干燥天气的平均拥挤度。'
- en: '![](../Images/12aa8b9f07391655769d8d75ceb99a97.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/12aa8b9f07391655769d8d75ceb99a97.png)'
- en: '[PRE4]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Method 5: Ordinal Encoding'
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法 5：有序编码
- en: Ordinal Encoding assigns ordered integers to ordinal categories based on their
    inherent order.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 有序编码将基于固有顺序的有序整数分配给有序类别。
- en: '**Common Use 👍: It’s us**ed for ordinal variables where the order of categories
    is meaningful and you want to preserve this order information.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用法 👍**：它用于有序变量，其中类别的顺序有意义，并且你想保留这个顺序信息。'
- en: '**In Our Case**: Ordinal Encoding is perfect for our ‘Temperature’ column.
    We could assign integers to represent the order: Low = 1, High = 2, Extreme =
    3\. This preserves the natural ordering of temperature categories.'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：有序编码（Ordinal Encoding）非常适合我们的“温度”列。我们可以为顺序指定整数值：低温 = 1，高温 = 2，极端温度
    = 3。这保持了温度类别的自然顺序。'
- en: '![](../Images/c661ba6b647fc8602a9e74750107d18d.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c661ba6b647fc8602a9e74750107d18d.png)'
- en: '[PRE5]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Method 6: Cyclic Encoding'
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 方法6：循环编码
- en: 'Cyclic Encoding/Transformation transforms a cyclical categorical variable into
    two numerical features that preserve the variable’s cyclical nature. It typically
    uses sine and cosine transformations to represent the cyclical pattern. For example,
    for the column “Month” we’d make it numerical first (1–12) then create two new
    features:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 循环编码/转换将一个循环的分类变量转换为两个数值特征，保留该变量的循环特性。它通常使用正弦和余弦转换来表示循环模式。例如，对于“月份”这一列，我们首先将其转化为数值（1-12），然后创建两个新的特征：
- en: Month_cos = cos(2 *π* (*m* — 1) / 12)
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Month_cos = cos(2 *π* (*m* — 1) / 12)
- en: Month_sin = sin(2 *π* (*m* — 1) / 12)
  id: totrans-71
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Month_sin = sin(2 *π* (*m* — 1) / 12)
- en: where *m* is a number from 1 to 12 representing January to December.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*m* 是从1到12的数字，代表从1月到12月。
- en: '![](../Images/427a445ee518ec29c5272d553148997d.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/427a445ee518ec29c5272d553148997d.png)'
- en: Imagine the encoding to be the (x,y) coordinate on this weird clock, starting
    from 1–12\. To preserve the cyclical order, we need to represent them using two
    columns instead of one.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下编码就像是在这个奇怪时钟上的(x, y)坐标，从1到12。为了保持循环顺序，我们需要使用两列而不是一列来表示它们。
- en: '**Common Use**: It’s used for categorical variables that have a natural cyclical
    order, such as days of the week, months of the year, or hours of the day. Cyclic
    encoding is particularly useful when the “distance” between categories matters
    and wraps around (e.g., the distance between December and January should be small,
    just like the distance between any other consecutive months).'
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: '**常见用途**：它用于具有自然循环顺序的分类变量，如一周中的天、每年的月份或一天中的小时。循环编码尤其在类别之间的“距离”很重要并且会循环（例如，12月和1月之间的距离应该很小，就像其他任何连续的月份之间的距离一样）时特别有用。'
- en: '**In Our Case**: In our golf dataset, the best column for cyclic encoding would
    be the ‘Month’ column. Months have a clear cyclical pattern that repeats every
    year. This could be particularly useful for our golf dataset, as it would capture
    seasonal patterns in golfing activity that might repeat annually. Here’s how we
    could apply it:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: '**在我们的案例中**：在我们的高尔夫数据集中，最适合进行循环编码的列是‘月份’列。月份有一个明显的循环模式，每年都会重复。这对于我们的高尔夫数据集特别有用，因为它能够捕捉到可能每年都会重复的高尔夫活动的季节性模式。以下是我们如何应用它：'
- en: '![](../Images/c9905c0b2556090c2301d3f5681a7c70.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9905c0b2556090c2301d3f5681a7c70.png)'
- en: '[PRE6]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Conclusion: The Power of Transformation (and Understanding)'
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：转换的力量（以及理解）
- en: So, there you have it! Six different ways to encode categorical data, all applied
    to our golf course dataset. Now, all categories are transformed into numbers!
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，结果就是这样！六种不同的分类数据编码方式，全部应用到我们的高尔夫球场数据集。现在，所有类别都已经转化为数字！
- en: '![](../Images/0bb08bc860e6a02f94855d683cfb0477.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bb08bc860e6a02f94855d683cfb0477.png)'
- en: 'Let’s recap how each method tackled our data:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一下每种方法如何处理我们的数据：
- en: '**Label Encoding**: Turned our ‘Weekday’ into numbers, making Monday 0 and
    Sunday 6 — simple but potentially misleading.'
  id: totrans-83
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**标签编码**：将我们的‘工作日’转化为数字，使得周一为0，周日为6——简单但可能具有误导性。'
- en: '**One-Hot Encoding**: Gave ‘Outlook’ its own columns, letting ‘sunny’, ‘overcast’,
    and ‘rainy’ stand independently.'
  id: totrans-84
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**独热编码**：为‘Outlook’创建了独立的列，让‘sunny’、‘overcast’和‘rainy’独立存在。'
- en: '**Binary Encoding**: Compressed our ‘Humidity’ into efficient binary code,
    saving space without losing information.'
  id: totrans-85
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**二进制编码**：将我们的‘湿度’压缩为高效的二进制代码，节省空间而不丢失信息。'
- en: '**Target Encoding**: Replaced ‘Windy’ categories with average ‘Crowdedness’,
    capturing hidden relationships.'
  id: totrans-86
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**目标编码**：用‘拥挤度’的平均值替换了‘有风’的类别，捕捉到隐藏的关系。'
- en: '**Ordinal Encoding**: Respected the natural order of ‘Temperature’, from ‘Very
    Low’ to ‘Very High’.'
  id: totrans-87
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**顺序编码**：遵循了‘温度’的自然顺序，从‘非常低’到‘非常高’。'
- en: '**Cyclic Encoding**: Transformed ‘Month’ into sine and cosine components, preserving
    its circular nature.'
  id: totrans-88
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**循环编码**：将‘月份’转换为正弦和余弦分量，保留其圆形特性。'
- en: There’s no one-size-fits-all solution in categorical encoding. The best method
    depends on your specific data, the nature of your categories, and the requirements
    of your machine learning model.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 在分类编码中没有一刀切的解决方案。最佳方法取决于你具体的数据、类别的性质和机器学习模型的需求。
- en: Encoding categorical data might seem like a small step in the grand scheme of
    a machine learning project, but it’s often these seemingly minor details that
    can make or break a model’s performance.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对分类数据进行编码在机器学习项目的宏观框架中可能看起来只是一个小步骤，但正是这些看似微小的细节往往能决定模型性能的成败。
- en: '**⚠️ Caution: Key Considerations in Categorical Encoding**'
  id: totrans-91
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**⚠️ 注意：类别编码中的关键考虑事项**'
- en: 'As we wrap up our encoding discussion, let’s highlight some critical points
    to keep in mind:'
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们结束编码讨论时，让我们强调一些需要牢记的关键点：
- en: '**Information Loss**: Some encoding methods can lead to loss of information.
    For example, label encoding might impose an unintended ordinal relationship.'
  id: totrans-93
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**信息丢失**：某些编码方法可能导致信息丢失。例如，标签编码可能会强加一个不必要的顺序关系。'
- en: '**The New Category Issue**: Most encoding techniques stumble when faced with
    categories in your test data that weren’t present during training. Always have
    a strategy for handling these unexpected guests.'
  id: totrans-94
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**新类别问题**：大多数编码技术在面对测试数据中未出现在训练数据中的类别时会遇到困难。一定要有应对这些“意外来客”的策略。'
- en: '**Curse of Dimensionality**: Techniques like one-hot encoding can dramatically
    increase the number of features (imagine if you have hundreds different categories
    like countries or cities!). You might want to select the features that actually
    matters to encode (like categorizing the rare ones as “Others”).'
  id: totrans-95
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**维度灾难**：像独热编码这样的技术可能会显著增加特征的数量（想象一下如果你有数百种不同的类别，比如国家或城市！）。你可能需要选择真正重要的特征进行编码（比如将稀有类别归类为“其他”）。'
- en: '**Document, Document, Document**: Your future self (and your colleagues) will
    thank you for clearly recording your encoding decisions. This transparency is
    for reproducibility and for understanding any potential biases in your results.'
  id: totrans-96
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**记录、记录、再记录**：你未来的自己（以及你的同事）会感谢你清楚地记录下你的编码决策。这种透明度有助于结果的可重现性，并帮助理解结果中可能存在的偏差。'
- en: So, well, encoding is about translating your categorical data into a language
    that machines can understand, while preserving as much meaning as possible. It’s
    not about finding a perfect encoding, but about choosing the method that best
    suits your specific needs and constraints. Approach it thoughtfully, and you’ll
    set a strong foundation for your machine learning works.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，编码就是将你的类别数据转换成机器可以理解的语言，同时尽可能保留其含义。这不是要找到完美的编码方法，而是选择最适合你特定需求和限制的方法。用心去处理，你将为你的机器学习工作奠定坚实的基础。
- en: 🌟 Categorical Encoding Code Summarized
  id: totrans-98
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🌟 类别编码代码总结
- en: '[PRE7]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Technical Environment
  id: totrans-100
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术环境
- en: This article uses Python 3.7 , pandas 2.1, and numpy 1.26\. While the concepts
    discussed are generally applicable, specific code implementations may vary slightly
    with different versions.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用 Python 3.7、pandas 2.1 和 numpy 1.26。虽然讨论的概念一般适用，但不同版本的代码实现可能会略有不同。
- en: About the Illustrations
  id: totrans-102
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于插图
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图像均由作者创建，且包含来自 Canva Pro 的授权设计元素。
- en: '![](../Images/a548db6268bfcf7076a78e8f15a46780.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a548db6268bfcf7076a78e8f15a46780.png)'
- en: For a concise visual summary, check out [the companion Instagram post.](https://www.instagram.com/p/C_a4DWEy5IA)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看简洁的视觉总结，请访问[配套的Instagram帖子](https://www.instagram.com/p/C_a4DWEy5IA)。
- en: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝘿𝙖𝙩𝙖 𝙋𝙧𝙚𝙥𝙧𝙤𝙘𝙚𝙨𝙨𝙞𝙣𝙜 𝙢𝙚𝙩𝙝𝙤𝙙𝙨 𝙝𝙚𝙧𝙚:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝘿𝙖𝙩𝙖 𝙋𝙧𝙚𝙥𝙧𝙤𝙘𝙚𝙨𝙨𝙞𝙣𝙜 𝙢𝙚𝙩𝙝𝙤𝙙𝙨 𝙝𝙚𝙧𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-107
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
- en: Data Preprocessing
  id: totrans-109
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据预处理
- en: '[View list](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4?source=post_page-----b169ac4193ae--------------------------------)6
    stories![](../Images/f7ead0fb9a8dc2823d7a43d67a1c6932.png)![Cartoon illustration
    of two figures embracing, with letters ‘A’, ‘B’, ‘C’ and numbers ‘1’, ‘2’, ‘3’
    floating around them. A pink heart hovers above, symbolizing affection. The background
    is a pixelated pattern of blue and green squares, representing data or encoding.
    This image metaphorically depicts the concept of encoding categorical data, where
    categories (ABC) are transformed into numerical representations (123).](../Images/72bb3a287a9ca4c5e7a3871e234bcc4b.png)![A
    cartoon illustration representing data scaling in machine learning. A tall woman
    (representing a numerical feature with a large range) is shown shrinking into
    a child (representing the same feature after scaling to a smaller range). A red
    arrow indicates the shrinking process, and yellow sparkles around the child signify
    the positive impact of scaling.](../Images/d261b2c52a3cafe266d1962d4dbabdbd.png)'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4?source=post_page-----b169ac4193ae--------------------------------)6篇故事![](../Images/f7ead0fb9a8dc2823d7a43d67a1c6932.png)![两个人物拥抱的卡通插图，字母“A”、
    “B”、 “C”和数字“1”、 “2”、 “3”在他们周围漂浮。上方有一颗粉红色的爱心，象征着情感。背景是像素化的蓝色和绿色方块，代表数据或编码。此图形象地描绘了分类数据编码的概念，其中类别（ABC）被转换为数字表示（123）。](../Images/72bb3a287a9ca4c5e7a3871e234bcc4b.png)![一个卡通插图，展示了机器学习中数据缩放的概念。一个高大的女性（代表一个范围较大的数值特征）正在缩小成一个孩子（代表缩放到更小范围后的相同特征）。红色箭头指示了缩小过程，黄色的闪光围绕着孩子，象征着缩放的积极影响。](../Images/d261b2c52a3cafe266d1962d4dbabdbd.png)'
- en: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
- en: Classification Algorithms
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类算法
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----b169ac4193ae--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----b169ac4193ae--------------------------------)8篇故事![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----b169ac4193ae--------------------------------)'
- en: Regression Algorithms
  id: totrans-117
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回归算法
- en: '[View list](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----b169ac4193ae--------------------------------)5
    stories![A cartoon doll with pigtails and a pink hat. This “dummy” doll, with
    its basic design and heart-adorned shirt, visually represents the concept of a
    dummy regressor in machine. Just as this toy-like figure is a simplified, static
    representation of a person, a dummy regressor is a basic models serve as baselines
    for more sophisticated analyses.](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----b169ac4193ae--------------------------------)5篇故事![一只带着双马尾和粉色帽子的卡通娃娃。这个“假人”娃娃，具有基本的设计和心形装饰的衬衫，形象地代表了机器中的“假回归器”概念。就像这个玩具一样，假人回归器是一个简单的模型，用作更复杂分析的基线。](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
