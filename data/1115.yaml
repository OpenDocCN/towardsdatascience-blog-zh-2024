- en: How to Supercharge Your Python Classes with Class Methods
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何通过类方法增强你的 Python 类
- en: 原文：[https://towardsdatascience.com/how-to-supercharge-your-python-classes-with-class-methods-4372fa55bbfc?source=collection_archive---------2-----------------------#2024-05-03](https://towardsdatascience.com/how-to-supercharge-your-python-classes-with-class-methods-4372fa55bbfc?source=collection_archive---------2-----------------------#2024-05-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-supercharge-your-python-classes-with-class-methods-4372fa55bbfc?source=collection_archive---------2-----------------------#2024-05-03](https://towardsdatascience.com/how-to-supercharge-your-python-classes-with-class-methods-4372fa55bbfc?source=collection_archive---------2-----------------------#2024-05-03)
- en: '![](../Images/a5eb45f9e87a8cde77526cb0ebd2846d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a5eb45f9e87a8cde77526cb0ebd2846d.png)'
- en: There could be more than one way into a Python class — Image by Midjourney,
    modified by author.
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 进入 Python 类的方式可能不止一种——图片来自 Midjourney，由作者修改。
- en: Four advanced tricks to give your data science and machine learning classes
    the edge you never knew they needed
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 四个高级技巧，让你的数据科学和机器学习类拥有你从未意识到的优势
- en: '[](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)[![Siavash
    Yasini](../Images/55220a8a9397ba51dcc381828735f4a2.png)](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)
    [Siavash Yasini](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)[![Siavash
    Yasini](../Images/55220a8a9397ba51dcc381828735f4a2.png)](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)
    [Siavash Yasini](https://medium.com/@siavashyasini?source=post_page---byline--4372fa55bbfc--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)
    ·9 min read·May 3, 2024
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4372fa55bbfc--------------------------------)
    ·阅读时间9分钟·2024年5月3日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Python classes provide a great framework for creating objects that can handle
    complex data structures, processes, pipelines, algorithms, or machine learning
    models. Object Oriented Programming (OOP) offers a ton of modularity and reusability,
    which enables data scientists and machine learning engineers to develop flexible
    and scalable codebases. Personally, I find structuring my code as classes and
    objects extremely useful for retrospective development work — whether it is adding
    new features, modifying existing ones, or fixing annoying bugs.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python 类提供了一个很好的框架，用于创建可以处理复杂数据结构、过程、管道、算法或机器学习模型的对象。面向对象编程（OOP）提供了大量的模块化和可重用性，这使得数据科学家和机器学习工程师能够开发灵活且可扩展的代码库。就个人而言，我发现将代码结构化为类和对象对于回顾性开发工作极为有用——无论是添加新功能、修改现有功能，还是修复恼人的漏洞。
- en: 'In Python, there are generally three types of methods: **instance** **methods**,
    **static** **methods**, and **class** **methods**.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Python 中，一般有三种类型的方法：**实例** **方法**、**静态** **方法**和**类** **方法**。
- en: '**Instance methods** (the ones you define with `self` as the first argument)
    take an instance of the class as an implicit input and allow the user to interact
    with the class attributes. Instance methods are incredibly powerful because they
    can access and modify the data and configurations within an instance to perform
    complex calculations and implement sophisticated logic, while being highly readable
    and maintainable.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**实例方法**（你用 `self` 作为第一个参数定义的方法）将类的实例作为隐式输入，并允许用户与类的属性进行交互。实例方法非常强大，因为它们可以访问和修改实例中的数据和配置，执行复杂的计算并实现复杂的逻辑，同时保持高可读性和可维护性。'
