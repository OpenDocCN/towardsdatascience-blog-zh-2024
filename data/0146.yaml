- en: 'Visualizing Routes on Interactive Maps with Python: Part 1'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Python在交互式地图上可视化路线：第一部分
- en: 原文：[https://towardsdatascience.com/visualizing-routes-on-interactive-maps-with-python-part-1-44f8d25d0761?source=collection_archive---------2-----------------------#2024-01-16](https://towardsdatascience.com/visualizing-routes-on-interactive-maps-with-python-part-1-44f8d25d0761?source=collection_archive---------2-----------------------#2024-01-16)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/visualizing-routes-on-interactive-maps-with-python-part-1-44f8d25d0761?source=collection_archive---------2-----------------------#2024-01-16](https://towardsdatascience.com/visualizing-routes-on-interactive-maps-with-python-part-1-44f8d25d0761?source=collection_archive---------2-----------------------#2024-01-16)
- en: A pragmatic guide to interactive data visualization for transportation problems
    with Folium
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一本关于使用 Folium 解决交通问题的交互式数据可视化的实用指南
- en: '[](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)[![Carlos
    Jimenez Uribe](../Images/902c5f4ac5d404dd99916f145be6756c.png)](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)
    [Carlos Jimenez Uribe](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)[![Carlos
    Jimenez Uribe](../Images/902c5f4ac5d404dd99916f145be6756c.png)](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)
    [Carlos Jimenez Uribe](https://medium.com/@carlosjuribe?source=post_page---byline--44f8d25d0761--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)
    ·20 min read·Jan 16, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--44f8d25d0761--------------------------------)
    ·阅读时间：20分钟·2024年1月16日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/3d98e632e08ebe44fd2fb3edfc7b2b72.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d98e632e08ebe44fd2fb3edfc7b2b72.png)'
- en: 'Image generated by DALL·E 3 with author’s prompt: “a route in Paris on top
    of an interactive map”'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由 DALL·E 3 根据作者的提示生成的图像：“巴黎的一个路线，位于交互式地图之上”
- en: '👁️ **This is article #6 of the series covering the project “**[**An Intelligent
    Decision Support System for Tourism in Python**](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236)**”.**
    Please note **the present article is self-contained and independent of the previous
    ones in the series**, so you can read it and code along without needing to read
    the previous ones. Just ignore any references to previous articles when you encounter
    them.'
  id: totrans-8
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 👁️ **这是系列文章中的第6篇，涵盖了项目“**[**Python中的智能旅游决策支持系统**](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236)**”**。请注意，**本文是独立且自足的，不依赖于系列中的前几篇文章**，因此你可以直接阅读本文并跟随代码进行操作，而不必阅读之前的文章。遇到涉及前几篇文章的任何内容时，请忽略它们。
- en: 'This article is two things at once: **a tutorial on using** `**folium**` **to
    display routes**, and **a guide to *incremental* data visualization**, where the
    priorities are to (1) have something *working*, then (2) something *useful*, and
    only then (3) something *beautiful*. As such, this guide will be a valuable tool
    for people developing **general routing applications**, especially when the goal
    is **to have a prototype, fast**. One such routing application is [**trip plan
    optimization**](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef),
    the unifying theme of this article series. I invite you to take a look at it if
    you want to learn about how to design and incrementally build a decision support
    system from scratch. If, however, you only want to **visualize routes in an interactive
    way for faster time-to-insights**, this article will demonstrate **a quick but
    powerful approach** to doing so—because I know you need to get it *done*, and
    then get it *good*. Part 2 will demonstrate a **slower but more robust approach**
    to doing the same.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文是两件事的结合：**一个使用** `**folium**` **显示路线的教程**，以及**一个增量式数据可视化的指南**，其优先顺序是（1）先有“可用的”东西，然后（2）有“有用的”东西，最后（3）才是“美观的”东西。因此，这份指南将是开发**通用路线应用**的宝贵工具，尤其是当目标是**快速得到一个原型**时。一个这样的路线应用是[**旅行计划优化**](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef)，这是本系列文章的统一主题。如果你想了解如何从头开始设计和增量构建一个决策支持系统，我邀请你查看它。如果你只是想**以互动方式可视化路线，以更快地获得洞察**，那么本文将展示**一种快速但强大的方法**来做到这一点——因为我知道你需要先让它“完成”，然后再让它“做好”。第二部分将展示**一种较慢但更稳健的方法**来做同样的事。
- en: Table of contents
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: '[1\. Previous sprint recap](#136d)'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[1\. 上一轮冲刺回顾](#136d)'
- en: '[2\. Data and dependencies set up](#fe23)'
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[2\. 数据和依赖项设置](#fe23)'
- en: '[3\. Showing routes on maps: a pragmatic approach](#aa07)'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[3\. 在地图上显示路线：务实的做法](#aa07)'
- en: '[3.1 Displaying **sites**](#85d2)'
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3.1 显示 **站点**](#85d2)'
- en: '[3.2 Displaying **routes**](#9910)'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3.2 显示 **路线**](#9910)'
- en: '[3.3 Enriching the map with **interactive information**](#601f)'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3.3 使用 **互动信息** 丰富地图](#601f)'
- en: '[3.4 Dealing with closed routes, a.k.a. **tours**](#97a1)'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3.4 处理封闭路线，即 **旅游路线**](#97a1)'
- en: '[3.5 **Bonus:** Adding **KPIs** to the map](#d73b)'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[3.5 **奖励：** 将 **KPI** 添加到地图上](#d73b)'
- en: '[4\. Conclusion (or planning for next sprint)](#6468)'
  id: totrans-19
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '[4\. 结论（或为下一个冲刺做计划）](#6468)'
- en: 1\. Previous sprint recap
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 上一轮冲刺回顾
- en: 'In the [previous article](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9),
    we created an optimizer class *à la* scikit-learn to solve the Traveling Salesman
    Problem (TSP) for an arbitrary set of locations in just one simple method call.
    Long story short, if you have a dataframe with site locations, **this optimizer
    can be “fitted” to those locations to automatically provide the optimal (minimal
    distance) tour**. For more details see:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 在[上一篇文章](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9)中，我们创建了一个类似于scikit-learn的优化器类，通过一次简单的方法调用就能解决任意一组位置的旅行商问题（TSP）。简而言之，如果你有一个包含站点位置的数据框，**这个优化器可以被“拟合”到这些位置，从而自动提供最优的（最短距离）旅游路线**。更多细节请参见：
- en: '[](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9?source=post_page-----44f8d25d0761--------------------------------)
    [## A classy approach to solving Traveling Salesman Problems effectively with
    Python'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9?source=post_page-----44f8d25d0761--------------------------------)
    [## 一种优雅的解决旅行商问题的方法，使用Python有效解决'
- en: Implementing the TSP model in a scikit-learn-like fashion to ease the building
    and solving of routing optimization…
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 以类似scikit-learn的方式实现TSP模型，简化路线优化的构建和求解…
- en: towardsdatascience.com](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9?source=post_page-----44f8d25d0761--------------------------------)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9?source=post_page-----44f8d25d0761--------------------------------)
- en: 'At the end of it, we concluded that, even though **solving the TSP in** [**a
    one-liner**](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9#:~:text=this%20one%2Dliner%20has%20you%20covered%3A)
    **is super convenient**, the output of such optimizer was not enough for a finished
    prototype. We needed a way to visualize that output quickly, to intuitively verify
    it and share it with others. Hence, that need is what motivates the goal of this
    sprint, the sixth in the series: take the output of the optimizer, *i.e.*, a **route
    in the form of ordered locations, and show it graphically on a map**. Note that
    the optimizer’s output, a dataframe storing the optimal route, is now our input,
    and the output we need to make is the route displayed on a map. The input is general:
    just **an ordered sequence of locations** that could represent any kind of route:
    the stops a transit bus does on any given day, the set of addresses a postal service
    worker visits to deliver the mail, the path a rider of a food delivery company
    travels to service many residencies. What matters to us is **the visualization
    of *generic* routes**, and we’ll develop the functionality to do that in this
    article.'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们得出结论，尽管**在**[**一行代码**](/a-classy-approach-to-solving-traveling-salesman-problems-effectively-dbb44e7d30b9#:~:text=this%20one%2Dliner%20has%20you%20covered%3A)
    **解决 TSP 问题非常方便**，但这种优化器的输出并不足以构成一个完整的原型。我们需要一种方法来快速可视化该输出，以便直观地验证并与他人分享。因此，这种需求促成了本次冲刺的目标，这是系列中的第六次：将优化器的输出，*即*，**以有序位置形式的路线，图形化地显示在地图上**。请注意，优化器的输出，即存储最佳路线的数据框，现已成为我们的输入，而我们需要制作的输出是显示在地图上的路线。输入是通用的：只是**一组有序的位置**，它可以表示任何类型的路线：公交车在某一天的停靠站，邮递员为了投递邮件而访问的一组地址，或者外卖员服务多个住宅的行驶路径。对我们来说，重要的是**“通用”路线的可视化**，我们将在本文中开发实现这一功能的方式。
- en: 2\. Data and dependencies set up
  id: totrans-26
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 数据和依赖项设置
- en: 2.1 Install dependencies
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.1 安装依赖项
- en: 'We’ll use the beautiful [Folium library](http://localhost:8888/files/TWDS/traveling_tourist_problem/link/to/pip?_xsrf=2%7C7eacd5cc%7Ca559055af22bb4f0efe1c6967f5f14f6%7C1704496168)
    to create maps, which uses the [Leaflet.js](http://localhost:8888/files/TWDS/traveling_tourist_problem/link/to/library?_xsrf=2%7C7eacd5cc%7Ca559055af22bb4f0efe1c6967f5f14f6%7C1704496168)
    library under the hood to allow Python programmers to easily create interactive
    maps. We’ll also need [Geopy](https://geopy.readthedocs.io/en/stable/), a powerful
    geocoding library (which you already installed if you created the [virtual environment](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c#:~:text=I%20recommend%20creating%20a%20separate%20virtual%20environment%20in%20which%20to%20install%20all%20the%20libraries%20needed%20to%20follow%20the%20articles%20in%20this%20series.%20Copy%20this%20text)
    at the beginning of the series). Both are standard packages installable through
    `pip` or `conda`. Choose one of these two commands for installation:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用美丽的[Folium 库](http://localhost:8888/files/TWDS/traveling_tourist_problem/link/to/pip?_xsrf=2%7C7eacd5cc%7Ca559055af22bb4f0efe1c6967f5f14f6%7C1704496168)来创建地图，该库在后台使用[Leaflet.js](http://localhost:8888/files/TWDS/traveling_tourist_problem/link/to/library?_xsrf=2%7C7eacd5cc%7Ca559055af22bb4f0efe1c6967f5f14f6%7C1704496168)库，使
    Python 程序员能够轻松创建交互式地图。我们还需要[Geopy](https://geopy.readthedocs.io/en/stable/)，一个强大的地理编码库（如果你在系列文章开始时创建了[虚拟环境](https://medium.com/@carlosjuribe/plan-optimal-trips-automatically-with-python-and-operations-research-models-part-2-fc7ee8198b6c#:~:text=I%20recommend%20creating%20a%20separate%20virtual%20environment%20in%20which%20to%20install%20all%20the%20libraries%20needed%20to%20follow%20the%20articles%20in%20this%20series.%20Copy%20this%20text)，你应该已经安装了它）。这两个都是可以通过
    `pip` 或 `conda` 安装的标准库。选择以下任一命令进行安装：
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 2.2 Prepare input data
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2.2 准备输入数据
- en: For the introductory example, let’s take a set of famous sites in Paris.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在入门示例中，我们将以巴黎的一些著名景点为例。
- en: '[PRE1]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/f2d9238f1bc6fcf3ac1ae326dfc8493a.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2d9238f1bc6fcf3ac1ae326dfc8493a.png)'
- en: '**Note:** every image in this article is by the author, unless otherwise stated.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 本文中的所有图片均由作者提供，除非另有说明。'
- en: Let’s see a “quick” way to plot these sites on a map using `folium`.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一种通过 `folium` 快速绘制这些地点在地图上的方法。
- en: '3\. Showing routes on maps: a pragmatic approach'
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 在地图上显示路线：一种务实的方法
- en: In case you are not following this article series, let me point out that we’re
    following an **agile approach** in the creation of a decision support system,
    so we build it incrementally in so-called “sprints”. This entails we first want
    to arrive at **a working prototype that solves the** [***minimum valuable problem***](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef#:~:text=a%20workable%20solution.-,2.2.%20Identifying%20the%20Minimum%20Valuable%20Problem,start%20designing%20a%20minimum%20viable%20product%20that%20will%20be%20also%20valuable.,-To%20plan%20the)
    for a trip planning system. This prototype can’t be considered complete until
    we have a minimalist visualization functionality, hence this article. **Once we
    have the prototype ready**, *i.e.*, once the first version of the system is usable
    in a way that adds marginal value, we can start **perfecting its implementation
    to make it easy to extend**, so we can *add to the system more realistic features*
    of the real, more general problem. Thus, we’re interested now in *a good enough
    way* — not the *definitive* way — to display a route on a map in some meaningful
    manner. The *more definite way* will come in part 2 and part 3, where we will
    refactor the code created here so it follows an [object-oriented design](https://en.wikipedia.org/wiki/Object-oriented_programming)
    (custom types and classes) that can better handle the growing complexity of the
    routes that emerge from the addition of more details and requirements to the trip
    planning problem. But for now, this article (part 1) attempts to demonstrate a
    pragmatic and quicker way of creating interactive routes with Python. Let’s see
    how.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你没有跟随这篇文章的系列内容，让我指出，我们正在采用**敏捷方法**来创建决策支持系统，因此我们是通过所谓的“冲刺”逐步构建它。这意味着我们首先希望完成**一个解决问题的工作原型**，这个问题是关于[***最小可行问题***](https://medium.com/@carlosjuribe/plan-an-optimal-trip-for-your-next-holidays-with-the-help-of-operations-research-and-python-481b1ea38fef#:~:text=a%20workable%20solution.-,2.2.%20Identifying%20the%20Minimum%20Valuable%20Problem,start%20designing%20a%20minimum%20viable%20product%20that%20will%20be%20also%20valuable.,-To%20plan%20the)的旅行规划系统。这个原型在我们没有实现最简化的可视化功能之前，不能被认为是完成的，因此才有了这篇文章。**一旦我们有了原型**，*即*，一旦系统的第一个版本在增加边际价值的方式下变得可用，我们就可以开始**完善它的实现，使其易于扩展**，这样我们就能*为系统添加更多现实的特性*，使其能够处理更广泛的、更加复杂的旅行规划问题。因此，我们现在关注的是*一种足够好的方法*——而不是*最终的*方法——来以某种有意义的方式在地图上显示一条路线。*更明确的方法*将在第二部分和第三部分中出现，我们将在那里重构这里创建的代码，使其遵循[面向对象设计](https://en.wikipedia.org/wiki/Object-oriented_programming)（自定义类型和类），从而更好地处理随着旅行规划问题加入更多细节和需求而不断增加的路线复杂性。但现在，这篇文章（第一部分）试图展示一种更务实、更快速的方式来用
    Python 创建交互式路线。让我们看看如何实现。
- en: 3.1 Displaying sites
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 显示站点
- en: 'We first need to create a map of Paris. We can center it at the average location
    of our group of sites:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先需要创建一个巴黎的地图。我们可以将地图中心设置为我们一组站点的平均位置：
- en: '[PRE2]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Then, to display the sites on top of it, we create one marker for each of the
    sites, and add it to the map. Markers only need a location, but to quickly recognize
    which site is at each marker, we pass the site name to the `tooltip` attribute,
    so we see a pop-up with the name of the site any time we hover over the markers:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，为了在其上显示这些站点，我们为每个站点创建一个标记，并将其添加到地图上。标记只需要一个位置，但为了快速识别每个标记上的站点，我们将站点名称传递给`tooltip`属性，这样当我们将鼠标悬停在标记上时，就会看到一个弹出窗口，显示站点的名称：
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/1677ba0c1b0696e0817d650c5184d455.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1677ba0c1b0696e0817d650c5184d455.png)'
- en: '**Figure 6.1.** Site markers on top of the map'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.1.** 地图上的站点标记'
- en: Of course, you can zoom in and out, and move around the map if you need to,
    with the `+ | -` buttons in the upper-left corner and by click-and-drag.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果需要，你可以放大和缩小并移动地图，使用左上角的`+ | -`按钮，或者通过点击和拖动。
- en: 3.2 Displaying routes
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3.2 显示路线
- en: 'The sites we just displayed aren’t really ordered, but let’s pretend they are.
    Let’s say the dataframe contains **a route in the city**, where the numbers in
    the index indicate the visit order of those sites:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们刚刚显示的站点实际上并没有按顺序排列，但我们可以假设它们是有顺序的。假设数据框中包含**城市中的一条路线**，其中索引中的数字表示这些站点的访问顺序：
- en: '[PRE4]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/4b98ed2d3e943684bc81b0493cbd4858.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b98ed2d3e943684bc81b0493cbd4858.png)'
- en: Now the sites are “connected” in a specific order (the visit order), so we should
    also represent that fact in the map by **adding lines connecting consecutive stops
    in the route**. These lines, or more precisely, “segments”, are created with `folium.PolyLine`
    objects. To add them to the map in one go we create some more columns in `df_route`,
    holding the information of the "next stops", so each stop is mapped to its following
    stop, constituting a route segment. That way, **each row can store info about
    both the stops and the segments of the route**.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在这些站点按照特定顺序（访问顺序）“连接”起来，因此我们也应该在地图上通过**添加连接连续停靠点的线路**来表示这一事实。这些线路，或者更准确地说，“段落”，是通过
    `folium.PolyLine` 对象创建的。为了将它们一次性添加到地图上，我们在 `df_route` 中创建了更多的列，保存“下一个停靠点”的信息，因此每个停靠点都与其后续停靠点相对应，构成一个路线段。这样，**每一行都可以存储有关停靠点和路线段的信息**。
- en: '[PRE5]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/eed33700b4b1559bf081ba43f77ce8f8.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eed33700b4b1559bf081ba43f77ce8f8.png)'
- en: 'For a fixed row, the first three columns hold information for the “current”
    site, and the next three columns hold information for the “next site” in the route.
    This allows us to create a marker *and* a segment in the same for-loop iteration:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 对于一个固定的行，前三列保存“当前”站点的信息，接下来的三列保存“下一个站点”在路线中的信息。这样，我们就可以在同一个 `for` 循环迭代中同时创建一个标记
    *和* 一个段落：
- en: '[PRE6]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/70230ad30828b59b0859ed5cd8b56318.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/70230ad30828b59b0859ed5cd8b56318.png)'
- en: '**Figure 6.2.** Site markers connected through lines'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.2.** 通过线路连接的站点标记'
- en: Now the order in which the stops are visited is clear, and when you hover over
    each line with the mouse you see which two stops the line is connecting. The same
    is true for markers, the names of the sites they reference are displayed when
    hovering over them.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，停靠点的访问顺序变得清晰，当你用鼠标悬停在每条线路上时，会看到该线路连接了哪两个站点。标记也一样，悬停时会显示它们所指向站点的名称。
- en: 3.3 Enriching the map with interactive information
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.3 丰富地图的交互信息
- en: 'This is all well and good to get a rough idea of what the route looks like,
    but we can make the map a bit more insightful with little extra effort by **adding
    more information that can be displayed interactively**. For starters, where does
    the route start? With the current view, it’s not straightforward which of the
    sites is the “initial one”. There are two markers that are connected to only one
    segment, so it must be one of these, but we’d have to look at the dataframe to
    distinguish the “start” from the “finish” site. A better way is to **indicate
    the initial site with a special icon** so that we can recognize it at a glance.
    We do that by adding a `folium.Icon` object to each marker, making the initial
    site have a distinct icon:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 这些信息对于大致了解路线的外观已经足够，但我们可以通过**添加更多可以交互显示的信息**，用一点额外的努力让地图变得更加有用。首先，路线从哪里开始？通过当前的视图，并不直观地看到哪个站点是“起点”。有两个标记仅与一个段落连接，因此它们必须是其中之一，但我们得查看数据框才能区分“起点”和“终点”。更好的方式是**通过特殊图标标示起始站点**，这样我们一眼就能认出它。我们通过为每个标记添加一个
    `folium.Icon` 对象来做到这一点，使得起始站点具有一个独特的图标：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/dfa8722beb98a4ee063af5e7c0f896d2.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dfa8722beb98a4ee063af5e7c0f896d2.png)'
- en: '**Figure 6.3.** Route with stop markers colored by type'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.3.** 按类型着色的带停靠标记的路线'
- en: At a glance, it’s clear now that the route starts at the marker with a “home”
    icon. Let’s exploit the interactivity a little further by showing some more information
    on the map that helps us understand the route even better. The basic info we’ll
    add is the **distances between stops** and **the visit order number of each stop**.
    Since we have in each row of `df_route_segments` both the starting and ending
    points of segments, we can easily add a column with the distance between consecutive
    stops.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 一眼看去，现在显然路线是从带有“家”图标的标记开始的。让我们进一步利用交互性，通过在地图上显示一些有助于更好理解路线的更多信息来提高地图的可用性。我们将添加的基本信息是**停靠点之间的距离**和**每个停靠点的访问顺序号**。由于在
    `df_route_segments` 的每一行中都有段落的起点和终点，我们可以轻松地添加一列，表示连续停靠点之间的距离。
- en: '***For readers interested in the current article only (*i.e.*, not in the past
    articles)****, I have declared the function* `*ellipsoidal_distance*` *below.
    If, on the contrary, you''ve followed along in the article series, you already
    know about* [*that function*](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e#:~:text=Here%E2%80%99s%20a%20function%20that%20computes%20the%20ellipsoidal%20distance%20between%20point%201%20and%20point%202%2C%20in%20meters%3A)*,
    as we developed it (and made the case for it) in* [*the article on computing distance
    matrices*](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e)*.
    Feel free to re-use that function here, to avoid duplicated code. To get the distance
    in meters between location* `*loc1*` *and location* `*loc2*`*, you just need to:*'
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***对于只对当前文章感兴趣的读者（*即*，不关心以前的文章）****，我在下面声明了函数* `*ellipsoidal_distance*` *。如果相反，您已经跟随整个系列的文章，您已经了解了*
    [*那个函数*](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e#:~:text=Here%E2%80%99s%20a%20function%20that%20computes%20the%20ellipsoidal%20distance%20between%20point%201%20and%20point%202%2C%20in%20meters%3A)*，因为我们在*
    [*计算距离矩阵的文章*](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e)*中开发了它（并为其辩护）。欢迎在此处重用该函数，以避免重复代码。要获得位置*
    `*loc1*` *和位置* `*loc2*` *之间的距离（单位：米），您只需要：*'
- en: ''
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`***from*** *geoutils* ***import*** *GeoAnalyzer*`'
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`***from*** *geoutils* ***import*** *GeoAnalyzer*`'
- en: ''
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '`*distance* ***=*** *GeoAnalyzer.****ellipsoidal_distance****(loc1, loc2)*`'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '`*distance* ***=*** *GeoAnalyzer.****ellipsoidal_distance****(loc1, loc2)*`'
- en: '[PRE8]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'The function `ellipsoidal_distance` accepts two locations (two tuples of coordinates)
    and returns the [geodesic distance](https://en.wikipedia.org/wiki/Geodesic) between
    them, in meters. For a more in-depth explanation and *justification* of the geodesic
    distance, I invite you to read the [article where we created it](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e):'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 函数`ellipsoidal_distance`接受两个位置（两个坐标元组），并返回它们之间的[地理距离](https://en.wikipedia.org/wiki/Geodesic)，单位为米。有关地理距离的更深入解释和*论证*，请阅读我们[创建该距离公式的文章](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e)：
- en: '[](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e?source=post_page-----44f8d25d0761--------------------------------)
    [## Compute the Distance Matrix of a Set of Sites from Their Coordinates in Python'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e?source=post_page-----44f8d25d0761--------------------------------)
    [## 计算一组站点的距离矩阵（基于其坐标）]'
- en: Estimate the distance between any pair of sites from their geographical coordinates
    as a stepping stone to solving…
  id: totrans-72
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 估算任意一对站点之间的距离，以其地理坐标为基础，作为解决问题的跳板……
- en: towardsdatascience.com](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e?source=post_page-----44f8d25d0761--------------------------------)
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/compute-the-distance-matrix-of-a-set-of-sites-from-their-coordinates-in-python-d5fc92a0ba9e?source=post_page-----44f8d25d0761--------------------------------)
- en: 'We can add the new column `''distance_seg''` because we have both endpoints
    of the segment in each row:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以添加新的列`'distance_seg'`，因为在每一行中我们都包含了段的两个端点：
- en: '[PRE9]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/5fdf24994639e120b905277d9b1395b9.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5fdf24994639e120b905277d9b1395b9.png)'
- en: 'Having this new column, we can take their values and include them in the string
    we pass to `tooltip` when creating the lines of the map, thereby **making each
    segment’s distance available at the tip of the cursor**. While we''re at it, let''s
    add the "stop numbers" to the markers too, so that more context is given to each
    marker on the overall route:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有了这一新列后，我们可以将其值纳入我们传递给`tooltip`的字符串中，在创建地图上的线路时，从而**使每个段的距离在光标指尖可见**。同时，我们还可以将“停靠点编号”添加到标记上，以便为每个标记提供更多的路线上下文：
- en: '[PRE10]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: '![](../Images/87b5e9ccfc0b1c831442855f6e50e9e8.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/87b5e9ccfc0b1c831442855f6e50e9e8.png)'
- en: '**Figure 6.4.** Interactive information popping up when hovering over a marker'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.4.** 鼠标悬停在标记上时显示的交互式信息'
- en: Note how we’ve used a bit of HTML to render the “hover text” displayed on markers
    and lines more nicely.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 注意我们如何使用了一些HTML来更漂亮地呈现标记和线路上的“悬停文本”。
- en: '![](../Images/34dadd5309a7e1769f25ef83838b095d.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34dadd5309a7e1769f25ef83838b095d.png)'
- en: '**Figure 6.5.** Interactive information popping up when hovering over a route
    segment'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.5.** 鼠标悬停在路线段上时显示的交互式信息'
- en: 'The current behavior seems general enough to be encapsulated into some helper
    functions:'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的行为看起来足够通用，适合封装成一些辅助函数：
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 3.4 Dealing with closed routes, a.k.a. tours
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.4 处理封闭路线，亦即环形路线
- en: 'What happens if we have a dataframe `df_route` representing a **closed tour**,
    *i.e.*, a route that starts and ends at the same site? How will the map reflect
    that? Let''s build such a dataframe and test it. We take the previous `df_route`,
    having an open route, and add a new row at the end with the same info as in the
    first row, thus making the route closed:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们有一个代表**闭合旅行**的DataFrame`df_route`，*即*，一条起始点和终点相同的路线，会发生什么情况？地图会如何反映这一点？让我们构建这样的一个DataFrame并进行测试。我们以之前的`df_route`为例，它是一个开放的路线，并在末尾添加一行，内容与第一行相同，从而使得这条路线闭合：
- en: '[PRE12]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '![](../Images/bcca8409f3c17da3142f7e5454f8f0f1.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bcca8409f3c17da3142f7e5454f8f0f1.png)'
- en: 'Thanks to setting `ignore_index=True`, the index number, which represents the
    visit order, has been incremented in one unit automatically. Now we just proceed
    as before, creating the map, but this time with our new helper function `plot_route_on_map`:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 多亏了设置`ignore_index=True`，代表访问顺序的索引号已经自动增加了一个单位。现在我们照常继续，创建地图，但这次使用我们的新辅助函数`plot_route_on_map`：
- en: '[PRE13]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '![](../Images/b7a7a6f6de4a883ea751087295a450b3.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7a7a6f6de4a883ea751087295a450b3.png)'
- en: '**Figure 6.6.** The blue marker indicating the initial site is buried by the
    red marker of the final site'
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: '**图6.6。** 蓝色标记（表示初始站点）被最终站点的红色标记遮挡'
- en: 'It works *almost fine,* becausethe new line representing the “closing” segment
    is created as it should, but there’s a problem with the markers: **a new red marker
    is added on top of the previously added blue marker for the initial site**, hiding
    it. This is simply how Folium works, adding elements on top of elements (notice
    how the marker’s shadow is darker for the ‘hotel’ than for the other markers,
    a subtle way of saying that there’s more than one marker in that location). To
    avoid losing that helpful blue “home” icon indicating the starting stop of the
    route, we need to skip adding the last marker (after the `for`-loop ends) *only
    when the last stop coincides with the starting site of the route*. We can do that
    by checking the condition directly, on `df_route`, and by only adding this last
    marker **if the route is not closed**:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 它*几乎完美*地工作，因为代表“闭合”段的新行如预期创建，但标记有问题：**一个新的红色标记被添加到初始站点上方，覆盖了先前添加的蓝色标记**。这就是Folium的工作方式，它会将新元素叠加在现有元素上（注意“酒店”的标记阴影比其他标记的阴影更深，这是一个微妙的提示，表明该位置有多个标记）。为了避免丢失指示路线起始站点的有用蓝色“主页”图标，我们需要跳过添加最后一个标记（当`for`循环结束后）*仅当最后一个站点与路线的起始站点重合时*。我们可以通过直接检查`df_route`中的条件来做到这一点，只有在**路线没有闭合**的情况下，才添加最后一个标记：
- en: '[PRE14]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: 'After editing `plot_route_on_map` as indicated above, the desired behavior
    is restored, *i.e.*, the “home” icon for the initial site is not overridden by
    the last stop in the tour:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 在如上所述编辑`plot_route_on_map`之后，期望的行为已恢复，*即*，初始站点的“主页”图标不会被旅行中的最后一个站点覆盖：
- en: '[PRE15]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: '![](../Images/0a7ea8abc0572b2ea3188d82e3a8df86.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0a7ea8abc0572b2ea3188d82e3a8df86.png)'
- en: '**Figure 6.7.** Marker signaling the initial site is visible again'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**图6.7。** 标记显示初始站点再次可见'
- en: With this final view, *we can easily know the distance between two consecutive
    stops* (and the sites it’s connecting) *with just one move of the cursor*. Besides,
    *we can check the chronological order in which sites are visited just by hovering
    over them*. **This interactivity can help us evaluate the quality of the routes
    we deal with, regardless of the routing problem at hand.**
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种最终视图，*我们可以通过光标的一个简单操作轻松知道两个连续站点之间的距离*（以及它们所连接的站点）。此外，*我们只需将光标悬停在站点上，就能查看站点访问的时间顺序*。**这种互动性可以帮助我们评估所处理路线的质量，无论当前处理的是什么类型的路径问题。**
- en: '3.5 Bonus: Adding KPIs to the map'
  id: totrans-101
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.5 附加功能：在地图上添加关键绩效指标（KPI）
- en: To cap it all, let’s add a feature that can make the map even more insightful.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们添加一个功能，使地图变得更加富有洞察力。
- en: There’s always information that is not directly associated with any site or
    segment in a route, but with the route as a whole. This information is important
    to know about too, and tends to be global properties, like IDs or names, or relevant
    metrics associated with the routes. We can display them too on a folium map with
    a simple trick.
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 总是有一些信息，它们与路线中的任何站点或段落没有直接关联，而是与整个路线相关。这些信息也很重要，通常是全局属性，如ID、名称，或与路线相关的重要指标。我们也可以通过一个简单的技巧将它们显示在Folium地图上。
- en: If we want to display information that isn’t linked to any single marker or
    line, but that pertains to the route as a whole, we can **add it as text blocks
    in folium maps**. This is useful for business dashboards, for example, where one
    usually wants to display things like **the name/ID of the route or various metrics
    that attempt to summarize it** in some relevant sense.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想展示一些与任何单一标记或行无关，但与整个路线相关的信息，我们可以**将其作为文本块添加到folium地图中**。例如，在商业仪表盘中，这非常有用，因为通常我们想要显示像**路线的名称/ID或各种试图在某种相关意义上总结它的指标**之类的信息。
- en: 'As an example, I’ll add at the top-left corner a **title for the map**, and
    at the bottom-right corner **two very basic KPIs for routes**: the *number of
    stops* and the *total distance* it traverses. We define the names of the different
    pieces of text we want to display (in the `TAG_` constants), and extract their
    respective values from `df_route_segments`, the dataframe having all the "segments
    data":'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 举个例子，我会在左上角添加一个**地图的标题**，在右下角添加**两个非常基础的路线KPI**：*停靠站的数量*和*它穿越的总距离*。我们定义了我们想要显示的不同文本的名称（在`TAG_`常量中），并从`df_route_segments`中提取它们各自的值，`df_route_segments`是包含所有“段数据”的数据框：
- en: '[PRE16]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'For each piece of text we want to add, we need to convert it to HTML and add
    it to the map in a special way. The string having the HTML code for the text needs
    to go inside a `folium.Element`. These are the steps: (1) Make a *basic* HTML
    string with the info to be displayed, (2) style it with more HTML, and (3) add
    it to the map’s root HTML element. I know, talking about maps gets me lost too,
    so let’s just do it.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个我们想要添加的文本，我们需要将其转换为HTML，并以特殊方式将其添加到地图中。包含文本HTML代码的字符串需要放入一个`folium.Element`中。步骤如下：(1)
    创建一个*基本的*HTML字符串来显示信息，(2) 使用更多HTML进行样式设置，(3) 将其添加到地图的根HTML元素中。我知道，谈论地图让我也会迷失，所以我们还是直接做吧。
- en: '**💡Tip:** If you’re using Jupyter Notebook or Lab, I recommend you use the
    `IPython.display.HTML` class to gain quick feedback on your HTML code, like this:'
  id: totrans-108
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**💡小贴士：** 如果你正在使用Jupyter Notebook或Lab，建议你使用`IPython.display.HTML`类来快速查看你的HTML代码反馈，像这样：'
- en: '[PRE17]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: Adding a title to the map
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为地图添加标题
- en: 'First, create the basic HTML string for the title:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建标题的基本HTML字符串：
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Second, style this basic HTML string as you wish. Here, I want the title to
    be black, located at the top-left of the map, and, **for improved readability,
    I want the text to have some background white shadow:**
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 第二，按你喜欢的样式来调整这个基本HTML字符串。在这里，我希望标题是黑色的，位于地图的左上角，并且**为了提高可读性，我希望文字有一些白色背景阴影：**
- en: '[PRE19]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '![](../Images/a80195cb4a8cdd736d9e79e6042ac78b.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a80195cb4a8cdd736d9e79e6042ac78b.png)'
- en: '**Figure 6.8.** Title of the map, invariant to zoom level'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.8.** 地图的标题，不受缩放级别影响'
- en: 'That looks nice. Now, the same thing for the KPIs:'
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错。现在，做同样的事情来显示KPI：
- en: '**Adding KPIs to the map**'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: '**将KPI添加到地图中**'
- en: 'As we did before, first, we create the basic HTML string for the KPIs. For
    this case, the display will be different, and of course, it depends on personal
    taste: I like my KPIs displayed horizontally at the bottom-right of the map. Feel
    free to change the style parameters to ones that suit your aesthetic preferences.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 和之前一样，首先，我们为KPI创建基本的HTML字符串。对于这种情况，显示方式会有所不同，当然，也取决于个人口味：我喜欢我的KPI显示在地图的右下角，水平排列。可以随意更改样式参数，选择符合你审美偏好的样式。
- en: '[PRE20]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The style is very similar, the only change is a slightly smaller font size.
    We keep the white background shadow as it’s key for the clarity of the KPIs displayed:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 样式非常相似，唯一的变化是字体稍微小一点。我们保留白色背景阴影，因为它对展示KPI的清晰度至关重要：
- en: '[PRE21]'
  id: totrans-122
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: '![](../Images/113d40a7fb08134fb884cabf905fb1b0.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/113d40a7fb08134fb884cabf905fb1b0.png)'
- en: '**Figure 6.9.** KPIs on top of the map, invariant to zoom level'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.9.** 地图上方的KPI，不受缩放级别影响'
- en: Alright, this is starting to look great! Let’s combine both the title and KPIs
    now!
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，开始看起来很棒了！现在我们来将标题和KPI结合起来！
- en: '[PRE22]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/b7446aa528e9fd1534d9d3f85362f53f.png)'
  id: totrans-127
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b7446aa528e9fd1534d9d3f85362f53f.png)'
- en: '**Figure 6.10.** Summary information of the route, title at the top and KPIs
    at the bottom, invariant to zoom level'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '**图 6.10.** 路线的总结信息，标题在顶部，KPI在底部，不受缩放级别影响'
- en: 'Thanks to the text we’ve added, the map now conveys more useful information
    on the route (and looks more professional, doesn’t it?). Without even moving the
    mouse, **we can see valuable information on the corners; and thanks to interactivity,
    with a very quick hovering around, we can see the names and visiting order of
    the different sites, as well as the distance between any pair of stops**. *Let’s
    make this functionality* ***reusable*** *by wrapping it up into helper functions*,
    and let’s create a new, more general function, `display_route_on_map`, that will
    create a map like `plot_route_on_map` did, with the added option of including
    the name and KPI information to the map. First, the functions to obtain the HTML
    strings:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢我们添加的文本，地图现在传达了更多有用的路线信息（看起来也更专业了，不是吗？）。甚至不需要移动鼠标，**我们就能看到地图角落的有价值信息；而得益于互动性，通过快速悬停，我们可以看到不同景点的名称和参观顺序，以及任意两个停靠点之间的距离**。*让我们通过将其封装为帮助函数，使这个功能*
    ***可重用*** *，并创建一个新的、更通用的函数`display_route_on_map`，该函数将像`plot_route_on_map`一样创建地图，增加了将名称和KPI信息包含到地图上的选项。首先是获取HTML字符串的函数：*
- en: '[PRE23]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: 'We can control the addition of the title and KPIs to the map with the attribute
    `include_kpis` of the new function:'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过新函数的`include_kpis`属性来控制是否将标题和KPI添加到地图中：
- en: '[PRE24]'
  id: totrans-132
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: 'Let’s do a final test of our `display_route_on_map` function with a tour on
    a different city: **New York**. The dataframe below has a set of iconic sites
    of the city (and a random hotel) in no particular order:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们用一个不同城市的旅游进行最终测试，**纽约**。下面的数据框包含了这座城市的一些标志性景点（和一家随机酒店），顺序没有特别规定：
- en: '[PRE25]'
  id: totrans-134
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: '![](../Images/401caa233636364b644aaf54e86c5e26.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/401caa233636364b644aaf54e86c5e26.png)'
- en: 'With the dataframe of the route ready, a nice visualization is just a single
    function call away:'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 当路线的数据框准备好时，一个漂亮的可视化就只差调用一个函数：
- en: '[PRE26]'
  id: totrans-137
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '![](../Images/712885bbfb26632d9d605e6015d2e28b.png)'
  id: totrans-138
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/712885bbfb26632d9d605e6015d2e28b.png)'
- en: '**Figure 6.11.** Interactive map for a random route in New York'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '**图6.11.** 纽约随机路线的互动地图'
- en: 'We get a simple, yet powerful visualization of the route on top of Manhattan.
    At a glance, we know how much distance the route covers, and we don’t even need
    to bother counting red markers: the “Num stops” KPI is telling us already. For
    more context, **all markers and route segments are interactive and will display
    some useful information in pop-ups** when we caringly pass our mouse over them.
    Mission accomplished!'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了曼哈顿路线的一个简单而强大的可视化。只需一眼，我们就能知道路线的覆盖距离，甚至不需要麻烦地数红色标记：因为“站点数量”KPI已经告诉了我们。更具体地说，**所有标记和路线段都是互动的，当我们小心地将鼠标悬停在它们上面时，会弹出一些有用的信息**。任务完成！
- en: 4\. Conclusion (or planning for next sprint)
  id: totrans-141
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 结论（或下一个冲刺的计划）
- en: In this article, we’ve developed a pragmatic approach to taking generic routes
    stored in dataframes and displaying them on top of maps using interactive markers
    and segments that help us gain more context and get more information. If that
    was all you were after, I hope I’ve served you well and you’re able to expand
    on it for your own projects.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们开发了一种务实的方法，利用数据框中存储的通用路线，并通过互动标记和段落将其显示在地图上，这有助于我们获得更多背景信息并获取更多数据。如果这正是你所需要的，我希望我能为你提供帮助，并且你能够在自己的项目中扩展这一点。
- en: If you’re a reader of the [“**An Intelligent Decision Support System for Tourism
    in Python**” article series](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236),
    and you want to keep learning **applied prescriptive analytics** through the building
    of a trip planning system, please keep on reading, as in the next sprint **we’re
    going to integrate this mapping functionality with the Traveling Salesman Optimizer**
    we created in the previous sprint, so we can easily evaluate the optimal tours
    we generate. Stay tuned to witness the *tour de force* we’re gonna build together!
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是[“**Python中的智能旅游决策支持系统**”文章系列](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236)的读者，并且希望通过构建旅行规划系统继续学习**应用性规范分析**，请继续阅读，因为在下一个冲刺中，**我们将把这个地图功能与之前冲刺中创建的旅行商优化器集成在一起**，以便我们可以轻松评估生成的最佳旅游路线。敬请关注，见证我们将共同构建的*壮丽成果*！
- en: '![Carlos Jimenez Uribe](../Images/5bbb2a597db31fdc3ff42b2ff8a4aa78.png)'
  id: totrans-144
  prefs: []
  type: TYPE_IMG
  zh: '![卡洛斯·吉梅内斯·乌里贝](../Images/5bbb2a597db31fdc3ff42b2ff8a4aa78.png)'
- en: '[Carlos Jimenez Uribe](https://medium.com/@carlosjuribe?source=post_page-----44f8d25d0761--------------------------------)'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[卡洛斯·吉梅内斯·乌里贝](https://medium.com/@carlosjuribe?source=post_page-----44f8d25d0761--------------------------------)'
- en: An intelligent decision support system for tourism in Python
  id: totrans-146
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Python开发的旅游智能决策支持系统
- en: '[View list](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236?source=post_page-----44f8d25d0761--------------------------------)6
    stories![](../Images/4d41d313535ec5ba63dd9f3d2c823d70.png)![](../Images/f50edafda4058f43f32e514b3400fbbd.png)![](../Images/84bde15c0216d8a1a8bba8a299b5ba52.png)'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@carlosjuribe/list/an-intelligent-decision-support-system-for-tourism-in-python-b6ba165b4236?source=post_page-----44f8d25d0761--------------------------------)6篇故事![](../Images/4d41d313535ec5ba63dd9f3d2c823d70.png)![](../Images/f50edafda4058f43f32e514b3400fbbd.png)![](../Images/84bde15c0216d8a1a8bba8a299b5ba52.png)'
- en: Thanks for reading, and see you in the next one! 📈😊
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，我们下次再见！📈😊
- en: Feel free to follow me, ask me questions, **give me feedback**, or contact me
    on [LinkedIn](https://www.linkedin.com/in/carlosjuribe/).
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 随时欢迎关注我，向我提问，**给我反馈**，或通过[LinkedIn](https://www.linkedin.com/in/carlosjuribe/)与我联系。
