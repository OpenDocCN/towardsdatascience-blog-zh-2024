- en: Data Engineering, Redefined
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据工程，重新定义
- en: 原文：[https://towardsdatascience.com/data-engineering-redefined-643249cbbadd?source=collection_archive---------1-----------------------#2024-06-28](https://towardsdatascience.com/data-engineering-redefined-643249cbbadd?source=collection_archive---------1-----------------------#2024-06-28)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/data-engineering-redefined-643249cbbadd?source=collection_archive---------1-----------------------#2024-06-28](https://towardsdatascience.com/data-engineering-redefined-643249cbbadd?source=collection_archive---------1-----------------------#2024-06-28)
- en: How data engineering is practiced today and why we should redefine it
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 今天数据工程的实践方式以及为什么我们应该重新定义它
- en: '[](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)[![Bernd
    Wessely](../Images/e60e01c19412d8af8f8bddf78e561275.png)](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)
    [Bernd Wessely](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)[![Bernd
    Wessely](../Images/e60e01c19412d8af8f8bddf78e561275.png)](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)
    [Bernd Wessely](https://medium.com/@bernd.wessely?source=post_page---byline--643249cbbadd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)
    ·7 min read·Jun 28, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--643249cbbadd--------------------------------)
    ·阅读时间 7分钟·2024年6月28日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: What is the Problem with Data Engineering Today?
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 今天数据工程的问题是什么？
- en: If you search for a clear definition of what data engineering actually is, you’ll
    get so many different proposals that it leaves you with more questions than answers.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你搜索关于数据工程到底是什么的清晰定义，你会发现有太多不同的提议，结果让你更加困惑，而非得到答案。
- en: 'But as I want to explain what needs to be redefined, I’ll better use one of
    the more popular definitions that clearly represents the current state and mess
    we all face:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 但为了更好地解释需要重新定义的内容，我将使用一个更流行的定义，它清楚地代表了我们目前面临的现状和混乱：
- en: Data engineering is the development, implementation, and maintenance of systems
    and processes that take in raw data and produce high-quality, consistent information
    that supports downstream use cases, such as analysis and machine learning. Data
    engineering is the intersection of security, data management, DataOps, data architecture,
    orchestration, and software engineering. A data engineer manages the data engineering
    lifecycle, beginning with getting data from source systems and ending with serving
    data for use cases, such as analysis or machine learning.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 数据工程是开发、实施和维护系统与流程的过程，这些系统与流程接收原始数据并生成支持下游应用场景（如分析和机器学习）所需的高质量、一致性信息。数据工程是安全、数据管理、DataOps、数据架构、编排和软件工程的交集。数据工程师管理数据工程生命周期，从获取源系统的数据开始，直到为应用场景（如分析或机器学习）提供数据为止。
- en: ''
  id: totrans-10
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: — Joe Reis and Matt Housley in “Fundamentals of Data Engineering”
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: — Joe Reis 和 Matt Housley 在《数据工程基础》中
- en: That is a fine definition and now, what is the mess?
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个很好的定义，那么问题是什么呢？
- en: 'Let’s look at the first sentence, where I highlight the important part that
    we should delve into:'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看一下第一句话，我将重点突出我们应该深入探讨的部分：
- en: '***…take in raw data and produce high-quality, consistent information that
    supports downstream use cases…***'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '***…接收原始数据并生成支持下游应用场景的高质量、一致性的信息…***'
- en: Accordingly, data engineering takes raw data and ***transforms*** it to (produces)
    information that supports use cases. Only two examples are given, like analysis
    or machine learning, but I would assume that this includes all other potential
    use cases.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，数据工程将原始数据***转化***为（生成）支持应用场景的信息。虽然这里只给出了分析或机器学习两个示例，但我认为这包括所有其他潜在的应用场景。
- en: The ***data transformation*** is what drives me and all my fellow data engineers
    crazy. Data transformation is the monumental task of *applying the right logic*
    to raw data to transform it into information that enables all kinds of intelligent
    use cases.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '***数据转换***是让我和我所有的同事数据工程师抓狂的原因。数据转换是将*正确的逻辑*应用于原始数据的巨大任务，以将其转化为能够支持各种智能用例的信息。'
- en: To apply the right logic is actually the main task of *applications*. Applications
    are the systems that implement the logic that drives the business (use cases)
    — I continue to refer to it as an application and implicitly also mean services
    that are small enough to fit into the microservices architecture. The applications
    are usually built by application developers (software engineers if you like).
    But to meet our current definition of data engineering, the data engineers must
    now implement business logic. The whole mess starts with this wrong approach.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 应用正确的逻辑实际上是*应用程序*的主要任务。应用程序是实现推动业务（用例）逻辑的系统——我继续称其为应用程序，并隐含地也指代那些足够小以适应微服务架构的服务。应用程序通常由应用开发人员（如果你愿意，可以称之为软件工程师）构建。但为了符合我们当前对数据工程的定义，数据工程师现在必须实现业务逻辑。整个混乱开始于这一错误的做法。
- en: I have written an article about that topic, where I stress that [“Data Engineering
    **is** Software Engineering…”](https://medium.com/@bernd.wessely/data-engineering-is-software-engineering-a4c5df052492).
    Unfortunately, we already have millions of brittle data pipelines that have been
    implemented by data engineers. These pipelines sometimes — or regrettably, even
    oftentimes — do not have the same software quality that you would expect from
    an application. But the bigger problem is the fact that these pipelines often
    contain uncoordinated and therefore incorrect and sometimes even hidden business
    logic.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我写过一篇关于这个话题的文章，我在文中强调了[“数据工程**是**软件工程…”](https://medium.com/@bernd.wessely/data-engineering-is-software-engineering-a4c5df052492)。不幸的是，我们已经有了数百万个脆弱的数据管道，这些管道是由数据工程师实现的。这些管道有时——甚至可惜的是，很多时候——没有达到你对应用程序所期望的软件质量。但更大的问题是，这些管道往往包含不协调的、因此不正确的，有时甚至是隐藏的业务逻辑。
- en: However, the solution is not that all data engineers should now be turned into
    application developers. Data engineers still need to be qualified software engineers,
    but they should by no means turn into application developers. Instead, I advocate
    a redefinition of data engineering as “*all about the movement, manipulation,
    and management of data”*. This definition comes from the book “*What Is Data Engineering?
    by* Lewis Gavin *(O’Reilly, 2019)”.* However, and this is a clear difference to
    current practices, we should **limit manipulation to purely technical ones**.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，解决方案并不是让所有数据工程师都转变为应用开发人员。数据工程师仍然需要是合格的软件工程师，但他们绝不应转变为应用开发人员。相反，我主张重新定义数据工程为“*全关于数据的流动、操作和管理*”。这个定义来自《*What
    Is Data Engineering? by* Lewis Gavin *(O’Reilly, 2019)》。然而，这是与当前实践的明显不同，我们应该**将操作限制为纯技术性操作**。
- en: We should no longer allow the development and use of business logic outside
    of applications.
  id: totrans-20
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们不应再允许在应用程序之外开发和使用业务逻辑。
- en: 'To be very clear, data engineering should **not** implement business logic.
    The trend in modern application development is actually to keep stateless application
    logic separate from state management. We do not put application logic in the database
    and we do not put persistent state (or data) in the application. In the functional
    programming community they joke “We believe in the separation of church and state”.
    If you now think, “Where is the joke?”, then [this might help](https://en.wikipedia.org/wiki/Functional_programming).
    But now without any jokes: “We should believe in the separation of business logic
    and business data”. Accordingly, I believe we should explicitly leave data concerns
    to the data engineer and logic concerns to the application developer.'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 很明确，数据工程不应该实现业务逻辑。现代应用开发的趋势实际上是将无状态的应用逻辑与状态管理分开。我们不会将应用逻辑放入数据库，也不会将持久化状态（或数据）放入应用程序。在函数式编程社区中，他们开玩笑说：“我们相信教会与国家的分离”。如果你现在想问：“笑话在哪里？”，那么[这可能有帮助](https://en.wikipedia.org/wiki/Functional_programming)。但现在没有任何笑话：“我们应该相信业务逻辑与业务数据的分离”。因此，我认为我们应该明确将数据问题留给数据工程师，逻辑问题留给应用开发人员。
- en: What are “technical manipulations” that still are allowed for the data engineer,
    you might ask. I would define this as *any manipulation to data that does not
    change or add new business information*. We can still partition, bucket, reformat,
    normalize, index, technically aggregate, etc., but as soon as real business logic
    is necessary, we should address it to the application developers in the business
    domain responsible for the respective data set.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，仍然允许数据工程师进行的“技术操作”是什么呢？我将其定义为*任何不改变或添加新的业务信息的数据操作*。我们仍然可以进行分区、桶分、重新格式化、归一化、索引、技术聚合等操作，但一旦需要涉及实际的业务逻辑时，我们应当将其交给负责相应数据集的业务领域的应用程序开发人员。
- en: Why Data Engineering Got Sidetracked
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么数据工程被偏离了
- en: '![](../Images/5627991f57e82f1bd2fc7e6ee5bd1a17.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5627991f57e82f1bd2fc7e6ee5bd1a17.png)'
- en: The simple and obvious principle of separation of concerns – Image by author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 分离关注点的简单而明显的原则 —— 作者提供的图像
- en: Why have we moved away from this simple and obvious principle?
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么我们偏离了这个简单而明显的原则？
- en: I think this shift can be attributed to the rapid evolution of databases into
    multifunctional systems. Initially, databases served as simple, durable storage
    solutions for business data. They provided very helpful abstractions to offload
    functionality to persist data from the real business logic in the applications.
    However, vendors quickly enhanced these systems by embedding software development
    functionality in their database products to attract application developers. This
    integration transformed databases from mere data repositories into comprehensive
    platforms, incorporating sophisticated programming languages and tools for full-fledged
    software development. Consequently, databases evolved into powerful transformation
    engines, enabling data specialists to implement business logic outside traditional
    applications. The demand for this shift was further amplified by the advent of
    large-scale data warehouses, designed to consolidate scattered data storage —
    a problem that became more pronounced with the rise of microservices architecture.
    This technological progression made it practical and efficient to combine business
    logic with business data within the database.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 我认为这种转变可以归因于数据库快速发展为多功能系统的趋势。最初，数据库只是作为企业数据的简单持久存储解决方案。它们提供了非常有用的抽象，能够将数据持久化的功能从应用程序的实际业务逻辑中卸载出来。然而，供应商迅速通过在其数据库产品中嵌入软件开发功能来吸引应用程序开发人员，从而增强了这些系统的功能。这一整合使得数据库从简单的数据存储库转变为全面的平台，结合了复杂的编程语言和工具，支持全面的软件开发。因此，数据库演变成了强大的转换引擎，使得数据专家能够在传统应用程序之外实现业务逻辑。随着大型数据仓库的出现，这一转变的需求得到了进一步加强，数据仓库旨在整合分散的数据存储——这一问题在微服务架构兴起后变得更加突出。这一技术进步使得在数据库内结合业务逻辑和业务数据变得既实际又高效。
- en: In the end, not all software engineers succumbed to the temptation of bundling
    their application logic within the database, preserving hope for a cleaner separation.
    As data continued to grow in volume and complexity, big data tools like Hadoop
    and its successors emerged, even replacing traditional databases in some areas.
    This shift presented an opportunity to move business logic out of the database
    and back to application developers. However, the notion that data engineering
    encompasses more than just data movement and management had already taken root.
    We had developed numerous tools to support business intelligence, advanced analytics,
    and complex transformation pipelines, allowing the implementation of sophisticated
    business logic.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 最终，并非所有软件工程师都屈服于将应用程序逻辑捆绑在数据库中的诱惑，仍然保留了清晰分离的希望。随着数据量和复杂性的不断增长，大数据工具如Hadoop及其后继者应运而生，甚至在某些领域取代了传统数据库。这一转变为将业务逻辑从数据库中移出并返回给应用程序开发人员提供了机会。然而，数据工程不仅仅包括数据迁移和管理的观念已经深入人心。我们开发了许多工具来支持商业智能、先进分析和复杂的转换管道，从而能够实现复杂的业务逻辑。
- en: These tools have become integral components of the modern data stack (MDS),
    establishing data engineering as its own discipline. The MDS comprises a comprehensive
    suit of tools for data mangling and transformation, but these tools remain largely
    unfamiliar to the typical application developer or software engineer. Despite
    the potential to [“turn the database inside out”](https://martin.kleppmann.com/2015/03/04/turning-the-database-inside-out.html)
    and relocate business logic back to the application layer, we failed to fully
    embrace this opportunity. The unfortunate practice of implementing business logic
    remains with data engineers to this day.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这些工具已成为现代数据架构（MDS）的核心组成部分，使得数据工程成为一门独立的学科。MDS包括一整套用于数据处理和转化的工具，但这些工具对于典型的应用开发人员或软件工程师来说仍然相对陌生。尽管有可能[“将数据库翻转过来”](https://martin.kleppmann.com/2015/03/04/turning-the-database-inside-out.html)并将业务逻辑重新迁移到应用层，但我们未能完全把握这一机会。实现业务逻辑的这一不幸做法至今依然由数据工程师承担。
- en: How Data Engineering Can be Redefined
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 数据工程如何被重新定义
- en: Let’s more precisely define what “*all about the movement, manipulation, and
    management of data”* involves*.*
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更精确地定义一下“*关于数据的流动、操作和管理*”到底包含了什么。
- en: Data engineers can and should provide the most mature tools and platforms to
    be used by application developers to handle data. This is also the main idea with
    the [“self-serving data platform”](https://martinfowler.com/articles/data-monolith-to-mesh.html#DataAndSelf-servePlatformDesignConvergence)
    in the data mesh. However, the responsibility of defining and maintaining the
    business logic remains within the business domains. These people far better know
    the business and what business transformation logic should be applied to data.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 数据工程师可以并且应该提供最成熟的工具和平台，供应用开发人员使用，以便处理数据。这也是[“自服务数据平台”](https://martinfowler.com/articles/data-monolith-to-mesh.html#DataAndSelf-servePlatformDesignConvergence)在数据网格中的主要思想。然而，定义和维护业务逻辑的责任仍然在业务领域内。这些人对业务了解得更多，知道应如何将业务转型逻辑应用于数据。
- en: Okay, so what about these nice ideas like data warehouse systems and more general
    the overall [“data engineering lifecycle”](https://medium.com/towards-data-engineering/data-engineering-lifecycle-d1e7ee81632e)
    as defined by Joe Reis and Matt Housley?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 好吧，那么像数据仓库系统这样的好主意以及更广泛的[“数据工程生命周期”](https://medium.com/towards-data-engineering/data-engineering-lifecycle-d1e7ee81632e)（由Joe
    Reis和Matt Housley定义）怎么办呢？
- en: '![](../Images/2a71e249539fff492919a8553f05cf45.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a71e249539fff492919a8553f05cf45.png)'
- en: Data Engineering Lifecycle cmpleted — Image by author based on Joe Reis’ and
    Matt Housley’s view
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 数据工程生命周期已完成 — 图片由作者根据Joe Reis和Matt Housley的观点制作
- en: “Data pipelines” are really just agents between applications, but if business
    logic is to be implemented in the pipelines, these systems should be considered
    their own applications in the enterprise. Applications that should be maintained
    by application developers in the business domains and not by data engineers.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: “数据管道”实际上只是应用程序之间的代理，但如果业务逻辑要在管道中实现，这些系统应被视为企业中的独立应用程序。这些应用程序应由业务领域的应用开发人员维护，而不是由数据工程师维护。
- en: The nice and clear flow of data from source (“Generation” as they named it in
    their reference) to serving for consumers is actually idealistically reduced.
    The output from “Reverse ETL” is data that again serves as input for downstream
    applications. And not only “Reverse ETL” but also “Analytics” and “Machine Learning”
    create output to be consumed by analytical and operational downstream applications.
    The journey of data through the organization does not end with the training or
    application of an ML model or the creation of a business analysis. The results
    of these applications need to be further processed within the company and therefore
    be integrated into the overall business process flow (indicated by the blue boxes
    and arrows). This view blurs the rigid distinction still practiced between the
    operational and analytical planes, [the elimination of which I have described
    as a core target of data mesh](https://medium.com/towards-data-science/challenges-and-solutions-in-data-mesh-part-1-24cd45290805).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 数据从源头（在他们的参考中称为“生成”）到提供给消费者的流动其实在理想化的情况下被简化了。从“反向ETL”输出的数据再次作为下游应用程序的输入。而不仅仅是“反向ETL”，还有“分析”和“机器学习”会创建输出，供下游的分析和操作性应用程序使用。数据在组织中的流动并不会在机器学习模型的训练或应用，或商业分析的创建时结束。这些应用的结果需要在公司内部进一步处理，因此必须集成到整体的业务流程中（通过蓝色框和箭头表示）。这种观点模糊了仍然在操作性和分析性层面之间实行的严格区分，[我已经将其消除作为数据网格的核心目标](https://medium.com/towards-data-science/challenges-and-solutions-in-data-mesh-part-1-24cd45290805)。
- en: So what is the real task of the data engineer? We should evolve the enterprise
    architecture to enable application developers to take back the business logic
    into their applications, while allowing seamless exchange and sharing of data
    between these applications. Data engineers effectively build the “Data Infrastructure”
    and all the tooling that integrate business logic through a data mesh of interconnected
    business applications. This is by far more complicated than just providing a collection
    of different database types, a data warehouse or a data lake, whether on-premises
    or in the cloud. It comprises the implementation of tools and infrastructure,
    the definition and application of governance and data sharing principles (including
    modeling) that ultimately enables the **universal data supply** in the enterprise.
    However, the implementation of business logic should definitely be outside the
    scope of data engineering.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，数据工程师的真正任务是什么？我们应该发展企业架构，使得应用开发人员能够将业务逻辑重新带入他们的应用程序，同时允许这些应用程序之间无缝交换和共享数据。数据工程师实际上构建了“数据基础设施”和所有通过数据网格将业务逻辑整合到互联的业务应用程序中的工具。这比仅提供不同类型的数据库、一种数据仓库或数据湖（无论是在本地还是在云中）要复杂得多。它包括工具和基础设施的实施，治理和数据共享原则的定义和应用（包括建模），最终实现企业中的**普遍数据供应**。然而，业务逻辑的实现应该绝对不在数据工程的范围之内。
- en: '![](../Images/e12f43b1f42bcec87e2db35da6ef4776.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e12f43b1f42bcec87e2db35da6ef4776.png)'
- en: Data Infrastructure as the data engineers’ services to be used by all application
    developers — Image by author
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 数据基础设施作为数据工程师为所有应用程序开发人员提供的服务 — 作者图片
- en: 'This redefined data engineering practice is in line with the adapted data mesh
    approach that I proposed in this three-part series:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这种重新定义的数据工程实践与我在这三部分系列文章中提出的调整后的数据网格方法相一致：
- en: '[](/challenges-and-solutions-in-data-mesh-part-1-24cd45290805?source=post_page-----643249cbbadd--------------------------------)
    [## Challenges and Solutions in Data Mesh – Part 1'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/challenges-and-solutions-in-data-mesh-part-1-24cd45290805?source=post_page-----643249cbbadd--------------------------------)
    [## 数据网格中的挑战与解决方案 — 第一部分'
- en: Why the Data Mesh as defined by Zhamak Dehghani has its challenges and how these
    can be addressed.
  id: totrans-43
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 为什么由Zhamak Dehghani定义的数据网格面临挑战，以及如何解决这些问题。
- en: towardsdatascience.com](/challenges-and-solutions-in-data-mesh-part-1-24cd45290805?source=post_page-----643249cbbadd--------------------------------)
    [](/challenges-and-solutions-in-data-mesh-part-2-7dfe97aa461a?source=post_page-----643249cbbadd--------------------------------)
    [## Challenges and Solutions in Data Mesh — Part 2
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/challenges-and-solutions-in-data-mesh-part-1-24cd45290805?source=post_page-----643249cbbadd--------------------------------)
    [](/challenges-and-solutions-in-data-mesh-part-2-7dfe97aa461a?source=post_page-----643249cbbadd--------------------------------)
    [## 数据网格中的挑战与解决方案 — 第二部分
- en: “Data as a Product” is a core principle in Data Mesh. Why the current definition
    needs adaptation to fully enable the…
  id: totrans-45
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: “数据即产品”是数据网格中的核心原则。为什么当前的定义需要调整，以便完全实现…
- en: towardsdatascience.com](/challenges-and-solutions-in-data-mesh-part-2-7dfe97aa461a?source=post_page-----643249cbbadd--------------------------------)
    [](/challenges-and-solutions-in-data-mesh-part-3-dacb917f3c91?source=post_page-----643249cbbadd--------------------------------)
    [## Challenges and Solutions in Data Mesh — Part 3
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[数据网格中的挑战与解决方案 — 第三部分](https://towardsdatascience.com/challenges-and-solutions-in-data-mesh-part-3-dacb917f3c91?source=post_page-----643249cbbadd--------------------------------)'
- en: A practical approach to achieving interoperability in the data mesh through
    federated enterprise data modeling
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过联合企业数据建模实现数据网格中的互操作性的实用方法
- en: towardsdatascience.com](/challenges-and-solutions-in-data-mesh-part-3-dacb917f3c91?source=post_page-----643249cbbadd--------------------------------)
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '[数据网格中的挑战与解决方案 — 第三部分](https://towardsdatascience.com/challenges-and-solutions-in-data-mesh-part-3-dacb917f3c91?source=post_page-----643249cbbadd--------------------------------)'
