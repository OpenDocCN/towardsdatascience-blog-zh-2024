- en: Demo AI Products Like a Pro
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 像专业人士一样演示 AI 产品
- en: 原文：[https://towardsdatascience.com/demo-ai-products-like-a-pro-785a2d9f2d63?source=collection_archive---------7-----------------------#2024-05-07](https://towardsdatascience.com/demo-ai-products-like-a-pro-785a2d9f2d63?source=collection_archive---------7-----------------------#2024-05-07)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/demo-ai-products-like-a-pro-785a2d9f2d63?source=collection_archive---------7-----------------------#2024-05-07](https://towardsdatascience.com/demo-ai-products-like-a-pro-785a2d9f2d63?source=collection_archive---------7-----------------------#2024-05-07)
- en: An intro to expert guide on using Gradio to demonstrate product value to expert
    and non-technical audiences.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一份关于如何使用 Gradio 向专家和非技术观众展示产品价值的专家指南简介。
- en: '[](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)[![Joseph
    George Lewis](../Images/2d7c47bd9a323dd0f4a6b610e7fb08fd.png)](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)
    [Joseph George Lewis](https://medium.com/@josephgeorgelewis2000?source=post_page---byline--785a2d9f2d63--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)
    ·15 min read·May 7, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--785a2d9f2d63--------------------------------)
    ·15分钟阅读·2024年5月7日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/9660be088f4c71b28a709809fc9ddc34.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9660be088f4c71b28a709809fc9ddc34.png)'
- en: Photo by [Austin Distel](https://unsplash.com/@austindistel?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Austin Distel](https://unsplash.com/@austindistel?utm_source=medium&utm_medium=referral)
    在 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: We have all experienced at least one demo that has fallen flat. This is particularly
    a problem in data science, a field where a lot can go wrong on the day. Data scientists
    often have to balance challenges when presenting to audiences with varying experience
    levels. It can be challenging to both show the value and explain core concepts
    of a solution to a wide audience.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们每个人至少都经历过一次失败的演示。在数据科学领域，这个问题尤为突出，因为在演示当天可能会出现很多问题。数据科学家在向不同经验水平的观众演示时，通常需要平衡各种挑战。如何在面向广泛观众时，既展示解决方案的价值，又解释核心概念，往往是一个挑战。
- en: This article aims to help overcome the hurdles and help you share your hard
    work! We always work so hard to improve models, process data, and configure infrastructure.
    It’s only fair that we also work hard to make sure others see the value in that
    work. We will explore using the Gradio tool to share AI products. Gradio is an
    important part of the Hugging Face ecosystem. It’s also used by Google, Amazon
    and Facebook so you’ll be in great company! Whilst we will use Gradio, a lot of
    the key concepts can be replicated in common alternatives like StreamLit with
    Python or Shiny with R.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在帮助克服障碍，帮助你展示你的辛勤工作！我们总是非常努力地改进模型、处理数据和配置基础设施。理应我们也要努力确保别人能看到这项工作的价值。我们将探索如何使用
    Gradio 工具来分享 AI 产品。Gradio 是 Hugging Face 生态系统中的一个重要部分。Google、Amazon 和 Facebook
    等公司也在使用它，因此你将与这些大公司同行！虽然我们将使用 Gradio，但许多核心概念可以在常见的替代工具中复制，比如使用 Python 的 StreamLit
    或使用 R 的 Shiny。
- en: The importance of stakeholder/customer engagement in data science
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 利益相关者/客户参与在数据科学中的重要性
- en: The first challenge when pitching is ensuring that you are pitching at the right
    level. To understand how your AI model solves problems, customers first need to
    understand what it does, and what the problems are. They may have a PhD in data
    science, or they may never have heard of a model before. You don’t need to teach
    them linear algebra nor should you talk through a white paper of your solution.
    Your goal is to convey the value added by your solution, to all audiences.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 推销时的首个挑战是确保你以正确的层次进行推介。为了理解你的 AI 模型是如何解决问题的，客户首先需要了解它的功能，以及它所解决的问题。客户可能拥有数据科学的博士学位，或者他们可能从未听说过模型。你不需要教他们线性代数，也不应通过白皮书讲解你的解决方案。你的目标是向所有观众传达你的解决方案所带来的附加价值。
- en: This is where a practical demo comes in. **Gradio** is a lightweight open source
    package for making practical demos [1]. It is well documented that live demos
    can feel more personal, and help to drive conversation/generate new leads [2].
    **Practical demos can be crucial in building trust and understanding with new
    users**. Trust builds from seeing you use the tool, or even better testing with
    your own inputs. When users can demo the tool they know there is no “Clever Hans”
    [3] process going on and what they see is what they get. Understanding grows from
    users seeing the “if-this-then-that” patterns in how your solution operates.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个实用演示的场景。**Gradio** 是一个轻量级的开源工具包，用于制作实用演示[1]。有充分的文献表明，现场演示往往更具个人化，能够促进对话/产生新线索[2]。**实用演示在与新用户建立信任和理解方面至关重要**。信任来源于看到你使用工具，甚至更好的是通过用户自己输入进行测试。当用户可以进行工具演示时，他们知道没有“聪明汉斯效应”[3]，他们看到的就是他们得到的。理解来自于用户看到你的解决方案如何运作中的“如果-那么”模式。
- en: Then comes the flipside … everyone has been to a bad live demo. We have all
    sat through or made others sit through technical difficulties.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来是反面…每个人都参加过糟糕的现场演示。我们都曾经历过或让别人经历过技术问题。
- en: 'But technical difficulties aren’t the only thing that give us reason to fear
    live demos. Some other common off-putting factors are:'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 但技术问题并不是我们对现场演示感到恐惧的唯一原因。还有一些常见的让人反感的因素：
- en: '**Information dumping**: Pitching to customers should never feel like a lecture.
    Adding demos that are inaccessible can give customers too much to learn too quickly.'
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息倾销**：向客户推销时绝不应像一场讲座。添加难以访问的演示会让客户在短时间内接收到过多信息，造成学习压力过大。'
- en: '**Developing a demo**: Demos can be slow to build and actually slow down development.
    Regularly feeding back in “show and tells” is a particular problem for agile teams.
    Getting content for the show and tell can be an ordeal. Especially if customers
    grow accustomed to a live demo.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发演示**：演示的开发可能很慢，实际上可能会减慢开发进程。定期在“展示与讲解”中反馈是敏捷团队面临的一个特定问题。获取展示与讲解的内容可能是一个折磨。尤其是当客户习惯了现场演示时。'
- en: '**Broken dependencies**: If you are responsible for developing a demo you might
    rely on some things staying constant. If they change you’ll need to start again.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**断开的依赖关系**：如果你负责开发演示，可能会依赖一些保持不变的事物。如果它们发生变化，你就需要重新开始。'
- en: Introducing Gradio
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 介绍 Gradio
- en: 'Now to the technical part. Gradio is a framework for demonstrating machine
    learning/AI models and it integrates with the rest of the Hugging Face ecosystem.
    The framework can be implemented using Python or JavaScript SDKs. Here, we will
    use Python. Before we build a demo an example Gradio app for named entity recognition
    is below:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在进入技术部分。Gradio 是一个用于展示机器学习/AI 模型的框架，并与 Hugging Face 生态系统的其他部分集成。该框架可以通过 Python
    或 JavaScript SDK 实现。这里我们将使用 Python。在我们构建演示之前，下面是一个命名实体识别的 Gradio 应用示例：
- en: '![](../Images/f978c0de3422eea0c51b1308d0284395.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f978c0de3422eea0c51b1308d0284395.png)'
- en: 'Image Source: Hugging Face Documentation [4]'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Hugging Face 文档 [4]
- en: You can implement Gradio anywhere you currently work, and this is a key benefit
    of using the framework. If you are quickly prototyping code in a notebook and
    want instant feedback from stakeholders/colleagues you can add a Gradio interface.
    **In my experience of using Gradio, I have implemented in Jupyter and Google Colab
    notebooks.** You can also implement Gradio as a standalone site, through a public
    link hosted on HuggingFace. We will explore deployment options later.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在当前工作的任何地方实现 Gradio，这是使用该框架的一个关键优势。如果你在笔记本中快速进行代码原型设计，并希望立即从利益相关者/同事那里获取反馈，你可以添加
    Gradio 界面。**根据我使用 Gradio 的经验，我曾在 Jupyter 和 Google Colab 笔记本中实现过。**你还可以通过 HuggingFace
    托管的公共链接将 Gradio 实现为独立站点。稍后我们将探讨部署选项。
- en: 'Gradio demos help us solve the problems above, and get us over the fear of
    the live demo:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: Gradio 演示帮助我们解决了上述问题，并帮助我们克服了对现场演示的恐惧：
- en: '**Information dumping**: Gradio provides a simple interface that abstracts
    away a lot of the difficult information. Customers aren’t overloaded with working
    out how to interact with our tool **and** what the tool is all at once.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**信息泛滥**：Gradio 提供了一个简单的接口，抽象掉了许多复杂的信息。客户不会在一次性了解如何与我们的工具交互**和**工具本身是什么的过程中感到不堪重负。'
- en: '**Developing a demo**: Gradio demos have the same benefits as StreamLit and
    Shiny. The demo code is simple and builds on top of Python code you have already
    written for your product. This means you can make changes quickly and get instant
    feedback. You can also see the demo from the customer point of view.'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**开发演示**：Gradio 演示和 StreamLit、Shiny 有相同的优点。演示代码简单，并且建立在你已经为产品编写的 Python 代码之上。这意味着你可以快速做出修改并获得即时反馈。你还可以从客户的角度查看演示。'
- en: '**Broken dependencies**: No framework will overcome complete project overhauls.
    Gradio is built to accomodate new data, data types and even new models. The simplicity
    and range of allowed inputs/outputs, means that Gradio demos are kept quite constant.
    Not only that but if you have many tools, many customers and many projects the
    good news is that most of your demo code won’t change! You can just swap a text
    output to an image output and you’re all set up to move from LLM to Stable Diffusion!'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**断裂的依赖**：没有任何框架能够克服完全的项目大改。Gradio 被设计为能够适应新的数据、数据类型甚至新的模型。由于允许的输入/输出的简单性和范围，Gradio
    演示保持得相当稳定。不仅如此，如果你有很多工具、很多客户和很多项目，好消息是，大部分演示代码不会发生变化！你可以将文本输出换成图像输出，就可以轻松地从 LLM
    转到 Stable Diffusion！'
- en: Step-by-step guide to creating a demo using Gradio
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Gradio 创建演示的逐步指南
- en: The practical section of this article takes you from complete beginner to demonstration
    expert in Gradio. That being said, sometimes less can be more, if you are looking
    for a really simple demo to highlight the impact of your work by all means, stick
    to the basics!
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的实践部分将带你从完全初学者成长为 Gradio 演示专家。话虽如此，有时候少即是多，如果你只需要一个非常简单的演示来突出展示你工作的影响，那就坚持基础吧！
- en: 'For more information on alternatives like StreamLit, check out my earlier post:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 欲了解更多关于 StreamLit 等替代品的信息，查阅我之前的文章：
- en: '[](https://python.plainenglish.io/building-lightweight-geospatial-data-viewers-with-streamlit-and-pydeck-de1e0fbd7ba7?source=post_page-----785a2d9f2d63--------------------------------)
    [## Building Lightweight Geospatial Data Viewers with StreamLit and PyDeck'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://python.plainenglish.io/building-lightweight-geospatial-data-viewers-with-streamlit-and-pydeck-de1e0fbd7ba7?source=post_page-----785a2d9f2d63--------------------------------)
    [## 使用 StreamLit 和 PyDeck 构建轻量级地理空间数据查看器'
- en: Using two cutting edge libraries to build and deploy interactive web apps in
    Python for geospatial data vis.
  id: totrans-31
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 使用两种前沿库构建和部署 Python 的交互式 web 应用，用于地理空间数据可视化。
- en: python.plainenglish.io](https://python.plainenglish.io/building-lightweight-geospatial-data-viewers-with-streamlit-and-pydeck-de1e0fbd7ba7?source=post_page-----785a2d9f2d63--------------------------------)
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '[python.plainenglish.io](https://python.plainenglish.io/building-lightweight-geospatial-data-viewers-with-streamlit-and-pydeck-de1e0fbd7ba7?source=post_page-----785a2d9f2d63--------------------------------)'
- en: '**The basics**'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**基础知识**'
- en: 'Let’s start with a Hello World style example so that we can learn more about
    what makes up a Gradio demo. We have three fundamental components:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从一个 Hello World 风格的示例开始，这样我们可以更多地了解构成 Gradio 演示的基本要素。我们有三个基本组件：
- en: 'Input variables: We provide any number of input variables which users can input
    using toggles, sliders or other input widgets in our demo.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入变量：我们提供任何数量的输入变量，用户可以使用切换开关、滑块或其他输入小部件在我们的演示中输入。
- en: 'Function: The author of the demo makes a function which does the heavy lifting.
    This is where code changes **between** demos the most. The function will transform
    input variables into an output that the user sees. This is where we can call a
    model, transform data or do anything else we may need.'
  id: totrans-36
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 功能：演示的作者编写一个执行重活的函数。这是演示之间代码变化**最多**的地方。该函数会将输入变量转化为用户看到的输出。这是我们可以调用模型、转换数据或执行其他必要操作的地方。
- en: 'Interface: The interface combines the input variables, input widgets, function
    and output widgets into one demo.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 接口：接口将输入变量、输入小部件、功能和输出小部件结合到一个演示中。
- en: 'So let’s see how that looks in code form:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 那么让我们看看这在代码中的表现：
- en: 'This gives us the following demo. Notice how the input and output are both
    of the text type as we defined above:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这将给我们以下演示。注意，我们定义的输入和输出都是文本类型，如上所述：
- en: '![](../Images/29a50a435e096a72a026dd978ab32828.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/29a50a435e096a72a026dd978ab32828.png)'
- en: 'Image Source: Image by Author'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供
- en: Now that we understand the basic components of Gradio, let’s get a bit more
    technical.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们了解了 Gradio 的基本组件，让我们来深入一点，探讨一些技术细节。
- en: 'To see how we can apply Gradio to a machine learning problem, we will use the
    simplest algorithm we can. A linear regression. For the first example. We will
    build a linear regression using the California House Prices dataset. First, we
    update the basic code so that the function makes a prediction based on a linear
    model:'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示如何将 Gradio 应用到机器学习问题中，我们将使用最简单的算法——线性回归。作为第一个示例，我们将使用加利福尼亚房价数据集来构建线性回归模型。首先，我们更新基本代码，使得该函数能够基于线性模型进行预测：
- en: 'Then we update the interface so that the inputs and outputs match what we need.
    Note that we also use the **Number** type here as an input:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们更新界面，使得输入和输出与我们的需求相匹配。请注意，我们在这里也使用了**Number**类型作为输入：
- en: 'Then we hit run and see how it looks:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 然后点击运行，看看效果如何：
- en: '![](../Images/8a5fed64fc3219ad8d38670010e3dfac.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8a5fed64fc3219ad8d38670010e3dfac.png)'
- en: 'Image Source: Image by Author'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供
- en: Why stop now! We can use **Blocks** in Gradio to make our demos even more complex,
    insightful and engaging.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 为什么停下来呢！我们可以在 Gradio 中使用**Blocks**，使我们的演示更加复杂、深入且引人入胜。
- en: '**Controlling the interface**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**控制界面**'
- en: 'Blocks are more or less exactly as described. They are the building **blocks**
    of Gradio applications. So far, we have only used the higher level **Interface**
    wrapper. In the example below we will use blocks which has a slightly different
    coding pattern. Let’s update the last example to use **blocks** so that we can
    understand how they work:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Blocks 就如其名，是 Gradio 应用的构建**块**。到目前为止，我们只使用了更高级的**Interface**封装。在下面的示例中，我们将使用
    Blocks，它具有稍微不同的编码模式。让我们更新最后一个示例，使用**Blocks**，以便更好地理解它们的工作原理：
- en: Instead of before when we had inputs, function and interface. We have now rolled
    everything back to its most basic form in Gradio. We no longer set up an interface
    and ask for it to add number inputs for us! Now we provide each individual Number
    input and one Number output. Building like this gives us much more control of
    the display.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 与之前有输入、函数和界面不同，现在我们已经将所有内容简化到 Gradio 的最基本形式。我们不再设置界面并要求它为我们添加数字输入！现在，我们提供每个单独的数字输入和一个数字输出。这样构建使我们能够对显示进行更多的控制。
- en: With this new control over the demo we can even add new tabs. Tabs enable us
    to control the user flows and experience. We can first explain a concept, like
    how our predictions are distributed. Then on the next tab, we have a whole new
    area to let users prompt the model for predictions of their own. We can also use
    tabs to overcome technical difficulties. The first tab gives users a lot of information
    about model performance. This is all done through functions that were implemented
    earlier. If the model code doesn’t run on the day we still have something insightful
    to share. It’s not perfect, but it’s a lot better than a blank screen!
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这种新的控制方式，我们甚至可以添加新的标签。标签使我们能够控制用户的操作流程和体验。我们可以先解释一个概念，比如我们的预测是如何分布的。然后在下一个标签中，我们可以为用户提供一个全新的区域，让他们自己向模型提问，获取预测结果。我们还可以利用标签来应对技术难题。第一个标签为用户提供了很多关于模型性能的信息。这些都是通过之前实现的功能完成的。如果模型代码当天无法运行，我们依然有一些有价值的信息可以分享。虽然不完美，但总比空白屏幕强！
- en: '**Note: This doesn’t mean we can hide technical difficulties behind tabs! We
    can just use tabs to give audiences something to go on if all else fails. Then
    reshare the demo when we resolve the technical issues.**'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：这并不意味着我们可以通过标签隐藏技术难题！我们只是可以利用标签为观众提供一些线索，万一出现问题时可以参考。如果技术问题解决后，我们再重新分享演示。**'
- en: '![](../Images/7e59515adde18648612aaddc49612081.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e59515adde18648612aaddc49612081.png)'
- en: 'Image Source: Image by Author'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供
- en: Ramping up the complexity shows how useful Gradio can be to show all kinds of
    information! So far though we have kept to a pretty simple model. Let’s now explore
    how we would use Gradio for something a bit more complex.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 提高复杂度展示了 Gradio 在展示各种信息时的强大功能！到目前为止，我们一直保持着一个相对简单的模型。现在让我们探索一下如何在更复杂的场景中使用 Gradio。
- en: '**Gradio for AI Models and Images**'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: '**Gradio 用于 AI 模型和图像**'
- en: 'The next application will look at using Gradio to demonstrate Generative AI.
    Once again, we will use Blocks to build the interface. This time the demo will
    have two core components:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来的应用将展示如何使用 Gradio 演示生成式 AI。我们再次将使用 Blocks 来构建界面。这次演示将包含两个核心组件：
- en: An intro tab explaining the limitations, in and out of scope uses of the model.
  id: totrans-59
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个介绍标签，解释模型的限制以及适用范围内外的使用。
- en: An inspiration tab showing some images generated earlier.
  id: totrans-60
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个灵感标签，展示之前生成的一些图像。
- en: An interactive tab where users can submit prompts to generate images.
  id: totrans-61
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一个互动标签，用户可以提交提示生成图像。
- en: 'In this blog we will just demo a pre-trained model. To learn more about Stable
    Diffusion models, including key concepts and fine-tuning, check out my earlier
    blog:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇博客中，我们仅演示一个预训练的模型。要了解更多关于Stable Diffusion模型的信息，包括关键概念和微调，查看我之前的博客：
- en: '[](https://levelup.gitconnected.com/stable-diffusion-how-ai-converts-text-to-images-68943171bd8a?source=post_page-----785a2d9f2d63--------------------------------)
    [## Stable Diffusion: How AI converts text to images'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://levelup.gitconnected.com/stable-diffusion-how-ai-converts-text-to-images-68943171bd8a?source=post_page-----785a2d9f2d63--------------------------------)
    [## Stable Diffusion：AI 如何将文本转换为图像'
- en: Documenting my journey learning and getting hands-on with Stable Diffusion for
    other learners.
  id: totrans-64
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 记录我学习并亲自操作 Stable Diffusion 的过程，供其他学习者参考。
- en: levelup.gitconnected.com](https://levelup.gitconnected.com/stable-diffusion-how-ai-converts-text-to-images-68943171bd8a?source=post_page-----785a2d9f2d63--------------------------------)
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: '[levelup.gitconnected.com](https://levelup.gitconnected.com/stable-diffusion-how-ai-converts-text-to-images-68943171bd8a?source=post_page-----785a2d9f2d63--------------------------------)'
- en: 'As this is a demo, we will start from the most difficult component. This ensures
    we will have the most time to deliver the hardest piece of work. The interactive
    tab is likely to be the most challenging, so we will start there. So that we have
    an idea of what we are aiming for our demo page will end up looking something
    like this:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 由于这是一个演示，我们将从最难的组件开始。这确保我们有足够的时间来完成最困难的工作。互动标签可能是最具挑战性的部分，因此我们将从这里开始。为了让我们知道目标是什么，我们的演示页面最终看起来会像这样：
- en: '![](../Images/b8baf45c751ee03c3bcb95dcb66f10b8.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8baf45c751ee03c3bcb95dcb66f10b8.png)'
- en: 'Image Source: Image by Author. Stable Diffusion Images are AI Generated.'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供的图片。Stable Diffusion 图像是由 AI 生成的。
- en: To achieve this the demo code will combine the two examples above. We will use
    blocks, functions, inputs and **buttons**. Buttons enable us to work in a similar
    way to before where we have inputs, outputs and functions. We use buttons as **event
    listeners.** Event listeners help to control our logic flow.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现这一点，演示代码将结合上面两个示例。我们将使用块、函数、输入和**按钮**。按钮使我们能够以类似之前的方式工作，其中我们有输入、输出和函数。我们将按钮作为**事件监听器**。事件监听器有助于控制我们的逻辑流程。
- en: Let’s imagine we are trying to start our demo. At runtime (as soon as the demo
    starts), we have no inputs. As we have no input, the model the demo uses has no
    prompt. With no prompt, the model cannot generate an image. **This will cause
    an error**. To overcome the error we use an **event listener**. The button listens
    for an event, in this case, a click of the button. Once it “hears” the event,
    or gets clicked, it then triggers an action. In this case, the action will be
    submitting a completed prompt to the model.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们正在尝试启动我们的演示。在运行时（即演示开始时），我们没有输入。由于没有输入，演示使用的模型没有提示。没有提示，模型无法生成图像。**这将导致错误**。为了克服错误，我们使用**事件监听器**。按钮监听一个事件，在这种情况下是按钮点击事件。一旦它“听到”事件，或者被点击，它会触发一个动作。在这个例子中，动作将是将一个完成的提示提交给模型。
- en: 'Let’s review some new code that uses buttons and compare it to the previous
    **interface** examples:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回顾一些使用按钮的新代码，并将其与之前的**界面**示例进行对比：
- en: 'The button code looks like the interface code, but there are some big conceptual
    changes:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 按钮代码看起来像界面代码，但有一些大的概念变化：
- en: The button code uses blocks. This is because whilst we are using the button
    in a similar way to **interface**,we still need something to determine what the
    demo looks like.
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 按钮代码使用了块。这是因为虽然我们像**界面**一样使用按钮，但我们仍然需要某种方式来确定演示的外观。
- en: Input and output widgets are used as objects instead of strings. If you go back
    to the first example, our input was **“text”** of type *string* but here it is
    **prompt** of type *gr.Text()*.
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 输入和输出小部件作为对象使用，而不是字符串。如果你回到第一个示例，我们的输入是**“text”**类型为*string*，但这里它是**prompt**类型为*gr.Text()*。
- en: We use [*button.click*](http://button.click)*()* instead of *Interface.launch()*.
    This is because the interface was our whole demo before. This time the event is
    the button click.
  id: totrans-75
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们使用 [*button.click*](http://button.click)*()* 而不是 *Interface.launch()*。这是因为之前界面是我们的整个演示。这一次，事件是按钮点击。
- en: 'This is how the demo ends up looking:'
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这是演示的最终效果：
- en: '![](../Images/2132eea144bcbfca0ae1ce07e99f7225.png)![](../Images/10c685bb515e7a68a427dcfb73809bbf.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2132eea144bcbfca0ae1ce07e99f7225.png)![](../Images/10c685bb515e7a68a427dcfb73809bbf.png)'
- en: 'Image Source: Image by Author. Stable Diffusion Images are AI Generated.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供。Stable Diffusion 图像为AI生成。
- en: Can you see how important an event listener is! It has saved us lots of work
    in trying to make sure things happen in the right order. The beauty of Gradio
    means we also get some feedback on how long we will have to wait for images. The
    progress bar and time information on the left are great for user feedback and
    engagement.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 你能看到事件监听器的重要性吗！它为我们节省了很多工作，确保事情按正确的顺序发生。Gradio的美妙之处在于，我们还能够得到一些反馈，了解我们需要等待多久才能看到图片。左侧的进度条和时间信息对于用户反馈和互动非常有帮助。
- en: 'The next part of the demo is sharing images we generated beforehand. This will
    serve as inspiration to customers. They will be able to see what is possible from
    the tool. For this we will implement another new output widget, a **Gallery.**
    The gallery displays the images we just generated:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 演示的下一部分是分享我们之前生成的图片。这将为客户提供灵感。他们将能够看到工具能做什么。为此，我们将实现另一个新的输出小部件，**图库**。图库显示了我们刚刚生成的图片：
- en: '**An important note**: We actually make use of our *generate_images()* function
    from before. As we said above, all of these lightweight app libraries enable us
    to simply build on top of our existing code.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**一个重要的提醒**：我们实际上是利用了之前的*generate_images()*函数。正如我们之前所说，所有这些轻量级的应用程序库使我们能够简单地在现有代码的基础上构建。'
- en: 'The demo now looks like this, users are able to switch between two core functionalities:'
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 演示现在看起来是这样的，用户可以在两个核心功能之间切换：
- en: '![](../Images/a0c4e5fd9735cafd05a38e91a11fe0a9.png)'
  id: totrans-83
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a0c4e5fd9735cafd05a38e91a11fe0a9.png)'
- en: 'Image Source: Image by Author. Stable Diffusion Images are AI Generated.'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供。Stable Diffusion 图像为AI生成。
- en: Finally we will tie everything together with a landing page for the demo. In
    a live or recorded demo the landing page will give us something to talk through.
    It’s useful but not essential. The main reason we include a landing page, is for
    any **users that will test the tool without us being present**. This helps to
    build accessibility of the tool and trust and understanding in users. If you need
    to be there every time customers use your product, it’s not going to deliver value.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们将通过一个着陆页将一切联系在一起。在现场或录制的演示中，着陆页将为我们提供讨论的内容。它很有用，但不是必须的。我们包括着陆页的主要原因是为了**那些没有我们在场的情况下测试工具的用户**。这有助于提高工具的可访问性，并增加用户的信任和理解。如果你每次都需要在客户使用你的产品时在场，那就无法产生价值。
- en: 'This time we won’t be using anything new. Instead we will show the power of
    the *Markdown()* component. You may have noticed we have used some Markdown already.
    For those familiar, Markdown can help express all kinds of information in text.
    The code below has some ideas, but for your demos, get creative and see how far
    you can take Markdown in Gradio:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 这次我们不会使用任何新的东西。相反，我们将展示*Markdown()*组件的强大功能。你可能已经注意到我们已经使用了一些Markdown。对于那些熟悉的人来说，Markdown可以帮助以文本形式表达各种信息。下面的代码包含了一些想法，但在你的演示中，发挥创意，看看你能将Markdown在Gradio中应用到多远：
- en: '![](../Images/194507b2071a3fd7cf000686584d7480.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/194507b2071a3fd7cf000686584d7480.png)'
- en: 'Image Source: Image by Author'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供
- en: The finished demo is below. Let me know what you think in the comments!
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 完成的演示如下。欢迎在评论中告诉我你的想法！
- en: '![](../Images/bb4a4b5f04dff429b7705cb6a06e8863.png)![](../Images/2f07696ad3cd718c3ffd703ccbf65ebc.png)![](../Images/bc04001d4371fc82f9de7772d42329ce.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bb4a4b5f04dff429b7705cb6a06e8863.png)![](../Images/2f07696ad3cd718c3ffd703ccbf65ebc.png)![](../Images/bc04001d4371fc82f9de7772d42329ce.png)'
- en: 'Image Source: Image by Author. Stable Diffusion Images are AI Generated.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：作者提供。Stable Diffusion 图像为AI生成。
- en: Sharing with customers
  id: totrans-92
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 与客户分享
- en: Whether you’re a seasoned pro, or pitching beginner sharing the demo can be
    daunting. Building demonstrations and pitching are two very different skillsets.
    This article so far has helped to build your demo. There are great resources online
    to help pitching [5]. Let’s now focus on the intersection of the two, how you
    can share the demo you built, effectively.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 无论你是经验丰富的专业人士，还是刚开始的初学者，分享演示都可能让人感到畏惧。构建演示和推介是两项非常不同的技能。到目前为止，本文已经帮助你构建了演示。网络上有很多资源可以帮助推介[5]。现在让我们专注于这两者的交集——如何有效地分享你所构建的演示。
- en: Baring in mind your preferred style, live demo is guaranteed to liven up your
    pitch (pun intended!). To a technical audience we can set off our demo right in
    our notebook. This is useful to those who want to get into the code. I recommend
    sharing this way with new colleagues, senior developers and anyone looking to
    collaborate or expand your work. If you are using an alternative to Gradio, I’d
    still recommend sharing your code at a high level with this audience. It can help
    bring new developers onboard, or explain your latest changes to senior developers.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 考虑到你偏好的风格，现场演示绝对能让你的展示更加生动有趣（笑话自带！）。对于技术观众，我们可以直接在笔记本中启动演示。这对于那些想深入了解代码的人很有用。我推荐将这种方式分享给新同事、高级开发人员以及任何希望合作或扩展你工作的人员。如果你使用的是
    Gradio 以外的工具，我仍然推荐以高层次的方式与这个观众分享代码。这有助于吸引新开发人员加入，或向高级开发人员解释你最新的变化。
- en: An alternative is to present the live demo using just a “front-end”. This can
    be done using the link provided when you run the demo. When you share this way
    customers don’t have to get bogged down in code to see your demo. This is how
    the screenshots so far have been taken. I’d recommend this for live non-technical
    audiences, new customers and for agile feedback/show and tell sessions. We can
    get to this using a link provided if you built your demo in Gradio.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 另一种方法是只使用“前端”进行现场演示。这可以通过运行演示时提供的链接来完成。通过这种方式分享时，客户无需深入代码就能看到你的演示。这就是迄今为止截取屏幕截图的方式。我推荐这种方式用于现场的非技术观众、新客户以及敏捷反馈/展示会议。如果你在
    Gradio 中构建了演示，可以通过提供的链接访问这个功能。
- en: 'The link we can use to share also allows us to share the demo with others.
    By setting a **share** parameter when we launch the demo:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以用来分享的链接还允许我们将演示分享给其他人。通过在启动演示时设置**分享**参数：
- en: '[PRE0]'
  id: totrans-97
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'This works well for users who can’t make the live session, or want more time
    to experiment with the product. This link is available for 72 hours. **There is
    a need for caution at this point as demos are hosted publicly from your machine**.
    It is advised that you consider the security aspects of your system before sharing
    this way. One thing we can do to make this a bit more secure is to share our demo
    with password protection:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方式对于无法参加直播会议的用户非常有效，或者那些希望有更多时间进行产品实验的用户也很适用。此链接可用 72 小时。**此时需要小心，因为演示是通过你的机器公开托管的**。建议在以这种方式分享之前，考虑系统的安全性。我们可以通过设置密码保护来使其更加安全：
- en: '[PRE1]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This adds a password pop-up to the demo.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 这会为演示添加一个密码弹出窗口。
- en: You can take this further by using authorisation techniques. Examples include
    using Hugging Face directly or Google for OAuth identity providers [6]. Further
    protections can be put in place for blocked files and file paths on the host machine
    [6].
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以进一步通过使用授权技术来增强安全性。例如，使用 Hugging Face 或 Google 的 OAuth 身份提供者 [6]。还可以通过设置文件和主机机器上文件路径的限制来进一步加强保护
    [6]。
- en: '*This does not solve security concerns with sharing this way completely. If
    you are looking to share privately, containerisation through a cloud provider
    may be a better option* [7].'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '*这种方式并不能完全解决分享时的安全问题。如果你想要私密分享，使用云提供商的容器化可能是一个更好的选择* [7]。'
- en: For wider engagement, you may want to share your demo publicly to an online
    audience. This can be brilliant for finding prospective customers, building word
    of mouth or getting some feedback on your latest AI project. I have been sharing
    work publicly for feedback for years on Medium, Kaggle and GitHub. The feedback
    I have had has definitely improved my work over time.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想让更多人参与，你可能会想将演示公开分享给在线观众。这对寻找潜在客户、建立口碑或获取最新 AI 项目的反馈非常有帮助。我多年来一直在 Medium、Kaggle
    和 GitHub 上公开分享作品获取反馈。通过这些反馈，我的作品确实有了显著改善。
- en: 'If you are using Gradio demos can be publicly shared through Hugging Face.
    Hugging Face provides **Spaces** which are used for sharing Gradio apps. Spaces
    provide a free platform to share your demo. There are costs attached to GPU instances
    (ranging from $0.40 to $5 per hour). To share to spaces, the following documentation
    is available [6]. The docs explain how you can:'
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用的是 Gradio，演示可以通过 Hugging Face 公共分享。Hugging Face 提供的**Spaces**用于分享 Gradio
    应用。Spaces 提供了一个免费的平台来分享你的演示。GPU 实例有相关费用（每小时 $0.40 至 $5）。有关分享到 Spaces 的文档请参见 [6]。文档解释了你可以如何：
- en: Share to spaces
  id: totrans-105
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 分享到 Spaces
- en: Implement CI/CD of spaces with GitHub actions
  id: totrans-106
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 GitHub Actions 实现空间的 CI/CD
- en: Embedding Gradio demos in your own website from spaces!
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将 Gradio 演示嵌入你自己的网站中！
- en: Spaces are helpful for reaching a wider audience, without worrying about resources.
    It is also a permanent link for prospective customers. It does make it more important
    to include as much guidance as possible. Again, this is a public sharing platform
    on compute you do not own. For more secure requirements, containerisation and
    dedicated hosting may be preferred. A particularly great example is this Minecraft
    skin generator [8].
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: Spaces 对于覆盖更广泛的受众非常有帮助，而不需要担心资源问题。它也是一个为潜在客户提供的永久链接。这使得提供尽可能多的指导显得尤为重要。再次提醒，这是一个你不拥有的计算平台上的公共共享平台。如果有更高的安全需求，容器化和专用托管可能更为合适。一个特别好的例子是这个
    Minecraft 皮肤生成器[8]。
- en: '![](../Images/3ac10b3136b8000af1cd05ac8407dcd2.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ac10b3136b8000af1cd05ac8407dcd2.png)'
- en: 'Image Source: Nick088, Hugging Face [[Stable Diffusion Finetuned Minecraft
    Skin Generator — a Hugging Face Space by Nick088](https://huggingface.co/spaces/Nick088/Stable_Diffusion_Finetuned_Minecraft_Skin_Generator)]'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：Nick088，Hugging Face [[Stable Diffusion Finetuned Minecraft Skin Generator
    — a Hugging Face Space by Nick088](https://huggingface.co/spaces/Nick088/Stable_Diffusion_Finetuned_Minecraft_Skin_Generator)]
- en: Additional considerations
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的考虑因素
- en: The elephant in the room in the whole AI community right now is of course LLMs.
    Gradio has plenty of components built with LLM in mind. This includes using agentic
    workflows and models as a service [9].
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 当前整个 AI 社区中最受关注的话题当然是大型语言模型（LLMs）。Gradio 提供了许多专为 LLM 设计的组件。这包括使用代理工作流和模型即服务[9]。
- en: 'It is also worth mentioning **custom components**. Custom components have been
    developed by other data scientists and developers. They are extensions on top
    of the Gradio framework. Some great examples are:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 还值得一提的是**自定义组件**。自定义组件是由其他数据科学家和开发者开发的。它们是建立在 Gradio 框架之上的扩展。以下是一些很棒的例子：
- en: 'Image annotation component: [gradio_image_annotation V0.0.6 — a Hugging Face
    Space by edgargg](https://huggingface.co/spaces/edgargg/gradio_image_annotation)'
  id: totrans-114
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 图像注释组件：[gradio_image_annotation V0.0.6 — a Hugging Face Space by edgargg](https://huggingface.co/spaces/edgargg/gradio_image_annotation)
- en: 'Question answering with an uploaded PDF: [gradio_pdf V0.0.6 — a Hugging Face
    Space by awacke1](https://huggingface.co/spaces/awacke1/Gradio-PDF-Document-QA-PDF-UI)'
  id: totrans-115
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用上传的 PDF 进行问答：[gradio_pdf V0.0.6 — a Hugging Face Space by awacke1](https://huggingface.co/spaces/awacke1/Gradio-PDF-Document-QA-PDF-UI)
- en: 'Extensions are not unique to Gradio. If you choose to use StreamLit or Shiny
    to build your demo there are great extensions to those frameworks as well:'
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 扩展并非 Gradio 独有。如果你选择使用 StreamLit 或 Shiny 来构建演示，这些框架也有很棒的扩展：
- en: 'StreamLit Extras, an extension of the StreamLit UI components: [https://extras.streamlit.app/](https://extras.streamlit.app/)'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: StreamLit 附加组件，StreamLit UI 组件的扩展：[https://extras.streamlit.app/](https://extras.streamlit.app/)
- en: 'Awesome R Shiny, additional reactive/UI/theming components for Shiny: [https://github.com/nanxstats/awesome-shiny-extensions](https://github.com/nanxstats/awesome-shiny-extensions)'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 超棒的 R Shiny，Shiny 的附加反应式/UI/主题组件：[https://github.com/nanxstats/awesome-shiny-extensions](https://github.com/nanxstats/awesome-shiny-extensions)
- en: A final word on sharing work, in an agile context. When sharing regularly through
    show and tells or feedback sessions lightweight demos are a game changer. The
    ability to easily layer on from MVP to final product really helps customers see
    their journey with your product.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 最后谈谈在敏捷背景下分享工作。当通过定期的展示和反馈会议分享时，轻量级的演示可以改变游戏规则。从 MVP 到最终产品的轻松层叠能力，确实能帮助客户看到他们与产品的旅程。
- en: In summary, Gradio is a lightweight, open source tool for sharing AI products.
    Some important security steps may need consideration depending on your requirements.
    I really hope you are feeling more prepared with your demos!
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，Gradio 是一个轻量级的开源工具，用于共享 AI 产品。根据你的需求，可能需要考虑一些重要的安全步骤。希望你在准备演示时感觉更有准备！
- en: If you enjoyed this article please consider giving me a follow, sharing this
    article or leaving a comment. I write a range of content across the data science
    field, so please checkout more on my profile.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你喜欢这篇文章，请考虑关注我、分享这篇文章或留下评论。我写了许多关于数据科学领域的内容，欢迎查看我个人主页上的更多内容。
- en: References
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Gradio Documentation. [https://www.gradio.app/](https://www.gradio.app/)'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Gradio 文档。[https://www.gradio.app/](https://www.gradio.app/)'
- en: '[2] User Pilot Product Demos. [https://userpilot.com/blog/product-demos/](https://userpilot.com/blog/product-demos/)'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] 用户引导产品演示。[https://userpilot.com/blog/product-demos/](https://userpilot.com/blog/product-demos/)'
- en: '[3] Clever Hans Wikipedia. [https://en.wikipedia.org/wiki/Clever_Hans](https://en.wikipedia.org/wiki/Clever_Hans)'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] 聪明汉斯维基百科。[https://en.wikipedia.org/wiki/Clever_Hans](https://en.wikipedia.org/wiki/Clever_Hans)'
- en: '[4] Gradio Named Entity Recognition App. [Named Entity Recognition (](https://www.gradio.app/guides/named-entity-recognition)[gradio.app](http://gradio.app)[)](https://www.gradio.app/guides/named-entity-recognition)'
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] Gradio 命名实体识别应用。[命名实体识别 (](https://www.gradio.app/guides/named-entity-recognition)[gradio.app](http://gradio.app)[)](https://www.gradio.app/guides/named-entity-recognition)'
- en: '[5] Harvard Business Review. What makes a great pitch. [What Makes a Great
    Pitch (](https://hbr.org/2020/05/what-makes-a-great-pitch)[hbr.org](http://hbr.org)[)](https://hbr.org/2020/05/what-makes-a-great-pitch)'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] 《哈佛商业评论》。什么是一个优秀的推介。[What Makes a Great Pitch (](https://hbr.org/2020/05/what-makes-a-great-pitch)[hbr.org](http://hbr.org)[)](https://hbr.org/2020/05/what-makes-a-great-pitch)'
- en: '[6] Gradio Deploying to Spaces. [Sharing Your App (](https://www.gradio.app/guides/sharing-your-app#authentication)[gradio.app](http://gradio.app)[)](https://www.gradio.app/guides/sharing-your-app#authentication).'
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] Gradio 部署到 Spaces。[分享你的应用 (](https://www.gradio.app/guides/sharing-your-app#authentication)[gradio.app](http://gradio.app)[)](https://www.gradio.app/guides/sharing-your-app#authentication)。'
- en: '[7] Deploying Gradio to Docker. [Deploying Gradio With Docker](https://www.gradio.app/main/guides/deploying-gradio-with-docker)'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] 将 Gradio 部署到 Docker。[使用 Docker 部署 Gradio](https://www.gradio.app/main/guides/deploying-gradio-with-docker)'
- en: '[8] Amazing Minecraft Skin Generator Example. [Stable Diffusion Finetuned Minecraft
    Skin Generator — a Hugging Face Space by Nick088](https://huggingface.co/spaces/Nick088/Stable_Diffusion_Finetuned_Minecraft_Skin_Generator)'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: '[8] 神奇的 Minecraft 皮肤生成器示例。[Stable Diffusion 微调版 Minecraft 皮肤生成器——Nick088 在
    Hugging Face 上的空间](https://huggingface.co/spaces/Nick088/Stable_Diffusion_Finetuned_Minecraft_Skin_Generator)'
- en: '[9] Gradio for LLM. [Gradio And Llm Agents](https://www.gradio.app/guides/gradio-and-llm-agents)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[9] Gradio for LLM。[Gradio 和 LLM 代理](https://www.gradio.app/guides/gradio-and-llm-agents)'
