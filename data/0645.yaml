- en: Running RStudio Inside a Container
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在容器内运行RStudio
- en: 原文：[https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8?source=collection_archive---------5-----------------------#2024-03-09](https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8?source=collection_archive---------5-----------------------#2024-03-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8?source=collection_archive---------5-----------------------#2024-03-09](https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8?source=collection_archive---------5-----------------------#2024-03-09)
- en: A step-by-step guide for setting up an RStudio server inside a container with
    your local RStudio settings
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逐步指南：在容器内设置RStudio服务器并使用你的本地RStudio设置
- en: '[](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)[![Rami
    Krispin](../Images/8af28c282d42a2a27c28aa8af4c8d482.png)](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)
    [Rami Krispin](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)[![Rami
    Krispin](../Images/8af28c282d42a2a27c28aa8af4c8d482.png)](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)
    [Rami Krispin](https://medium.com/@rami.krispin?source=post_page---byline--e9db5e809ff8--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)
    ·6 min read·Mar 9, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e9db5e809ff8--------------------------------)
    ·6分钟阅读·2024年3月9日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: This is a step-by-step guide for setting up an RStudio server inside a container
    with your local RStudio settings. We will use the [Rocker RStudio image](https://hub.docker.com/r/rocker/rstudio)
    and show how to customize it with the `docker run` command and its arguments.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个逐步指南，介绍如何在容器内设置RStudio服务器并使用本地RStudio设置。我们将使用[Rocker RStudio镜像](https://hub.docker.com/r/rocker/rstudio)，并展示如何通过`docker
    run`命令及其参数进行自定义。
- en: 'By the end of this tutorial, you will be able to:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 到本教程结束时，你将能够：
- en: Launch an RStudio server inside a container
  id: totrans-8
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在容器内启动RStudio服务器
- en: Mount local folders
  id: totrans-9
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 挂载本地文件夹
- en: Clone local RStudio settings (color theme, code snippets, etc.)
  id: totrans-10
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 克隆本地RStudio设置（颜色主题、代码片段等）
- en: Load local Renviron setting
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 加载本地Renviron设置
- en: '![](../Images/7758b9511dbe9829b8d18880f155bf26.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7758b9511dbe9829b8d18880f155bf26.png)'
- en: A whale carries an R container (created by the author with Midjourney)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一只鲸鱼携带着一个R容器（由作者使用Midjourney创建）
- en: Introduction
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: RStudio is the primary IDE for the R programming language. Unlike other general-purpose
    IDEs such as VScode, RStudio was built and designed specifically for R users and
    their needs. This is one of the reasons for the popularity of RStudio among R
    users. By default, RStudio does not have native support for Docker. The main method
    for setting and running RStudio inside a container is using the RStudio server
    version. This required installing and setting the server inside a container, which
    might be an entry barrier for some users. Luckily, the [Rocker project](https://rocker-project.org/)
    — the main source for R images provides built-in and ready-to-use images with
    an RStudio server.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio是R编程语言的主要IDE。与其他通用IDE（如VScode）不同，RStudio专为R用户及其需求而设计。正是这一点使得RStudio在R用户中非常受欢迎。默认情况下，RStudio不支持Docker。运行RStudio服务器版本是将RStudio设置和运行在容器中的主要方法。这需要在容器内安装并设置服务器，这对于某些用户来说可能是一个入门障碍。幸运的是，[Rocker项目](https://rocker-project.org/)——R镜像的主要来源，提供了内置且现成可用的带有RStudio服务器的镜像。
- en: Throughout this tutorial, we will use the Rocker RStudio image, which is available
    on [Docker Hub](https://hub.docker.com/r/rocker/rstudio/tags).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用Rocker RStudio镜像，该镜像可以在[Docker Hub](https://hub.docker.com/r/rocker/rstudio/tags)找到。
- en: Prerequisites
  id: totrans-17
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前提条件
- en: 'To follow along with this tutorial and run the code below, you will need:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要跟随本教程并运行以下代码，你需要：
- en: '[Docker Desktop](https://www.docker.com/products/docker-desktop/) (or any alternative)'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Docker Desktop](https://www.docker.com/products/docker-desktop/)（或任何替代品）'
- en: '[Docker Hub](https://hub.docker.com/) account'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Docker Hub](https://hub.docker.com/) 账户'
- en: Basic understanding of the [docker run](https://docs.docker.com/reference/cli/docker/container/run/)
    command
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[docker run](https://docs.docker.com/reference/cli/docker/container/run/) 命令的基本理解'
- en: Getting Started with Rocker
  id: totrans-22
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 开始使用 Rocker
- en: The [Rocker Project](https://rocker-project.org/) is the main hub for built-in
    R images. It provides various images with different R environment settings, such
    as base-r, tidyverse, ML-verse, shiny, geospatial, and, of course, the RStudio
    server image. The full list of available R images is on the Rocker’s Docker Hub
    page.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[Rocker 项目](https://rocker-project.org/)是用于构建 R 镜像的主要平台。它提供了多种具有不同 R 环境设置的镜像，如
    base-r、tidyverse、ML-verse、shiny、geospatial，当然，还有 RStudio 服务器镜像。所有可用 R 镜像的完整列表可以在
    Rocker 的 Docker Hub 页面找到。'
- en: '![](../Images/fc1b996c4b0016643c33407f2c1880e5.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc1b996c4b0016643c33407f2c1880e5.png)'
- en: Rocker’s top images by number of downloads (screenshot from Docker Hub by the
    author)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: Rocker 按下载量排序的热门镜像（作者从 Docker Hub 截图）
- en: We will use the `rocker/rstudio` image, which, as its name implies, has an RStudio
    server installed and ready to use. Using the`docker run` command, we can launch
    this container in an interactive mode and access the RStudio server via the browser.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用 `rocker/rstudio` 镜像，顾名思义，它已经安装并准备好使用 RStudio 服务器。通过 `docker run` 命令，我们可以以交互模式启动该容器，并通过浏览器访问
    RStudio 服务器。
- en: 'Let’s get started by pulling the image with the `docker pull` command:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过 `docker pull` 命令拉取镜像，开始使用：
- en: '[PRE0]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'You can use the `docker images` command to verify that the image was downloaded
    successfully:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以使用 `docker images` 命令来验证镜像是否成功下载：
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s now go ahead and use the suggested command from the Rocker Project to
    launch RStudio inside the container with the `docker run` command:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们使用 Rocker 项目推荐的命令，通过 `docker run` 命令在容器内启动 RStudio：
- en: '[PRE2]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Before we open the RStudio server on the browser, let’s review the `run` arguments
    we used above:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们打开浏览器上的 RStudio 服务器之前，先回顾一下我们之前使用的`run`参数：
- en: '`rm` — Automatically remove the container when it exits (from the terminal
    `control + c`)'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`rm` — 容器退出时自动删除容器（从终端按 `control + c`）'
- en: '`ti` — Run the container in an interactive mode'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ti` — 以交互模式运行容器'
- en: '`e` — Set environment variable, in this case, to define the server login password
    as `yourpassword`'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`e` — 设置环境变量，在这种情况下，定义服务器登录密码为 `yourpassword`'
- en: '`p` — Define the port mapping. In this case, we will map the container’s `8787`
    port with port `8787` on the local machine'
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`p` — 定义端口映射。在这种情况下，我们将容器的 `8787` 端口与本地机器上的 `8787` 端口映射'
- en: 'After running the command, you can access the RStudio server on local host
    8787 (e.g., [http://localhost:8787](http://localhost:8787)). This will prompt
    the login page, where you should use:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 执行命令后，你可以通过本地的 8787 端口访问 RStudio 服务器（例如，[http://localhost:8787](http://localhost:8787)）。这将弹出登录页面，你应使用：
- en: 'Username: `rstudio`'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 用户名：`rstudio`
- en: 'Password: `yourpassword` (as set in the `run` commend)'
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 密码：`yourpassword`（在 `run` 命令中设置）
- en: 'You should expect the following output:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 你应该看到以下输出：
- en: '![](../Images/e8094acf875b3185fd4cd5beaabec26d.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8094acf875b3185fd4cd5beaabec26d.png)'
- en: The initial view of the RStudio server (screenshot by the author)
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: RStudio 服务器的初始视图（作者截屏）
- en: '**Note:** You can stop the running container on terminal by clicking `control+c`.'
  id: totrans-44
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**注意：** 你可以通过在终端点击 `control+c` 来停止运行的容器。'
- en: Oh No! It Is Ephemeral!
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哎呀！它是临时的！
- en: By default, the Docker container runs in ephemeral mode. Any code created and
    saved on the container or input you generated will be lost when terminating the
    container run time. This is neither practical nor useful if you wish to use Docker
    as your development environment. To address this issue, we will use the **volume**
    (or `v`)argument, which enables the mount of local folders with the container
    files system.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，Docker 容器以临时模式运行。任何在容器内创建并保存的代码或输入都将在终止容器运行时丢失。如果你希望使用 Docker 作为开发环境，这样就既不实际也不有用。为了解决这个问题，我们将使用
    **volume**（或 `v`）参数，它使得可以将本地文件夹挂载到容器的文件系统中。
- en: 'The below code demonstrates the use of the volume argument to mount the folder
    we execute the `run` command from (e.g., `.`) with the RStudio server home folder:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下代码演示了如何使用 volume 参数将我们执行 `run` 命令所在的文件夹（例如，`.`）与 RStudio 服务器的主文件夹挂载：
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: The volume argument maps the local folder (e.g., `source`) with the container
    (e.g., `target`) using the following format `source:target`.
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: volume 参数使用以下格式 `source:target` 将本地文件夹（例如，`source`）映射到容器（例如，`target`）。
- en: 'Let’s now go back to the browser and reopen the RStudio server using the local
    host address — [http://localhost:8787](http://localhost:8787). You should expect
    to see in the RStudio files section the folders and/or files that are available
    on the local folder you mount to the container. In my case, I will mount my tutorials
    folder, which has the following folders:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们回到浏览器并使用本地地址重新打开 RStudio 服务器 —— [http://localhost:8787](http://localhost:8787)。你应该能在
    RStudio 文件部分看到挂载到容器的本地文件夹和/或文件。在我的例子中，我将挂载我的教程文件夹，它包含以下文件夹：
- en: '[PRE4]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'As you can see in the screenshot below, the local folders are now available
    and accessible from the RStudio server (marked with a purple rectangle):'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 如下图所示，本地文件夹现在可以通过 RStudio 服务器访问（以紫色矩形标出）：
- en: '![](../Images/d2d338f2101155644d12e5b19282414a.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2d338f2101155644d12e5b19282414a.png)'
- en: RStudio server with a local volume (screenshot by the author)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 带有本地卷的 RStudio 服务器（作者提供的截图）
- en: 'Note: You can use the volume argument to mount multiple volumes. For example,
    one for your project and second for a folder with your data folders'
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意：你可以使用卷参数挂载多个卷。例如，一个用于你的项目，另一个用于包含数据文件夹的文件夹。
- en: This enables us to read from and write to the local folder from the container
    during run time.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这使我们能够在容器运行时从本地文件夹中读取和写入文件。
- en: Clone Your Local RStudio Settings
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 克隆你的本地 RStudio 设置
- en: In the previous section, we saw how to mount a local folder to the container
    with the volume argument. This enables us to save our code locally while working
    inside the container. In this section, we will see how we can leverage the volume
    argument to mount our local RStudio setting with the ones on the container. The
    idea here is to launch the container and run the RStudio server with our local
    settings without needing to update the settings any time we relaunch the container.
    This includes loading local settings such as color theme settings, code snippets,
    environment variables, etc.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在上一部分中，我们了解了如何使用卷参数将本地文件夹挂载到容器中。这使我们可以在容器内工作时将代码保存在本地。在本节中，我们将学习如何利用卷参数将本地 RStudio
    设置与容器中的设置进行挂载。这里的思路是启动容器并使用我们的本地设置运行 RStudio 服务器，而无需在每次重新启动容器时更新设置。这包括加载本地设置，如颜色主题设置、代码片段、环境变量等。
- en: 'Before we can update the `docker run` with the local RStudio configuration
    folder, we need to identify the folder path of the config folder of both the local
    and the one on the container. For example, the path on my machine is `~/.config/rstudio`
    and it contains the following folders and files:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们更新 `docker run` 命令时，使用本地的 RStudio 配置文件夹之前，我们需要确定本地和容器中的配置文件夹路径。例如，我机器上的路径是
    `~/.config/rstudio`，并且它包含以下文件夹和文件：
- en: '[PRE5]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Similarly, the `.config/rstudio` folder on the container is under the `/home/rstudio/`.
    Therefore, we will use the following mapping:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，容器中的 `.config/rstudio` 文件夹位于 `/home/rstudio/` 下。因此，我们将使用以下映射：
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Likewise, we want to mount the `.Renviron` file with the local environment
    variables. The `.Renviron` file is under the root folder on the local machine,
    and we follow the same approach to map the local file with the ones on the container:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 同样地，我们希望将 `.Renviron` 文件与本地环境变量挂载。`.Renviron` 文件位于本地机器的根文件夹下，我们使用相同的方法将本地文件与容器中的文件映射：
- en: '[PRE7]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Let’s now add it all together and relaunch the container:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们将所有设置放在一起并重新启动容器：
- en: '[PRE8]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'After mounting the local RStudio config folder with the one on the container,
    the server settings are now mapped with the local RStudio settings on my machine:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 在将本地 RStudio 配置文件夹与容器中的文件夹挂载之后，服务器设置现在与我机器上的本地 RStudio 设置映射在一起：
- en: '![](../Images/9681c75361b6e632fd25354a3f02ddf1.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9681c75361b6e632fd25354a3f02ddf1.png)'
- en: RStudio server with the local settings (screenshot by the author)
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 带有本地设置的 RStudio 服务器（作者提供的截图）
- en: Summary
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: This tutorial focuses on customizing the Rocker’s RStudio image with the `docker
    run` command. We used the `volume` argument to mount the local folder to the container
    working directory. This enables us to work inside a containerized environment
    and save our work locally. In addition, we used the volume argument to clone the
    local RStudio settings to the container. This makes the transition from the local
    environment to the containerized smoother. The command can become long and convoluted
    as we add and use more arguments. Once you have finalized your `run` settings,
    the next step is to transition it into a YAML file using the [Docker Compose](https://docs.docker.com/compose/).
    Beyond the simplification of the launch process of the container, Docker Compose
    enables you to manage more complex scenarios, such as launching multiple containers.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本教程重点介绍如何使用`docker run`命令定制Rocker的RStudio镜像。我们使用`volume`参数将本地文件夹挂载到容器的工作目录中。这使我们能够在容器化环境中工作，并将工作保存到本地。此外，我们使用`volume`参数将本地的RStudio设置克隆到容器中。这使得从本地环境到容器化环境的过渡更加顺畅。随着我们添加和使用更多参数，命令可能会变得长且复杂。一旦确定了`run`设置，下一步是通过[Docker
    Compose](https://docs.docker.com/compose/)将其转换为YAML文件。除了简化容器启动过程，Docker Compose还使您能够管理更复杂的场景，例如启动多个容器。
- en: Resources
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 资源
- en: RStudio — [https://posit.co/products/open-source/rstudio/](https://posit.co/products/open-source/rstudio/)
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RStudio — [https://posit.co/products/open-source/rstudio/](https://posit.co/products/open-source/rstudio/)
- en: The Rocker Project — [https://rocker-project.org/](https://rocker-project.org/)
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rocker项目 — [https://rocker-project.org/](https://rocker-project.org/)
- en: Docker Hub — [https://hub.docker.com/](https://hub.docker.com/)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Hub — [https://hub.docker.com/](https://hub.docker.com/)
