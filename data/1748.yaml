- en: Semantic Search Engine for Emojis in 50+ Languages Using AI 😊🌍🚀
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用AI 😊🌍🚀开发一个支持50多种语言的表情符号语义搜索引擎
- en: 原文：[https://towardsdatascience.com/semantic-search-for-emojis-in-50-languages-using-ai-f85a36a86f21?source=collection_archive---------7-----------------------#2024-07-17](https://towardsdatascience.com/semantic-search-for-emojis-in-50-languages-using-ai-f85a36a86f21?source=collection_archive---------7-----------------------#2024-07-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/semantic-search-for-emojis-in-50-languages-using-ai-f85a36a86f21?source=collection_archive---------7-----------------------#2024-07-17](https://towardsdatascience.com/semantic-search-for-emojis-in-50-languages-using-ai-f85a36a86f21?source=collection_archive---------7-----------------------#2024-07-17)
- en: Develop an AI-powered semantic search for emojis using Python and open-source
    NLP libraries
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用Python和开源NLP库开发一个AI驱动的表情符号语义搜索引擎
- en: '[](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)[![Badr
    Alabsi, PhD](../Images/1e509109fb24dec154cd155859273903.png)](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)
    [Badr Alabsi, PhD](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)[![Badr
    Alabsi, 博士](../Images/1e509109fb24dec154cd155859273903.png)](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)
    [Badr Alabsi, 博士](https://medium.com/@badr.alabsi?source=post_page---byline--f85a36a86f21--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)
    ·12 min read·Jul 17, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f85a36a86f21--------------------------------)
    ·阅读时长12分钟·2024年7月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/4e4b22aa4d5eedea4c9699b59de728b5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e4b22aa4d5eedea4c9699b59de728b5.png)'
- en: If you are on social media like Twitter or LinkedIn, you have probably noticed
    that emojis are creatively used in both informal and professional text-based communication.
    For example, the *Rocket* emoji 🚀 is often used on LinkedIn to symbolize high
    aspirations and ambitious goals, while the *Bullseye* 🎯 emoji is used in the context
    of achieving goals. Despite this growth of creative emoji use, most social media
    platforms lack a utility that assists users in choosing the right emoji to effectively
    communicate their message. I therefore decided to invest some time to work on
    a project I called Emojeez 💎, an AI-powered engine for emoji search and retrieval.
    You can experience Emojeez 💎 live using this fun interactive [demo](https://emojeez.streamlit.app/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你常用社交媒体，如Twitter或LinkedIn，你可能注意到表情符号在非正式和正式的文本交流中被创造性地使用。例如，*火箭* 🚀 表情符号常在LinkedIn上表示高远的抱负和雄心壮志，而*靶心*
    🎯 表情符号则用于表示目标达成。尽管表情符号的创造性使用日益增长，但大多数社交媒体平台缺乏帮助用户选择合适表情符号以有效传达信息的工具。因此，我决定投入时间开发一个名为Emojeez
    💎的项目，它是一个AI驱动的表情符号搜索和检索引擎。你可以通过这个有趣的互动[演示](https://emojeez.streamlit.app/)体验Emojeez
    💎。
- en: In this article, I will discuss my experience and explain how I employed advanced
    **natural language processing** (NLP) technologies to develop a **semantic search
    engine** for emojis. Concretely, I will present a case study on embedding-based
    semantic search with the following steps
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将讨论我的经验，并解释我如何运用先进的**自然语言处理**（NLP）技术开发一个**语义搜索引擎**用于表情符号。具体来说，我将展示一个基于嵌入的语义搜索案例，并按以下步骤进行讲解
- en: How to use **LLMs** 🦜to generate semantically rich emoji descriptions
  id: totrans-9
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用**大语言模型** 🦜生成语义丰富的表情符号描述
- en: How to use Hugging Face 🤗 **Transformers** for multilingual embeddings
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何使用Hugging Face 🤗 **Transformers**进行多语言嵌入
- en: How to integrate **Qdrant** 🧑🏻‍🚀 vector database to perform efficient semantic
    search
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如何集成**Qdrant** 🧑🏻‍🚀向量数据库以执行高效的语义搜索
- en: I made the full code for this project available on [GitHub](https://github.com/badrex/emojeez).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我已将该项目的完整代码上传至[GitHub](https://github.com/badrex/emojeez)。
- en: Inspiration💡
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 灵感💡
- en: 'Every new idea often begins with a spark of inspiration. For me, the spark
    came from Luciano Ramalho’s book *Fluent Python*. It is a fantastic read that
    I highly recommend for anyone who likes to write truly Pythonic code. In chapter
    4 of his book, Luciano shows how to search over Unicode characters by querying
    their names in the Unicode standards. He created a Python utility that takes a
    query like “cat smiling” and retrieves all Unicode characters that have both “cat”
    and “smiling” in their names. Given the query “cat smiling”, the utility retrieves
    three emojis: 😻, 😺, and 😸. Pretty cool, right?'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 每一个新想法通常都始于一闪而过的灵感。对我来说，这个灵感来自 Luciano Ramalho 的书《*流畅的 Python*》。这是一本非常棒的书，强烈推荐给所有喜欢编写真正
    Pythonic 代码的人。在书的第4章，Luciano 展示了如何通过查询 Unicode 标准中的字符名称来搜索 Unicode 字符。他创建了一个 Python
    工具，它能够处理像“cat smiling”这样的查询，检索所有名称中同时包含“cat”和“smiling”的 Unicode 字符。对于“cat smiling”这个查询，该工具可以检索到三个表情符号：😻、😺
    和 😸。很酷，对吧？
- en: From there, I started thinking how modern AI technology could be used to build
    an even better emoji search utility. By “better,” I envisioned a search engine
    that not only has better emoji coverage but also supports user queries in multiple
    languages beyond English.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 从那里开始，我开始思考如何利用现代人工智能技术来构建一个更好的表情符号搜索工具。所谓的“更好”，我设想的是一个不仅覆盖更多表情符号，还能支持多语言用户查询的搜索引擎，超越英语。
- en: Limitations of Keyword Search 😓
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键词搜索的局限性 😓
- en: If you are an emoji enthusiast, you know that 😻, 😺, and 😸 aren’t the only smiley
    cat emojis out there. Some cat emojis are missing, notably 😸 and 😹. This is a
    known limitation of keyword search algorithms, which rely on string matching to
    retrieve relevant items. Keyword, or **lexical search** algorithms, are known
    among information retrieval practitioners to have **high precision** but **low
    recall**. High precision means the retrieved items usually match the user query
    well. One the other hand, low recall means the algorithm might not retrieve all
    relevant items. In many cases, the lower recall is due to string matching. For
    example, the emoji 😹 does not have “smiling” in its name — *cat with tears of
    joy*. Therefore, it cannot be retrieved with the query “cat smiling” if we search
    for both terms *cat* and *smiling* in its name.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你是表情符号爱好者，你一定知道，😻、😺 和 😸 不是唯一的笑脸猫表情符号。确实有些猫咪表情符号是缺失的，特别是 😸 和 😹。这是关键词搜索算法的一个已知限制，关键词搜索依赖于字符串匹配来检索相关项目。关键词搜索或**词汇搜索**算法，在信息检索领域被认为**精确度高**，但**召回率低**。高精度意味着检索到的项目通常与用户查询匹配得很好。另一方面，低召回率意味着算法可能不会检索到所有相关项目。在许多情况下，较低的召回率是由于字符串匹配造成的。例如，表情符号
    😹 的名字中没有“smiling”（微笑）——*带着喜悦的泪水的猫*。因此，如果我们搜索“猫”和“微笑”这两个词，它就无法被检索到。
- en: Another issue with lexical search is that it is usually **language-specific**.
    In Luciano’s Fluent Python example, you can’t find emojis using a query in another
    language because all Unicode characters, including emojis, have English names.
    To support other languages, we would need to translate each query into English
    first using machine translation. This will add more complexity and might not work
    well for all languages.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 词汇搜索的另一个问题是，它通常是**语言特定的**。在 Luciano 的《流畅的 Python》例子中，你无法使用其他语言的查询来查找表情符号，因为所有
    Unicode 字符，包括表情符号，都是用英语命名的。为了支持其他语言，我们需要先通过机器翻译将每个查询转换成英语。这会增加更多的复杂性，并且可能并不适用于所有语言。
- en: But hey, it’s 2024 and AI has come a long way. We now have solutions to address
    these limitations. In the rest of this article, I will show you how.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 不过，嘿，已经是2024年了，人工智能取得了长足的进步。现在我们已经有了应对这些限制的解决方案。在本文的其余部分，我将向你展示如何实现。
- en: Embedding-based Semantic Search ✨
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于嵌入的语义搜索 ✨
- en: In recent years, a new search paradigm has emerged with the popularity of deep
    neural networks for NLP. In this paradigm, the search algorithm does not look
    at the strings that make up the items in the search database or the query. Instead,
    it operates on numerical representations of text, known as **vector embeddings**.
    In embedding-based search algorithms, the search items, whether text documents
    or visual images, are first converted into data points in a vector space such
    that **semantically relevant** items are nearby. Embeddings enable us to perform
    similarity search based on the meaning of the emoji description rather than the
    keywords in its name. Because they retrieve items based on **semantic similarity**
    rather than keyword similarity, embedding-based search algorithms are known as
    semantic search.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 近年来，随着深度神经网络在自然语言处理（NLP）领域的普及，出现了一种新的搜索范式。在这种范式中，搜索算法不再关注构成搜索数据库或查询的字符串。相反，它基于文本的数值表示进行操作，这些表示被称为**向量嵌入**。在基于嵌入的搜索算法中，无论是文本文档还是视觉图像，搜索项首先会被转换为向量空间中的数据点，以便**语义相关**的项彼此接近。嵌入技术使我们能够基于表情符号描述的意义而非名称中的关键词执行相似性搜索。由于它们基于**语义相似性**而非关键词相似性来检索项，基于嵌入的搜索算法被称为语义搜索。
- en: 'Using semantic search for emoji retrieval solves two problems:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 使用语义搜索进行表情符号检索解决了两个问题：
- en: We can go beyond keyword matching and use semantic similarity between emoji
    descriptions and user queries. This improves the coverage of the retrieved emojis,
    leading to higher recall.
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们可以超越关键词匹配，利用表情符号描述与用户查询之间的语义相似性。这提高了检索到的表情符号的覆盖率，从而提高了召回率。
- en: If we represent emojis as data points in a **multilingual embedding** space,
    we can enable user queries written in languages other than English, without needing
    translation into English. That is very cool, isn’t it? Let’s see how 👀
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果我们将表情符号表示为**多语言嵌入**空间中的数据点，我们就可以支持用英语以外的语言编写的用户查询，而无需翻译成英语。这是不是很酷？让我们来看看 👀
- en: 'Step 1: Generating Rich Emoji Descriptions using LLMs 🦜'
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第一步：使用LLM生成丰富的表情符号描述 🦜
- en: If you use social media, you probably know that many emojis are almost never
    used literally. For example, 🍆 and 🍑 rarely denote an *eggplant* and *peach*.
    Social media users are very creative in assigning meanings to emojis that go beyond
    their literal interpretation. This creativity limits the expressiveness of emoji
    names in the Unicode standards. A notable example is the 🌈 emoji, which is described
    in the Unicode name simply as *rainbow*, yet it is commonly used in contexts related
    to diversity, peace, and LGBTQ+ community.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你使用社交媒体，你可能知道很多表情符号几乎从未按字面意思使用。例如，🍆和🍑很少表示*茄子*和*桃子*。社交媒体用户在给表情符号赋予超越字面意义的含义时非常有创意。这种创意限制了Unicode标准中表情符号名称的表达性。一个显著的例子是🌈表情符号，它在Unicode名称中简单地被描述为*彩虹*，然而它通常在与多样性、和平和LGBTQ+社区相关的语境中使用。
- en: To build a useful search engine, we need a rich semantic description for each
    emoji that defines what the emoji represents and what it symbolizes. Given that
    there are more than 5000 emojis in the current Unicode standards, doing this manually
    is not feasible. Luckily, we can employ **Large Language Models** (LLMs) to assist
    us in generating metadata for each emoji. Since LLMs are trained on the entire
    web, they have likely seen how each emoji is used in context.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 为了构建一个有用的搜索引擎，我们需要为每个表情符号生成一个丰富的语义描述，定义该表情符号代表什么以及它象征什么。鉴于当前Unicode标准中有超过5000个表情符号，手动完成这一任务是不可行的。幸运的是，我们可以利用**大型语言模型**（LLM）来帮助我们为每个表情符号生成元数据。由于LLM是基于整个互联网进行训练的，它们很可能已经见识过每个表情符号在不同语境中的使用方式。
- en: For this task, I used the 🦙 [**Llama 3**](https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct)
    LLM to generate metadata for each emoji. I wrote a prompt to define the task and
    what the LLM is expected to do. As illustrated in the figure below, the LLM generated
    a rich semantic description for the *Bullseye* 🎯 emoji. These descriptions are
    more suitable for semantic search compared to Unicode names. I released the LLM-generated
    descriptions as a Hugging Face [dataset](https://huggingface.co/datasets/badrex/llm-emoji-dataset).
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 对于这项任务，我使用了🦙 [**Llama 3**](https://huggingface.co/meta-llama/Meta-Llama-3-8B-Instruct)大型语言模型（LLM）为每个表情符号生成元数据。我编写了一个提示，定义了任务和LLM需要执行的操作。如下面的图所示，LLM为*靶心*🎯表情符号生成了丰富的语义描述。这些描述相比于Unicode名称，更适合进行语义搜索。我将LLM生成的描述发布为Hugging
    Face [数据集](https://huggingface.co/datasets/badrex/llm-emoji-dataset)。
- en: '![](../Images/ceeef194babbfb0bcd16d0b4f158e06c.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ceeef194babbfb0bcd16d0b4f158e06c.png)'
- en: Using Llama 3 LLM for generating enriched semantic descriptions for emojis.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Llama 3 LLM生成表情符号的丰富语义描述。
- en: 'Step 2: Representing Emojis as Embeddings using Sentence Transformers 🔄'
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第2步：使用句子变换器将表情符号表示为嵌入 🔄
- en: Now that we have a rich semantic description for each emoji in the Unicode standard,
    the next step is to represent each emoji as a vector embedding in a multidimensional
    space that captures the meaning of the emoji description. For this task, I used
    a multilingual transformer based on the **BERT** architecture, fine-tuned for
    sentence similarity across 50 languages. You can see the supported languages in
    the model [card](https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2)
    in the Hugging Face 🤗 library.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们拥有了每个表情符号在Unicode标准中的丰富语义描述，下一步是将每个表情符号表示为一个向量嵌入，位于一个多维空间中，该空间捕捉了表情符号描述的含义。为此任务，我使用了基于**BERT**架构的多语言变换器，并针对50种语言的句子相似性进行了微调。您可以在Hugging
    Face 🤗库中的模型[卡片](https://huggingface.co/sentence-transformers/paraphrase-multilingual-MiniLM-L12-v2)上查看支持的语言。
- en: So far, I have only discussed the embedding of emoji descriptions generated
    by the LLM, which are in English. But how can we support languages other than
    English?
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我只讨论了由LLM生成的表情符号描述的嵌入，这些描述是英文的。但是，我们如何支持英文以外的语言呢？
- en: Well, here’s where the magic of multilingual transformers comes in. The multilingual
    support is enabled through the embedding space itself. This means we can take
    user queries in any of the 50 supported languages and match them to emojis based
    on their English descriptions. The multilingual sentence encoder (or embedding
    model) maps semantically similar text phrases to nearby points in its embedding
    space. Let me show you what I mean with the following illustration.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 好的，接下来就是多语言变换器的魔力所在。通过嵌入空间本身启用了多语言支持。这意味着我们可以用任何50种支持的语言输入用户查询，并根据它们的英文描述将查询与表情符号匹配。多语言句子编码器（或嵌入模型）将语义相似的文本短语映射到其嵌入空间中的相邻点。让我通过以下插图来展示我的意思。
- en: '![](../Images/c4f1cb844d59ebb3ee7160335f3365e3.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c4f1cb844d59ebb3ee7160335f3365e3.png)'
- en: A visual illustration of the multilingual embedding space where sentences and
    phrases are geometrically organized based on their semantic similarity regardless
    of the text language. The Arabic and Chinese texts in this figure are the literal
    translation of the phrase “Cat smiling”.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个多语言嵌入空间的视觉示意图，其中句子和短语根据其语义相似性在几何上组织，无论文本语言如何。图中的阿拉伯语和中文文本是“Cat smiling”短语的字面翻译。
- en: In the figure above, we see that semantically similar phrases end up being data
    points that are nearby in the embedding space, even if they are expressed in different
    languages. Multilingual sentence Transformers enable **cross-lingual search**
    applications, therefore user queries and indexed search items do not have to be
    expressed in the same language.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的图中，我们看到语义相似的短语最终成为嵌入空间中相邻的数据点，即使它们是用不同的语言表达的。多语言句子变换器使**跨语言搜索**应用成为可能，因此用户查询和索引的搜索项不必使用相同的语言。
- en: 'Step 3: Integrating Qdrant’s Vector Database 🧑🏻‍🚀'
  id: totrans-38
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第3步：集成Qdrant的向量数据库 🧑🏻‍🚀
- en: Once we have our emojis represented as vector embeddings, the next step is to
    build an index over these embeddings in a way that allows for efficient search
    operations. For this purpose, I chose to use **Qdrant**, an open-source vector
    similarity search engine that provides high-performance search capabilities.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们将表情符号表示为向量嵌入，下一步就是在这些嵌入上构建索引，以便进行高效的搜索操作。为此，我选择了使用**Qdrant**，这是一个开源的向量相似性搜索引擎，提供高性能的搜索功能。
- en: Setting up Qdrant for this task is a simple as the code snippet below (you can
    also check out this Jupyter [Notebook](https://github.com/badrex/emojeez/blob/main/notebooks/emoji_search_notebook.ipynb)).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为此任务设置Qdrant非常简单，下面是代码片段（您还可以查看这个Jupyter [Notebook](https://github.com/badrex/emojeez/blob/main/notebooks/emoji_search_notebook.ipynb)）。
- en: '[PRE0]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Now the search index *vector_DB_client* is ready to take queries. All we need
    to do is to transform the coming user query into a vector embedding using the
    same embedding model we used to embed the emoji descriptions. This can be done
    through the function below.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，搜索索引*vector_DB_client*已准备好接受查询。我们需要做的就是将用户查询转换为向量嵌入，使用与我们嵌入表情符号描述时相同的嵌入模型。这个过程可以通过下面的函数完成。
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: To further show the retrieved emojis, their similarity score with the query,
    and their Unicode names, I wrote the following helper function.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 为了进一步展示检索到的表情符号、它们与查询的相似度分数以及它们的Unicode名称，我编写了以下辅助函数。
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Now everything is set up, and we can look at a few examples. Remember the “cat
    smiling” query from Luciano’s book? Let’s see how semantic search is different
    from keyword search.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切都准备好了，我们可以看几个例子。还记得 Luciano 书中的“猫咪微笑”查询吗？让我们看看语义搜索与关键词搜索有何不同。
- en: '[PRE3]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Awesome! Not only did we get the expected cat emojis like 😸, 😺, and 😻, which
    the keyword search retrieved, but it also the smiley cats 😼, 😹, 🐱, and 😽. This
    showcases the higher recall, or higher coverage of the retrieved items, I mentioned
    earlier. Indeed, more cats is always better!
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！不仅仅是像 😸、😺 和 😻 这样的猫咪表情符号被关键词搜索检索到，语义搜索还检索出了微笑的猫咪表情符号 😼、😹、🐱 和 😽。这展示了我之前提到的更高召回率或更广泛的检索覆盖面。的确，更多的猫咪总是更好！
- en: The Real Power of Semantic Search 🪄
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 语义搜索的真正力量 🪄
- en: The previous “cat smiling” example shows how embedding-based semantic search
    can retrieve a broader and more meaningful set of items, improving the overall
    search experience. However, I don’t think this example truly shows the power of
    semantic search.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 前面的“猫咪微笑”示例展示了基于嵌入的语义搜索如何能够检索到更广泛、更有意义的项目，从而改善整体的搜索体验。然而，我认为这个例子并没有真正展示语义搜索的强大功能。
- en: Imagine looking for something but not knowing its name. For example, take the
    🧿 object. Do you know what it’s called in English? I sure didn’t. But I know a
    bit about it. In Middle Eastern and Central Asian cultures, the 🧿 is believed
    to protect against the evil eye. So, I knew what it does but not what it’s called.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下你在寻找某样东西，但你不知道它的名字。例如，拿 🧿 这个物品来说。你知道它在英语中叫什么吗？我当时是完全不知道。但我对它还是有些了解。在中东和中亚文化中，🧿
    被认为能够保护人们免受“恶眼”的伤害。所以，我知道它的作用，但不知道它的名字。
- en: Let’s see if we can find the emoji 🧿 with our search engine by describing it
    using the query “protect from evil eye”.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过描述“防止恶眼”来尝试用搜索引擎找到 🧿 这个表情符号。
- en: '[PRE4]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And Viola! It turns out that the 🧿 is actually called *Nazar Amulet*. I learned
    something new 😄
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 结果出来了！原来 🧿 其实叫做 *Nazar Amulet*（纳扎护符）。我学到了一些新知识 😄
- en: Going Beyond English 🌍 🌏 🌎
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 超越英语 🌍 🌏 🌎
- en: One of the features I really wanted for this search engine to have is for it
    to support as many languages besides English as possible. So far, we have not
    tested that. Let’s test the multilingual capabilities using the description of
    the *Nazar Amulet* 🧿 emoji by translating the phrase “protection from evil eyes”
    into other languages and using them as queries one language at a time. Here are
    the result below for some languages.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我特别希望这个搜索引擎有一个功能，那就是它能够支持尽可能多的语言，除了英语之外。到目前为止，我们还没有测试过这个功能。让我们通过将“防止恶眼”的短语翻译成其他语言并逐一作为查询来测试其多语言能力。以下是一些语言的结果。
- en: Arabic
  id: totrans-57
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 阿拉伯语
- en: '[PRE5]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: German
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 德语
- en: '[PRE6]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Greek
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 希腊语
- en: '[PRE7]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Bulgarian
  id: totrans-63
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 保加利亚语
- en: '[PRE8]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Chinese
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 中文
- en: '[PRE9]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Japanese
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 日语
- en: '[PRE10]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: For languages as diverse as Arabic, German, Greek, Bulgarian, Chinese, and Japanese,
    the 🧿 emoji always appears in the top 10! This is pretty fascinating since these
    languages have different linguistic features and writing scripts, thanks to the
    massive multilinguality of our 🤗 sentence Transformer.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 对于阿拉伯语、德语、希腊语、保加利亚语、中文和日语等如此多样的语言，🧿 表情符号总是出现在前十名中！这真是太吸引人了，因为这些语言拥有不同的语言特征和书写系统，这要归功于我们强大的多语言
    🤗 句子变换器。
- en: Limits of AI 🙈
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 人工智能的局限性 🙈
- en: The last thing I want to mention is that no technology, no matter how advanced,
    is perfect. Semantic search is great for improving the recall of information retrieval
    systems. This means we can retrieve more relevant items even if there is no keyword
    overlap between the query and the items in the search index. However, this comes
    at the expense of precision. Remember from the 🧿 emoji example that in some languages,
    the emoji we were looking for didn’t show up in the top 5 results. For this application,
    this is not a big problem since it’s not cognitively demanding to quickly scan
    through emojis to find the one we desire, even if it’s ranked at the 50th position.
    But in other cases such as searching through long documents, users may not have
    the patience nor the resources to skim through dozens of documents. Developers
    need to keep in mind user cognitive as well as resource constraints when building
    search engines. Some of the design choices I made for the Emojeez 💎 search engine
    may not be work as well for other applications.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最后我要提到的是，任何技术，无论多么先进，都不完美。语义搜索对于提高信息检索系统的召回率非常有帮助。这意味着即使查询和搜索索引中的项目之间没有关键词重叠，我们也能检索到更多相关的项目。然而，这也以牺牲精确度为代价。记住在🧿表情符号示例中的情况，在某些语言中，我们想要找到的表情符号没有出现在前五个结果中。对于这个应用来说，这并不是一个大问题，因为即使它排在第50位，我们快速浏览表情符号找到所需的一个也不需要太多认知负担。但在其他情况中，比如搜索长文档，用户可能没有耐心，也没有资源浏览数十篇文档。在构建搜索引擎时，开发人员需要考虑用户的认知能力以及资源限制。我为Emojeez
    💎搜索引擎做出的某些设计选择可能在其他应用中效果并不理想。
- en: Another thing to mention is that AI models are known to learn s**ocio-cultural
    biases** from their training data. There is a large volume of documented research
    showing how modern language technology can amplify **gender stereotypes** and
    be unfair to **minorities**. So, we need to be aware of these issues and do our
    best to tackle them when deploying AI in the real world. If you notice such unwanted
    biases and unfair behaviors in Emojeez 💎, please let me know and I will do my
    best to address them.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一点需要提到的是，已知AI模型会从训练数据中学习到**社会文化偏见**。大量文献研究表明，现代语言技术如何能够放大**性别刻板印象**并对**少数群体**不公。因此，我们需要意识到这些问题，并在将AI应用于现实世界时尽力解决它们。如果你在Emojeez
    💎中发现了此类不良偏见和不公行为，请告诉我，我会尽力处理。
- en: Conclusion
  id: totrans-73
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Working on the Emojeez 💎 project was a fascinating journey that taught me a
    lot about how modern AI and NLP technologies can be employed to address the limitations
    of traditional keyword search. By harnessing the power of Large Language Models
    for enriching emoji metadata, multilingual transformers for creating semantic
    embeddings, and Qdrant for efficient vector search, I was able to create a search
    engine that makes emoji search more fun and accessible across 50+ languages. Although
    this project focuses on emoji search, the underlying technology has potential
    applications in multimodal search and recommendation systems.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 在Emojeez 💎项目的开发过程中，我经历了一段迷人的旅程，学到了很多关于如何利用现代AI和自然语言处理技术来解决传统关键词搜索的局限性。通过利用大语言模型来丰富表情符号的元数据、多语言转换模型来创建语义嵌入，以及使用Qdrant进行高效的向量搜索，我成功创建了一个使表情符号搜索更加有趣且在50多种语言中可访问的搜索引擎。虽然这个项目主要聚焦于表情符号搜索，但其底层技术在多模态搜索和推荐系统中也有潜在应用。
- en: For readers who are proficient in languages other than English, I am particularly
    interested in your feedback. Does Emojeez 💎 perform equally well in English and
    your native language? Did you notice any differences in quality or accuracy? Please
    give it a try and let me what you think. Your insights are quite invaluable.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 对于精通英语以外语言的读者，我特别希望听到你们的反馈。Emojeez 💎在英语和你的母语中表现是否同样出色？你是否注意到在质量或准确性上的差异？请试试看，告诉我你的想法。你的见解对我来说非常宝贵。
- en: Thank you for reading, and I hope you enjoy exploring Emojeez 💎 as much as I
    enjoyed building it.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读，我希望你能像我在构建Emojeez 💎时一样享受探索它的乐趣。
- en: Happy Emoji search! 📆😊🌍🚀
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你愉快地搜索表情符号！📆😊🌍🚀
- en: '*Note: Unless otherwise noted, all images are created by the author.*'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：除非另有说明，所有图片均由作者创作。*'
