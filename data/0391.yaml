- en: How to Build Your Own Google AI Chatbot Within 5 Minutes
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在 5 分钟内构建自己的 Google AI 聊天机器人
- en: 原文：[https://towardsdatascience.com/how-to-build-your-own-ai-chatbot-within-5-minutes-using-google-llm-and-your-private-knowledge-eed4b6852917?source=collection_archive---------0-----------------------#2024-02-11](https://towardsdatascience.com/how-to-build-your-own-ai-chatbot-within-5-minutes-using-google-llm-and-your-private-knowledge-eed4b6852917?source=collection_archive---------0-----------------------#2024-02-11)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-build-your-own-ai-chatbot-within-5-minutes-using-google-llm-and-your-private-knowledge-eed4b6852917?source=collection_archive---------0-----------------------#2024-02-11](https://towardsdatascience.com/how-to-build-your-own-ai-chatbot-within-5-minutes-using-google-llm-and-your-private-knowledge-eed4b6852917?source=collection_archive---------0-----------------------#2024-02-11)
- en: Fully utilising the power of Google LLM and your private knowledge
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 充分利用 Google LLM 和你的私人知识的力量
- en: '[](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)[![Selina
    Li](../Images/8bc2e0079d72b4d23f9d903b24144acb.png)](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)
    [Selina Li](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)[![Selina
    Li](../Images/8bc2e0079d72b4d23f9d903b24144acb.png)](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)
    [Selina Li](https://medium.com/@lizhuohang.selina?source=post_page---byline--eed4b6852917--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)
    ·14 min read·Feb 11, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--eed4b6852917--------------------------------)
    ·14 分钟阅读 ·2024年2月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'Authors: [Selina Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--eed4b6852917--------------------------------),
    [Tianyi Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--eed4b6852917--------------------------------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[Selina Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--eed4b6852917--------------------------------)、[Tianyi
    Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--eed4b6852917--------------------------------)
- en: · [The Problem](#e714)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: · [问题](#e714)
- en: · [The Solution](#1b3c)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: · [解决方案](#1b3c)
- en: · [Use Case](#5489)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: · [使用案例](#5489)
- en: · [Step by Step Guide](#59ba)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: · [逐步指南](#59ba)
- en: '∘ [Step 1: Environment Setup](#9037)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 1 步：环境设置](#9037)
- en: '∘ [Step 2: Prepare Private Knowledge and store them into Google Cloud Storage
    (low code)](#f3cd)'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 2 步：准备私人知识并将其存储到 Google 云存储（低代码）](#f3cd)
- en: '∘ [Step 3: Create Chatbot and the Data Store sitting behind the Chatbot (no
    code)](#4368)'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 3 步：创建聊天机器人和聊天机器人背后的数据存储（无代码）](#4368)
- en: '∘ [Step 4: Test the Chatbot (no code)](#7842)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 4 步：测试聊天机器人（无代码）](#7842)
- en: '∘ [Step 5: Publish / Integrate your Chatbot (low code)](#5ba1)'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 5 步：发布/集成聊天机器人（低代码）](#5ba1)
- en: '∘ [Step 6 (Optional): Publish it through a Beautiful Application (low code)](#eb61)'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [第 6 步（可选）：通过一个精美的应用发布它（低代码）](#eb61)
- en: · [What makes this “magic”?](#c1a0)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: · [是什么让这变得“神奇”？](#c1a0)
- en: · [Some Observations](#d869)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: · [一些观察](#d869)
- en: · [Wrap-up](#9e33)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: · [总结](#9e33)
- en: · [Enjoyed This Story?](#1884)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: · [喜欢这个故事吗？](#1884)
- en: The Problem
  id: totrans-21
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 问题
- en: You might have been familiar with AI chats powered by Large Language Model (LLM)
    such as OpenAI ChatGPT or Google Bard. And you might have noticed one thing —
    these LLMs have extensive general knowledge about the world, but might not give
    you satisfactory answers when you ask about a very specific or professional area,
    especially if the knowledge of this area is not that publicly available or sharable.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能已经熟悉了由大语言模型（LLM）驱动的 AI 聊天，如 OpenAI ChatGPT 或 Google Bard。而且你可能注意到一件事——这些
    LLM 拥有广泛的世界通用知识，但当你询问一个非常具体或专业的领域时，它们可能无法给出令人满意的答案，尤其是当这个领域的知识并不公开或不易共享时。
- en: Have you thought about “giving” your private knowledge to LLM and creating your
    own Chatbot?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 你是否想过将你的私人知识“赋予”LLM，并创建自己的聊天机器人？
- en: Do you know this can be done within 5 minutes with no code or low code?
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道吗，这可以在 5 分钟内通过无代码或低代码完成？
- en: 'The end product will be like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 最终产品将是这样的：
- en: '![](../Images/43425b636db296b5f717c704821742cf.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/43425b636db296b5f717c704821742cf.png)'
- en: 'Github link: [https://github.com/bianbianzhu/property-hunter](https://github.com/bianbianzhu/property-hunter)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Github 链接：[https://github.com/bianbianzhu/property-hunter](https://github.com/bianbianzhu/property-hunter)
- en: The Solution
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: During the Asia Pacific Google Cloud Applied AI Summit, **Alan Blount** from
    **Google** shared an interesting idea of achieving this using Google Cloud Vertex
    AI Search and Conversation, which I found pretty attractive to try out.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 在亚太地区的 Google Cloud 应用 AI 峰会期间，**Alan Blount** 来自 **Google** 分享了一个有趣的想法，利用 Google
    Cloud Vertex AI 搜索与对话实现这一目标，我觉得这个方法非常吸引人，值得尝试。
- en: 'The idea is simple, first put a corpus of private knowledge documents onto
    Google Cloud Storage:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这个想法很简单，首先将一批私有知识文档放到 Google Cloud Storage 上：
- en: '![](../Images/ef41c9002b1f774d04761323d723ee89.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef41c9002b1f774d04761323d723ee89.png)'
- en: 'then create a Data Store, and import the documents from the Cloud Storage into
    the Data Store:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 然后创建一个数据存储，并将文档从 Cloud Storage 导入到数据存储中：
- en: '![](../Images/fb494f7b0897ae6aebf5ea2e54c71af5.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fb494f7b0897ae6aebf5ea2e54c71af5.png)'
- en: 'finally plug that Data Store into Dialogflow CX:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后将数据存储接入 Dialogflow CX：
- en: '![](../Images/d1accd902a2ca0296ef96a71fff49740.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d1accd902a2ca0296ef96a71fff49740.png)'
- en: then we are done!
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们就完成了！
- en: 'We can test Chatbot like this:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以像这样测试聊天机器人：
- en: '![](../Images/acc5dc21a230ba1d9c21fb32d076d0c5.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/acc5dc21a230ba1d9c21fb32d076d0c5.png)'
- en: 'And if we want to publish it through a beautiful application, Google provides
    a public git repo for a Chat App that we can utilise. With a bit of coding knowledge,
    we can plug the link of the Dialogflow Chatbot into the Chat App, and customize
    the interface like this:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们想通过一个漂亮的应用程序发布它，Google 提供了一个公开的 Git 仓库，可以用于一个聊天应用程序。通过一点编程知识，我们可以将 Dialogflow
    聊天机器人链接插入到这个聊天应用程序中，并自定义界面，像这样：
- en: '![](../Images/6b68e2456865c0acdd93a11b340e53a3.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6b68e2456865c0acdd93a11b340e53a3.png)'
- en: 'OR this:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 或者是这个：
- en: '![](../Images/6c6a1713a41172745feeeb5b0d0a147d.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6c6a1713a41172745feeeb5b0d0a147d.png)'
- en: Use Case
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用案例
- en: In this case, assuming I am the owner of an ecommerce website. I would like
    to create a Chatbot, so my users can ask specific questions regarding anything
    about this website (price, product, service, shipping, etc.) as they are in the
    store. The Chatbot will be supplied with the “private knowledge” and ground its
    answers to the contents of the website.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个案例中，假设我是一个电商网站的所有者。我想创建一个聊天机器人，让我的用户可以在网站上提问关于任何商品（价格、产品、服务、运输等）的具体问题。聊天机器人将获得“私有知识”并基于网站内容回答问题。
- en: Given I am not actually owning an ecommerce website, I will take a workaround
    to crawl contents from an existing website available on the Internet. This is
    tricky because most websites are anti-scraping as specified in their terms of
    use, and it could be illegal to scrape ecommerce websites such as Amazon, eBay,
    Alibaba, etc.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我并没有真正拥有一个电商网站，我将采用一种变通方法，从互联网上现有的网站抓取内容。这有些棘手，因为大多数网站在其使用条款中声明反爬虫，并且抓取电商网站如
    Amazon、eBay、Alibaba 等可能是非法的。
- en: ChatGPT provided me with a perfect option —
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 给了我一个完美的选项 —
- en: Books to Scrape ([https://books.toscrape.com/](https://books.toscrape.com/)).
    A simulated bookstore specifically designed for web scraping practice. It offers
    a straightforward structure for scraping book details like title, price, and rating.
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 要抓取的书籍 ([https://books.toscrape.com/](https://books.toscrape.com/))。这是一个专门为网页抓取练习设计的模拟书店。它提供了一个简单的结构，用于抓取书籍的详细信息，如标题、价格和评分。
- en: In this use case, I would assume I am the owner of this [Books to Scrape website](https://books.toscrape.com/),
    and create the Chatbot based on it.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个使用案例中，我假设我是这个 [Books to Scrape 网站](https://books.toscrape.com/) 的所有者，并基于该网站创建聊天机器人。
- en: Step by Step Guide
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 步骤指南
- en: This might look a bit lengthy at first glance because it covers every detailed
    step that you will need. Once you have run through, you can get the same done
    within 5 minutes.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 一开始可能看起来有些冗长，因为它涵盖了你所需要的每个详细步骤。一旦你跑通了，你就能在 5 分钟内完成相同的操作。
- en: '**Step 1: Environment Setup**'
  id: totrans-51
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 1：环境设置**'
- en: The tool we are going to use is sitting on Google Vertex AI and we will need
    a Google Cloud Platform (GCP) account.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将使用的工具位于 Google Vertex AI 上，我们需要一个 Google Cloud Platform (GCP) 账户。
- en: Google has a [free-tier program](https://cloud.google.com/free/docs/free-cloud-features#free-trial)
    to provide new Google Cloud Platform (GCP) users with a 90-day trial period that
    includes $300 as free Cloud Billing credits.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: Google 提供了一个 [免费套餐程序](https://cloud.google.com/free/docs/free-cloud-features#free-trial)，为新的
    Google Cloud Platform (GCP) 用户提供为期 90 天的试用期，其中包括 $300 的免费云计费积分。
- en: Follow the [tutorial here](https://medium.com/@lizhuohang.selina/create-a-free-tier-google-cloud-account-9f4303516a28)
    to set up the free **Google Cloud account**.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 按照[这里的教程](https://medium.com/@lizhuohang.selina/create-a-free-tier-google-cloud-account-9f4303516a28)设置免费的**Google
    Cloud账户**。
- en: After you have set up Google Cloud account and can access the console, **create
    a storage bucket** ([step-by-step guide here](https://cloud.google.com/storage/docs/creating-buckets#create_a_new_bucket))
    for the next step use.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 在你设置好 Google Cloud 账户并能够访问控制台后，**创建一个存储桶**（[分步指南在这里](https://cloud.google.com/storage/docs/creating-buckets#create_a_new_bucket)）供下一步使用。
- en: '**Step 2: Prepare Private Knowledge and store them into Google Cloud Storage
    (low code)**'
  id: totrans-56
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 2：准备私有知识并将其存储到 Google Cloud Storage（低代码）**'
- en: As mentioned above, the private knowledge in this case will be the contents
    sitting on the book store website.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，在此情况下的私有知识将是位于书店网站上的内容。
- en: For owners of ecommerce websites, all you need to do is to provide the website
    URLs, and Google can automatically crawl website content from a list of domains
    you define.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 对于电商网站的所有者，你需要做的就是提供网站的 URL，Google 会自动从你定义的域名列表中抓取网站内容。
- en: Given I am not a real owner, I will resolve this by scrawling. Alan Blount from
    Google provided [a very useful notebook](https://goo.gle/4847mcz) to achieve this.
    All the code snippet does is to scrawl webpages from the website that you specified
    and store them in a Google Cloud Storage bucket that you specified.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我不是实际的所有者，我将通过爬取解决此问题。来自 Google 的 Alan Blount 提供了[一个非常有用的笔记本](https://goo.gle/4847mcz)来实现这一点。所有的代码片段所做的就是从你指定的网站抓取网页并将其存储到你指定的
    Google Cloud Storage 存储桶中。
- en: 'This is all you need to do:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是你需要做的全部：
- en: '**2.1 Save a copy of the notebook in your own drive**'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.1 将笔记本保存到你自己的云盘中**'
- en: Recall that in step 2 you have created a new Google account when you registered
    for Google Cloud? Your Google account will have [Google Drive](https://drive.google.com/drive/u/0/home)
    and you can save a copy of this notebook to your drive.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 回想一下，在步骤 2 中，当你注册 Google Cloud 时，你创建了一个新的 Google 账户？你的 Google 账户将拥有[Google Drive](https://drive.google.com/drive/u/0/home)，你可以将这个笔记本保存到你的云盘中。
- en: Select “Save a copy in Drive” option from the dropdown menu of “File”
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 从“文件”下拉菜单中选择“在 Drive 中保存副本”选项
- en: '![](../Images/fd5f4b55322d2af0a812da6fa47b221b.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fd5f4b55322d2af0a812da6fa47b221b.png)'
- en: Image from [Google Colab Notebook](https://colab.research.google.com/gist/zeroasterisk/54e6caa81fc8dea0c629275f12463e5f/-flutter-vertex-ai-demo-crawl-a-website-and-save-the-html-files-to-google-cloud-bucket.ipynb?utm_source=events-with-google&utm_medium=et&utm_campaign=FY24-Q1-apac-EXP89-onlineevent-er-applied-ai-summit-2023-apac-mc&utm_content=apac_appaisummit_lp_2024_resources)
    by Alan Blount
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[Google Colab 笔记本](https://colab.research.google.com/gist/zeroasterisk/54e6caa81fc8dea0c629275f12463e5f/-flutter-vertex-ai-demo-crawl-a-website-and-save-the-html-files-to-google-cloud-bucket.ipynb?utm_source=events-with-google&utm_medium=et&utm_campaign=FY24-Q1-apac-EXP89-onlineevent-er-applied-ai-summit-2023-apac-mc&utm_content=apac_appaisummit_lp_2024_resources)
    由 Alan Blount 提供
- en: Then if you go to [Google Drive](https://drive.google.com/drive/u/0/home), you
    will be able to see the notebook you created. Feel free to rename it according
    to your need.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，如果你进入[Google Drive](https://drive.google.com/drive/u/0/home)，你将能够看到你创建的笔记本。根据需要自由重命名它。
- en: '![](../Images/4991dcbe134654bcd5e1f935c794a203.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4991dcbe134654bcd5e1f935c794a203.png)'
- en: '**2.2 On your own notebook, locate the below and specify**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.2 在你自己的笔记本中，定位以下内容并指定**'
- en: '![](../Images/78797a6185557f76579a72b238276df1.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/78797a6185557f76579a72b238276df1.png)'
- en: Image from Google Colab Notebook
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 Google Colab 笔记本
- en: '`website_url` refers to the website page URL that you would like to scrawl.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '`website_url` 指的是你想要抓取的网页 URL。'
- en: '`storage_bucket` refers to the Google Cloud Storage that you created in above
    step 1.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '`storage_bucket` 指的是你在步骤 1 中创建的 Google Cloud Storage。'
- en: '`metadata_filename` refers to a json file that will be created and stored together
    with the webpages. You might want to make it relevant to your website by changing
    `applied_ai_summit_flutter_search` to something that can describe your use case.'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '`metadata_filename` 指的是将与网页一起创建并存储的 JSON 文件。你可能需要通过将 `applied_ai_summit_flutter_search`
    改为能够描述你的使用场景的名称来使其与网站相关。'
- en: 'This is my version:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的版本：
- en: '![](../Images/852466c2662e2ff8f9b098cf809280f4.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/852466c2662e2ff8f9b098cf809280f4.png)'
- en: Image from Google Colab Notebook
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 Google Colab 笔记本
- en: '**2.3 Run all**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.3 运行所有**'
- en: '![](../Images/a3ddf0b6c7e615dab7fd751a6cf39d12.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a3ddf0b6c7e615dab7fd751a6cf39d12.png)'
- en: Image from Google Colab Notebook
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 Google Colab 笔记本
- en: '**2.4 When it prompts you to authenticate the Google Colab notebook to access
    your Google credentials, click “Allow” -> “Continue”**'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: '**2.4 当系统提示你授权 Google Colab 笔记本访问你的 Google 凭证时，点击“允许”->“继续”**'
- en: '![](../Images/e9f5054915992ec2a7fb33474c87e91a.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e9f5054915992ec2a7fb33474c87e91a.png)'
- en: Image from Google Colab Notebook
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Colab 笔记本的图像
- en: 'Then the script should run through and show the progress of the scrawling at
    the bottom, just like this:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，脚本应该会运行，并在底部显示抓取进度，就像这样：
- en: '![](../Images/243dc44d573ffe7e5e813866425dae78.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/243dc44d573ffe7e5e813866425dae78.png)'
- en: Image from Google Colab Notebook
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Colab 笔记本的图像
- en: 'And if you refer to your Google Cloud storage bucket, you will see these html
    files get scrawled and stored properly within your bucket:'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你查看 Google Cloud 存储桶，你会看到这些 HTML 文件被正确抓取并存储在你的存储桶中：
- en: '![](../Images/1958b429f4b9a1dfe1b2cda49c66baa1.png)'
  id: totrans-87
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1958b429f4b9a1dfe1b2cda49c66baa1.png)'
- en: Image from Google Cloud Console
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: One thing to notice is that the code snippet is not designed for every use case,
    and you might need some slight tuning of the codes to achieve your goal.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，代码片段并非为所有用例设计，你可能需要对代码进行一些微调，以达到你的目标。
- en: For example, in my case, I tuned the code a bit by changing
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，在我的案例中，我通过修改代码进行了一些调整
- en: '[PRE0]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: into
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 转换为
- en: '[PRE1]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: By default the `html_string` will be uploaded as `text/plain` . By changing
    into `text/html` , I would like to enable this HTML contents to show properly
    in a later stage.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 默认情况下，`html_string` 将作为 `text/plain` 上传。通过将其改为 `text/html`，我希望能够在后续阶段正确显示这些
    HTML 内容。
- en: You can tune the code as much as you like.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以根据需要调整代码。
- en: '**Step 3: Create Chatbot and the Data Store sitting behind the Chatbot (no
    code)**'
  id: totrans-96
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 3：创建聊天机器人以及其背后的数据存储（无需代码）**'
- en: 'Go to Google Cloud Console ([https://console.cloud.google.com/](https://console.cloud.google.com/))
    and type “search and conversation” as the service:'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 前往 Google Cloud 控制台 ([https://console.cloud.google.com/](https://console.cloud.google.com/))
    并输入“搜索与对话”作为服务：
- en: '![](../Images/cdc2fa2c03fe7366995674b632080c99.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cdc2fa2c03fe7366995674b632080c99.png)'
- en: 'Create “NEW APP”:'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 创建“新应用”：
- en: '![](../Images/23fb1e16321fa04a0763e1412706040e.png)'
  id: totrans-100
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/23fb1e16321fa04a0763e1412706040e.png)'
- en: Image from Google Cloud Console
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: 'Select “Chat”:'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“聊天”：
- en: '![](../Images/a9bdcf2828414350c09b17a39ffcfa3a.png)'
  id: totrans-103
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a9bdcf2828414350c09b17a39ffcfa3a.png)'
- en: Image from Google Cloud Console
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: Provide your “Company name” and “Agent name”. Note that the **“Agent name”**
    here will be the **name of the Chatbot**, you might want to put a good name for
    your users.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 提供你的“公司名称”和“代理名称”。请注意，这里的**“代理名称”**将是**聊天机器人的名称**，你可能想为你的用户取个好名字。
- en: '![](../Images/7de2b5b1cef6e653803f3fc9e071c515.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7de2b5b1cef6e653803f3fc9e071c515.png)'
- en: Image from Google Cloud Console
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: 'At this “Data” page, select “CREATE NEW DATA STORE”:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 在此“数据”页面，选择“创建新数据存储”：
- en: '![](../Images/4a7c4131fcc6fb7d1fd7022478b60752.png)'
  id: totrans-109
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a7c4131fcc6fb7d1fd7022478b60752.png)'
- en: Image from Google Cloud Console
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: For owners of ecommerce websites, select “Website URLs” and provision your website
    URLs
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 对于电子商务网站的拥有者，选择“网站 URL”并配置你的网站 URL
- en: 'As I have scrawled the website contents into Cloud Storage, we can select “Cloud
    Storage” here:'
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我已经将网站内容抓取到 Cloud Storage，我们可以在此选择“Cloud Storage”：
- en: '![](../Images/26f6021d1fbe20f93b4e51f4c1fbf0f5.png)'
  id: totrans-113
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/26f6021d1fbe20f93b4e51f4c1fbf0f5.png)'
- en: Image from Google Cloud Console
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: 'Specify the Cloud Storage bucket name, and select “Unstructured documents”
    in below:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 指定 Cloud Storage 存储桶名称，并在下方选择“非结构化文档”：
- en: '![](../Images/007f40ea225ea53e2f09824696bccb9f.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/007f40ea225ea53e2f09824696bccb9f.png)'
- en: Image from Google Cloud Console
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: Give your data store a name, then “CREATE”
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 给你的数据存储命名，然后点击“创建”
- en: '![](../Images/cb47148fdce7687e914f5e42e94ef37c.png)'
  id: totrans-119
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb47148fdce7687e914f5e42e94ef37c.png)'
- en: Image from Google Cloud Console
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: You will see your data store listed, then “CREATE”
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 你会看到数据存储列出，然后点击“创建”
- en: '![](../Images/263ca3f4e929d8484d3e6affe02f50e6.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/263ca3f4e929d8484d3e6affe02f50e6.png)'
- en: Image from Google Cloud Console
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: Your data store will be created as below
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 你的数据存储将如下所示创建
- en: '![](../Images/f3a674367d1e83604ab947a730fdffdb.png)'
  id: totrans-125
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3a674367d1e83604ab947a730fdffdb.png)'
- en: Image from Google Cloud Console
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: 'If you click into it, you will see your data store is “processing data” by
    importing documents from the Cloud Storage bucket that we specified earlier:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击进去，你会看到你的数据存储正在“处理数据”，并从我们之前指定的 Cloud Storage 存储桶中导入文档：
- en: '![](../Images/5e4d7f67be0634518a6421f5aab1f710.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e4d7f67be0634518a6421f5aab1f710.png)'
- en: Image from Google Cloud Console
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图像
- en: 'If we click the “ACTIVITY” tab, we can see the import is in progress:'
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们点击“ACTIVITY”标签，我们可以看到导入正在进行中：
- en: '![](../Images/f185ddec47ae70cf303ae4d317ff3bf6.png)'
  id: totrans-131
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f185ddec47ae70cf303ae4d317ff3bf6.png)'
- en: Image from Google Cloud Console
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: Import will take minutes to hours depending on the number of documents in your
    Cloud Storage bucket.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 导入过程可能需要几分钟到几小时，具体取决于你 Cloud Storage 存储桶中的文档数量。
- en: In my case, I have over 1,000 files and it finishes within minutes.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 在我的情况下，我有超过1000个文件，几分钟内就完成了。
- en: 'After import is completed, the status as highlighted has changed:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 导入完成后，突出显示的状态已发生变化：
- en: '![](../Images/d2d95cd21050dbab5288a33a8627fa5d.png)'
  id: totrans-136
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d2d95cd21050dbab5288a33a8627fa5d.png)'
- en: Image from Google Cloud Console
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'And if you switch back to the “DOCUMENTS” tab, you will see the list of files
    imported into the data store:'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你切换回“文档”标签，你将看到导入到数据存储中的文件列表：
- en: '![](../Images/5e45c1fa781b8ae0197c8fd6f51382df.png)'
  id: totrans-139
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e45c1fa781b8ae0197c8fd6f51382df.png)'
- en: Image from Google Cloud Console
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: That means you’ve got all the materials and you are ready to cook!
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着你已经准备好所有材料，可以开始工作了！
- en: 'Step 4: Test the Chatbot (no code)'
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 4：测试聊天机器人（无代码）
- en: In step 3 above, we have already created a Chatbot app as well as the data store
    sitting behind it.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的第3步中，我们已经创建了一个聊天机器人应用程序以及其背后的数据存储。
- en: 'Click “Apps” on the top:'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 点击顶部的“应用”：
- en: '![](../Images/7450fedd30a09bc504966d67b4733843.png)'
  id: totrans-145
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7450fedd30a09bc504966d67b4733843.png)'
- en: Image from Google Cloud Console
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'You will see the Chatbot you created in the previous step 3:'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 你将看到你在第3步中创建的聊天机器人：
- en: '![](../Images/00b8eead5847c59b5fed9fb8485fb09d.png)'
  id: totrans-148
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00b8eead5847c59b5fed9fb8485fb09d.png)'
- en: Image from Google Cloud Console
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'If you click into the Chatbot name, you will be directed to the Dialogflow
    CX page like below:'
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你点击聊天机器人名称，你将被引导到类似下面的 Dialogflow CX 页面：
- en: '![](../Images/2a7e6e5f22342f2be8407396c90ad25b.png)'
  id: totrans-151
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2a7e6e5f22342f2be8407396c90ad25b.png)'
- en: Image from Google Cloud Console
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'To test the Chatbot, select “Test Agent” in the right up corner:'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: 要测试聊天机器人，选择右上角的“测试代理”：
- en: '![](../Images/2caf01d59ef23194b0031248b5cfe325.png)'
  id: totrans-154
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2caf01d59ef23194b0031248b5cfe325.png)'
- en: Image from Google Cloud Console
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'And the dialogue box will pop up:'
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 然后对话框会弹出：
- en: '![](../Images/0bfcf164f96e4f7c25ffec31b04d1d39.png)'
  id: totrans-157
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bfcf164f96e4f7c25ffec31b04d1d39.png)'
- en: Image from Google Cloud Console
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'You can start the conversation by saying “hi” and start asking questions to
    the Chatbot:'
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以通过说“hi”并开始向聊天机器人提问来启动对话：
- en: '![](../Images/49719ee09a923fcf2fac33803a903ec1.png)'
  id: totrans-160
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49719ee09a923fcf2fac33803a903ec1.png)'
- en: Image from Google Cloud Console
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: It works!
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 它工作正常！
- en: 'Step 5: Publish / Integrate your Chatbot (low code)'
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 步骤 5：发布 / 集成你的聊天机器人（低代码）
- en: If you are happy with the Chatbot, it is easy to integrate it with your web
    application
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对聊天机器人满意，可以轻松地将其与你的 web 应用程序集成
- en: Go to the left pane, select “Manage” -> “Integrations” -> “Dialogflow Messenger”
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: 进入左侧面板，选择“管理” -> “集成” -> “Dialogflow Messenger”
- en: '![](../Images/0773340e4495d08c40822981036748b2.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0773340e4495d08c40822981036748b2.png)'
- en: Image from Google Cloud Console
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: You can choose the type of API and UI style according to your needs
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以根据自己的需求选择 API 类型和 UI 风格
- en: 'For demo purpose, I selected “Unauthenticated API” as API and “Pop-out” as
    UI style:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，我选择了“未认证的 API”作为 API 和“弹出式”作为 UI 风格：
- en: '![](../Images/a29403b6a78b67cac4c9de6dea005d10.png)'
  id: totrans-170
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a29403b6a78b67cac4c9de6dea005d10.png)'
- en: Image from Google Cloud Console
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: 'After selecting “Done”, a code snippet in HTML will be generated in the next
    page as below:'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: 选择“完成”后，下一页会生成如下的HTML代码片段：
- en: '![](../Images/8635dec907fe99d3b43227079a7cf16d.png)'
  id: totrans-173
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8635dec907fe99d3b43227079a7cf16d.png)'
- en: Image from Google Cloud Console
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 Google Cloud 控制台的图片
- en: You may copy the code snippet and easily paste it into your applications for
    integration.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以复制代码片段并轻松将其粘贴到你的应用程序中进行集成。
- en: For demo purpose, I copy paste this HTML snippet into [JSFiddle](https://jsfiddle.net/)
    and run it, then I am getting my little Chatbot working as shown in the right
    down corner!
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示，我将这个 HTML 代码片段复制并粘贴到 [JSFiddle](https://jsfiddle.net/) 中运行，然后我看到我的小聊天机器人在右下角正常工作！
- en: '![](../Images/65bb7fe604bec0cf0d4394f324f190b8.png)'
  id: totrans-177
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65bb7fe604bec0cf0d4394f324f190b8.png)'
- en: Image from [JSFiddle](https://jsfiddle.net/)
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 [JSFiddle](https://jsfiddle.net/) 的图片
- en: '**Step 6 (Optional): Publish it through a Beautiful Application (low code)**'
  id: totrans-179
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**步骤 6（可选）：通过美观的应用程序发布（低代码）**'
- en: In case you don’t have an application yet and you want to have one, Google provides
    a good starting point through a public git repository [Chat App](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app).
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您还没有应用程序并希望创建一个，Google 提供了一个很好的起点，通过一个公开的 Git 仓库 [聊天应用](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app)。
- en: This is a Chatbot Application written in Node.js and you can easily adapt it
    for your own use by changing the code snippets a bit within `chat-app/src/routes/+page.svelte`
    .
  id: totrans-181
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个用 Node.js 编写的聊天机器人应用程序，您可以通过稍微修改 `chat-app/src/routes/+page.svelte` 中的代码片段，轻松将其适配到您自己的需求。
- en: You will need to change the `project-id`, `agent-id` and `chat-title` into yours.
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 您需要将 `project-id`、`agent-id` 和 `chat-title` 更改为您自己的。
- en: '![](../Images/4b3fe26c95da711768cf3af30a354c3e.png)'
  id: totrans-183
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b3fe26c95da711768cf3af30a354c3e.png)'
- en: Image from git repo [https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-ap](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app)
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 该图片来自 Git 仓库 [https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-ap](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app)
- en: 'And once you run/deploy the app, you will get the web UI like this:'
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦您运行/部署该应用程序，您将获得如下所示的 Web UI：
- en: '![](../Images/c6c931e4ab087b0f9dec6bb65bf71225.png)'
  id: totrans-186
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6c931e4ab087b0f9dec6bb65bf71225.png)'
- en: Image from git repo [https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app)
  id: totrans-187
  prefs: []
  type: TYPE_NORMAL
  zh: 该图片来自 Git 仓库 [https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app](https://github.com/GoogleCloudPlatform/generative-ai/tree/main/conversation/chat-app)
- en: Of course you can change the appearance of the UI as you like.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，您可以根据需要更改 UI 的外观。
- en: Now you can have your own application!
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，您可以拥有自己的应用程序了！
- en: What makes this “magic”?
  id: totrans-190
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 是什么让这个“魔法”得以实现？
- en: Recalling the solution design that we mentioned at the beginning. This looks
    a bit magic as you can get your own LLM powered Chatbot by simply supplying your
    private knowledge to a Google Cloud Storage bucket.
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 回想我们在开头提到的解决方案设计。看起来有点像魔法，因为您只需要将您的私人知识提供给 Google Cloud Storage 存储桶，就能轻松获得自己的
    LLM 驱动的聊天机器人。
- en: '![](../Images/d1accd902a2ca0296ef96a71fff49740.png)'
  id: totrans-192
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d1accd902a2ca0296ef96a71fff49740.png)'
- en: This is achieved as Google has done quite a bit of integrations behind the scene,
    by integrating **Vertex AI platform** with the chatbot agent service **Dialogflow
    CX**, and coming up with a new abstraction called **Vertex AI Conversation** (formerly
    Gen App Builder). This new abstraction also supports **Search** and **Recommend**,
    and the full name of this service is “**Vertex AI Search and Conversation**”.
  id: totrans-193
  prefs: []
  type: TYPE_NORMAL
  zh: 这一切的实现得益于 Google 在幕后做了大量的集成工作，通过将 **Vertex AI 平台** 与聊天机器人代理服务 **Dialogflow CX**
    集成，并推出了一个新的抽象层，称为 **Vertex AI 对话**（前身为 Gen 应用构建器）。这个新的抽象层还支持 **搜索** 和 **推荐**，该服务的全名为“**Vertex
    AI 搜索与对话**”。
- en: As we can see, this new abstraction of “Vertex AI Search and Conversation” is
    sitting on top of Vertex AI which has orchestrated a bunch of foundation models,
    and gets “augmented” by user-supplied updated real world information, so it can
    contextualize its responses to these information.
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: 正如我们所见，这种新的“Vertex AI 搜索与对话”的抽象位于 Vertex AI 之上，后者协调了多个基础模型，并通过用户提供的最新真实世界信息进行“增强”，使其能够将这些信息纳入其回应的上下文。
- en: '![](../Images/98e515df9473082c7f1482959086d777.png)'
  id: totrans-195
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/98e515df9473082c7f1482959086d777.png)'
- en: 'Image as a slide from Google Cloud CEO speech [Generative AI: The next frontier
    for developers](https://youtu.be/L-UKYBPJTWE?si=zJR9gJs7YTH_JiJ1)'
  id: totrans-196
  prefs: []
  type: TYPE_NORMAL
  zh: 该图片来自 Google Cloud CEO 的演讲幻灯片 [生成式 AI：开发者的下一个前沿](https://youtu.be/L-UKYBPJTWE?si=zJR9gJs7YTH_JiJ1)
- en: The integration is great as it can help at least two groups of people —
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 该集成非常出色，因为它可以帮助至少两类人群 —
- en: traditional Chatbot builder, and
  id: totrans-198
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 传统的聊天机器人构建者，以及
- en: people exploring GenAI solutions but having not identified a good use case
  id: totrans-199
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 人们在探索生成式 AI 解决方案，但还未找到合适的应用场景
- en: Imagine you are a **traditional Chatbot builder** using Dialogflow CX, you are
    creating pages, intents and routes to route customer intentions to the corresponding
    page. Basically you are defining “if customer say this then I respond with this”
    which is a bit hard-coding. Now Google plugs in Vertex AI which can utilise LLM
    models (e.g. text-bison, gemini) to generate agent responses and control conversation
    flow in a much smarter way. This can significantly reduce agent design time and
    improve agent quality.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 想象你是一个使用Dialogflow CX的**传统聊天机器人构建者**，你在创建页面、意图和路由，将客户意图路由到相应的页面。基本上，你在定义“如果客户说这个，那么我用这个回应”，这有点像硬编码。现在，谷歌将Vertex
    AI接入进来，它可以利用LLM模型（例如text-bison、gemini）生成智能的代理回应，并控制对话流程。这可以显著减少代理设计时间，并提高代理质量。
- en: On the other hand, image you are **exploring the power of LLMs and Generative
    AI but not sure what to do with it**. This **Vertex AI Conversation** feature
    can enable you to easily build and launch your own Chatbot applications quickly
    and make them available for real use case. This can significantly shorten the
    go-to-market time of LLM and GenAI solutions.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 另一方面，想象你在**探索LLM和生成式AI的强大功能，但不确定如何使用它**。这个**Vertex AI 对话**功能可以让你轻松构建并快速启动自己的聊天机器人应用，并使其适用于实际用例。这可以显著缩短LLM和生成AI解决方案的上市时间。
- en: Some Observations
  id: totrans-202
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 一些观察
- en: Despite the “magic” as it appears, we observed several things worth sharing
    with developers who are considering use this “**Vertex AI Search and Conversation**”
    feature.
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管看起来有些“魔力”，我们观察到一些值得与考虑使用“**Vertex AI 搜索与对话**”功能的开发者分享的事项。
- en: Our gut feeling is this is a new product Google brought in by “integrating”
    several existing tools and is still working towards making it better. It lacks
    clarity how the integration happens behind the scene, and how developers can best
    understand and configure it.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的直觉是，这是谷歌通过“整合”几个现有工具推出的一款新产品，并且仍在努力使其变得更好。集成如何在幕后发生，以及开发者如何理解和配置它，仍然不够清晰。
- en: I got our chatbot very quickly but once I started looking at how to fine tune
    it, it took me quite a bit of time to figure out how Dialogflow CX works, what
    is “generator” and how it works. At this moment I’m still confused why this Chatbot
    works so great without me even configuring any [“generator” as described in Google
    doc](https://cloud.google.com/dialogflow/cx/docs/concept/generative/generators),
    and whether/how we can make it better by using “generator”.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 我很快就得到了我们的聊天机器人，但一旦开始查看如何微调它，我花了相当多的时间来弄明白Dialogflow CX是如何工作的，什么是“生成器”，以及它是如何工作的。此刻，我仍然困惑为什么这个聊天机器人在我甚至没有配置任何[谷歌文档中描述的“生成器”](https://cloud.google.com/dialogflow/cx/docs/concept/generative/generators)的情况下运作得如此出色，是否/如何通过使用“生成器”能使它变得更好。
- en: 'Some other observations during the development:'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 开发过程中还有一些其他观察：
- en: Indexing a website or a set of documents can take minutes or days, depending
    on the amount of data. There is no clear estimate on how long this process will
    take, and what developers can do is just wait and check periodically.
  id: totrans-207
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 索引一个网站或一组文档可能需要几分钟或几天，具体取决于数据量。对此过程所需时间没有明确估计，开发者能做的就是等待并定期检查。
- en: We know how to link a datastore to a Chatbot app, but looks like we cannot “unlink”
    it.
  id: totrans-208
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们知道如何将数据存储与聊天机器人应用连接，但看起来我们无法“断开”连接。
- en: Despite the level of grounding, the quality of the data supplied by users can
    significantly impact the performance of the Chatbot. “Rubbish in, rubbish out”
    still applies to a great extent.
  id: totrans-209
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 尽管有一定的基础，用户提供的数据质量仍然会显著影响聊天机器人的性能。“垃圾进，垃圾出”依然在很大程度上适用。
- en: “Augment” by supplying private data and knowledge helps resolve one issue of
    LLM — lack of updated real world information. But the issue of hallucination stays
    as sometimes the Chatbot can give “fake” information (of course depending on the
    data quality of the private knowledge you supplied).
  id: totrans-210
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过提供私人数据和知识来“增强”可以解决大型语言模型（LLM）的一个问题——缺乏更新的现实世界信息。但幻觉问题依然存在，因为有时聊天机器人可能会给出“虚假”信息（当然，这取决于你提供的私人知识的数据质量）。
- en: The Chatbot provides links to the relevant web page / document page (e.g. PDF)
    during chat with users. This is great, but the link supplied by the Chatbot comes
    as Google Cloud Storage Authenticated URL and can only be accessed by users with
    granted permission. Developers need to figure out how to make them into the signed-URLs
    which are safe to share with public anonymous users, instead of using the Google
    Cloud Storage Authenticated URLs.
  id: totrans-211
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 聊天机器人在与用户聊天时会提供相关网页/文档页（例如 PDF）的链接。这很棒，但聊天机器人提供的链接是 Google Cloud Storage 授权的
    URL，仅能被具有授权权限的用户访问。开发人员需要找出如何将这些 URL 转换为签名 URL，这样可以安全地与公众匿名用户分享，而不是使用 Google Cloud
    Storage 授权的 URL。
- en: 'The data store sitting behind the Chatbot works best for unstructured data.
    For structured data, it supports linking to CSV structured data but it has to
    be in the format of “question” and “answer” as mentioned in Google doc:'
  id: totrans-212
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 支撑聊天机器人的数据存储最适合处理非结构化数据。对于结构化数据，它支持连接到 CSV 格式的结构化数据，但必须采用 Google 文档中提到的“问题”和“答案”格式：
- en: '![](../Images/5afdef6df1cace674c95147b7bfb630f.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5afdef6df1cace674c95147b7bfb630f.png)'
- en: Image from Google Cloud Console
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 Google Cloud 控制台
- en: '![](../Images/ba0455873dd78c1f5dfeaec6cb327dfd.png)'
  id: totrans-215
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ba0455873dd78c1f5dfeaec6cb327dfd.png)'
- en: Image from [Google Cloud Dialogflow Guides](https://cloud.google.com/dialogflow/vertex/docs/concept/data-store#structured)
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [Google Cloud Dialogflow 指南](https://cloud.google.com/dialogflow/vertex/docs/concept/data-store#structured)
- en: Wrap-up
  id: totrans-217
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In the above use case, I assume I am an online book store owner and created
    a Chatbot based on my e-commerce website contents in HTML.
  id: totrans-218
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述用例中，我假设自己是一家在线书店的老板，并根据我的电子商务网站内容（HTML 格式）创建了一个聊天机器人。
- en: Similarly, you can supply “private knowledge” in the format of **blogs**, **files
    (e.g. PDF, HTML, TXT)** and **all kinds of websites** to the Google Cloud Storage,
    and create your own Chatbot.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，您可以将“私人知识”以 **博客**、**文件（例如 PDF、HTML、TXT）** 和 **各种网站** 的格式提供给 Google Cloud
    Storage，并创建自己的聊天机器人。
- en: This enables individuals / businesses to fully utilize the power of the Google
    LLMs (text-bison, gemini, etc.) and augment it with private knowledge, and create
    own Chatbots in a very quick manner.
  id: totrans-220
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得个人/企业能够充分利用 Google LLMs（如 text-bison、gemini 等）的强大功能，将其与私人知识结合，并以非常快速的方式创建自己的聊天机器人。
- en: This marks the end of this article. Hope you find it helpful!
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 本文到此结束。希望您觉得它有帮助！
- en: '(PS: I am working on a video to make this step-by-step guide easier to follow.
    Will share if I get it done in near future.)'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: （附言：我正在制作一段视频，以便让这个逐步指南更易于跟随。如果完成的话，我会在不久的将来分享。）
- en: Enjoyed This Story?
  id: totrans-223
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 喜欢这个故事吗？
- en: '**Selina Li** ([Selina Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--eed4b6852917--------------------------------),
    [LinkedIn](https://www.linkedin.com/in/selina-zhuohang-li-3b7355120/)) is a Principal
    Data Engineer working at [Officeworks](https://www.officeworks.com.au/) in Melbourne
    Australia. Selina is passionate about AI/ML, data engineering and investment.'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '**Selina Li** ([Selina Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--eed4b6852917--------------------------------),
    [LinkedIn](https://www.linkedin.com/in/selina-zhuohang-li-3b7355120/)) 是一位首席数据工程师，现工作于澳大利亚墨尔本的[Officeworks](https://www.officeworks.com.au/)。Selina
    热衷于人工智能/机器学习、数据工程和投资。'
- en: '**Jason Li** ([Tianyi Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--eed4b6852917--------------------------------),
    [LinkedIn](https://www.linkedin.com/in/tianyi-li-jason/)) is a Full-stack Developer
    working at [Mindset Health](https://www.mindsethealth.com/) in Melbourne Australia.
    Jason is passionate about AI, front-end development and space related technologies.'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: '**Jason Li** ([Tianyi Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--eed4b6852917--------------------------------),
    [LinkedIn](https://www.linkedin.com/in/tianyi-li-jason/)) 是一位全栈开发工程师，现工作于澳大利亚墨尔本的[Mindset
    Health](https://www.mindsethealth.com/)。Jason 热衷于人工智能、前端开发以及与太空相关的技术。'
- en: Selina and Jason would love to explore technologies to help people achieve their
    goals.
  id: totrans-226
  prefs: []
  type: TYPE_NORMAL
  zh: Selina 和 Jason 很乐意探索各种技术，帮助人们实现他们的目标。
- en: '*Unless otherwise noted, all images are by the authors.*'
  id: totrans-227
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有说明，所有图片均由作者提供。*'
