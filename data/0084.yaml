- en: Solve the GPT Branching Problem with an Artifact Pipeline
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过工件流水线解决GPT分支问题
- en: 原文：[https://towardsdatascience.com/solve-the-gpt-branching-problem-with-an-artifact-pipeline-44024398c15f?source=collection_archive---------11-----------------------#2024-01-09](https://towardsdatascience.com/solve-the-gpt-branching-problem-with-an-artifact-pipeline-44024398c15f?source=collection_archive---------11-----------------------#2024-01-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/solve-the-gpt-branching-problem-with-an-artifact-pipeline-44024398c15f?source=collection_archive---------11-----------------------#2024-01-09](https://towardsdatascience.com/solve-the-gpt-branching-problem-with-an-artifact-pipeline-44024398c15f?source=collection_archive---------11-----------------------#2024-01-09)
- en: Designing a meal planning app using a custom GPT
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用自定义GPT设计一个饮食规划应用
- en: '[](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)[![Andrew
    Lucas](../Images/0b5841e17d7bd1959f6d0bc05312dba6.png)](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)
    [Andrew Lucas](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)[![Andrew
    Lucas](../Images/0b5841e17d7bd1959f6d0bc05312dba6.png)](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)
    [Andrew Lucas](https://medium.com/@andrew.tyler.lucas?source=post_page---byline--44024398c15f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)
    ·14 min read·Jan 9, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--44024398c15f--------------------------------)
    ·14分钟阅读·2024年1月9日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2566e3aa4af39c38b5ce25abe0dfeb5c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2566e3aa4af39c38b5ce25abe0dfeb5c.png)'
- en: “The Branching Problem”, created by the author using ChatGPT
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: “分支问题”，由作者使用ChatGPT创建
- en: '**“Create an app to help me meal plan for the week.”**'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**“创建一个应用帮助我规划一周的饮食。”**'
- en: Imagine if you could ask ChatGPT to implement a full app and provide it as a
    download. The technology isn’t powerful enough for that yet, but AI can already
    automate parts of the workflow, like requirements definition, task planning, and
    even coding.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果你可以要求ChatGPT实现一个完整的应用并提供下载链接。尽管目前的技术还不足以实现这一点，但AI已经能够自动化一些工作流程的部分内容，例如需求定义、任务规划，甚至是编码。
- en: When provided with the correct instructions, ChatGPT (or custom GPTs) can help
    breakdown the problem recursively. As we divide the problem into sub-problems,
    we have to keep track of all of the different “branches” that we generate. Branches
    split into more branches, creating a complex tree structure. I call this **The
    Branching Problem**.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当提供正确的指示时，ChatGPT（或自定义GPT）可以帮助递归地分解问题。当我们将问题划分为子问题时，我们需要跟踪所有生成的不同“分支”。这些分支会进一步分裂成更多的分支，形成一个复杂的树状结构。我称之为**分支问题**。
- en: We’ll explore a couple methods for using GPT-based tools to create well-defined
    output artifacts as part of an app design pipeline. At the end, I’ll explain how
    this can help overcome the Branching Problem.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将探讨几种方法，使用基于GPT的工具创建明确输出的工件，作为应用设计流程的一部分。最后，我将解释这如何帮助克服分支问题。
- en: '*AI Disclaimer: No AI was used to generate the written content for this story,
    other than when I explicitly quote ChatGPT to make a point.*'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '*AI免责声明：除了在我明确引用ChatGPT以阐述观点时，本故事的文字内容并未使用AI生成。*'
- en: Think Like a Human
  id: totrans-13
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 像人类一样思考
- en: First let’s think about how a human would handle my app request. Let’s assume
    I’m asking someone who actually has the ability to fulfill this request, like
    a project manager at a software agency.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 首先让我们思考一下人类是如何处理我的应用请求的。假设我在询问一个实际上有能力满足这个请求的人，比如一个软件公司项目经理。
- en: The initial request is not specific enough. A human project manager would know
    to immediately start asking questions.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 最初的请求不够具体。一个人类项目经理会知道立即开始提问。
- en: '**What kind of app?**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**什么样的应用？**'
- en: It could be a website, a mobile app, or even something like a slack bot. In
    this case, I would prefer a mobile app *and* a mobile-friendly web application,
    but I would settle for one or the other.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 它可以是一个网站，一个移动应用，甚至是类似于Slack的机器人。在这种情况下，我更倾向于一个移动应用*以及*一个适配手机的网页应用，但我也可以接受其中任何一个。
- en: '**How do I want to be able to meal plan?**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**我希望如何进行餐单规划？**'
- en: It turns out that I’ve already thought through this quite a bit. There are a
    few ingredients that I prefer to buy and cook with, so I’d like the app to use
    AI to generate recipes based on a list of ingredients I provide. I’ve already
    done this with ChatGPT, so I know its possible.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 事实证明，我已经思考了这一点。对于我来说，有一些食材是我偏好购买并使用的，所以我希望这个应用能利用AI，根据我提供的食材清单生成食谱。我已经用ChatGPT做过这件事，所以我知道这是可行的。
- en: I know from experiments that ChatGPT can estimate calories and macronutrient
    contents for ingredients, so I’d like that to be included. I also know that ChatGPT
    tends to underestimate these quantities, so I’d like some way to handle that,
    whether through manual review (safer) or automatically scaling the values up by
    some percent (lazier).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过实验知道，ChatGPT可以估算食材的卡路里和宏量营养素含量，所以我希望这能被包含在内。我还知道ChatGPT倾向于低估这些量，因此我希望有某种方式来处理这个问题，无论是通过手动审核（更安全）还是通过某种百分比自动调整这些值（更懒）。
- en: I would already have all of this in mind when I make the request to the software
    agency, but I wouldn’t just present it as an info dump. I’d let them tease-out
    the details over the course of a conversation. That’s less cognitive load on me,
    and it allows the representative from the agency to integrate the information
    at an appropriate speed, taking notes or following their own intake process.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 当我向软件公司提出请求时，我早就已经考虑到了所有这些内容，但我不会把它们直接作为信息块呈现给他们。我会让他们在对话过程中逐步提取细节。这减少了我的认知负担，并且让公司的代表能在适当的速度下整合这些信息，记笔记或按照他们自己的接收流程进行。
- en: This is how humans naturally communicate, but ChatGPT doesn’t know that I expect
    it to ask me clarifying questions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是人类自然的沟通方式，但ChatGPT并不知道我希望它问我澄清性问题。
- en: ChatGPT Doesn’t Know What It Doesn’t Know
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ChatGPT并不知道自己不知道什么
- en: Here’s how GPT-4 answers when I ask “Create an app to help me meal plan for
    the week”. The response is shortened for brevity.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这是当我问“创建一个帮助我制定一周餐单的应用”时，GPT-4的回答。为了简洁，回答已被缩短。
- en: 'Creating an app involves several key steps:'
  id: totrans-25
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 创建一个应用涉及几个关键步骤：
- en: ''
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 1\. Define the App’s Purpose and Features
  id: totrans-27
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1\. 定义应用的目的和功能
- en: 2\. Design the User Interface (UI)
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2\. 设计用户界面（UI）
- en: 3\. Select a Development Approach
  id: totrans-29
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 3\. 选择开发方法
- en: 4\. Develop the App
  id: totrans-30
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 4\. 开发应用
- en: 5\. Test the App
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 5\. 测试应用
- en: 6\. Launch and Market the App
  id: totrans-32
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 6\. 启动并推广应用
- en: 7\. Maintain and Update
  id: totrans-33
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 7\. 维护和更新
- en: ''
  id: totrans-34
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is a simplified overview. Each step involves detailed processes and decisions
    based on your specific requirements and resources.
  id: totrans-35
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 这是一个简化的概述。每个步骤都包含基于你具体需求和资源的详细过程和决策。
- en: ChatGPT’s answer is frustrating and useless.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT的回答令人沮丧且无用。
- en: I already know all these things. What’s worse, ChatGPT goes into agonizing detail
    on each point, explaining to me what it means to develop an app.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经知道了所有这些。更糟糕的是，ChatGPT会对每一点进行痛苦的详细解释，告诉我什么是开发一个应用。
- en: If I were to stop here, I might conclude that AI is dumb and doesn’t understand
    how to actually build an app, but I’d be wrong.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我在这里停下来，可能会得出结论认为AI很笨，不懂得如何真正构建一个应用，但我会错的。
- en: Tell It What You Want
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 告诉它你想要的
- en: The obvious first solution is to just tell ChatGPT what you want it to do. OpenAI
    has provided us with a handy feature called **Custom Instructions** that allows
    us to give ChatGPT extra instructions *before* we start conversing with it.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 显而易见的第一个解决方案就是直接告诉ChatGPT你希望它做什么。OpenAI为我们提供了一个方便的功能叫做**自定义指令**，允许我们在与它开始对话之前，给ChatGPT额外的指令，*以便它能够更好地理解我们的需求*。
- en: 'Here are some custom instructions recommended by [Andrew Mayne](https://andrewmayne.com/blog/),
    the former [Prompt Whisper](https://medium.com/stackademic/the-prompt-whisperer-1613511c067e)
    at OpenAI:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这是[Andrew Mayne](https://andrewmayne.com/blog/)（前[Prompt Whisper](https://medium.com/stackademic/the-prompt-whisperer-1613511c067e)）推荐的几条自定义指令：
- en: '![](../Images/c54d628c53139ad7b1ab4b7c26fe8c0c.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c54d628c53139ad7b1ab4b7c26fe8c0c.png)'
- en: Screenshot of ChatGPT custom instructions, taken by the author
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 由作者拍摄的ChatGPT自定义指令截图
- en: 'Mayne’s instructions are succinct and useful, providing three valuable functions:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Mayne的指令简洁而有用，提供了三个有价值的功能：
- en: The instructions suggest to ChatGPT that it should ask you clarifying questions.
    It might be even better to make this “should” explicit.
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这些指令建议ChatGPT应该问你澄清性问题。也许更好的是将“应该”明确指出。
- en: They ask ChatGPT to provide multiple avenues for clarification. This eliminates
    some of the cognitive load required to clarify your idea by allowing you to select
    from a list rather than generating from scratch.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它们要求 ChatGPT 提供多种澄清方式。这减少了您澄清想法时所需的认知负担，通过让您从列表中选择而非从零开始生成。
- en: The questions are organized with letters so that you can just reply with the
    letter and anything else you want to add.
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 问题按字母顺序组织，您只需回复字母及任何想要添加的内容即可。
- en: 'Armed with these custom instructions, ChatGPT gives me a much more interesting
    reply:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 拥有这些自定义指令后，ChatGPT 给出的回复更加有趣：
- en: 'Designing a meal planning app is a great idea! To tailor it to your needs,
    I have a few questions that will help guide the development process:'
  id: totrans-49
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 设计一个餐点规划应用是个好主意！为了根据您的需求量身定制，我有几个问题可以帮助引导开发过程：
- en: ''
  id: totrans-50
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 1\. **User Experience and Interface:**
  id: totrans-51
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 1\. **用户体验与界面：**
- en: ''
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A. Do you prefer a simple and minimalist design or something more vibrant and
    interactive?
  id: totrans-53
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A. 您偏好简洁和极简的设计，还是更鲜艳和互动的设计？
- en: B. Should the app include visual elements like photos of meals or keep it text-based?
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B. 应用是否应该包括诸如餐点照片等视觉元素，还是保持文本为主？
- en: ''
  id: totrans-55
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 2\. **Functionality and Features:**
  id: totrans-56
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 2\. **功能性与特性：**
- en: ''
  id: totrans-57
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A. Would you like the app to suggest meals based on dietary preferences (e.g.,
    vegan, keto, gluten-free)?
  id: totrans-58
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A. 您希望应用根据饮食偏好（例如，素食、酮饮食、无麸质）推荐餐点吗？
- en: B. Should the app include a grocery list feature that updates based on your
    meal plans?
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B. 应用是否应该包括一个根据餐点计划更新的购物清单功能？
- en: C. Do you want a feature to track nutritional information for each meal?
  id: totrans-60
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: C. 您希望有一个功能来追踪每餐的营养信息吗？
- en: D. Would integration with smart home devices or other apps (like fitness trackers)
    be useful?
  id: totrans-61
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: D. 与智能家居设备或其他应用（如健身追踪器）的集成会有用吗？
- en: ''
  id: totrans-62
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 3\. **Personalization and Data Input:**
  id: totrans-63
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 3\. **个性化与数据输入：**
- en: ''
  id: totrans-64
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A. Should the app allow you to input personal data (like weight, height, dietary
    restrictions) for customized meal planning?
  id: totrans-65
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A. 应用是否允许您输入个人数据（如体重、身高、饮食限制）以进行个性化餐点规划？
- en: B. Do you want the ability to manually input or edit meal plans?
  id: totrans-66
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B. 您希望能够手动输入或编辑餐点计划吗？
- en: C. Would a feature that learns from your preferences over time be appealing?
  id: totrans-67
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: C. 是否希望有一个根据您的偏好随着时间变化学习的功能？
- en: ''
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 4\. **Additional Features:**
  id: totrans-69
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 4\. **附加功能：**
- en: ''
  id: totrans-70
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A. Would you like a community aspect, like sharing meal plans or recipes with
    other users?
  id: totrans-71
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: A. 您希望有一个社区功能，例如与其他用户分享餐点计划或食谱吗？
- en: B. Should the app include instructional cooking videos or links to recipes?
  id: totrans-72
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: B. 应用是否应该包含烹饪教学视频或食谱链接？
- en: C. Is a feature for planning meals for special occasions (like holidays or parties)
    important to you?
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: C. 是否希望有一个功能，用于规划特殊场合（如假期或聚会）的餐点？
- en: ''
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Feel free to answer any of these questions or add any other features you think
    would be essential for your ideal meal planning app!
  id: totrans-75
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 随时回答这些问题，或者添加您认为对理想餐点规划应用至关重要的其他功能！
- en: This is far more helpful. Maybe ChatGPT can help build an app after all!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 这样更有帮助。也许 ChatGPT 真的可以帮助构建应用！
- en: Unfortunately Andrew Mayne’s three instructions aren’t quite enough to create
    a truly useful workflow assistant.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，Andrew Mayne 的三条指令不足以创建一个真正有用的工作流助手。
- en: Problems with ChatGPT
  id: totrans-78
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ChatGPT 的问题
- en: 'After you’ve used ChatGPT for a while, you’ll notice a few problems:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用 ChatGPT 一段时间后，您会注意到一些问题：
- en: ChatGPT asks a lot of questions, and you have to keep track of all of them.
    You end-up with a branching tree of possibilities that you need to maintain somehow.
    This is **The Branching Problem**.
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ChatGPT 会问很多问题，而您需要跟踪所有这些问题。最终，您将拥有一个分支树形结构的可能性，您需要以某种方式维护它。这就是**分支问题**。
- en: The questions it asks are largely random. Two conversations could have entirely
    different sets of questions, leading to different application designs. And how
    do you know when to stop answering questions? Really, we need a way to find the
    *best* design.
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它所提的问题大多是随机的。两次对话可能会有完全不同的问题集，从而导致不同的应用设计。而且，您怎么知道什么时候停止回答问题呢？事实上，我们需要一种方法来找到*最佳*设计。
- en: The longer your conversation thread, the more likely ChatGPT is to forget your
    custom instructions and revert to providing those irritating lists of vague overview
    items. In my experience, ChatGPT works best in short bursts.
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 您的对话线程越长，ChatGPT 忘记自定义指令并恢复提供那些令人烦恼的模糊概述列表的可能性就越大。根据我的经验，ChatGPT 最适合在短时间内使用。
- en: 'We’ll take a look at two difference approaches to solving these problems in
    the context of developing a meal planning app:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将看看解决这些问题的两种不同方法，特别是在开发餐点规划应用的背景下：
- en: GPT Pilot agents
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: GPT Pilot 代理
- en: OpenAI’s new custom GPTs
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: OpenAI 的新自定义 GPTs
- en: 'The Agent Approach: GPT Pilot'
  id: totrans-86
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 代理方法：GPT Pilot
- en: The [GPT Pilot](https://github.com/Pythagora-io/gpt-pilot) project implements
    a proof-of-concept software development pipeline by creating multiple AI agents,
    each with a defined role and output.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '[GPT Pilot](https://github.com/Pythagora-io/gpt-pilot) 项目通过创建多个具有明确角色和输出的 AI
    代理，实现了一个概念验证的软件开发流程。'
- en: '![](../Images/ef1e34bbc9c0a191bebd8e7db2a75b86.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef1e34bbc9c0a191bebd8e7db2a75b86.png)'
- en: Screenshot from the GPT Pilot Github page (linked above)
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 来自 GPT Pilot Github 页面（链接见上）的截图
- en: They have a role for Product Owner, responsible for creating user stories, an
    Architect role that determines the technical requirements, a Tech Lead that splits
    the work into development tasks, and a Developer role that writes the code.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 它们有一个产品负责人角色，负责创建用户故事，一个架构师角色，决定技术需求，一个技术负责人角色，负责将工作拆分成开发任务，以及一个开发者角色，负责编写代码。
- en: They use the OpenAI API to create one or more agents in each of these roles.
    Think of an “agent” as a single AI instance. The user is guided through a workflow
    where it collaborates with each of the agents to develop a web application.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 它们使用 OpenAI API 在这些角色中创建一个或多个代理。可以将“代理”看作是一个单独的 AI 实例。用户将通过一个工作流，协作开发 Web 应用程序，与每个代理合作。
- en: First the Product Owner agent asks the user clarifying questions about their
    app idea. Then the Architect agent suggests a particular set of software frameworks
    to use. The Tech Lead agent creates a queue of dev tasks that Developer agents
    then work-on, one task at a time.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，产品负责人代理向用户询问关于应用程序想法的澄清问题。然后，架构师代理建议使用特定的软件框架。技术负责人代理创建开发任务队列，开发者代理则依次处理每个任务。
- en: This strategy seems like a step in the right direction. AI agents can’t do any
    step in the workflow entirely on their own, but they can speed-up the development
    process considerably by guiding the user through a pre-defined process, performing
    part of the work and then asking the user to provide more info and, eventually,
    approve or reject the artifact. If an agent receives a rejection from the user,
    it continues to iterate. If the agent receives an approval, we can continue to
    the next step in the development pipeline.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 这个策略看起来是朝着正确方向迈进的一步。AI 代理无法完全独立完成工作流程中的每个步骤，但它们可以通过引导用户通过预定义的流程，执行部分工作，然后要求用户提供更多信息，并最终批准或拒绝产物，从而显著加速开发过程。如果代理收到用户的拒绝，它将继续迭代。如果代理收到批准，则可以继续开发流程的下一步。
- en: In practice, I’ve found that GPT Pilot is not yet usable. I spent a few minutes
    using it to setup a React.js app with a python Flask backend, something that ChatGPT
    can easily guide a user to accomplish.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，我发现 GPT Pilot 目前还不可用。我花了几分钟时间，尝试使用它设置一个包含 Python Flask 后端的 React.js 应用，而这是
    ChatGPT 能轻松指导用户完成的任务。
- en: The GPT Pilot agents consistently lost track of what directory they were running
    in. Overall the test cost me about $1.50 in OpenAI API usage. Not much, but it
    failed early and often enough that I decided it’s not yet competitive with ChatGPT.
    We’ll give them some time to fix bugs and make the tool more flexible.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: GPT Pilot 代理经常会忘记它们正在运行的目录。总体而言，这次测试我花费了大约 1.50 美元的 OpenAI API 使用费用。虽然不多，但由于它经常且早期失败，我决定它尚不能与
    ChatGPT 竞争。我们会给他们一些时间修复漏洞，并使工具更加灵活。
- en: The Custom GPT Approach
  id: totrans-96
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 自定义 GPT 方法
- en: In the meantime, we can implement a similar strategy — breaking down a task
    into steps — but rather than using API-based agents to perform each step, we can
    use custom GPTs.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，我们可以实现一个类似的策略——将任务分解成步骤——但是与其使用基于 API 的代理来执行每个步骤，不如使用自定义 GPTs。
- en: With a pipeline of custom GPTs, we’re not charged for usage — just a flat fee
    of $20/month for the ChatGPT Plus plan.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 使用自定义 GPTs 流程时，我们无需为使用付费——只需支付每月 20 美元的 ChatGPT Plus 订阅费用。
- en: One downside is that Custom GPTs have a [usage limit of 50 requests per 3 hours
    per user](https://help.openai.com/en/articles/7102672-how-can-i-access-gpt-4).
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 一个缺点是，自定义 GPT 有一个[每个用户每 3 小时 50 次请求的使用限制](https://help.openai.com/en/articles/7102672-how-can-i-access-gpt-4)。
- en: 3 hours divided by 50 requests equals approximately **one request every 4 minutes**.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 3 小时除以 50 次请求大约等于 **每 4 分钟一次请求**。
- en: I’ve never personally hit that limit, and I think it’s unlikely as long as you’re
    not frequently wasting requests with vague or inaccurate prompts. I can integrate
    ChatGPT-generated code into my codebase in less than 4 minutes, but the bottleneck
    is figuring-out what to ask ChatGPT next. That typically takes longer than 4 minutes,
    on average.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人从未达到过这个限制，我认为只要不频繁浪费请求于模糊或不准确的提示，达到这一限制的可能性不大。我可以在不到 4 分钟的时间内将 ChatGPT 生成的代码集成到我的代码库中，但瓶颈在于搞清楚接下来应该向
    ChatGPT 提出什么问题。通常，这一过程平均需要超过 4 分钟。
- en: Humans don’t think very fast…and we need lots of coffee breaks.
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: 人类思考速度并不快……我们需要大量的咖啡休息时间。
- en: 'Example: Requirements Gathering GPT'
  id: totrans-103
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例：需求收集 GPT
- en: The first step in creating a meal planning app is defining the actual requirements
    for what the application is going to do. There are a number of different ways
    to define requirements, but the [Agile Development Methodology](https://en.wikipedia.org/wiki/Agile_software_development)
    recommends defining requirements from the perspective of the end user. We call
    these **user stories**.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 创建一款餐单规划应用的第一步是定义应用程序需要执行的实际需求。有多种定义需求的方法，但[敏捷开发方法](https://en.wikipedia.org/wiki/Agile_software_development)建议从最终用户的角度来定义需求。我们称之为**用户故事**。
- en: 'Here are some examples of user stories for the meal planner app idea:'
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是一些针对餐单规划应用的用户故事示例：
- en: '[PRE0]'
  id: totrans-106
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Note:** Technically these should also include why the user wants to do these
    actions, but I left that out for simplicity.'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 从技术上讲，这些应该包括用户为什么要执行这些操作，但为了简便起见，我将其省略了。'
- en: 'I created a custom GPT for requirements gathering using the following instructions:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我为需求收集创建了一个定制的 GPT，使用了以下指令：
- en: '[PRE1]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 1\. Provide a persona
  id: totrans-110
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 提供人物角色
- en: '[PRE2]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: In its default role of “helpful assistant”, ChatGPT gives pretty boring advice.
    Avoid this by giving the custom GPT a specific persona.
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: 在其默认角色“有帮助的助手”中，ChatGPT 给出的建议相当无聊。避免这种情况的方法是给定制 GPT 设定一个具体的人物角色。
- en: 2\. Define the Tone
  id: totrans-113
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2. 定义语气
- en: '[PRE3]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: I based this particular prompt format on the actual ChatGPT custom instructions,
    which were accessible via a hack a few weeks ago. The combination of “//” characters,
    list items, and capital letters allows the model to pay better attention to the
    directives.
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 我基于实际的 ChatGPT 定制指令格式来设计了这个特别的提示格式，该格式几周前通过一个黑客方法可以访问。结合“//”字符、列表项和大写字母可以让模型更好地关注指令。
- en: 3\. Provide the Goal
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 提供目标
- en: '[PRE4]'
  id: totrans-117
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Pretty simple — just tell the model what you’re trying to do.
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 相当简单——只需告诉模型你想做什么。
- en: 4\. Provide the Method
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 提供方法
- en: '[PRE5]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: As OpenAI’s Andrej Karpathy said, [“The hottest new programming language is
    English”](https://x.com/karpathy/status/1617979122625712128?s=20).
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 正如 OpenAI 的 Andrej Karpathy 所说，[“最火的新编程语言是英语”](https://x.com/karpathy/status/1617979122625712128?s=20)。
- en: The problem is that English is not great for giving detailed and precise instructions.
    That’s why we invented programming languages in the first place!
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，英语并不擅长给出详细且精确的指令。这也是我们最初发明编程语言的原因！
- en: In this example, I devised my own pseudocode to tell the model how to generate
    user stories. I was fascinated that the model was able to follow the loop that
    I gave it. This method opens-up a lot of prompting possibilities.
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我设计了自己的伪代码来告诉模型如何生成用户故事。我很惊讶于模型能够遵循我给出的循环。这个方法为提示设计开辟了许多可能性。
- en: 5\. Give Examples
  id: totrans-124
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 5. 给出示例
- en: '[PRE6]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: If you want to make your GPT consistently output the same format, provide examples!
    This is the best way to tell it exactly what type of output you’re expecting.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望你的 GPT 始终输出相同格式，提供示例！这是告诉它你期望输出哪种格式的最佳方法。
- en: 6\. Adopt the Persona
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 6. 采用人物角色
- en: '[PRE7]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: The GPT should jump right into the persona, so I end the instructions with this
    line about talking directly to the client.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: GPT 应该直接进入人物角色，因此我在指令的最后加上了这一行，要求直接与客户对话。
- en: Artifacts Solve the Branching Problem
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工具化解决了分支问题
- en: The Branching Problem
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分支问题
- en: Freeform conversation tends to have a branching, tree-like structure, where
    each turn in the conversation opens-up several different possibilities for where
    the conversation can go. Usually we start with the big-picture and then drill
    down to the details. Unfortunately, we can only go down one path at a time, and
    it can be difficult to backtrack and explore the other paths, especially after
    multiple layers of branching.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 自由形式的对话通常呈现分支树状结构，每一轮对话都会开启多个不同的可能性，指引对话走向不同的方向。通常我们从大局开始，然后逐步钻研细节。不幸的是，我们每次只能走一条路径，且在经历了多个分支后，很难回溯并探索其他路径。
- en: For example, I must decide how to begin elaborating user stories for my meal
    planning app. I can choose to add user stories for user account management, building
    ingredient lists, generating meal ideas, or generating the grocery list, but I
    can only explore one feature set at a time. Eventually I will need to backtrack
    and define the others. I’ll need to traverse the entire tree of functionality.
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我必须决定如何开始阐述我为餐饮计划应用编写的用户故事。我可以选择为用户账户管理、构建食材清单、生成餐点创意或生成购物清单添加用户故事，但一次只能探索一个功能集。最终，我将需要回溯并定义其他功能。我将需要遍历整个功能树。
- en: Artifacts as Shared Memory
  id: totrans-134
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工件作为共享内存
- en: '**We can handle branching by building an artifact.**'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '**我们可以通过构建工件来处理分支。**'
- en: Since I’m using the GPT to build a specific artifact, a list of user stories,
    it becomes easier to “go back” to a previous branch that I missed. I can always
    look through the list for any topics that require more elaboration and then ask
    the GPT to add more user stories. In this way, the artifact serves as my external
    memory.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我正在使用 GPT 构建一个特定的工件——一个用户故事列表，因此更容易“返回”到我错过的先前分支。我可以随时查看列表中的任何主题，看看哪些需要进一步阐述，然后请求
    GPT 添加更多用户故事。通过这种方式，工件作为我的外部记忆。
- en: What’s more, this method also forces the GPT to keep the latest version of the
    artifact fresh in its context, since the artifact is updated and repeated at each
    iteration. Once I’m done detailing a particular feature, like meal generation,
    the GPT outputs the entire updated user story list. I can continue immediately
    with a different topic, like grocery list generation, without needing to re-explain
    the whole app to the GPT.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 更重要的是，这种方法还迫使 GPT 在每次迭代时保持工件的最新版本，因为工件在每次更新并重复。当我完成详细说明某个特定功能（如餐点生成）后，GPT 会输出整个更新后的用户故事列表。我可以立即继续处理另一个话题，如购物清单生成，而无需重新向
    GPT 解释整个应用程序。
- en: '**The artifact serves as external shared memory for both the user and the custom
    GPT.**'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '**该工件作为用户和自定义 GPT 之间的外部共享内存。**'
- en: Multi-Level Artifacts
  id: totrans-139
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多级工件
- en: When defining requirements, I’m using a flat list as my output artifact, but
    you can also mimic a tree structure in your artifact by using multi-level lists.
    Use bullets for unordered components and numbered lists for sequences.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 在定义需求时，我将使用平面列表作为我的输出工件，但你也可以通过使用多级列表在工件中模拟树状结构。对于无序组件使用项目符号，对于顺序使用编号列表。
- en: For example, if I’m outlining the software modules for an application, it may
    be necessary to split the design into general modules and then have several sub-modules
    for each high-level module. For instance, I may want a “meal plan” module with
    sub-modules for “editing the meal plan” and “generating the grocery list”. This
    example is a bit contrived, but multi-level designs can be useful for more complex
    projects.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果我正在概述一个应用程序的软件模块，可能需要将设计拆分为通用模块，然后为每个高层模块添加几个子模块。例如，我可能想要一个“餐单计划”模块，其中包含“编辑餐单计划”和“生成购物清单”的子模块。这个例子有点牵强，但多级设计对于更复杂的项目是很有用的。
- en: Artifacts Feed the Pipeline
  id: totrans-142
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工件为管道提供数据
- en: Artifacts provide shared memory between you and the model, but they can also
    be used to connect different parts of a pipeline. User stories must be defined
    before determining technical requirements. Technical requirements must be outlined
    before designing user interfaces or writing code.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: 工件为你和模型提供共享内存，但它们也可以用于连接管道的不同部分。用户故事必须在确定技术需求之前定义。技术需求必须在设计用户界面或编写代码之前概述。
- en: In summary, don’t just talk to ChatGPT. **Create custom GPTs that build specific
    artifacts**. Chain the custom GPTs together to form a pipeline.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 总结来说，不要只与 ChatGPT 交流。**创建构建特定工件的自定义 GPT**。将自定义 GPT 链接在一起，形成一个管道。
- en: Someday AI will be able to perform the entire pipeline on its own. You’ll ask
    ChatGPT for an app, and it will read your mind with [Neuralink](https://neuralink.com/)
    and give you a zip file to download.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 总有一天，人工智能将能够独立执行整个管道。你会向 ChatGPT 请求一个应用程序，它将通过[Neuralink](https://neuralink.com/)读取你的思维，并提供一个
    zip 文件供你下载。
- en: In the meantime, use AI to automate processes and perform the tedious parts
    of your workflow. That’s still what computers do best.
  id: totrans-146
  prefs: []
  type: TYPE_NORMAL
  zh: 与此同时，使用 AI 自动化过程并执行工作流中繁琐的部分。这仍然是计算机最擅长的事情。
- en: If you’re interested in AI or theory of intelligence, checkout my Substack publication,
    [Agentic AI](https://alucas.substack.com/about).
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你对 AI 或智能理论感兴趣，可以查看我在 Substack 上的出版物，[Agentic AI](https://alucas.substack.com/about)。
