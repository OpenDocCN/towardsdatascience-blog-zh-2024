- en: How to Make an Advanced Spider Chart in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在Python中制作高级蛛网图
- en: 原文：[https://towardsdatascience.com/how-to-make-an-advanced-spider-chart-in-python-adbdb6c24a66?source=collection_archive---------3-----------------------#2024-09-05](https://towardsdatascience.com/how-to-make-an-advanced-spider-chart-in-python-adbdb6c24a66?source=collection_archive---------3-----------------------#2024-09-05)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-make-an-advanced-spider-chart-in-python-adbdb6c24a66?source=collection_archive---------3-----------------------#2024-09-05](https://towardsdatascience.com/how-to-make-an-advanced-spider-chart-in-python-adbdb6c24a66?source=collection_archive---------3-----------------------#2024-09-05)
- en: Step-by-step explanation with an easy to use function at the end
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 逐步讲解，最后提供一个易于使用的函数
- en: '[](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)[![Zvonimir
    Boban](../Images/cbad06b7e1f5d021ce9b2dc31b8a6a65.png)](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)
    [Zvonimir Boban](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)[![Zvonimir
    Boban](../Images/cbad06b7e1f5d021ce9b2dc31b8a6a65.png)](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)
    [Zvonimir Boban](https://medium.com/@zvonimir.boban.mef?source=post_page---byline--adbdb6c24a66--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)
    ·8 min read·Sep 5, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--adbdb6c24a66--------------------------------)
    ·8分钟阅读·2024年9月5日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/dbce2d785e6cd17f6370f715c8437a17.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dbce2d785e6cd17f6370f715c8437a17.png)'
- en: Photo by [Divyadarshi Acharya](https://unsplash.com/@lincon_street?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/selective-focus-photography-of-spider-on-web-Qbs6liSxjr8?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[Divyadarshi Acharya](https://unsplash.com/@lincon_street?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)拍摄，来源于[Unsplash](https://unsplash.com/photos/selective-focus-photography-of-spider-on-web-Qbs6liSxjr8?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
- en: 💡The Motivation
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 💡动机
- en: There are multiple Python libraries which can be used to make classic spider/radar
    charts. One thing all those libraries have in common is that they only offer spider
    charts with a single scaled axis, usually displaying a scale ranging from 0 to
    100.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种Python库可以用来制作经典的蛛网图/雷达图。这些库的共同点在于它们只提供带有单一比例刻度轴的蛛网图，通常显示的刻度范围是从0到100。
- en: Of course, rescaling feature values to a common scale is necessary in order
    to be able to compare them, but it leaves out crucial information on the absolute
    range of values of each feature. Since this information cannot be obtained from
    the graph, we have to dig back into the data. In the best case, this is time consuming
    and tedious, and in the worst, we do not have access to the original data, which
    means we don’t have acces to crucial context needed to adequately understand the
    comparisons.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，为了能够比较特征值，将其重新调整为一个公共刻度是必要的，但这样做却忽略了每个特征的绝对值范围。由于这些信息无法从图表中获得，我们不得不回到数据中去查找。在最好的情况下，这个过程既耗时又繁琐；而在最坏的情况下，我们可能无法访问原始数据，这意味着我们无法获得充分理解比较所需的关键信息。
- en: A logical step-up would be to make a spider chart with an axis displaying absolute
    values for each displayed feature — a chart known as a **multiaxis spider chart**.
    You might expect that this chart would also be offered by many libraries, but
    searching for them left me empty handed. Motivated by this lack of results, I
    decided to make my own solution and offer my approach to you in this step-by-step
    guide with an easy to use function provided at the end.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 一个合乎逻辑的进阶做法是制作一个带有显示每个特征绝对值的轴的蛛网图——这种图表被称为**多轴蛛网图**。你可能会认为很多库也会提供这种图表，但我搜索了许多资料后依然没有找到相关结果。受此启发，我决定自己制作一个解决方案，并通过这篇逐步指南分享给大家，最后会提供一个易于使用的函数供你使用。
- en: 🕸️ The Chart
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🕸️ 图表
- en: To demonstrate how to make a multiaxis spider chart, I will be using a small
    part of the well known `mtcars` dataset. The dataset is derived from the 1974
    Motor Trend magazine and was first published in a study Henderson and Velleman
    1981 [1]. Let’s load the data and the required libraries.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 为了演示如何制作多轴蜘蛛图，我将使用著名的`mtcars`数据集的一小部分。该数据集来源于1974年《Motor Trend》杂志，并在Henderson和Velleman的1981年研究中首次发布[1]。让我们加载数据和所需的库。
- en: '[PRE0]'
  id: totrans-14
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: As you can see, I will be using the `plotnine` library to create the chart.
    Inspired by `ggplot2`, the `plotnine` library is also based on the concept of
    grammar of graphics, allowing for creation of graphs by stacking multiple layers
    on top of one another. This powerful concept lets us create essentially any visualizationwe
    can think up.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 如你所见，我将使用`plotnine`库来创建图表。受`ggplot2`启发，`plotnine`库也基于图形语法的概念，通过将多个图层叠加在一起来创建图表。这个强大的概念使我们能够创建几乎任何我们能想到的可视化图形。
- en: '![](../Images/38276e502f62184d2de0ceb05a94f33f.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/38276e502f62184d2de0ceb05a94f33f.png)'
- en: The grammar of graphics approach to chart construction. Image by Author
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 使用图形语法方法构建图表。图片由作者提供
- en: The layered approach calls for separate construction of different aspects of
    the graph. First we will create the chart outline. Since spider charts deal with
    polar coordinates, I made a function which calculates the coordinates of the polygon
    tips depending on the number of variables in the dataset.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 分层方法要求分别构建图表的不同方面。首先我们将创建图表轮廓。由于蜘蛛图处理的是极坐标，我编写了一个函数，根据数据集中变量的数量来计算多边形顶点的坐标。
- en: '[PRE1]'
  id: totrans-19
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/49dd29a82fb73dd36d2b747086e0d49f.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49dd29a82fb73dd36d2b747086e0d49f.png)'
- en: 'Step 1: Creating the background for the chart. Image by Author'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 第一步：为图表创建背景。图片由作者提供
- en: Next, we have to calculate the coordinates for the axes and add them to the
    chart.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们需要计算轴的坐标并将它们添加到图表中。
- en: '[PRE2]'
  id: totrans-23
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/4704a33e8e066a82bbc62bfe6929671d.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4704a33e8e066a82bbc62bfe6929671d.png)'
- en: Addition of axes for each of the variables in the dataset. Image by Author
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为数据集中的每个变量添加轴。图片由作者提供
- en: Now we can overlay the rescaled data points.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以叠加重新缩放后的数据点了。
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/864cc565f13cd3e145eb42ce014ffe05.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/864cc565f13cd3e145eb42ce014ffe05.png)'
- en: Overlaying the chart with the data points. Image by Author
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 将数据点叠加到图表上。图片由作者提供
- en: The only thing left to do is to add the textual labels and names of the axes.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 剩下要做的就是添加轴的文本标签和名称。
- en: '[PRE4]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '![](../Images/6311b6fb070dfa78ef0fc924fffd52de.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6311b6fb070dfa78ef0fc924fffd52de.png)'
- en: Addition of axes names and labels. Image by Author
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 添加轴名称和标签。图片由作者提供
- en: And some final aesthetic touches…
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 以及一些最后的美学修饰……
- en: '[PRE5]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/7ea387aa2024833e4e1a8367eb94b492.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7ea387aa2024833e4e1a8367eb94b492.png)'
- en: The final chart. Image by Author
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 最终的图表。图片由作者提供
- en: Let’s just take a moment more to comment on the numbers displayed. Even froma
    regular spidr chart, it would be obvious that the Volvo is the slowest car by
    far. However, here we can also see the exact absolute difference — The Volvo took
    18.6 seconds to cover a quarter of a mile, while the Maserati, the fastest of
    the three, took four whole seconds less. Of course, expectedly, this also means
    that the Volvo is most economical in terms of fuel consumption covering 6 more
    miles per gallon than the Maserati Bora. Being sports cars, both Maserati Bora
    and Ferrari Dino also feature more cylinders and hirsepowers and weigh more than
    the Volvo.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们再花一点时间评论一下显示的数字。即使是一个普通的蜘蛛图，也能明显看出沃尔沃是最慢的车。然而，在这里我们还可以看到确切的绝对差异——沃尔沃用了18.6秒才走完四分之一英里的距离，而三者中最快的玛莎拉蒂则少用了整整四秒。当然，预期的结果是，沃尔沃在燃油消耗方面最为经济，每加仑油能行驶比玛莎拉蒂Bora多6英里。作为跑车，玛莎拉蒂Bora和法拉利Dino也拥有更多的气缸和马力，且比沃尔沃重。
- en: Other examples
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 其他示例
- en: Here is another example of a spider chart but using the Titanic dataset and
    a customized font.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 这是另一个使用泰坦尼克号数据集并且自定义了字体的蜘蛛图示例。
- en: '![](../Images/c506c533342c409e4405ad4567fe9b64.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c506c533342c409e4405ad4567fe9b64.png)'
- en: Anotehr example using the Titanic dataset. Image by Author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个使用泰坦尼克号数据集的示例。图片由作者提供
- en: This chart clearly shows that the 1st class passengers were the oldest and the
    wealthiest of the three. The 3rd class passengers had the highest number of both
    male and female passengers and were the youngest group — probably mostly young
    people and families in search for better life abroad. However, the 1st class passengers
    had the highest survival rate, and the 3rd the lowest. This is probably partly
    due to the 1st class quarters being closer to the boat deck and partly due to
    the higher proportion of women in that class (since woman and children were rescued
    first).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 这张图清晰地显示了头等舱乘客是三者中最年长且最富有的。三等舱乘客中男女乘客最多，且是最年轻的一组——可能大多数是寻求更好生活的年轻人和家庭。然而，头等舱乘客的生还率最高，三等舱则最低。这可能部分是因为头等舱靠近船甲板，部分是由于该舱位女性的比例较高（因为妇女和儿童优先获救）。
- en: ➕The Function
  id: totrans-44
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: ➕功能
- en: As promised, here is the function wrapping all the above code. The first argument
    is the data frame fromatted so that the first column contains the group ids, and
    the other columns are group features to be plotted. The two additional arguments
    determine the radius of the inner empty polygon and the offset of axis titles
    from the chart.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 如承诺所示，这里是封装上述所有代码的函数。第一个参数是格式化后的数据框，其中第一列包含组的 ID，其他列是要绘制的组特征。两个额外的参数确定内圈空白多边形的半径和图表中轴标题的偏移量。
- en: '[PRE6]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 🏁 The Conclusion
  id: totrans-47
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🏁 结论
- en: This article shows how to construct an advanced multiaxis spider chart from
    scratch in Python. Although no Python package I know of currently supports this
    kind of chart, utilizing the layered grammar of graphics approach from the `plotnine`
    package provided me with the tools to create one myself. Of course, there is still
    room for progress, as the final function can be customized further by adding more
    arguments and options to control various aspects of the chart such as the line
    and backgorund color, font size, …, but I leave that to the reader for now 😉.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了如何在 Python 中从零开始构建一个高级的多轴蜘蛛图。尽管我所知道的任何 Python 包目前都不支持这种图表，但利用 `plotnine`
    包中的图形语法方法，给了我自己创建这种图表的工具。当然，仍然有进步的空间，因为最终的函数可以通过添加更多参数和选项来进一步定制，控制图表的各个方面，例如线条和背景颜色、字体大小等，但我暂时把这些留给读者😉。
- en: That’s all folks. I hope you found the article useful and will use it to make
    many more neat spider charts in the future. Enjoy!
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 就这些了，希望你觉得这篇文章有用，并且能够运用它制作更多精美的蜘蛛图。享受吧！
- en: References
  id: totrans-50
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[1] Henderson, H. V., & Velleman, P. F. (1981). Building multiple regression
    models interactively. Biometrics, 37, 391–411.'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Henderson, H. V., & Velleman, P. F. (1981). 交互式构建多重回归模型。《生物统计学》，37，391–411。'
