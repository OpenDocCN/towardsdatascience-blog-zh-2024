- en: How to Write Memory-Efficient Classes in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何编写内存高效的 Python 类
- en: 原文：[https://towardsdatascience.com/how-to-write-memory-efficient-classes-in-python-beb90811abfa?source=collection_archive---------0-----------------------#2024-01-13](https://towardsdatascience.com/how-to-write-memory-efficient-classes-in-python-beb90811abfa?source=collection_archive---------0-----------------------#2024-01-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-write-memory-efficient-classes-in-python-beb90811abfa?source=collection_archive---------0-----------------------#2024-01-13](https://towardsdatascience.com/how-to-write-memory-efficient-classes-in-python-beb90811abfa?source=collection_archive---------0-----------------------#2024-01-13)
- en: '![](../Images/6d3fa23de320d6f4dd772d2fc675018d.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6d3fa23de320d6f4dd772d2fc675018d.png)'
- en: Photo by [Christian Dubovan](https://unsplash.com/@cdubo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Christian Dubovan](https://unsplash.com/@cdubo?utm_source=medium&utm_medium=referral)
    摄于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Three tricks to prevent your data project from memory overflow
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 防止你的数据项目内存溢出的三种技巧
- en: '[](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)[![Siavash
    Yasini](../Images/55220a8a9397ba51dcc381828735f4a2.png)](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)
    [Siavash Yasini](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)[![Siavash
    Yasini](../Images/55220a8a9397ba51dcc381828735f4a2.png)](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)
    [Siavash Yasini](https://medium.com/@siavashyasini?source=post_page---byline--beb90811abfa--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)
    ·7 min read·Jan 13, 2024
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--beb90811abfa--------------------------------)
    ·阅读时间：7分钟·2024年1月13日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: A few years ago, I wrote a blog post on how to write memory-efficient loops
    in Python which became quite popular. The positive response encouraged me to write
    a second part, where I delve into additional memory optimization methods.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 几年前，我写过一篇关于如何编写内存高效的 Python 循环的博客文章，并且它获得了相当好的反响。积极的反馈鼓励我写了第二部分，深入探讨了更多的内存优化方法。
- en: When writing python code, loops are not the only place where we need to be mindful
    of memory usage. In data-related projects and object-oriented code development,
    it is important to make sure that our classes are also memory efficient. Often,
    we invest a significant amount of time designing and writing complex and intricate
    classes, only to discover that they perform poorly in testing or production due
    to the large amount of data they need to carry.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在编写 Python 代码时，循环并不是我们唯一需要关注内存使用的地方。在与数据相关的项目和面向对象的代码开发中，确保我们的类也具备内存效率非常重要。我们常常花费大量时间设计和编写复杂精细的类，结果却发现它们在测试或生产中由于需要承载大量数据而表现不佳。
- en: By following the techniques and approaches discussed in the article, you can
    create classes that optimize memory usage and improve overall performance. This
    blog post explores three techniques and recommended approaches for creating memory-efficient
    Python classes.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 通过遵循本文中讨论的技术和方法，你可以创建优化内存使用、提升整体性能的类。本文将探讨三种技巧和推荐的方法，帮助你编写内存高效的 Python 类。
- en: 1\. Use __slots__
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1. 使用 __slots__
- en: Using Python’s `__slots__` dunder, you can explicitly define the attributes
    that a class can ever possess. This generally helps optimize the memory usage
    of our classes by avoiding the creation of a…
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Python 的 `__slots__` 特性，你可以显式地定义一个类可以拥有的属性。这通常有助于通过避免创建额外的字典来优化我们类的内存使用……
