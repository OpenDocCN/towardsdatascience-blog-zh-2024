- en: Customizing RStudio Container with Docker Compose
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Docker Compose 定制 RStudio 容器
- en: 原文：[https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23](https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23](https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23)
- en: A step-by-step guide for customizing and launching RStudio Server inside a container
    with Docker Compose
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一步步指南，帮助你定制和启动在容器内运行的 RStudio Server，使用 Docker Compose
- en: '[](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[![Rami
    Krispin](../Images/8af28c282d42a2a27c28aa8af4c8d482.png)](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    [Rami Krispin](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[![Rami
    Krispin](../Images/8af28c282d42a2a27c28aa8af4c8d482.png)](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    [Rami Krispin](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    ·6 min read·Mar 23, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    ·6 分钟阅读·2024年3月23日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: In this post, we will review the steps of setting up a [Docker-Compose](https://docs.docker.com/compose/)
    workflow to launch an RStudio Server inside a container. We will introduce the
    Docker Compose settings process and discuss when you should consider using it.
    Last but not least, we will demonstrate how to transition the `docker run` workflow
    that was introduced in the [previous post](https://medium.com/towards-data-science/running-rstudio-inside-a-container-e9db5e809ff8)
    and launch the [Rocker RStudio image](https://hub.docker.com/r/rocker/rstudio)
    with the Docker Compose process.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将回顾如何设置一个 [Docker-Compose](https://docs.docker.com/compose/) 工作流，在容器内启动
    RStudio Server。我们将介绍 Docker Compose 设置过程，并讨论何时应考虑使用它。最后，我们将演示如何将 [上一篇文章](https://medium.com/towards-data-science/running-rstudio-inside-a-container-e9db5e809ff8)
    中介绍的 `docker run` 工作流转换为 Docker Compose 流程，并使用 Docker Compose 启动 [Rocker RStudio
    镜像](https://hub.docker.com/r/rocker/rstudio)。
- en: 'Related articles:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 相关文章：
- en: '[](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
    [## Running RStudio Inside a Container'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
    [## 在容器内运行 RStudio'
- en: A step-by-step guide for setting up an RStudio server inside a container with
    your local RStudio settings
  id: totrans-9
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一步步指南，帮助你在容器内设置 RStudio 服务器，并使用本地 RStudio 设置
- en: towardsdatascience.com](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
- en: By the end of this tutorial, you will be able to transition your `docker run`
    settings to a `docker-compose.yml` file and seamlessly launch your RStudio container
    with the `docker-compose` command.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 完成本教程后，你将能够将 `docker run` 设置转换为 `docker-compose.yml` 文件，并通过 `docker-compose`
    命令无缝启动 RStudio 容器。
- en: '![](../Images/49748bef7511670c428781da1624c48a.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/49748bef7511670c428781da1624c48a.png)'
- en: Launching RStudio Server inside a container with Docker Compose (screenshot
    by the author)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker Compose 在容器内启动 RStudio Server（截图由作者提供）
- en: Motivation
  id: totrans-14
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 动机
- en: Before getting started, let’s explain what Docker Compose is and when you should
    consider using it.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，让我们先解释一下 Docker Compose 是什么以及何时应考虑使用它。
- en: 'Starting with the **what —** Docker Compose is a simplistic framework for launching
    single or multiple containers. It is a wrapper of the `docker run` command, and
    it manages the container launch settings using a YAML file. It is recommended
    to set a Docker Compose workflow instead of using the `docker run` command **when**:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 从 **什么** 开始 — Docker Compose 是一个简化的框架，用于启动单个或多个容器。它是 `docker run` 命令的封装器，并通过
    YAML 文件管理容器启动设置。建议在以下情况下使用 Docker Compose 工作流，而不是直接使用 `docker run` 命令 **当**：
- en: The number of arguments of the`docker run` command increases, and it becomes
    convoluted to manage it via the CLI
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`docker run` 命令的参数数量增加，且通过 CLI 管理变得更加复杂。'
- en: You regularly use and work with the container
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你定期使用并与容器进行工作
- en: The level of complexity is high (e.g., launching multiple containers in parallel,
    etc.)
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 复杂度较高（例如，启动多个容器并行等）
- en: 'We use the `docker-compose.yml` file to set up a Docker Compose framework and
    launch it with the `docker-compose` command. This process includes mapping the
    `docker run` arguments into YAML format. Simple `docker-compose.yml` file settings
    will include the following two arguments:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用 `docker-compose.yml` 文件来设置 Docker Compose 框架，并通过 `docker-compose` 命令启动它。这个过程包括将
    `docker run` 参数映射为 YAML 格式。简单的 `docker-compose.yml` 文件设置将包括以下两个参数：
- en: '**Version** — the Docker Compose version, which is currently 3.9'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**版本** — 当前的 Docker Compose 版本为 3.9'
- en: '**Services** — a list of containers to launch and their corresponding arguments'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**服务** — 启动容器的列表及其相应的参数'
- en: 'Let’s illustrate the mapping process of the `docker run` command arguments
    to the `docker-compose.yml` file with the below example:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们通过以下示例来说明将 `docker run` 命令参数映射到 `docker-compose.yml` 文件的过程：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Where this command has the following three arguments — `argument_a`, `argument_b`,
    `argument_c`, and their corresponding values are `argument_a_values`, `argument_b_values`,
    `argument_c_values`, and calling the following image — `IMAGE_NAME/IMAGE_TAG`.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 该命令有以下三个参数 — `argument_a`、`argument_b`、`argument_c`，它们对应的值为 `argument_a_values`、`argument_b_values`、`argument_c_values`，并调用以下镜像
    — `IMAGE_NAME/IMAGE_TAG`。
- en: 'The below `docker-compose.yml` represents the mapping of the above `docker
    run` arguments:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 `docker-compose.yml` 文件表示上述 `docker run` 参数的映射：
- en: '[PRE1]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The `version` and `services` arguments, as mentioned above, define the Docker
    Compose version and the list of images to launch during the run time, respectively.
    In this case, we use the most recent version, 3.9, and define a single container
    under the `services` argument named `my_service`. Under the `my_service` section,
    we define the run time arguments corresponding to the above `docker run` command
    arguments following the standard YAML format.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如上所述，`version` 和 `services` 参数分别定义了 Docker Compose 的版本以及运行时要启动的镜像列表。在此案例中，我们使用最新版本
    3.9，并在 `services` 参数下定义了一个名为 `my_service` 的容器。在 `my_service` 部分下，我们按照标准的 YAML
    格式定义了与上述 `docker run` 命令参数对应的运行时参数。
- en: It is important to note that naming convention mapping between the `docker run`
    command arguments and their settings in the `docker-compose.yml` file is not always
    one-to-one. The Docker Compose documentation is a great resource for identifying
    the argument settings.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，`docker run` 命令参数与其在 `docker-compose.yml` 文件中的设置之间的命名约定映射并非总是逐一对应的。Docker
    Compose 文档是识别参数设置的极好资源。
- en: In the next section, we will connect the dots and map the `docker run` command
    we set in the previous tutorial to a `docker-compose.yml` file.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在接下来的部分，我们将连接各个部分，并将我们在上一教程中设置的 `docker run` 命令映射到 `docker-compose.yml` 文件。
- en: Setting RStudio with Docker Compose
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 Docker Compose 设置 RStudio
- en: 'Recall that in the [previous tutorial](/running-rstudio-inside-a-container-e9db5e809ff8),
    we used the below `docker run` command to launch the RStudio server inside a container:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 回顾在 [上一教程](/running-rstudio-inside-a-container-e9db5e809ff8) 中，我们使用以下 `docker
    run` 命令在容器内启动了 RStudio 服务器：
- en: '[PRE2]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In short, the above run command uses the following arguments:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，上述运行命令使用了以下参数：
- en: Volume or `v` to mount local folders with the container file system
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 卷或 `v` 用于将本地文件夹与容器文件系统挂载
- en: Environment or `e` to set the RStudio server password as an environment variable
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 环境变量或 `e` 用于将 RStudio 服务器密码设置为环境变量
- en: Port or `p` to map between the local and container ports
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 端口或 `p` 用于映射本地端口与容器端口之间的关系
- en: 'The below YAML file represents the mapping of the above `docker run` command:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 以下 YAML 文件表示上述 `docker run` 命令的映射：
- en: '[PRE3]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Where we set a single service named `rstudio` under the `services` argument
    and defined the corresponding run arguments:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在 `services` 参数下设置了一个名为 `rstudio` 的单一服务，并定义了相应的运行参数：
- en: '`image` — defines the image name, in this case, using the RStudio Rocker image
    `rocker/rstudio`'
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`image` — 定义镜像名称，在这种情况下，使用 RStudio Rocker 镜像 `rocker/rstudio`'
- en: '`ports` — sets the port mapping between the local machine and the container'
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`ports` — 设置本地机器与容器之间的端口映射。'
- en: '`volumes` — maps the folders mount, using the `type` argument to define the
    type of mount and the `source` and `target` arguments to define the local and
    container folder path mapping. More details on the volume arguments can be found
    [here](https://docs.docker.com/storage/).'
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`volumes` — 映射文件夹挂载，使用 `type` 参数定义挂载类型，使用 `source` 和 `target` 参数定义本地和容器文件夹路径映射。更多关于卷参数的细节可以在
    [这里](https://docs.docker.com/storage/) 找到。'
- en: '`environment` — defines environment variables, in this case, we set `PASSWORD`
    variable to define the RStudio server password'
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`environment` — 定义环境变量，在这种情况下，我们设置 `PASSWORD` 变量来定义 RStudio 服务器的密码。'
- en: 'Once the YAML file is set, we can use the `docker-compose` command on the CLI
    to launch the RStudio container:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦 YAML 文件设置完成，我们可以在 CLI 上使用 `docker-compose` 命令来启动 RStudio 容器：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Where the `up` argument is used to launch the container. You should expect
    the following output:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: '`up` 参数用于启动容器。你应该期待以下输出：'
- en: '[PRE5]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'After launching the container, you can access the RStudio server from your
    browser using the local host address with the port number, in this case — [http://localhost:8787](http://localhost:8787):'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 启动容器后，你可以通过浏览器使用本地主机地址和端口号访问 RStudio 服务器，在这种情况下是 — [http://localhost:8787](http://localhost:8787)：
- en: '![](../Images/5a36f324527f067e61dabcf0f8cce827.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a36f324527f067e61dabcf0f8cce827.png)'
- en: RStudio Server inside a container (screenshot by the author)
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 容器内的 RStudio 服务器（截图由作者提供）
- en: '**Note:** Once launching the container with the `docker-compose up` command,
    it keeps the CLI attached to the terminal until stopping it. Alternatively, you
    can add the `d` argument to run it in a detach mode:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** 使用 `docker-compose up` 命令启动容器后，CLI 会保持附加到终端，直到停止它。或者，你可以添加 `d` 参数以脱离模式运行：'
- en: '[PRE6]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Likewise, the `docker-compose down` command stops the container run time.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，`docker-compose down` 命令停止容器的运行时间。
- en: Summary
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 总结
- en: In this tutorial, we reviewed how to set up a Docker Compose framework to launch
    your RStudio container. This includes setting a `docker-compose.yml` file and
    using the `docker-compose` command to launch the container concisely.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们回顾了如何设置 Docker Compose 框架来启动 RStudio 容器。这包括设置 `docker-compose.yml` 文件并使用
    `docker-compose` 命令简洁地启动容器。
- en: 'The motivations for wrapping your `docker run` command with Docker Compose
    are:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Docker Compose 封装 `docker run` 命令的动机是：
- en: Efficient and concise — required a one-time setting and, afterward, the launch
    time is simple with the`docker-compose` command (as opposed to a long `docker
    run` command)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 高效简洁 — 只需一次设置，之后使用 `docker-compose` 命令启动简单（相比长的 `docker run` 命令）。
- en: Higher complexity — it simplifies the process of launching a single or multiple
    containers seamlessly. For example, one good use case would be running the RStudio
    and Postgres database together. In this case, you can set the Docker Compose process
    to launch the two containers to work side-by-side
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 更高复杂度 — 它简化了单个或多个容器无缝启动的过程。例如，一个好的使用案例是同时运行 RStudio 和 Postgres 数据库。在这种情况下，你可以设置
    Docker Compose 进程来启动这两个容器，使它们并行工作。
- en: Resources
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 资源
- en: Running RStudio Inside a Container — [https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8](/running-rstudio-inside-a-container-e9db5e809ff8)
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在容器内运行 RStudio — [https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8](/running-rstudio-inside-a-container-e9db5e809ff8)
- en: Docker Compose — [https://docs.docker.com/compose/](https://docs.docker.com/compose/)
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Compose — [https://docs.docker.com/compose/](https://docs.docker.com/compose/)
- en: The Rocker Project — [https://rocker-project.org/](https://rocker-project.org/)
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Rocker 项目 — [https://rocker-project.org/](https://rocker-project.org/)
- en: Docker Hub — [https://hub.docker.com/](https://hub.docker.com/)
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Docker Hub — [https://hub.docker.com/](https://hub.docker.com/)
- en: RStudio Docker Compose template — [https://github.com/RamiKrispin/rstudio-docker-template](https://github.com/RamiKrispin/rstudio-docker-template)
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: RStudio Docker Compose 模板 — [https://github.com/RamiKrispin/rstudio-docker-template](https://github.com/RamiKrispin/rstudio-docker-template)
