- en: 'UniFliXsg: AI-Powered Undergraduate Program Recommendations for Singapore Universities'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: UniFliXsg：为新加坡大学提供AI驱动的本科课程推荐
- en: 原文：[https://towardsdatascience.com/uniflixsg-ai-powered-undergraduate-program-recommendations-for-singapore-universities-b9b448f7ea19?source=collection_archive---------11-----------------------#2024-08-14](https://towardsdatascience.com/uniflixsg-ai-powered-undergraduate-program-recommendations-for-singapore-universities-b9b448f7ea19?source=collection_archive---------11-----------------------#2024-08-14)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/uniflixsg-ai-powered-undergraduate-program-recommendations-for-singapore-universities-b9b448f7ea19?source=collection_archive---------11-----------------------#2024-08-14](https://towardsdatascience.com/uniflixsg-ai-powered-undergraduate-program-recommendations-for-singapore-universities-b9b448f7ea19?source=collection_archive---------11-----------------------#2024-08-14)
- en: How could AI suggest your majors?
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: AI如何为你推荐专业？
- en: '[](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[![Phanuphat
    (Oad) Srisukhawasu](../Images/9267b36dccb1782caa4017ca6f0656f3.png)](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)
    [Phanuphat (Oad) Srisukhawasu](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[![Phanuphat
    (Oad) Srisukhawasu](../Images/9267b36dccb1782caa4017ca6f0656f3.png)](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)
    [Phanuphat (Oad) Srisukhawasu](https://oadultradeepfield.medium.com/?source=post_page---byline--b9b448f7ea19--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)
    ·7 min read·Aug 14, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b9b448f7ea19--------------------------------)
    ·阅读时长7分钟·2024年8月14日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: A week ago, I shared a story on [my LinkedIn](https://www.linkedin.com/in/psrisukhawasu/)
    about my latest project, UniFliXsg, the AI app that will suggest the program for
    undergraduate studies in Singapore based on your interests and career goals. If
    you haven’t seen it, you may also try it out at the link below. Currently, the
    database only covers single major programs in NUS, NTU, SMU, and SUTD.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 一周前，我在[我的LinkedIn](https://www.linkedin.com/in/psrisukhawasu/)上分享了我的最新项目UniFliXsg的故事，这是一款基于你的兴趣和职业目标，推荐新加坡本科专业的AI应用。如果你还没看到，下面的链接也可以尝试。目前，数据库只包含NUS、NTU、SMU和SUTD的单一专业课程。
- en: '[](https://huggingface.co/spaces/oadultradeepfield/uniflixsg?source=post_page-----b9b448f7ea19--------------------------------)
    [## Uniflixsg — a Hugging Face Space by oadultradeepfield'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://huggingface.co/spaces/oadultradeepfield/uniflixsg?source=post_page-----b9b448f7ea19--------------------------------)
    [## Uniflixsg — 由oadultradeepfield创建的Hugging Face空间'
- en: Discover amazing ML apps made by the community
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 发现社区中制作的精彩机器学习应用
- en: huggingface.co](https://huggingface.co/spaces/oadultradeepfield/uniflixsg?source=post_page-----b9b448f7ea19--------------------------------)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: huggingface.co](https://huggingface.co/spaces/oadultradeepfield/uniflixsg?source=post_page-----b9b448f7ea19--------------------------------)
- en: As promised, I will share the workflow and the technical aspects of how I did
    this from scratch in this Medium blog. The layout of this article is organized
    in the same process as my thought processes, so you may also find some jumping
    between steps. Additionally, there will be little to no code in this article.
    You can see those on this [GitHub repository](https://github.com/oadultradeepfield/UniFliXsg/)
    if you like.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如承诺的那样，我将在这篇Medium博客中分享我如何从零开始做这件事的工作流程和技术细节。本文的布局与我的思维过程相同，因此你可能会看到步骤之间有些跳跃。此外，本文几乎没有代码。如果你感兴趣，可以在这个[GitHub仓库](https://github.com/oadultradeepfield/UniFliXsg/)中查看相关代码。
- en: This is my first blog, so if we haven’t known each other yet, I am Oad. I am
    now a computer science undergraduate at NUS with a strong passion for AI, particularly
    Large Language Models (LLMs). That’s also why I started this project, to learn
    more about their application :)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我的第一篇博客，如果我们还不认识，我是Oad。目前我在NUS攻读计算机科学本科，热衷于AI，特别是大型语言模型（LLM）。这也是我开始这个项目的原因之一，目的是更深入地了解它们的应用
    :)
- en: 'Step #1: Outlining the Workflow'
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '步骤 #1：概述工作流程'
- en: Everything starts with planning. The first thing that came to my mind was to
    do something similar to content-based filtering, where we could match the user’s
    profile with the program’s information. After looking through samples of the programs,
    I found that the information available for all the programs is essentially the
    description, and the career prospects itself. So, I could employ techniques to
    calculate the average similarity between the users and each piece of information
    to recommend the programs. This is somewhat similar to [semantic search](https://en.wikipedia.org/wiki/Semantic_search),
    where we match the user’s queries and the items in the database.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一切都从规划开始。我首先想到的是做类似于基于内容的过滤，其中我们可以将用户的资料与项目的信息进行匹配。在查看了项目的样本后，我发现所有项目的信息基本上就是描述和职业前景。因此，我可以采用技术来计算用户与每条信息之间的平均相似度，以便推荐项目。这有点类似于[语义搜索](https://en.wikipedia.org/wiki/Semantic_search)，在语义搜索中，我们将用户的查询与数据库中的条目进行匹配。
- en: I also noted that there may be different cultures among the universities, so
    including the description of the university as another piece of information could
    be beneficial for more personalized recommendations. The name UniFliXsg arises
    during this moment to replicate Netflix, which is also known for its powerful
    recommender systems.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我还注意到，不同大学之间可能存在文化差异，因此将大学的描述作为另一条信息包含进来，可能有助于提供更个性化的推荐。在这一刻，UniFliXsg这个名字诞生了，它模仿了Netflix，这也是以其强大的推荐系统而著称。
- en: On the user’s side, I would let them input their personal interests and career
    goals. To reduce the extra computations, I decided to make the user profiles that
    are inputted to the model be a single query, which is “I am interested in `user_input`.
    Upon graduation, I want to work as `user_input`.”
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 在用户端，我会让他们输入个人兴趣和职业目标。为了减少额外的计算，我决定让输入到模型中的用户资料是一个单一查询，即“我对`user_input`感兴趣。毕业后，我想做`user_input`的工作。”
- en: I used the [cosine similarity](https://en.wikipedia.org/wiki/Cosine_similarity)
    to compute the similarity scores. I chose this metric because it could handle
    the varied length vectors better than other distance metrics. So we will first
    convert each information and the user’s profile to vectors (text embedding), then
    compute the scores. This overall planning is illustrated in the image below.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了[余弦相似度](https://en.wikipedia.org/wiki/Cosine_similarity)来计算相似度分数。我选择这个度量标准，因为它比其他距离度量能够更好地处理长度不同的向量。因此，我们将首先把每个信息和用户的个人资料转换成向量（文本嵌入），然后计算分数。整体的计划如下面的图所示。
- en: '![](../Images/d9d804d8dd360ea5e8b4ce8e2c5f7b9d.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d9d804d8dd360ea5e8b4ce8e2c5f7b9d.png)'
- en: A simple illustration of the idea. Here, I simplify the embedding spaces to
    two-dimensional spaces. The cosine similarity is just the cosine of the angle
    between the vectors, the exact formulation is to be elaborated later.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个想法的一个简单示意图。在这里，我将嵌入空间简化为二维空间。余弦相似度就是向量之间角度的余弦值，具体的公式将在后面详细说明。
- en: 'Step 2: Data Collection and Preprocessing'
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第二步：数据收集与预处理
- en: This was the most time-consuming part of this project. The information regarding
    each program is organized in a completely different way. Therefore, I decided
    to collect all data manually without any web scraping techniques, because it may
    take the same effort and time anyway.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 这是这个项目中最耗时的部分。每个项目的信息组织方式完全不同。因此，我决定手动收集所有数据，而不使用任何网页抓取技术，因为无论如何这样做所需的时间和精力差不多。
- en: You can find the dataset in the Hugging Face repository provided earlier. The
    data is stored as a parquet file because I planned to use [Polars](https://pola.rs/)
    instead of Pandas for this project. I never used it before but heard that it is
    faster, so I want to try it out! However, I originally stored the data in an Excel
    file, because I found it to be the most convenient for working with tables. The
    image below shows how the data originally looked like before performing any embeddings.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在之前提供的 Hugging Face 仓库中找到数据集。数据以 parquet 文件格式存储，因为我计划在这个项目中使用[Polars](https://pola.rs/)而不是
    Pandas。我以前从未使用过它，但听说它更快，所以我想尝试一下！不过，最初我将数据存储在 Excel 文件中，因为我发现这样操作表格最方便。下图展示了在进行任何嵌入处理之前，数据的原始样貌。
- en: '![](../Images/ef369387568ef6fc554017c2fb1d6700.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ef369387568ef6fc554017c2fb1d6700.png)'
- en: A screenshot of the Microsoft Excel spreadsheet used to collect the data before
    embedding.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 用于收集数据的 Microsoft Excel 表格截图，数据尚未进行嵌入处理。
- en: 'Step 3: Text Embedding and Model Selection'
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第三步：文本嵌入与模型选择
- en: 'To embed the texts in the dataset, it may be convenient to use some language
    models from Hugging Face, which are pre-trained models and already know the similarity
    between words. We could use only the embedding layers instead of the whole model.
    Generally, we could access these layers for text embeddings from most models using
    the [Sentence Transformers](https://huggingface.co/sentence-transformers) library.
    We could initiate simply by:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了将数据集中的文本进行嵌入，使用一些来自 Hugging Face 的语言模型可能会很方便，这些模型是预训练的，已经知道词语之间的相似度。我们可以只使用嵌入层，而不是整个模型。通常，我们可以使用
    [Sentence Transformers](https://huggingface.co/sentence-transformers) 库从大多数模型中访问这些层来进行文本嵌入。我们可以通过以下方式简单地初始化：
- en: '[PRE0]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: First, each text in our corpus will be tokenized (i.e. split as separated words).
    The processing will automatically be made to match the configuration of the model
    we selected. Each token (word) will be embedded as a vector through the embedding
    matrix. At the end, we will have the matrix that could be passed through the layers
    of transformers. The output is an n-dimensional vector.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我们语料库中的每个文本都会被标记化（即拆分为独立的单词）。处理过程将自动与我们选择的模型配置匹配。每个标记（单词）将通过嵌入矩阵嵌入为一个向量。最终，我们将得到一个矩阵，可以通过转换器的层进行处理。输出是一个
    n 维向量。
- en: When choosing the model, we should consider the balance between choosing high-performing
    and lightweight models. Generally, the sentence transformers are lighter than
    most models. However, as the free Hugging Face spaces are limited to use only
    CPUs, I decided to pick some of the lightweight models known to perform well for
    the task. This allows the users to get faster results when using the app.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 在选择模型时，我们应考虑选择高性能和轻量级模型之间的平衡。通常，句子转换模型比大多数模型更轻量。然而，由于 Hugging Face 的免费空间仅限于使用
    CPU，我决定选择一些已知在任务中表现良好的轻量级模型。这使得用户在使用应用程序时能够获得更快的结果。
- en: Honestly, I have tried several models but the one I found to be the best match
    for the task is “[all-MiniLM-L6-v2](https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2)”.
    I used this model to embed all relevant texts in the dataset. When the users input
    their profiles, we could embed only the profiles and compute the similarity to
    each program accordingly. This helps save computations by avoiding embedding the
    texts in the dataset every time we run the task.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我试过几种模型，但我发现最适合这个任务的模型是“[all-MiniLM-L6-v2](https://huggingface.co/sentence-transformers/all-MiniLM-L6-v2)”。我使用这个模型将数据集中的所有相关文本进行嵌入。当用户输入他们的个人资料时，我们只需嵌入个人资料，并根据计算与每个程序的相似度。这有助于通过避免每次运行任务时都嵌入数据集中的文本来节省计算资源。
- en: 'Step 4: Computing Cosine Similarity'
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第四步：计算余弦相似度
- en: The cosine similarity is computed between each vector (representing different
    information) of the program and the users accordingly. The final similarity score
    is the average between the three scores. However, there is some tricky part in
    this approach. After some run tests, I found that the model doesn’t provide much
    accurate results. Therefore, I decided to weigh each similarity score differently.
    I gave more weight to the program description and career prospects, and less to
    the university description. This is essentially the [weighted arithmetic mean](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean),
    which allows a more accurate result in the end.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 余弦相似度将在程序的每个向量（代表不同的信息）与用户的向量之间计算。最终的相似度得分是三项得分的平均值。然而，这种方法有一个复杂的部分。经过一些测试，我发现模型并没有提供非常准确的结果。因此，我决定对每个相似度得分进行不同的加权。我给程序描述和职业前景赋予更多的权重，而给大学描述赋予较少的权重。这本质上是
    [加权算术平均数](https://en.wikipedia.org/wiki/Weighted_arithmetic_mean)，可以最终得到更准确的结果。
- en: '![](../Images/4def4740fb6d4fda5af2aec172ec9073.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4def4740fb6d4fda5af2aec172ec9073.png)'
- en: A more accurate formula of the weighted arithmetic mean for this project.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项目的加权算术平均数的更精确公式。
- en: After I have all the similarities, I sort them in descending order and return
    the top ten results. As mentioned, all the code and data are made available on
    my [GitHub](https://github.com/oadultradeepfield).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 在获取所有相似度后，我将它们按降序排序，并返回前十个结果。如前所述，所有代码和数据都已上传到我的 [GitHub](https://github.com/oadultradeepfield)。
- en: '![](../Images/e8dadab9811abe0f0f1d20692e429730.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e8dadab9811abe0f0f1d20692e429730.png)'
- en: Example of the output using the function defined for calculating the similarity
    and return the best-matched output. This is the prototype for the app created
    in the subsequent steps.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 使用定义好的函数来计算相似度并返回最匹配的输出。这是后续步骤中创建的应用程序原型。
- en: 'Step 5: Creating and Deploying the App'
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 第五步：创建和部署应用
- en: I built this app using the integration of [Gradio](https://www.gradio.app/)
    and Hugging Face ecosystems. If you’re new, Gradio is a library that allows you
    to create and deploy the prototype of your app directly in Python using its template
    and prebuilt elements. It is quite convenient as it facilitates faster production
    to the users, and does not necessarily require me to know much about web development.
    Although I used some HTML knowledge to build the app, it is just for centering
    or scaling elements. I provided some code snippets below to see what Gradio looks
    like in action.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我通过集成[Gradio](https://www.gradio.app/)和Hugging Face生态系统构建了这个应用。如果你是新手，Gradio是一个库，它允许你使用其模板和预构建的元素，直接在Python中创建和部署应用原型。它非常方便，因为它促进了更快的用户生产，而且不一定需要我了解太多关于网页开发的知识。尽管我使用了一些HTML知识来构建应用，但仅仅是为了居中或缩放元素。下面我提供了一些代码片段，展示Gradio在实际使用中的样子。
- en: '[PRE1]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Finally, the app is well-built, and can be easily accessed on any device using
    the [link](https://huggingface.co/spaces/oadultradeepfield/uniflixsg) to my Hugging
    Face space!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这个应用已经构建完成，可以通过[链接](https://huggingface.co/spaces/oadultradeepfield/uniflixsg)在任何设备上轻松访问我的Hugging
    Face空间！
- en: '![](../Images/48eda7617fa06d0a8d80ccbaf9740588.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/48eda7617fa06d0a8d80ccbaf9740588.png)'
- en: This is how the app looks when accessing it through the website on my desktop.
    It is also responsive, you may see slightly different configurations on other
    mobile devices.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过桌面访问该应用时的界面。它也是响应式的，你可能会在其他移动设备上看到略有不同的配置。
- en: Data Availability Statement
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据可用性声明
- en: The dataset utilized in this project was sourced directly from the official
    websites of the undergraduate programs of various universities. As this information
    is publicly accessible, it can be located through standard search engines.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 本项目使用的数据集直接来源于各大学本科项目的官方网站。由于这些信息是公开可用的，可以通过标准搜索引擎找到。
- en: Acknowledgment
  id: totrans-45
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 致谢
- en: I added this special section to extend grateful thank you messages to the community
    and people who engaged with my LinkedIn post. I even received a comment from Gradio,
    which is unexpected but appreciated. I also received feedback and kind suggestions
    from the comments and other platforms. So thanks to everyone for contributing
    to my learning! I will share more stories in future blogs and posts, see you there
    soon!
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 我增加了这个特殊部分，向社区和与我在LinkedIn帖子互动的人表示衷心感谢。我甚至收到了Gradio的评论，这虽然出乎意料，但非常感激。我还收到了评论和其他平台上的反馈和友善建议。所以，感谢每一位为我的学习做出贡献的人！我将在未来的博客和帖子中分享更多故事，届时见！
- en: Unless otherwise noted, all images are by the author.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有注明，所有图片均为作者提供。
