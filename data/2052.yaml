- en: The Floyd-Warshall Algorithm From Graph Theory, Applied to Parsing Molecular
    Structures
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 来自图论的Floyd-Warshall算法，应用于解析分子结构
- en: 原文：[https://towardsdatascience.com/the-floyd-warshall-algorithm-from-graph-theory-applied-to-parsing-molecular-structures-39f8c99c9fe1?source=collection_archive---------9-----------------------#2024-08-22](https://towardsdatascience.com/the-floyd-warshall-algorithm-from-graph-theory-applied-to-parsing-molecular-structures-39f8c99c9fe1?source=collection_archive---------9-----------------------#2024-08-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-floyd-warshall-algorithm-from-graph-theory-applied-to-parsing-molecular-structures-39f8c99c9fe1?source=collection_archive---------9-----------------------#2024-08-22](https://towardsdatascience.com/the-floyd-warshall-algorithm-from-graph-theory-applied-to-parsing-molecular-structures-39f8c99c9fe1?source=collection_archive---------9-----------------------#2024-08-22)
- en: Hands-on explanations assisted by simple JavaScript code
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过简单的JavaScript代码提供的实践性解释
- en: '[](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[![LucianoSphere
    (Luciano Abriata, PhD)](../Images/a8ae3085d094749bbdd1169cca672b86.png)](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)
    [LucianoSphere (Luciano Abriata, PhD)](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[![LucianoSphere
    (Luciano Abriata, PhD)](../Images/a8ae3085d094749bbdd1169cca672b86.png)](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)
    [LucianoSphere (Luciano Abriata, PhD)](https://lucianosphere.medium.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)
    ·8 min read·Aug 22, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--39f8c99c9fe1--------------------------------)
    ·阅读时间：8分钟·2024年8月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'The Floyd-Warshall algorithm is essential in graph theory as it provides an
    efficient means to compute the shortest paths between all pairs of nodes in a
    graph. This classic dynamic programming algorithm is widely applicable beyond
    its traditional use in theoretical network analysis. It works by reading in a
    matrix that describes which pairs of nodes are connected by a single edge, and
    outputting the minimal number of edges connecting every possible pair of nodes:'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: Floyd-Warshall算法在图论中至关重要，因为它提供了一种高效的方法来计算图中所有节点对之间的最短路径。这个经典的动态规划算法不仅在理论网络分析中有传统的应用，而且在其他领域也得到了广泛的应用。它的工作原理是读取一个描述哪些节点对由一条边连接的矩阵，并输出连接每一对节点的最小边数：
- en: '![](../Images/21153ae53c61a2201936883662a75eef.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/21153ae53c61a2201936883662a75eef.png)'
- en: A set of nodes (red) linked by edges (light green lines) and then 2 examples
    of the distances (numbers of links between pairs of nodes, in dark green with
    dashed lines) calculated by the Floyd-Warshall algorithm. The direct links are
    encoded in a matrix called the “adjency matrix” whose elements are 1 (nodes linked)
    or 0 (not linked). The output from the algorithm if a matrix of equal size but
    containing the distances between all nodes as the minimal numbers of edges separating
    any two of them. This and all other figures were produced by the author.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 一组由边（浅绿色线）连接的节点（红色）以及通过Floyd-Warshall算法计算的两组距离（节点对之间的链接数，深绿色带虚线）。直接链接通过一个称为“邻接矩阵”的矩阵进行编码，该矩阵的元素为1（节点相连）或0（节点不相连）。算法输出的矩阵大小相同，但包含所有节点之间的最小边数，即将任何两个节点分开的最少边数。此图及所有其他图表均由作者制作。
- en: This is precious information about connectivity within the graph, that finds
    tons of applications; for example in optimizing communication networks, analyzing
    contacts in social networks, or, as I will cover here, in parsing molecular structures
    — at the core of many tasks in cheminformatics and structural bioinformatics.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 这是关于图中连通性的重要信息，具有广泛的应用；例如，在优化通信网络、分析社交网络中的联系，或者如我在此介绍的那样，在解析分子结构中——这是化学信息学和结构生物信息学许多任务的核心。
- en: In this post I will show you how the Floyd-Warshall algorithm can be employed
    to compute bond distances between atoms in a molecule, or said in a different
    way, the minimal number of bonds separating every possible pair of atoms. Hopefully,
    my example will not only showcase the algorithm’s application in chemistry but
    also inspire you to use it for other applications in…
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我将向你展示如何使用弗洛伊德-沃舍尔算法来计算分子中原子之间的键距，换句话说，就是计算分子中每一对原子之间的最小键数。希望我的例子不仅能展示该算法在化学中的应用，还能激发你将其应用于其他领域…
