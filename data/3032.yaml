- en: Linear Optimisations in Product Analytics
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 产品分析中的线性优化
- en: 原文：[https://towardsdatascience.com/linear-optimisations-in-product-analytics-ace19e925677?source=collection_archive---------2-----------------------#2024-12-18](https://towardsdatascience.com/linear-optimisations-in-product-analytics-ace19e925677?source=collection_archive---------2-----------------------#2024-12-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/linear-optimisations-in-product-analytics-ace19e925677?source=collection_archive---------2-----------------------#2024-12-18](https://towardsdatascience.com/linear-optimisations-in-product-analytics-ace19e925677?source=collection_archive---------2-----------------------#2024-12-18)
- en: Solving the knapsack problem
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 解决背包问题
- en: '[](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)[![Mariya
    Mansurova](../Images/b1dd377b0a1887db900cc5108bca8ea8.png)](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)
    [Mariya Mansurova](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)[![Mariya
    Mansurova](../Images/b1dd377b0a1887db900cc5108bca8ea8.png)](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)
    [Mariya Mansurova](https://miptgirl.medium.com/?source=post_page---byline--ace19e925677--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)
    ·11 min read·Dec 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--ace19e925677--------------------------------)
    ·阅读时间11分钟·2024年12月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c6f2f51099b2b5f7cfd3ee32ce1429e8.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c6f2f51099b2b5f7cfd3ee32ce1429e8.png)'
- en: Image generated by DALL-E 3
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 由DALL-E 3生成的图像
- en: 'It might be surprising, but in this article, I would like to talk about the
    knapsack problem, the classic optimisation problem that has been studied for over
    a century. According to [Wikipedia](https://en.wikipedia.org/wiki/Knapsack_problem),
    the problem is defined as follows:'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 这可能令人惊讶，但在本文中，我想谈谈背包问题，这个经典的优化问题已经被研究了一个多世纪。根据[维基百科](https://en.wikipedia.org/wiki/Knapsack_problem)，该问题的定义如下：
- en: Given a set of items, each with a weight and a value, determine which items
    to include in the collection so that the total weight is less than or equal to
    a given limit and the total value is as large as possible.
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 给定一组物品，每个物品都有一个重量和一个价值，确定应该包括哪些物品，以便总重量小于或等于给定的限制，同时总价值尽可能大。
- en: 'While product analysts may not physically pack knapsacks, the underlying mathematical
    model is highly relevant to many of our tasks. There are numerous real-world applications
    of the knapsack problem in product analytics. Here are a few examples:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然产品分析师可能不会亲自打包背包，但其背后的数学模型与我们许多任务高度相关。背包问题在产品分析中有许多现实世界的应用。以下是一些例子：
- en: '**Marketing Campaigns:** The marketing team has a limited budget and capacity
    to run campaigns across different channels and regions. Their goal is to maximize
    a KPI, such as the number of new users or revenue, all while adhering to existing
    constraints.'
  id: totrans-11
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**营销活动：** 营销团队在不同渠道和区域运营活动时，预算和能力有限。他们的目标是最大化某个KPI，例如新用户数量或收入，同时遵守现有的约束条件。'
- en: '**Retail Space Optimization:** A retailer with limited physical space in their
    stores seeks to optimize product placement to maximize revenue.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**零售空间优化：** 一家零售商在店铺中有有限的物理空间，他们希望通过优化产品摆放来最大化收入。'
- en: '**Product Launch Prioritization:** When launching a new product, the operations
    team’s capacity might be limited, requiring prioritization of specific markets.'
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**产品发布优先级：** 在发布新产品时，运营团队的能力可能有限，需要对特定市场进行优先排序。'
- en: Such and similar tasks are quite common, and many analysts encounter them regularly.
    So, in this article, I’ll explore different approaches to solving it, ranging
    from naive, simple techniques to more advanced methods such as linear programming.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的任务以及类似的任务非常常见，许多分析师会定期遇到它们。因此，在本文中，我将探讨解决此类问题的不同方法，涵盖从朴素的简单技巧到更先进的线性规划方法。
- en: Another reason I chose this topic is that linear programming is one of the most
    powerful and popular tools in prescriptive analytics — a type of analysis that
    focuses on providing stakeholders with actionable options to make informed decisions.
    As such, I believe it is an essential skill for any analyst to have in their toolkit.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我选择这个话题的另一个原因是，线性规划是处方分析中最强大和最流行的工具之一——一种专注于为利益相关者提供可操作选项以做出明智决策的分析方法。因此，我认为这是任何分析师工具包中必备的技能。
- en: Case
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 案例
- en: Let’s dive straight into the case we’ll be exploring. Imagine we’re part of
    a marketing team planning activities for the upcoming month. Our objective is
    to maximize key performance indicators (KPIs), such as the number of acquired
    users and revenue while operating within a limited marketing budget.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们直接进入将要探讨的案例。假设我们是一个营销团队的一部分，正在为下个月计划活动。我们的目标是最大化关键绩效指标（KPI），例如获取的用户数量和收入，同时在有限的营销预算内运营。
- en: 'We’ve estimated the expected outcomes of various marketing activities across
    different countries and channels. Here is the data we have:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已估算了不同国家和渠道的各种营销活动的预期结果。以下是我们拥有的数据：
- en: '`country` — the market where we can do some promotional activities;'
  id: totrans-19
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`country` — 我们可以进行一些促销活动的市场；'
- en: '`channel` — the acquisition method, such as social networks or influencer campaigns;'
  id: totrans-20
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`channel` — 获取方式，例如社交网络或影响者活动；'
- en: '`users` — the expected number of users acquired within a month of the promo
    campaign;'
  id: totrans-21
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`users` — 在促销活动一个月内预期获得的用户数量；'
- en: '`cs_contacts` — the incremental Customer Support contacts generated by the
    new users;'
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`cs_contacts` — 新用户产生的增量客户支持联系；'
- en: '`marketing_spending` — the investment required for the activity;'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`marketing_spending` — 活动所需的投资；'
- en: '`revenue` — the first-year LTV generated from acquired customers.'
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`revenue` — 从已获取客户中产生的第一年LTV（客户终身价值）。'
- en: '![](../Images/b047bf0905f1fde49ac919e1fbc9ce87.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b047bf0905f1fde49ac919e1fbc9ce87.png)'
- en: Note that the dataset is synthetic and randomly generated, so don’t try to infer
    any market-related insights from it.
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 请注意，数据集是合成的，随机生成的，因此不要尝试从中推断任何市场相关的见解。
- en: First, I’ve calculated the high-level statistics to get a view of the numbers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，我计算了高级统计数据，以便查看这些数字。
- en: '![](../Images/eb3aa6704cff645dd793a2c778ce7d88.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb3aa6704cff645dd793a2c778ce7d88.png)'
- en: Let’s determine the optimal set of marketing activities that maximizes revenue
    while staying within the $30M marketing budget.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们确定一组最佳的营销活动组合，在保持3000万美元营销预算的同时最大化收入。
- en: Brute force approach
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 暴力破解法
- en: 'At first glance, the problem may seem straightforward: we could calculate all
    possible combinations of marketing activities and select the optimal one. However,
    it might be a challenging task.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 乍一看，这个问题可能显得简单：我们可以计算所有可能的营销活动组合并选择最佳的那一个。然而，这可能是一个具有挑战性的任务。
- en: With 62 segments, there are 2⁶² possible combinations, as each segment can either
    be included or excluded. This results in approximately 4.6*10¹⁸ combinations —
    an astronomical number.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 由于有62个数据段，每个数据段可以选择包含或排除，因此有2⁶²种可能的组合。这大约是4.6×10¹⁸种组合——一个天文数字。
- en: To better understand the computational feasibility, let’s consider a smaller
    subset of 15 segments and estimate the time required for one iteration.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解计算可行性，让我们考虑一个较小的15个数据段的子集，并估算一次迭代所需的时间。
- en: '[PRE0]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: It took approximately 4 seconds to process 15 segments, allowing us to handle
    around 7,000 iterations per second. Using this estimate, let’s calculate the execution
    time for the full set of 62 segments.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 处理15个数据段大约花费了4秒钟，这使我们能够每秒处理约7,000次迭代。根据这个估算，让我们计算处理62个数据段所需的执行时间。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using brute force, it would take around 20.9 million years to get the answer
    to our question — clearly not a feasible option.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 采用暴力破解法，回答我们问题大约需要2090万年——显然这不是一个可行的选项。
- en: Execution time is entirely determined by the number of segments. Removing just
    one segment can reduce time twice. With this in mind, let’s explore possible ways
    to merge segments.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 执行时间完全由数据段的数量决定。移除一个数据段可以将时间减少一半。考虑到这一点，让我们探讨合并数据段的可能方式。
- en: As usual, there are more small-sized segments than bigger ones, so merging them
    is a logical step. However, it’s important to note that this approach may reduce
    accuracy since multiple segments are aggregated into one. Despite this, it could
    still yield a solution that is “good enough.”
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 像往常一样，较小的细分市场比大规模的更多，所以合并它们是一个合理的步骤。然而，值得注意的是，这种方法可能会降低准确性，因为多个细分市场被合并为一个。尽管如此，它仍然可以产生一个“足够好”的解决方案。
- en: To simplify, let’s merge all segments that contribute less than 0.1% of revenue.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简化，我们将合并所有贡献少于0.1%收入的细分市场。
- en: '[PRE2]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: With this approach, we will merge ten segments into one, representing 0.53%
    of the total revenue (the potential margin of error). With 52 segments remaining,
    we can obtain the solution in just 20.4K years. While this is a significant improvement,
    it’s still not sufficient.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法，我们将把十个细分市场合并为一个，占总收入的0.53%（可能的误差范围）。剩余52个细分市场后，我们可以在仅20.4千年内获得解决方案。虽然这是一个显著的改进，但仍然不够充分。
- en: You may consider other heuristics tailored to your specific task. For instance,
    if your constraint is a ratio (e.g., contact rate = CS contacts / users ≤ 5%),
    you could group all segments where the constraint holds true, as the optimal solution
    will include all of them. In our case, however, I don’t see any additional strategies
    to reduce the number of segments, so brute force seems impractical.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以考虑其他针对特定任务量身定制的启发式方法。例如，如果你的约束是一个比率（例如，联系率 = 客户服务联系数 / 用户 ≤ 5%），你可以将所有符合约束的细分市场归为一组，因为最优解会包括所有这些细分市场。然而，在我们的案例中，我看不出有任何其他策略来减少细分市场的数量，因此暴力计算似乎不切实际。
- en: That said, if the number of combinations is relatively small and brute force
    can be executed within a reasonable time, it can be an ideal approach. It’s simple
    to develop and provides accurate results.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 也就是说，如果组合的数量相对较小，并且暴力计算可以在合理的时间内执行，那么它可以是一个理想的方法。它简单易开发，并且提供准确的结果。
- en: 'Naive approach: looking at top-performing segments'
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 天真方法：查看表现最好的细分市场
- en: Since brute force is not feasible for calculating all combinations, let’s consider
    a simpler algorithm to address this problem.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于暴力计算不适合计算所有组合，我们考虑使用一种更简单的算法来解决这个问题。
- en: One possible approach is to focus on the top-performing segments. We can evaluate
    segment performance by calculating revenue per dollar spent, then sort all activities
    based on this ratio and select the top performers that fit within the marketing
    budget. Let’s implement it.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 一种可能的方法是专注于表现最好的细分市场。我们可以通过计算每花费一美元所获得的收入来评估细分市场的表现，然后根据这个比率对所有活动进行排序，选择符合营销预算的表现最佳的活动。让我们来实现这个方法。
- en: '[PRE3]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: With this approach, we selected 48 activities and got $107.92M in revenue.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 采用这种方法，我们选择了48个活动，并获得了107.92百万美元的收入。
- en: Unfortunately, although the logic seems reasonable, it is not the optimal solution
    for maximizing revenue. Let’s look at a simple example with just three marketing
    activities.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，尽管逻辑看起来合理，但它并不是最大化收入的最佳解决方案。让我们来看一个只有三个营销活动的简单例子。
- en: '![](../Images/5a45bbcb23204b349ee62ca17f855fd1.png)'
  id: totrans-51
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a45bbcb23204b349ee62ca17f855fd1.png)'
- en: Using the top markets approach, we would select France and achieve $68M in revenue.
    However, by choosing two other markets, we could achieve significantly better
    results — $97.5M. The key point is that our algorithm optimizes not only for maximum
    revenue but also for minimizing the number of selected segments. Therefore, this
    approach will not yield the best results, especially considering its inability
    to account for multiple constraints.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 使用选择最佳市场的方法，我们将选择法国，并获得6800万美元的收入。然而，如果选择另外两个市场，我们可以获得显著更好的结果——9750万美元。关键点在于，我们的算法不仅优化了最大化收入，还优化了选择的细分市场数量。因此，这种方法将无法得到最佳结果，尤其是考虑到它无法应对多个约束条件。
- en: Linear Programming
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 线性规划
- en: Since all simple approaches have failed, we must return to the fundamentals
    and explore the theory behind this problem. Fortunately, the knapsack problem
    has been studied for many years, and we can apply optimization techniques to solve
    it in seconds rather than years.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 由于所有简单的方法都失败了，我们必须回到基础理论，探讨这个问题背后的理论。幸运的是，背包问题已经研究了许多年，我们可以应用优化技术，在几秒钟内解决它，而不是几年。
- en: The problem we’re trying to solve is an example of Integer Programming, which
    is actually a subdomain of Linear Programming.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 我们试图解决的问题是一个整数规划问题，实际上它是线性规划的一个子领域。
- en: 'We’ll discuss this shortly, but first, let’s align on the key concepts of the
    optimization process. Each optimisation problem consists of:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会讨论这个方法，但首先，让我们对优化过程的关键概念达成一致。每个优化问题都由以下几个部分组成：
- en: '**Decision variables**: Parameters that can be adjusted in the model, typically
    representing the levers or decisions we want to make.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**决策变量**：模型中可以调整的参数，通常代表我们希望做出的杠杆或决策。'
- en: '**Objective function**: The target variable we aim to maximize or minimize.
    It goes without saying that it must depend on the decision variables.'
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**目标函数**：我们旨在最大化或最小化的目标变量。无需多言，它必须依赖于决策变量。'
- en: '**Constraints**: Conditions placed on the decision variables that define their
    possible values. For example, ensuring the team cannot work a negative number
    of hours.'
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**约束条件**：对决策变量施加的条件，定义了它们的可能值。例如，确保团队不能工作负数小时。'
- en: 'With these basic concepts in mind, we can define Linear Programming as a scenario
    where the following conditions hold:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 牢记这些基本概念，我们可以将线性规划定义为满足以下条件的场景：
- en: The objective function is linear.
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标函数是线性的。
- en: All constraints are linear.
  id: totrans-62
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 所有约束都是线性的。
- en: Decision variables are real-valued.
  id: totrans-63
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 决策变量是实数值的。
- en: 'Integer Programming is very similar to Linear Programming, with one key difference:
    some or all decision variables must be integers. While this may seem like a minor
    change, it significantly impacts the solution approach, requiring more complex
    methods than those used in Linear Programming. One common technique is [branch-and-bound](https://en.wikipedia.org/wiki/Branch_and_bound).
    We won’t dive deeper into the theory here, but you can always find more detailed
    explanations online.'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 整数规划与线性规划非常相似，唯一的区别是：一些或所有的决策变量必须是整数。虽然这看起来像是一个小的变化，但它显著影响了解决方法，需要比线性规划更复杂的方法。一种常见的技术是[分支定界法](https://en.wikipedia.org/wiki/Branch_and_bound)。我们不会在这里深入探讨理论，但你总是可以在网上找到更详细的解释。
- en: For linear optimization, I prefer the widely used Python package [PuLP](https://coin-or.github.io/pulp/).
    However, there are other options available, such as [Python MIP](https://pypi.org/project/mip/)
    or [Pyomo](https://github.com/Pyomo/pyomo). Let’s install PuLP via pip.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 对于线性优化，我更喜欢广泛使用的Python包[PuLP](https://coin-or.github.io/pulp/)。不过，也有其他可用的选择，比如[Python
    MIP](https://pypi.org/project/mip/)或[Pyomo](https://github.com/Pyomo/pyomo)。让我们通过pip安装PuLP。
- en: '[PRE4]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Now, it’s time to define our task as a mathematical optimisation problem. There
    are the following steps for it:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，是时候将我们的任务定义为一个数学优化问题了。具体步骤如下：
- en: '**Define the set of decision variables** (levers we can adjust).'
  id: totrans-68
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**定义决策变量的集合**（我们可以调整的杠杆）。'
- en: '**Align on the objective function (**a variable that we will be optimising
    for).'
  id: totrans-69
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**对齐目标函数**（我们将优化的变量）。'
- en: '**Formulate constraints** (the conditions that must hold true during optimisations).'
  id: totrans-70
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**制定约束条件**（在优化过程中必须满足的条件）。'
- en: Let’s go through the steps one by one. But first, we need to create the problem
    object and set the objective — maximization in our case.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们逐步进行。但首先，我们需要创建问题对象并设置目标——在我们的案例中是最大化。
- en: '[PRE5]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The next step is defining the decision variables — parameters that we can change
    during optimisation. Our main decision is either to run a marketing campaign or
    not. So, we can model it as a set of binary variables (0 or 1) for each segment.
    Let’s do it with the PuLP library.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 下一步是定义决策变量——在优化过程中我们可以改变的参数。我们的主要决策是是否开展市场营销活动。因此，我们可以将其建模为每个细分市场的二元变量集（0或1）。让我们通过PuLP库来实现。
- en: '[PRE6]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: After that, it’s time to align on the objective function. As discussed, we want
    to maximise the revenue. The total revenue will be a sum of revenue from all the
    selected segments (where `decision_variable = 1` ). Therefore, we can define this
    formula as the sum of the expected revenue for each segment multiplied by the
    decision binary variable.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 之后，是时候对目标函数进行对齐了。如前所述，我们希望最大化收入。总收入将是所有选定细分市场的收入之和（其中`decision_variable = 1`）。因此，我们可以将此公式定义为每个细分市场的预期收入乘以决策二元变量的总和。
- en: '[PRE7]'
  id: totrans-76
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The final step is to add constraints. Let’s start with a simple constraint:
    our marketing spending must be below $30M.'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 最后一步是添加约束。让我们从一个简单的约束开始：我们的市场营销支出必须低于3000万美元。
- en: '[PRE8]'
  id: totrans-78
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '**Hint**: you can print `problem` to double check the objective function and
    constraints.'
  id: totrans-79
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**提示**：你可以打印`problem`来仔细检查目标函数和约束条件。'
- en: Now that we’ve defined everything, we can run the optimization and analyze the
    results.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经定义了所有内容，可以运行优化并分析结果。
- en: '[PRE9]'
  id: totrans-81
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: It takes less than a second to run the optimization, a significant improvement
    compared to the thousands of years that brute force would require.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 运行优化只需不到一秒钟，与暴力破解需要数千年相比，效率显著提升。
- en: '[PRE10]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Let’s save the results of the model execution — the decision variables indicating
    whether each segment was selected or not — into our dataframe.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们将模型执行的结果——表示每个区段是否被选择的决策变量——保存到我们的数据框中。
- en: '[PRE11]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'It works like magic, allowing you to obtain the solution quickly. Additionally,
    note that we achieved higher revenue compared to our naive approach: $110.16M
    versus $107.92M.'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 它就像魔法一样快速提供解决方案。此外，请注意，相比我们的直觉方法，我们达到了更高的收入：1.1016亿美元对比1.0792亿美元。
- en: 'We’ve tested integer programming with a simple example featuring just one constraint,
    but we can extend it further. For instance, we can add additional constraints
    for our CS contacts to ensure that our Operations team can handle the demand in
    a healthy way:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经用一个简单的例子测试了整数规划，该例子仅涉及一个约束，但我们可以进一步扩展。例如，我们可以为CS联系方式添加额外的约束，以确保我们的运营团队能够以健康的方式处理需求：
- en: The number of additional CS contacts ≤ 5K
  id: totrans-88
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外的CS联系方式数量 ≤ 5000
- en: Contact rate (CS contacts/users) ≤ 0.042
  id: totrans-89
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 联系率（CS联系方式/用户）≤ 0.042
- en: '[PRE12]'
  id: totrans-90
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: The code is straightforward, with the only tricky part being the transformation
    of the ratio constraint into a simpler linear form.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 代码非常简单，唯一有点复杂的部分是将比例约束转换为更简单的线性形式。
- en: Another potential constraint you might consider is limiting the number of selected
    options, for example, to 10\. This constraint could be pretty helpful in prescriptive
    analytics, for example, when you need to select the top-N most impactful focus
    areas.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可能的约束条件是限制选定选项的数量，例如，限制为10个。这个约束在规范性分析中非常有用，比如当你需要选择最具影响力的前N个焦点区域时。
- en: '[PRE13]'
  id: totrans-93
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Another possible option to tweak our problem is to change the objective function.
    We’ve been optimising for the revenue, but imagine we want to maximise both revenue
    and new users at the same time. For that, we can slightly change our objective
    function.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个可以调整我们问题的选项是改变目标函数。我们一直在优化收入，但假设我们希望同时最大化收入和新增用户。为此，我们可以稍微修改目标函数。
- en: Let’s consider the best approach. We could calculate the sum of revenue and
    new users and aim to maximize it. However, since revenue is, on average, 1000
    times higher, the results might be skewed toward maximizing revenue. To make the
    metrics more comparable, we can normalize both revenue and users based on their
    total sums. Then, we can define the objective function as a weighted sum of these
    ratios. I would use equal weights (0.5) for both metrics, but you can adjust the
    weights to give more value to one of them.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们考虑最好的方法。我们可以计算收入和新增用户的总和并力图最大化它。然而，由于收入通常比新增用户高出1000倍，结果可能会倾向于最大化收入。为了使这些指标更具可比性，我们可以基于它们的总和来规范化收入和用户数。然后，我们可以将目标函数定义为这些比例的加权和。我会给这两个指标赋予相等的权重（0.5），但你可以调整权重，使其中一个指标的权重更大。
- en: '[PRE14]'
  id: totrans-96
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: We obtained the optimal objective function value of 0.6131, with revenue at
    $104.36M and 136.37K new users.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到了最优目标函数值0.6131，收入为1.0436亿美元，新增用户为136,370人。
- en: That’s it! We’ve learned how to use integer programming to solve various optimisation
    problems.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！我们学会了如何使用整数规划来解决各种优化问题。
- en: You can find the full code on [GitHub](https://github.com/miptgirl/miptgirl_medium/blob/main/discrete_optimisations/discrete_optimisation.ipynb).
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你可以在[GitHub](https://github.com/miptgirl/miptgirl_medium/blob/main/discrete_optimisations/discrete_optimisation.ipynb)上找到完整的代码。
- en: Summary
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this article, we explored different methods for solving the knapsack problem
    and its analogues in product analytics.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们探讨了解决背包问题及其在产品分析中的类比问题的不同方法。
- en: We began with a brute-force approach but quickly realized it would take an unreasonable
    amount of time.
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们从暴力破解方法开始，但很快意识到它会占用不合理的时间。
- en: Next, we tried using common sense by naively selecting the top-performing segments,
    but this approach yielded incorrect results.
  id: totrans-103
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 接下来，我们尝试通过直觉选取表现最好的区段，但这种方法得出的结果是错误的。
- en: Finally, we turned to Integer Programming, learning how to translate our product
    tasks into optimization models and solve them effectively.
  id: totrans-104
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 最后，我们转向了整数规划，学习了如何将我们的产品任务转化为优化模型并有效地解决它们。
- en: With this, I hope you’ve gained another valuable analytical tool for your toolkit.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，我希望你已经为你的工具包增添了另一项有价值的分析工具。
- en: Thank you a lot for reading this article. I hope this article was insightful
    for you. If you have any follow-up questions or comments, please leave them in
    the comments section.
  id: totrans-106
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 非常感谢你阅读本文。我希望这篇文章对你有所启发。如果你有任何后续问题或意见，请在评论区留言。
- en: Reference
  id: totrans-107
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考资料
- en: '*All the images are produced by the author unless otherwise stated.*'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有说明，所有图片均由作者制作。*'
