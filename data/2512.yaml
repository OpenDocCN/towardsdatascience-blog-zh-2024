- en: 'lintsampler: a new way to quickly get random samples from any distribution'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: lintsampler：一种快速从任何分布中获取随机样本的新方法
- en: 原文：[https://towardsdatascience.com/lintsampler-a-new-way-to-quickly-get-random-samples-from-any-distribution-d07f73a70f5c?source=collection_archive---------8-----------------------#2024-10-14](https://towardsdatascience.com/lintsampler-a-new-way-to-quickly-get-random-samples-from-any-distribution-d07f73a70f5c?source=collection_archive---------8-----------------------#2024-10-14)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/lintsampler-a-new-way-to-quickly-get-random-samples-from-any-distribution-d07f73a70f5c?source=collection_archive---------8-----------------------#2024-10-14](https://towardsdatascience.com/lintsampler-a-new-way-to-quickly-get-random-samples-from-any-distribution-d07f73a70f5c?source=collection_archive---------8-----------------------#2024-10-14)
- en: '[](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)[![Aneesh
    Naik](../Images/65aff47941ac2013ccbbbc15423e03a8.png)](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)
    [Aneesh Naik](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)'
  id: totrans-2
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)[![Aneesh
    Naik](../Images/65aff47941ac2013ccbbbc15423e03a8.png)](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)
    [Aneesh Naik](https://medium.com/@aneesh92?source=post_page---byline--d07f73a70f5c--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)
    ·4 min read·Oct 14, 2024
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d07f73a70f5c--------------------------------)
    ·阅读时间4分钟·2024年10月14日
- en: --
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '`lintsampler` is a pure Python package that can easily and efficiently generate
    random samples from any probability distribution.'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '`lintsampler`是一个纯Python包，可以轻松高效地从任何概率分布中生成随机样本。'
- en: 'Full disclosure: I am one of the authors of `lintsampler`.'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 完整披露：我是`lintsampler`的作者之一。
- en: Why you need lintsampler
  id: totrans-7
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你需要lintsampler
- en: We often find ourselves in situations where we have a probability distribution
    (PDF) and we need to draw random samples it. For example, we might want to estimate
    some summary statistics or to create a population of particles for a simulation.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 我们经常遇到需要从给定概率分布（PDF）中抽取随机样本的情况。例如，我们可能想估算一些总结性统计量，或者为模拟创建一群粒子。
- en: If the probability distribution is a standard one, such as a uniform distribution
    or a Gaussian (normal) distribution, then the `numpy`/`scipy` ecosystem provides
    us with some easy ways to draw these samples, via the `numpy.random` or `scipy.stats`
    modules.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 如果概率分布是标准分布，如均匀分布或高斯（正态）分布，那么`numpy`/`scipy`生态系统提供了一些简便的方法来从这些分布中抽取样本，方法是通过`numpy.random`或`scipy.stats`模块。
- en: 'However, out in the wild, we often encounter probability distributions that
    are not Gaussian. Sometimes, they are *very* not Gaussian. For example:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在实际应用中，我们经常遇到非高斯的概率分布。有时，它们*非常*非高斯。例如：
- en: '![](../Images/a816e849fa2d0c53df5dd8cde36582eb.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a816e849fa2d0c53df5dd8cde36582eb.png)'
- en: A very non-Gaussian PDF. Contour lines are lines of equal density, separated
    by equal intervals in log-space. Image by author.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 一个非常非高斯的PDF。等高线是密度相等的线，在对数空间中按相等间隔分隔。图片来源：作者。
- en: How would we draw samples from this distribution?
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何从这个分布中抽取样本呢？
- en: There are a few widely-used techniques to draw samples from arbitrary distributions
    like this, such as [rejection sampling](https://en.wikipedia.org/wiki/Rejection_sampling)
    or [Markov chain Monte Carlo (MCMC)](https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo).
    These are excellent and reliable methods, with some handy Python implementations.
    For example, [emcee](https://emcee.readthedocs.io/en/stable/) is an MCMC sampler
    widely used in scientific applications.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 有几种广泛使用的技术可以从任意分布中抽取样本，比如[拒绝采样](https://en.wikipedia.org/wiki/Rejection_sampling)或[马尔可夫链蒙特卡罗（MCMC）](https://en.wikipedia.org/wiki/Markov_chain_Monte_Carlo)。这些都是优秀且可靠的方法，并且有一些方便的Python实现。例如，[emcee](https://emcee.readthedocs.io/en/stable/)是一个在科学应用中广泛使用的MCMC采样器。
- en: The problem with these existing techniques is that they require a fair amount
    of setup and tuning. With rejection sampling, one has to choose a proposal distribution,
    and a poor choice can make the procedure very inefficient. With MCMC one has to
    worry about whether the samples are converged, which typically requires some post-hoc
    testing to gauge.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 现有技术的问题在于它们需要相当多的设置和调试。使用拒绝采样时，必须选择一个提议分布，而不合适的选择会使得过程非常低效。使用 MCMC 时，必须担心样本是否已收敛，这通常需要进行一些后验测试来评估。
- en: 'Enter `lintsampler`. It’s as easy as:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 输入 `lintsampler`。操作简单如同：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In this code snippet, we constructed 1D arrays along each of the two dimensions,
    then we fed them to the `LintSampler` object (imported from the `lintsampler`
    package) along with a `pdf` function representing the probability distribution
    we want to draw samples from. We didn’t spell out the `pdf` function in this snippet,
    but there are some fully self-contained examples in the [docs](https://lintsampler.readthedocs.io/en/latest/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，我们沿着两个维度构造了 1D 数组，然后将它们与表示我们想从中抽取样本的概率分布的 `pdf` 函数一起传递给 `LintSampler`
    对象（从 `lintsampler` 包中导入）。我们在这个片段中没有列出 `pdf` 函数，但在 [docs](https://lintsampler.readthedocs.io/en/latest/)
    中有一些完全自包含的示例。
- en: 'Now, `pts` is an array containing 100000 samples from the PDF. Here they are
    in a scatter plot:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，`pts` 是一个包含来自 PDF 的 100000 个样本的数组。以下是它们的散点图：
- en: '![](../Images/d79dcd41533335c64d581654d00cf3ee.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d79dcd41533335c64d581654d00cf3ee.png)'
- en: Scatter plot of points sampled from the weird PDF above (the latter is represented
    by the contour lines). Image by author.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面奇怪的 PDF 中采样的点的散点图（后者由轮廓线表示）。图片由作者提供。
- en: 'The point of this example was to demonstrate how easy it is to set up and use
    `lintsampler`. In certain cases, it is also much faster and more efficient than
    MCMC and/or rejection sampling. If you’re interested to find out how `lintsampler`
    works under the hood, read on. Otherwise, visit the [docs](https://lintsampler.readthedocs.io/en/latest/),
    where there are instructions describing [how to install](https://lintsampler.readthedocs.io/en/latest/installation.html)
    and use `lintsampler`, including example notebooks with [1D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/1_gmm.html),
    [2D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/2_doughnuts.html),
    and [3D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/3_dark_matter.html)
    use cases, as well as descriptions of some of lintsampler’s additional features:
    [quasi Monte Carlo sampling](https://lintsampler.readthedocs.io/en/latest/example_notebooks/4_qmc.html)
    (a.k.a. low discrepancy sequencing), and sampling on an [adaptive tree structure](https://lintsampler.readthedocs.io/en/latest/densitytree.html).
    There is also a [paper](https://joss.theoj.org/papers/10.21105/joss.06906) published
    in the Journal of Open Source Software (JOSS) describing `lintsampler`.'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 本例的重点是演示如何轻松地设置和使用 `lintsampler`。在某些情况下，它也比 MCMC 和/或拒绝采样要快得多且高效。如果你有兴趣了解 `lintsampler`
    背后的工作原理，请继续阅读。否则，可以访问 [docs](https://lintsampler.readthedocs.io/en/latest/)，那里有描述
    [如何安装](https://lintsampler.readthedocs.io/en/latest/installation.html) 和使用 `lintsampler`
    的说明，包括带有 [1D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/1_gmm.html)、[2D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/2_doughnuts.html)
    和 [3D](https://lintsampler.readthedocs.io/en/latest/example_notebooks/3_dark_matter.html)
    用例的示例笔记本，以及对一些 `lintsampler` 附加功能的描述： [准蒙特卡洛采样](https://lintsampler.readthedocs.io/en/latest/example_notebooks/4_qmc.html)（又称低差异序列）和在
    [自适应树结构](https://lintsampler.readthedocs.io/en/latest/densitytree.html) 上的采样。此外，还有一篇发表于《开源软件杂志》(JOSS)
    的 [论文](https://joss.theoj.org/papers/10.21105/joss.06906)，描述了 `lintsampler`。
- en: How lintsampler works
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '`lintsampler` 的工作原理'
- en: Underlying `lintsampler` is an algorithm we call *linear interpolant sampling*.
    The [theory](https://lintsampler.readthedocs.io/en/latest/theory/preamble.html)
    section of the docs gives a more detailed and more mathematical description of
    how the algorithm works, but here it is in short.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: '`lintsampler` 背后是我们称之为 *线性插值采样* 的算法。文档的 [理论](https://lintsampler.readthedocs.io/en/latest/theory/preamble.html)
    部分提供了一个更详细且更具数学性的算法描述，但这里简要说明一下。'
- en: The example below illustrates what happens under the hood in `lintsampler` when
    you feed a PDF and a grid to the `LintSampler` class. We’ll take an easy example
    of a 2D Gaussian, but this methodology applies in any number of dimensions, and
    with much less friendly PDFs.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的示例演示了当你将 PDF 和网格传递给 `LintSampler` 类时，`lintsampler` 背后发生了什么。我们将以 2D 高斯分布的简单示例为例，但这种方法适用于任意维度，并且适用于更不友好的
    PDF。
- en: First, the PDF gets evaluated on the grid. In the example below, the grid has
    uneven spacings, just for fun.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，在网格上评估概率密度函数。在下面的示例中，网格的间距不均匀，仅供娱乐。
- en: '![](../Images/3ea73a9e43dfcf1f8357735edfbacb2c.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ea73a9e43dfcf1f8357735edfbacb2c.png)'
- en: 'Left: 2D Gaussian PDF. Right: PDF evaluated on (uneven) grid. Image by author.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 左：2D 高斯概率密度函数（PDF）。右：在（不均匀）网格上评估的概率密度函数。图片来自作者。
- en: Having evaluated the PDF on the grid in this way, we can estimate the total
    probability of each grid cell according to the trapezium rule (i.e., volume of
    the cell multiplied by the average of its corner densities).
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过这种方式在网格上评估概率密度函数后，我们可以根据梯形法则估算每个网格单元的总概率（即，单元的体积乘以其角点密度的平均值）。
- en: 'Within each grid cell, we can approximate the PDF with the [bilinear interpolant](https://en.wikipedia.org/wiki/Bilinear_interpolation)
    between the cell corners:'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在每个网格单元内，我们可以通过[双线性插值](https://en.wikipedia.org/wiki/Bilinear_interpolation)在单元角点之间近似概率密度函数：
- en: '![](../Images/d349e131a17ba10837746ab5363527d6.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d349e131a17ba10837746ab5363527d6.png)'
- en: Gridded PDF filled in with (bi)linear interpolation. Image by author.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 使用（双）线性插值填充的网格化概率密度函数。图片来自作者。
- en: This linear approximation to the PDF can then be sampled very efficiently. Drawing
    a single sample is a two step process, illustrated in the figure below. First,
    choose a random cell from the probability-weighted list of cells (left-hand panel).
    Next, sample a point within the cell via [inverse transform sampling](https://en.wikipedia.org/wiki/Inverse_transform_sampling)
    (right-hand panel).
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这种对概率密度函数的线性近似可以非常高效地进行采样。绘制一个单一的样本是一个两步过程，如下图所示。首先，从按概率加权的单元列表中选择一个随机单元（左侧面板）。接下来，通过[逆变换采样](https://en.wikipedia.org/wiki/Inverse_transform_sampling)在单元内采样一个点（右侧面板）。
- en: '![](../Images/abf2821331ada9ab62cafcd622eb73e0.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/abf2821331ada9ab62cafcd622eb73e0.png)'
- en: 'Left: same as previous figure, with randomly chosen cell highlighted. Right:
    Zoom-in of highlighted cell, with sampled point illustrated. Image by author.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 左：与前一图相同，随机选择的单元被高亮显示。右：高亮单元的放大图，显示采样点。图片来自作者。
- en: 'It is worth understanding that the key step here is the linear approximation:
    we describe this, as well as more details of the inverse transform sampling process,
    in the `lintsampler` docs. Approximating the PDF to a linear function within grid
    each cell means it has a closed, analytic form for its [quantile function](https://en.wikipedia.org/wiki/Quantile_function)
    (i.e., its inverse CDF), which means doing inverse transform sampling essentially
    boils down to drawing uniform samples and applying an algebraic function to them.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 值得理解的是，这里的关键步骤是线性近似：我们将在`lintsampler`文档中描述这一点，以及逆变换采样过程的更多细节。将概率密度函数近似为每个网格单元内的线性函数意味着它具有封闭的、解析的形式用于其[分位数函数](https://en.wikipedia.org/wiki/Quantile_function)（即其逆累积分布函数），这意味着进行逆变换采样本质上归结为绘制均匀样本并对其应用代数函数。
- en: The main thing the user needs to worry about is getting a decent grid resolution,
    so that the linear approximation is sufficient. What a good resolution is will
    vary from use case to use case, as demonstrated in some of the example notebooks
    in the `lintsampler` docs.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 用户需要关心的主要问题是获得合适的网格分辨率，以便线性近似足够准确。什么是合适的分辨率会因使用案例而异，正如在`lintsampler`文档中的一些示例笔记本所展示的那样。
- en: Happy sampling!
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 祝你采样愉快！
