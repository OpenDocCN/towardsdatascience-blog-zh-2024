- en: Setting Up Automated Model Training Workflows with AWS S3
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AWS S3 设置自动化模型训练工作流
- en: 原文：[https://towardsdatascience.com/setting-up-automated-model-training-workflows-with-aws-s3-cd0587b42f34?source=collection_archive---------6-----------------------#2024-03-18](https://towardsdatascience.com/setting-up-automated-model-training-workflows-with-aws-s3-cd0587b42f34?source=collection_archive---------6-----------------------#2024-03-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/setting-up-automated-model-training-workflows-with-aws-s3-cd0587b42f34?source=collection_archive---------6-----------------------#2024-03-18](https://towardsdatascience.com/setting-up-automated-model-training-workflows-with-aws-s3-cd0587b42f34?source=collection_archive---------6-----------------------#2024-03-18)
- en: The Open-Source Approach for Workflow Automation
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 工作流自动化的开源方法
- en: '[](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)[![Khuyen
    Tran](../Images/98aa66025ad29b618e875c75f1c400a5.png)](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)
    [Khuyen Tran](https://khuyentran1476.medium.com/?source=post_page---byline--cd0587b42f34--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)
    ·7 min read·Mar 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--cd0587b42f34--------------------------------)
    ·阅读时间 7 分钟 ·2024年3月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Motivation
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 动机
- en: Consider you’re an e-commerce platform aiming to enhance recommendation personalization.
    Your data resides in S3.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你是一个电子商务平台，旨在增强推荐个性化。你的数据存储在 S3 中。
- en: To refine recommendations, you plan to retrain recommendation models using fresh
    customer interaction data whenever a new file is added to S3\. But how exactly
    do you approach this task?
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 为了优化推荐，你计划每当 S3 中添加新文件时，使用最新的客户互动数据重新训练推荐模型。那么，如何具体处理这个任务呢？
- en: '![](../Images/19c91eea848de1654a1def0fce56e5a3.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19c91eea848de1654a1def0fce56e5a3.png)'
- en: Unless otherwise noted, all images are by the author
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供
- en: Solutions
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 解决方案
- en: 'Two common solutions to this problem are:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 解决这个问题的两种常见方法是：
- en: '**AWS Lambda:** A serverless compute service by AWS, allowing code execution
    in response to events without managing servers.'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**AWS Lambda：** AWS 提供的无服务器计算服务，允许在事件触发时执行代码，无需管理服务器。'
- en: '**Open-source orchestrators:** Tools automating, scheduling, and monitoring
    workflows and tasks, usually self-hosted.'
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**开源调度器：** 自动化、调度和监控工作流与任务的工具，通常是自托管的。'
- en: 'Using an open-source orchestrator offers advantages over AWS Lambda:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 使用开源调度器相较于 AWS Lambda 提供了以下优势：
- en: '**Cost-Effectiveness:** Running long tasks on AWS Lambda can be costly. Open-source
    orchestrators let you use your infrastructure, potentially saving costs.'
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**成本效益：** 在 AWS Lambda 上运行长时间任务可能会很昂贵。开源调度器允许你使用自己的基础设施，潜在地节省成本。'
- en: '**Faster Iteration:** Developing and testing workflows locally speeds up the
    process, making it easier to debug and refine.'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**更快的迭代：** 在本地开发和测试工作流能加快过程，使调试和优化变得更加容易。'
- en: '**Environment Control:** Full control over the execution environment allows
    you to customize your development tools and IDEs to match your preferences.'
  id: totrans-18
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**环境控制：** 对执行环境的完全控制使你能够根据自己的喜好自定义开发工具和集成开发环境（IDE）。'
- en: '![](../Images/aa329b6f70ec6933a5f407cb563a3fd2.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa329b6f70ec6933a5f407cb563a3fd2.png)'
- en: While you could solve this problem in Apache Airflow, it would require complex
    infrastructure and deployment setup. Thus, we’ll use [Kestra](https://bit.ly/49OMyH9),
    which offers an intuitive UI and can be launched in a single Docker command.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你可以在 Apache Airflow 中解决这个问题，但它需要复杂的基础设施和部署设置。因此，我们将使用 [Kestra](https://bit.ly/49OMyH9)，它提供了直观的用户界面，并且可以通过一个
    Docker 命令启动。
- en: 'Feel free to play and fork the source code of this article here:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 欢迎在此处播放并分叉本文的源代码：
- en: '[](https://github.com/khuyentran1401/mlops-kestra-workflow?source=post_page-----cd0587b42f34--------------------------------)
    [## GitHub - khuyentran1401/mlops-kestra-workflow'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/khuyentran1401/mlops-kestra-workflow?source=post_page-----cd0587b42f34--------------------------------)
    [## GitHub - khuyentran1401/mlops-kestra-workflow'
- en: Contribute to khuyentran1401/mlops-kestra-workflow development by creating an
    account on GitHub.
  id: totrans-23
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过在 GitHub 上创建账户，参与 khuyentran1401/mlops-kestra-workflow 的开发。
- en: github.com](https://github.com/khuyentran1401/mlops-kestra-workflow?source=post_page-----cd0587b42f34--------------------------------)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: github.com](https://github.com/khuyentran1401/mlops-kestra-workflow?source=post_page-----cd0587b42f34--------------------------------)
- en: Workflow Summary
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 工作流摘要
- en: 'This workflow consists of two main components: Python scripts and orchestration.'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 该工作流由两个主要组件组成：Python 脚本和编排。
- en: '**Orchestration**'
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**编排**'
- en: Python scripts and flows are stored in Git, with changes synced to Kestra on
    a schedule.
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 脚本和流程存储在 Git 中，并且会按计划同步到 Kestra。
- en: '![](../Images/ff05c4168232f7a136a385271928fd4b.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff05c4168232f7a136a385271928fd4b.png)'
- en: When a new file appears in the “new” prefix of the S3 bucket, Kestra triggers
    an execution of a series of Python scripts.
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当 S3 桶的“new”前缀下出现新文件时，Kestra 会触发一系列 Python 脚本的执行。
- en: '![](../Images/19c91eea848de1654a1def0fce56e5a3.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19c91eea848de1654a1def0fce56e5a3.png)'
- en: Python Scripts
  id: totrans-32
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python 脚本
- en: '[*download_files_from_s3.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/download_files_from_s3.py):
    Download all files from the “old” prefix in the bucket.'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*download_files_from_s3.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/download_files_from_s3.py):
    从桶中的“old”前缀下载所有文件。'
- en: '[*merge_data.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/merge_data.py):
    Merge the downloaded files.'
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*merge_data.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/merge_data.py):
    合并下载的文件。'
- en: '[*process.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/process.py):
    Process the merged data.'
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*process.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/process.py):
    处理合并的数据。'
- en: '[*train.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/train.py)*:*
    Train the model using the processed data.'
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[*train.py*](https://github.com/khuyentran1401/mlops-kestra-workflow/blob/main/src/train.py)*:*
    使用处理后的数据训练模型。'
- en: '![](../Images/f230c2f02a707f09663735925e93bbdd.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f230c2f02a707f09663735925e93bbdd.png)'
- en: As we will execute the code downloaded from Git within Kestra, make sure to
    commit these Python scripts to the repository.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们将在 Kestra 中执行从 Git 下载的代码，请确保将这些 Python 脚本提交到仓库中。
- en: '[PRE0]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Orchestration
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 编排
- en: Start Kestra
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 启动 Kestra
- en: 'Download the Docker Compose file by executing the following command:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 执行以下命令下载 Docker Compose 文件：
- en: '[PRE1]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Ensure that Docker is running. Then, start the Kestra server with the following
    command:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 确保 Docker 正在运行。然后，使用以下命令启动 Kestra 服务器：
- en: '[PRE2]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Access the UI by opening the URL [http://localhost:8080](http://localhost:8080/)
    in your browser.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 通过在浏览器中打开 URL [http://localhost:8080](http://localhost:8080/) 访问 UI。
- en: '![](../Images/5b33ef5eb4c0a7f3801fb1ba4f5fa7e8.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b33ef5eb4c0a7f3801fb1ba4f5fa7e8.png)'
- en: Sync from Git
  id: totrans-48
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 从 Git 同步
- en: Since the Python scripts are in GitHub, we will use [Git Sync](https://kestra.io/plugins/plugin-git/tasks/io.kestra.plugin.git.sync)
    to update the code from GitHub to Kestra every minute. To set this up, create
    a file named “sync_from_git.yml” under the “_flows” directory.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 由于 Python 脚本托管在 GitHub 上，我们将使用 [Git Sync](https://kestra.io/plugins/plugin-git/tasks/io.kestra.plugin.git.sync)
    每分钟将代码从 GitHub 同步到 Kestra。要设置此功能，请在“_flows”目录下创建一个名为“sync_from_git.yml”的文件。
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: If you are using VSCode, you can use the [Kestra plugin](https://marketplace.visualstudio.com/items?itemName=kestra-io.kestra)
    to enable flow autocompletion and validation in `.yaml` files.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您使用的是 VSCode，可以使用 [Kestra 插件](https://marketplace.visualstudio.com/items?itemName=kestra-io.kestra)
    来启用 `.yaml` 文件中的流程自动完成和验证功能。
- en: '![](../Images/5d963b494550c1f0572c20a04a2f7675.png)![](../Images/0d1942b43ca808d76b4744901d3bb420.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5d963b494550c1f0572c20a04a2f7675.png)![](../Images/0d1942b43ca808d76b4744901d3bb420.png)'
- en: 'Below is the implementation of the flow to synchronize code from Git:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是从 Git 同步代码的流程实现：
- en: '[PRE4]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'A username and password are necessary only if the GitHub repository is private.
    To pass these secrets to Kestra, place them in the “.env” file:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 只有在 GitHub 仓库是私有的情况下，才需要提供用户名和密码。要将这些密钥传递给 Kestra，请将它们放入“.env”文件中：
- en: '[PRE5]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Next, encode these secrets using the following bash script:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，使用以下 bash 脚本对这些密钥进行编码：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Executing this script generates a “.env_encoded” file containing encoded secrets:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 执行此脚本会生成一个包含编码后的密钥的“.env_encoded”文件：
- en: '[PRE7]'
  id: totrans-60
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Include the encoded environment file in your Docker Compose file for Kestra
    to access the environment variables:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Docker Compose 文件中包含编码后的环境文件，以便 Kestra 访问环境变量：
- en: '[PRE8]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'Ensure to exclude the environment files in the “.gitignore” file:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 确保在“.gitignore”文件中排除环境文件：
- en: '[PRE9]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'Lastly, commit both the new flow and the Docker Compose file to Git:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，将新流程和Docker Compose文件都提交到Git：
- en: '[PRE10]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Now, with the `sync_from_git` flow set to run every minute, you can conveniently
    access and trigger the execution of Python scripts directly from the Kestra UI.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，随着`sync_from_git`流程设置为每分钟运行一次，你可以方便地通过Kestra UI访问并触发Python脚本的执行。
- en: '![](../Images/720f5af3075edd1455253930ff0f021c.png)![](../Images/84846040a61cc99923ac42d464e5516c.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/720f5af3075edd1455253930ff0f021c.png)![](../Images/84846040a61cc99923ac42d464e5516c.png)'
- en: Orchestration
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 编排
- en: We’ll create a flow triggered when a new file is added to the “new” prefix within
    the “winequality-red” bucket.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将创建一个流程，当有新文件添加到“winequality-red”桶中的“new”前缀时触发。
- en: Upon detecting a new file, Kestra will download it to internal storage and execute
    the Python files. Finally, it moves the file from the “new” prefix to the “old”
    prefix in the bucket to avoid duplicate detection during subsequent polls.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦检测到新文件，Kestra会将其下载到内部存储并执行Python文件。最后，它将文件从“new”前缀移动到“old”前缀，以避免在随后的轮询中重复检测。
- en: '![](../Images/7108977a1b3c4ca3def8ec2ac3f9c195.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7108977a1b3c4ca3def8ec2ac3f9c195.png)'
- en: '[PRE11]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'The `run_python_commands` task uses:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '`run_python_commands`任务使用：'
- en: '`namespaceFiles` to access all files in your local project, synchronized with
    your Git repository.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`namespaceFiles`访问本地项目中的所有文件，并与Git仓库同步。
- en: '`env` to retrieve environment variables.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`env`来检索环境变量。
- en: '`docker` to execute the script within the docker container `ghcr.io/kestra-io/pydata:latest`.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`docker`在docker容器`ghcr.io/kestra-io/pydata:latest`内执行脚本。
- en: '`beforeCommands` to install requirements from the “requirements.txt” file prior
    to executing commands.'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`beforeCommands`在执行命令之前从“requirements.txt”文件安装依赖。
- en: '`commands` to sequentially run a list of commands.'
  id: totrans-79
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`commands`按顺序执行命令列表。
- en: '`outputFiles` to send all pickle files from local file system to Kestra’s internal
    storage.'
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用`outputFiles`将所有pickle文件从本地文件系统发送到Kestra的内部存储。
- en: Finally, add the `upload` task to upload the model’s pickle file to S3.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，添加`upload`任务，将模型的pickle文件上传到S3。
- en: '![](../Images/0bf0fad92d75de999eb59d2fefd93602.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0bf0fad92d75de999eb59d2fefd93602.png)'
- en: '[PRE12]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: That’s it! Name this flow “run_ml_pipeline.yml” and commit it to Git.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 就这样！将此流程命名为“run_ml_pipeline.yml”并提交到 Git。
- en: '[PRE13]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Trigger the Flow
  id: totrans-86
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 触发流程
- en: To initiate the flow, simply add a new file to the “new” prefix within the “winequality-red”
    bucket on S3.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 要启动流程，只需将新文件添加到S3的“winequality-red”桶中的“new”前缀。
- en: '![](../Images/1c3cf593aa7d5ea84478abcf8c5e57a5.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1c3cf593aa7d5ea84478abcf8c5e57a5.png)'
- en: This action will trigger the `run_ml_pipeline` flow, initiating the download
    of data from the “old” prefix, merging all files, processing the data, and training
    the model.
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 该操作将触发`run_ml_pipeline`流程，启动从“旧”前缀下载数据、合并所有文件、处理数据并训练模型。
- en: '![](../Images/6e9a0b6ab67bc14bc15e7eca149714ec.png)![](../Images/d3cfe0e9fa37c79f185715567c6f35f9.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e9a0b6ab67bc14bc15e7eca149714ec.png)![](../Images/d3cfe0e9fa37c79f185715567c6f35f9.png)'
- en: Once the workflow completes execution, the “model.pkl” file is uploaded to S3.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦工作流执行完毕，“model.pkl”文件会被上传到S3。
- en: '![](../Images/5c20d3d5356ee53bdf05e9993a5e8938.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5c20d3d5356ee53bdf05e9993a5e8938.png)'
- en: Conclusion
  id: totrans-93
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This article shows how to use Kestra to automate the execution of Python scripts
    for data science tasks whenever a new file is added to S3\. If you are looking
    for ways to automate your machine learning pipeline, give this solution a try.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了如何使用Kestra自动化执行数据科学任务的Python脚本，每当有新文件添加到S3时。如果你在寻找自动化机器学习管道的方式，可以尝试这个解决方案。
- en: '![](../Images/374d772107eebbec9b782240512405e3.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/374d772107eebbec9b782240512405e3.png)'
- en: 'I love writing about data science concepts and playing with different data
    science tools. You can stay up-to-date with my latest posts by:'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 我喜欢写关于数据科学的概念，并玩弄各种数据科学工具。你可以通过以下方式保持关注我的最新文章：
- en: Subscribing to my newsletter on [Data Science Simplified](https://mathdatasimplified.com/).
  id: totrans-97
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 订阅我的[Data Science Simplified](https://mathdatasimplified.com/)新闻通讯。
- en: Connect with me on [LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)
    and [Twitter](https://twitter.com/KhuyenTran16).
  id: totrans-98
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在[LinkedIn](https://www.linkedin.com/in/khuyen-tran-1401/)和[Twitter](https://twitter.com/KhuyenTran16)上与我连接。
