- en: Recursion — Data Structures & Algorithms for Data Scientists
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 递归 — 数据结构与算法为数据科学家
- en: 原文：[https://towardsdatascience.com/recursion-data-structures-algorithms-for-data-scientists-1f74a54a3086?source=collection_archive---------3-----------------------#2024-11-03](https://towardsdatascience.com/recursion-data-structures-algorithms-for-data-scientists-1f74a54a3086?source=collection_archive---------3-----------------------#2024-11-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/recursion-data-structures-algorithms-for-data-scientists-1f74a54a3086?source=collection_archive---------3-----------------------#2024-11-03](https://towardsdatascience.com/recursion-data-structures-algorithms-for-data-scientists-1f74a54a3086?source=collection_archive---------3-----------------------#2024-11-03)
- en: Recursion, recursion, recursion, recursion, recursion, etc.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 递归，递归，递归，递归，递归，等等。
- en: '[](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page---byline--1f74a54a3086--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)
    ·5 min read·Nov 3, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1f74a54a3086--------------------------------)
    ·阅读时间：5分钟·2024年11月3日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/93d128b8dc4f8f1e838c2bd0031bab27.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/93d128b8dc4f8f1e838c2bd0031bab27.png)'
- en: Photo by [Voicu Apostol](https://unsplash.com/@cerpow?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 摄影师：[Voicu Apostol](https://unsplash.com/@cerpow?utm_source=medium&utm_medium=referral)
    摄影，图片来自 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Recursion is one of the most famous concepts in computer science because it’s
    quite fun!
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 递归是计算机科学中最著名的概念之一，因为它非常有趣！
- en: In this article, I will explain recursion and its different types and show you
    some famous examples.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将解释递归及其不同类型，并向你展示一些著名的例子。
- en: What is Recursion?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是递归？
- en: Recursion is when a function calls itself, but the input will typically change.
    So, as the function is calling itself, it’s known as a recursive function.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 递归是指一个函数调用自身，但输入通常会发生变化。所以，当函数调用自身时，它就被称为递归函数。
- en: You are essentially breaking down the problem into more minor problems, which
    are solved independently but added together step by step.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 你本质上是在将问题拆解成更小的子问题，这些子问题独立解决，但会一步一步地合并起来。
- en: Pretty much every recursive function can be written in a loop format, but the
    recursive framing is often much more elegant!
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 几乎每个递归函数都可以用循环格式来编写，但递归的框架通常更加优雅！
- en: A [Russian Doll](https://en.wikipedia.org/wiki/Matryoshka_doll) can be considered
    a recursion, as each doll contains another doll, then that one contains another
    etc.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[俄罗斯套娃](https://en.wikipedia.org/wiki/Matryoshka_doll)可以看作是递归的一个例子，因为每个娃娃中包含另一个娃娃，然后那个娃娃又包含另一个，依此类推。'
- en: Recursion could technically go on forever, but there are often some stopping
    criteria that prevent this. Otherwise, the computer will quickly run out of memory!
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 递归技术上可以无限进行下去，但通常会有一些停止条件来防止这种情况发生。否则，计算机的内存会很快用完！
- en: 'In general, a recursive function has two things:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，一个递归函数有两个要素：
- en: '***Base Case*** *— Terminating scenario that does not require recursion.*'
  id: totrans-17
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***基本情况*** *— 一个不需要递归的终止情景。*'
