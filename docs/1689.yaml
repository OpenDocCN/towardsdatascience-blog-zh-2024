- en: Heat Diffusion in a Thin Metal Rod
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/heat-diffusion-in-a-thin-metal-rod-faab655cb02c?source=collection_archive---------9-----------------------#2024-07-10](https://towardsdatascience.com/heat-diffusion-in-a-thin-metal-rod-faab655cb02c?source=collection_archive---------9-----------------------#2024-07-10)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: The solution to the heat diffusion equation meets the Fourier series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sebastiengilbert.medium.com/?source=post_page---byline--faab655cb02c--------------------------------)[![Sébastien
    Gilbert](../Images/380f6588c3ef718947bcf82061f190eb.png)](https://sebastiengilbert.medium.com/?source=post_page---byline--faab655cb02c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--faab655cb02c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--faab655cb02c--------------------------------)
    [Sébastien Gilbert](https://sebastiengilbert.medium.com/?source=post_page---byline--faab655cb02c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--faab655cb02c--------------------------------)
    ·9 min read·Jul 10, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: What would happen if you heated a small section of an insulated metal rod and
    left it alone for a while? Our daily experience of heat diffusion allows us to
    predict that the temperature will smooth out until it becomes uniform. In a scenario
    of perfect insulation, the heat will remain in the metal forever.
  prefs: []
  type: TYPE_NORMAL
- en: That is a correct qualitative description of the phenomenon, but how to describe
    it quantitatively?
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e5708f72a2768be191b2ec96c48572c3.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jonny Gios](https://unsplash.com/@supergios?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: We consider the one-dimensional problem of a thin metal rod wrapped in an insulating
    material. The insulation prevents the heat from escaping the rod from the side,
    but the heat can flow along the rod axis.
  prefs: []
  type: TYPE_NORMAL
- en: You can find the code used in this story [here](https://github.com/sebastiengilbert73/heated_metal_bar).
  prefs: []
  type: TYPE_NORMAL
- en: The heat diffusion equation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The [heat diffusion equation](https://en.wikipedia.org/wiki/Heat_equation)
    is a simple second-order differential equation in two variables:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/96c7d9be1ae5cd93d0483e0ea16da6e2.png)'
  prefs: []
  type: TYPE_IMG
- en: x ∈ [0, L] is the position along the rod, t is the time, u(x, t) is the temperature,
    and α is the [thermal diffusivity](https://en.wikipedia.org/wiki/Thermal_diffusivity)
    of the material.
  prefs: []
  type: TYPE_NORMAL
- en: What intuition can we obtain about the temperature evolution by examining the
    heat diffusion equation?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Equation (1) states that **the local rate of temperature change is proportional
    to the curvature, i.e., the second derivative with respect to x, of the temperature
    profile**.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/84d055f797137ed6543be68de86db4be.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: A temperature profile with its local rate of change. Image by the
    author.'
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1 shows a temperature profile with three sections. The first section
    is linear; the second section has a negative second derivative, and the third
    section has a positive second derivative. The red arrows show the rate of change
    in temperature along the rod.
  prefs: []
  type: TYPE_NORMAL
- en: If ever a steady state where ∂u/∂t = 0 is reached, the temperature profile will
    have to smooth out up to the point where the temperature profile is linear.
  prefs: []
  type: TYPE_NORMAL
- en: The solution to the heat diffusion equation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The solution¹ to the heat diffusion equation (1) is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eaae09340e3de09db2e2238127f52b52.png)'
  prefs: []
  type: TYPE_IMG
- en: You can verify by differentiating (2) that it does satisfy the differential
    equation (1). For those interested in the derivation, see Annex I.
  prefs: []
  type: TYPE_NORMAL
- en: The coefficients {Aₙ}, {Bₙ}, {λₙ}, C, D, and E are constants that must be fit
    from the initial and boundary conditions of the case. [The work we did studying
    the Fourier series will play](https://medium.com/towards-data-science/assorted-flavors-of-fourier-series-on-a-finite-domain-8c93904df6ae)!
  prefs: []
  type: TYPE_NORMAL
- en: Boundary conditions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The boundary conditions are the constraints imposed at x=0 and x=L. We encounter
    two types of constraints in practical scenarios:'
  prefs: []
  type: TYPE_NORMAL
- en: Insulation, which translates into ∂u/∂x=0 at the rod extremity. This constraint
    prevents the heat from flowing in or out of the rod;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Fixed temperature at the rod extremity: for example, the rod tip could be heated
    or cooled by a [thermoelectric cooler](https://en.wikipedia.org/wiki/Thermoelectric_cooling),
    keeping it at a desired temperature.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The combination of constraint types will dictate the appropriate flavor of the
    Fourier series to represent the initial temperature profile.
  prefs: []
  type: TYPE_NORMAL
- en: Both ends insulated
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When both rod ends are insulated, the gradient of the temperature profile gets
    set to zero at x=0 and x=L:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9a7098344bebe5a7e815b1d31dbb6f94.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The initial condition is the temperature profile along the rod at t=0\. Assume
    that for some obscure reason — perhaps the rod was possessed by an evil force
    — the temperature profile looks like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/45b31bea5072762b0bc7b84ced3002da.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: The initial temperature profile. Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: To run our simulation of the temperature evolution, we need to match equation
    (2) evaluated at t=0 with this function. We know the initial temperature profile
    through sample points but not its analytical expression. That is a task for a
    Fourier series expansion.
  prefs: []
  type: TYPE_NORMAL
- en: From [our work on the Fourier series](https://medium.com/towards-data-science/assorted-flavors-of-fourier-series-on-a-finite-domain-8c93904df6ae),
    we observed that an *even half-range expansion* yields a function whose derivative
    is zero at both extremities. That is what we need in this case.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/30136d3aec7c6cb9148dfa2f34db6397.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3 shows the even half-range expansion of the function from Figure 2:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0c4a3ef073fbfaed978a0fd6b3af986c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 3: Even half-range expansion of the function from Figure 2\. Image by
    the author.'
  prefs: []
  type: TYPE_NORMAL
- en: Although the finite number of terms used in the reconstruction creates some
    wiggling at the discontinuities, the derivative is zero at the extremities.
  prefs: []
  type: TYPE_NORMAL
- en: 'Equating equations (4), (5), (6), and (7) with equation (2) evaluated at t=0:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d1dd8d44f0730f5cde5b3962664dc02a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can solve the constants:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bf9163236cc5e4b1e2de472651693c17.png)'
  prefs: []
  type: TYPE_IMG
- en: Take a closer look at (14). This expression states that λₙ is proportional to
    the square of n, which is the number of half-periods that a particular cosine
    term goes through in the range [0, L]. In other words, n is proportional to the
    spatial frequency. Equation (2) includes an exponential factor exp(λₙt), forcing
    each frequency component to dampen over time. Since λₙ grows like the square of
    the frequency, we predict that the high-frequency components of the initial temperature
    profile will get damped much faster than the low-frequency components.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 4 shows a plot of u(x, t) over the first second. We observe that the
    higher frequency component of the right-hand side disappears within 0.1 s. The
    moderate frequency component in the central section considerably fades but is
    still visible after 1 s.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d8cc276152f890c17726a93b0f0b0875.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 4: Simulation of the temperature profile of Figure 2 over 1 second.
    Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When the simulation is run for 100 seconds, we get an almost uniform temperature:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/67a5f6485c215b1d276f61196a994b50.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 5: Simulation with insulation at both ends for 100 s. Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: Both ends at a fixed temperature
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'With both ends kept at a constant temperature, we have boundary conditions
    of the form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/045674bafc0a78fe4e4feaeed050d234.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The set of Fourier series that we studied in the previous post didn’t include
    the case of boundary temperatures fixed at non-zero values. We need to reformulate
    the initial temperature profile u₀(x) to develop a function that evaluates 0 at
    x=0 and x=L. Let us define a shifted initial temperature profile û₀(x):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d8e0dae6370c5d99e05cd597ed42800.png)'
  prefs: []
  type: TYPE_IMG
- en: The newly defined function û₀(x) linearly shifts the initial temperature profile
    u₀(x) such that û₀(0) = û₀(L) = 0.
  prefs: []
  type: TYPE_NORMAL
- en: 'As an illustration, Figure 6 shows an arbitrary initial temperature profile
    u₀, with set temperatures of 30 at x=0 and 70 at x=0.3\. The green line (Cx +
    D) goes from (0, 30) to (0.3, 70). The orange curve represents û₀(x) = u₀(x) —
    Cx — D:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/01fde30377640d329b778557ac43d538.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6: Arbitrary u₀(x), û₀(x), and the line Cx + D. Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The shifted initial temperature profile û₀(x), going through zero at both ends,
    can be expanded with [odd half-range expansion](https://medium.com/towards-data-science/assorted-flavors-of-fourier-series-on-a-finite-domain-8c93904df6ae):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/86532552d61433ea2c95eacdf3b0f933.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Equating equation (2) with (17), (18), (19), (20), and (21):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b4ba4e2c477db86325e0d54666794a0b.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We can solve the constants:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/263f66782a4f41571c521ed1fbffb3dd.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The simulation of the temperature profile over time u(x, t) can now run, from
    equation (2):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a3d40d58d914dac009b047f5a93577e5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7: Simulation of the temperature evolution with both ends set at constant
    temperatures. Image by the author.'
  prefs: []
  type: TYPE_NORMAL
- en: In a permanent regime, the temperature profile is linear between the two set
    points, and constant heat flows through the rod.
  prefs: []
  type: TYPE_NORMAL
- en: Insulation at the left end, fixed temperature at the right end
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'We have these boundary conditions:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34b515c4b24b3cbe8ae4f1674a7958a5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'We follow essentially the same procedure as before. This time, we model the
    initial temperature profile with an [even quarter-range expansion](https://medium.com/towards-data-science/assorted-flavors-of-fourier-series-on-a-finite-domain-8c93904df6ae)
    to get a zero derivative at the left end and a fixed value at the right end:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e98c81a09dbdf2a60939c37c12e3b3ed.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Which leads to the following constants:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a4a0f0c918455a57b253e78e46afa441.png)'
  prefs: []
  type: TYPE_IMG
- en: 'The simulation over 1000 seconds shows the expected behavior. The left-hand
    extremity has a null temperature gradient, and the right-hand extremity stays
    at constant temperature. The permanent regime is a rod at a uniform temperature:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/84d2c75b40be889939d168f8096bbdd8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 8: Simulation of the temperature evolution with the left-hand extremity
    insulated and the right-hand extremity set at a constant temperature. Image by
    the author.'
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We reviewed the problem of the temperature profile dynamics in a thin metal
    rod. Starting from the governing differential equation, we derived the general
    solution.
  prefs: []
  type: TYPE_NORMAL
- en: We considered various boundary configurations. The boundary scenarios led us
    to express the initial temperature profile according to one of the [Fourier series
    flavors we derived in the previous post](https://medium.com/towards-data-science/assorted-flavors-of-fourier-series-on-a-finite-domain-8c93904df6ae).
    The Fourier series expression of the initial temperature profile allowed us to
    solve the integration constants and run the simulation of u(x, t).
  prefs: []
  type: TYPE_NORMAL
- en: Thank you for your time. You can experiment with the code [in this repository](https://github.com/sebastiengilbert73/heated_metal_bar).
    Let me know what you think!
  prefs: []
  type: TYPE_NORMAL
- en: ¹ If a term is missing, please let me know in the comments.
  prefs: []
  type: TYPE_NORMAL
- en: Annex I
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We want to demonstrate that the solution to the heat diffusion equation
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8b268f9c99bbe616f936f7716e5ef313.png)'
  prefs: []
  type: TYPE_IMG
- en: 'is:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d8ada3abd6ca3fa718b52133693b6dcb.png)'
  prefs: []
  type: TYPE_IMG
- en: Let’s first acknowledge that, if a function u*(x, t) satisfies (A1.1), then
    the function u*(x, t) + Cx + D + Et + E/(2α) x² also satisfies (A1.1)
  prefs: []
  type: TYPE_NORMAL
- en: 'Proof:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3c5010fc8e84f6ee8681cb4d80df9073.png)'
  prefs: []
  type: TYPE_IMG
- en: Therefore, the general solution must include terms in Cx + D + Et + E/(2α) x².
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, the leap of faith: the *hypothesis of separability*.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let us assume that a solution u(x, t) has the following form:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/34a184ee6e871ff2119b10c5faef8131.png)'
  prefs: []
  type: TYPE_IMG
- en: Why make such an assumption?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Because it will make the solution easier to find. The justification will appear
    *a posteriori* if we can find a valid solution. In this case, we don’t risk running
    into erroneous conclusions based on a false assumption since we can always differentiate
    the found solution and check whether it satisfies (A1.1).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3215ebbc060c36c8800d5b4a05130b08.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.4) and (A1.5) into (A1.1):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cf6cda988d71875c7b325e6b38e9dcff.png)'
  prefs: []
  type: TYPE_IMG
- en: In equation (A1.9), we observed that we equated a function of t with a function
    of x. The only way to satisfy this equation is to make both functions constant.
    Hence, we introduced the constant λₙ that must match both expressions.
  prefs: []
  type: TYPE_NORMAL
- en: '(a) Solving for Gₙ(t), from (A1.9):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a05f5ea581c2b222073af1187ba6520e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.11) and (A1.12) into (A1.10):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce34504e1da5a32fd51f785811f0e617.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.15) into (A1.11):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dd2393f23e7712bcf2582947c071985a.png)'
  prefs: []
  type: TYPE_IMG
- en: '(b) Solving for Fₙ(x), from (A1.9):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa96699f01351df3c445abbc00d57126.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.18) and (A1.20) into (A1.17):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/172c0c8b3e73a76e1ff2e0e71581fed9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.24) into (A1.18):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6f69848a34f5e9891344f1085f154946.png)'
  prefs: []
  type: TYPE_IMG
- en: We assume that Fₙ(x) is unique and the +- sign inside the sine function gets
    absorbed by the constant Bₙ.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ee9482764691076f91ddbd9ec789995a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Inserting (A1.16) and (A1.26) into the general solution:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/faee39c64f059dd73f03492cfffa87df.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Without loss of generality, we can set G₀=1 and let it get absorbed by the
    constants Aₙ and Bₙ:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6c42546fb65332d8b8bf1a6908fe9936.png)'
  prefs: []
  type: TYPE_IMG
- en: □
  prefs: []
  type: TYPE_NORMAL
