["```py\nmkdir etl-pipelines\ncd etl-pipelines\n```", "```py\npython --version\n```", "```py\ngit clone https://github.com/ilsilfverskiold/etl-pipeline-fargate.git\n```", "```py\npython -m venv etl-env\nsource etl-env/bin/activate  # On Windows use `venv\\Scripts\\activate`\n```", "```py\npip install -r requirements.txt\n```", "```py\npython main.py\n```", "```py\nFROM --platform=linux/amd64 python:3.11-slim\n\nWORKDIR /app\n\nCOPY . /app\n\nRUN pip install --no-cache-dir -r requirements.txt\n\nCMD [\"python\", \"main.py\"]\n```", "```py\n{\n \"Version\": \"2012-10-17\",\n \"Statement\": [\n  {\n   \"Sid\": \"VisualEditor0\",\n   \"Effect\": \"Allow\",\n   \"Action\": [\n    \"logs:CreateLogGroup\",\n    \"iam:CreateRole\",\n    \"iam:AttachRolePolicy\",\n    \"iam:PutRolePolicy\",\n    \"ecs:DescribeTaskDefinition\",\n    ...more\n   ],\n   \"Resource\": \"*\"\n  }\n ]\n}\n```", "```py\naws configure\n```", "```py\naws ecr create-repository --repository-name bigquery-etl-pipeline\n```", "```py\naws ecr get-login-password --region YOUR_REGION | docker login --username AWS --password-stdin YOUR_ACCOUNT_ID.dkr.ecr.YOUR_REGION.amazonaws.com\n```", "```py\ndocker buildx build --platform=linux/amd64 -t bigquery-etl-pipeline .\n```", "```py\ndocker tag bigquery-etl-pipeline:latest YOUR_ACCOUNT_ID.dkr.ecr.YOUR_REGION.amazonaws.com/bigquery-etl-pipeline:latest\n```", "```py\ndocker push YOUR_ACCOUNT_ID.dkr.ecr.YOUR_REGION.amazonaws.com/bigquery-etl-pipeline:latest\n```", "```py\n9f691c4f0216: Pushed \nca0189907a60: Pushed \n687f796c98d5: Pushed \n6beef49679a3: Pushed \nb0dce122021b: Pushed \n4de04bd13c4a: Pushed \ncf9b23ff5651: Pushed \n644fed2a3898: Pushed \n```", "```py\naws iam create-role --role-name etl-pipeline-task-role --assume-role-policy-document file://ecs-tasks-trust-policy.json\naws iam create-role --role-name etl-pipeline-execution-role --assume-role-policy-document file://ecs-tasks-trust-policy.json\n```", "```py\naws iam attach-role-policy --role-name etl-pipeline-execution-role --policy-arn arn:aws:iam::aws:policy/service-role/AmazonECSTaskExecutionRolePolicy\n```", "```py\naws iam create-service-linked-role --aws-service-name ecs.amazonaws.com\n```", "```py\naws logs create-log-group --log-group-name /ecs/etl-pipeline-logs\n```", "```py\n{\n    \"family\": \"my-etl-task\",\n    \"taskRoleArn\": \"arn:aws:iam::ACCOUNT_ID:role/etl-pipeline-task-role\",\n    \"executionRoleArn\": \"arn:aws:iam::ACCOUNT_ID:role/etl-pipeline-execution-role\",\n    \"networkMode\": \"awsvpc\",\n    \"containerDefinitions\": [\n        {\n            \"name\": \"my-etl-container\",\n            \"image\": \"ACCOUNT_ID.dkr.ecr.REGION.amazonaws.com/bigquery-etl-pipeline:latest\", \n            \"cpu\": 256,\n            \"memory\": 512,\n            \"essential\": true,\n            \"logConfiguration\": {\n                \"logDriver\": \"awslogs\",\n                \"options\": {\n                    \"awslogs-group\": \"/ecs/etl-pipeline-logs\",\n                    \"awslogs-region\": \"REGION\",\n                    \"awslogs-stream-prefix\": \"ecs\"\n                }\n            }\n        }\n    ],\n    \"requiresCompatibilities\": [\"FARGATE\"],\n    \"cpu\": \"256\",\n    \"memory\": \"512\"\n}\n```", "```py\naws ecs register-task-definition --cli-input-json file://task-definition.json\n```", "```py\naws ecs create-cluster --cluster-name etl-pipeline-cluster\n```", "```py\naws ec2 describe-subnets\n```", "```py\naws ec2 describe-security-groups\n```", "```py\naws ecs run-task \\\n    --cluster etl-pipeline-cluster \\\n    --launch-type FARGATE \\\n    --task-definition my-etl-task \\\n    --count 1 \\\n    --network-configuration \"awsvpcConfiguration={subnets=[SUBNET_ID],securityGroups=[SECURITY_GROUP_ID],assignPublicIp=ENABLED}\"\n```", "```py\naws iam create-role \\\n    --role-name ecsEventsRole \\\n    --assume-role-policy-document file://trust-policy-for-eventbridge.json\n```", "```py\naws iam attach-role-policy \\\n    --role-name ecsEventsRole \\\n    --policy-arn arn:aws:iam::aws:policy/AmazonECS_FullAccess\n```", "```py\naws events put-rule \\\n    --name \"ETLPipelineDailyRun\" \\\n    --schedule-expression \"cron(0 5 * * ? *)\" \\\n    --state ENABLED\n```", "```py\naws events put-targets --rule \"ETLPipelineDailyRun\" \\\n    --targets \"[{\\\"Id\\\":\\\"1\\\",\\\"Arn\\\":\\\"arn:aws:ecs:REGION:ACCOUNT_NUMBER:cluster/etl-pipeline-cluster\\\",\\\"RoleArn\\\":\\\"arn:aws:iam::ACCOUNT_NUMBER:role/ecsEventsRole\\\",\\\"EcsParameters\\\":{\\\"TaskDefinitionArn\\\":\\\"arn:aws:ecs:REGION:ACCOUNT_NUMBER:task-definition/my-etl-task\\\",\\\"TaskCount\\\":1,\\\"LaunchType\\\":\\\"FARGATE\\\",\\\"NetworkConfiguration\\\":{\\\"awsvpcConfiguration\\\":{\\\"Subnets\\\":[\\\"SUBNET_ID\\\"],\\\"SecurityGroups\\\":[\\\"SECURITY_GROUP_ID\\\"],\\\"AssignPublicIp\\\":\\\"ENABLED\\\"}}}}]\"\n```"]