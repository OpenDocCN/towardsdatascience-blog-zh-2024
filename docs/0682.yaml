- en: Designing RAGs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/designing-rags-dbb9a7c1d729?source=collection_archive---------1-----------------------#2024-03-14](https://towardsdatascience.com/designing-rags-dbb9a7c1d729?source=collection_archive---------1-----------------------#2024-03-14)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: GenAI
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A guide to Retrieval-Augmented Generation design choices.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://michaloleszak.medium.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)[![Michał
    Oleszak](../Images/61b32e70cec4ba54612a8ca22e977176.png)](https://michaloleszak.medium.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)
    [Michał Oleszak](https://michaloleszak.medium.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--dbb9a7c1d729--------------------------------)
    ·20 min read·Mar 14, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/29e0fe2271c1618c0f75c4d3d5afef65.png)'
  prefs: []
  type: TYPE_IMG
- en: Building Retrieval-Augmented Generation systems, or RAGs, is easy. With tools
    like LamaIndex or LangChain, you can get your RAG-based Large Language Model up
    and running in no time. Sure, some engineering effort is needed to ensure the
    system is efficient and scales well, but in principle, *building* the RAG is the
    easy part. What’s much more difficult is *designing* it well.
  prefs: []
  type: TYPE_NORMAL
- en: Having recently gone through the process myself, I discovered how many big and
    small design choices need to be made for a Retrieval-Augmented Generation system.
    Each of them can potentially impact the performance, behavior, and cost of your
    RAG-based LLM, sometimes in non-obvious ways.
  prefs: []
  type: TYPE_NORMAL
- en: Without further ado, let me present this — by no means exhaustive yet hopefully
    useful — list of RAG design choices. Let it guide your design efforts.
  prefs: []
  type: TYPE_NORMAL
- en: RAG components
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Retrieval-Augmented Generation gives a chatbot access to some external data
    so that it can answer users’ questions based on this data rather than general
    knowledge or its own dreamed-up hallucinations.
  prefs: []
  type: TYPE_NORMAL
- en: 'As such, RAG systems can become complex: we need to get the data, parse it
    to a chatbot-friendly format, make it available and searchable to…'
  prefs: []
  type: TYPE_NORMAL
