- en: 'Effortless Data Handling: Find Variables Across Multiple Data Files with R'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 轻松的数据处理：使用R在多个数据文件中查找变量
- en: 原文：[https://towardsdatascience.com/effortless-data-handling-find-variables-across-multiple-data-files-with-r-e01c9715b4c7?source=collection_archive---------12-----------------------#2024-11-27](https://towardsdatascience.com/effortless-data-handling-find-variables-across-multiple-data-files-with-r-e01c9715b4c7?source=collection_archive---------12-----------------------#2024-11-27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/effortless-data-handling-find-variables-across-multiple-data-files-with-r-e01c9715b4c7?source=collection_archive---------12-----------------------#2024-11-27](https://towardsdatascience.com/effortless-data-handling-find-variables-across-multiple-data-files-with-r-e01c9715b4c7?source=collection_archive---------12-----------------------#2024-11-27)
- en: A practical solution with code and workflow
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一种带代码和工作流程的实用解决方案
- en: '[](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)[![Rodrigo
    M Carrillo Larco, MD, PhD](../Images/458ed24625ded66ef47c5af718db3659.png)](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)
    [Rodrigo M Carrillo Larco, MD, PhD](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)[![Rodrigo
    M Carrillo Larco, MD, PhD](../Images/458ed24625ded66ef47c5af718db3659.png)](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)
    [Rodrigo M Carrillo Larco, MD, PhD](https://medium.com/@rcarrillo90?source=post_page---byline--e01c9715b4c7--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)
    ·7 min read·Nov 27, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e01c9715b4c7--------------------------------)
    ·阅读时间7分钟·2024年11月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Lost in a maze of datasets and endless data dictionaries? Say goodbye to tedious
    variable hunting! Discover how to quickly identify and extract the variables you
    need from multiple SAS files using two simple R functions. Streamline your workflow,
    save time, and make data preparation a breeze!
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据集和无尽的数据字典的迷宫中迷失了？告别繁琐的变量查找吧！了解如何通过两个简单的R函数，快速识别并提取你所需要的变量，轻松处理多个SAS文件。简化你的工作流程，节省时间，让数据准备变得轻松愉快！
- en: '![](../Images/dcdeb2464302a41b9c62b63c27bce77f.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcdeb2464302a41b9c62b63c27bce77f.png)'
- en: Photo by [imgix](https://unsplash.com/@imgix?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[imgix](https://unsplash.com/@imgix?utm_source=medium&utm_medium=referral)在[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'As a researcher with over seven years of experience working with health data,
    I’ve often been handed folders full of datasets. For example, imagine opening
    a folder containing 56 SAS files, each with unique data (example below). If you’ve
    been in this situation, you know the frustration: trying to locate a specific
    variable in a sea of files feels like looking for a needle in a haystack.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一名拥有超过七年健康数据处理经验的研究员，我经常收到包含大量数据集的文件夹。例如，想象一下打开一个包含56个SAS文件的文件夹，每个文件都有独特的数据（见下文示例）。如果你曾经遇到过这种情况，你一定知道那种沮丧的感觉：在成堆的文件中找到特定的变量，感觉就像是在大海捞针。
- en: '![](../Images/0692103e729e960899984aad98fa2ab6.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0692103e729e960899984aad98fa2ab6.png)'
- en: Screenshot taken by the author of a local folder. File names have been blurred
    to maintain the confidentiality of the datasets.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这张截图由作者拍摄，显示了本地文件夹。文件名已被模糊处理，以保护数据集的机密性。
- en: At first glance, this may not seem like an issue if you already know where your
    variables of interest are. But often, you don’t. While a data dictionary is usually
    provided, it’s frequently a PDF document that lists variables across multiple
    pages. Finding what you need might involve searching (Ctrl+F) for a variable on
    page 100, only to realize the dataset’s name is listed on page 10\. Scrolling
    back and forth wastes time.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 初看起来，如果你已经知道你的感兴趣变量在哪里，这似乎不是个问题。但通常，你并不知道。虽然通常会提供数据字典，但它通常是一个PDF文档，列出了跨多页的变量。找到你需要的内容可能需要搜索（Ctrl+F）第100页上的某个变量，结果却发现数据集的名称出现在第10页。来回滚动浪费了很多时间。
- en: '![](../Images/45d4e29bf9abe6d1dcc69d3b93f706bd.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45d4e29bf9abe6d1dcc69d3b93f706bd.png)'
- en: Screenshot taken by the author of a data dictionary. Variable names and labels
    have been blurred to maintain the confidentiality of the datasets.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作者拍摄的数据字典截图。变量名称和标签已被模糊处理，以保持数据集的机密性。
- en: To save myself from this tedious process, I created a reproducible R workflow
    to read all datasets in a folder, generate a consolidated dataframe of variable
    names and their labels (example below), and identify where each variable is located.
    This approach has made my work faster and more efficient. Here’s how you can do
    it, step by step.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 为了避免繁琐的过程，我创建了一个可重复的R工作流，可以读取文件夹中的所有数据集，生成一个包含变量名称及其标签的合并数据框（见下方示例），并识别每个变量的位置。这种方法使我的工作更快、更高效。以下是逐步操作的方法。
- en: '![](../Images/4a5d8deb1d639e8e14b1b4f8b920bb56.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4a5d8deb1d639e8e14b1b4f8b920bb56.png)'
- en: Screenshot taken by the author of of how the `names_labels` dataset looks like
    (see step 2). Variable names and labels have been blurred to maintain the confidentiality
    of the datasets.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 作者拍摄的`names_labels`数据集的截图（参见步骤2）。变量名称和标签已被模糊处理，以保持数据集的机密性。
- en: '**Step-by-Step Guide**'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**逐步指南**'
- en: '**Step 1: Use the get_names_labels Function**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 1：使用get_names_labels函数**'
- en: First, use the custom function `get_names_labels` (code provided at the end
    of this post). This function requires the folder path where all your datasets
    are stored.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，使用自定义函数`get_names_labels`（代码见本文末尾）。该函数需要您存储所有数据集的文件夹路径。
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Step 2: Generate a Variable Dictionary**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 2：生成变量字典**'
- en: 'The `get_names_labels` function will create a dataframe named `names_labels`
    (like the example above), which includes:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '`get_names_labels`函数将创建一个名为`names_labels`的数据框（如上例所示），其中包括：'
- en: · Variable name (variable_name)
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: · 变量名称（variable_name）
- en: · Variable label (variable_label)
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: · 变量标签（variable_label）
- en: · The name of the dataset(s) where the variable was found (file_name)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: · 变量所在的数据集名称（file_name）
- en: Depending on the number and size of the datasets, this process may take a minute
    or two.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 根据数据集的数量和大小，这个过程可能需要一两分钟。
- en: '**Step 3: Search for Variables**'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 3：搜索变量**'
- en: Once the `names_labels` dataframe is generated, you can search for the variables
    you need. Filter the `variable_name` or `variable_label` columns to locate relevant
    terms. For example, if you’re looking for gender-related variables, they might
    be labeled as sex, gender, is_male, or is_female.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦生成了`names_labels`数据框，您就可以搜索所需的变量。筛选`variable_name`或`variable_label`列以定位相关术语。例如，如果您在寻找与性别相关的变量，它们可能会被标记为sex、gender、is_male或is_female。
- en: 'Be mindful that similar variables might exist in multiple datasets. For instance,
    age could appear in the main questionnaire, a clinical dataset, and a laboratory
    dataset. These variables might look identical but differ based on how and where
    the data was collected. For example:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，类似的变量可能出现在多个数据集中。例如，年龄可能出现在主问卷、临床数据集和实验室数据集中。这些变量看起来可能相同，但根据数据的收集方式和地点不同，可能会有所不同。例如：
- en: '· Age in the main questionnaire: Collected from all survey participants.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: · 主问卷中的年龄：从所有调查参与者收集。
- en: '· Age in clinical/lab datasets: Limited to a subset invited for further assessments
    or those who agreed to participate.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: · 临床/实验室数据集中的年龄：仅限于受邀进一步评估的子集或同意参与的人员。
- en: In such cases, the variable from the main questionnaire might be more representative
    of the full population.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，主问卷中的变量可能更能代表整个群体。
- en: '**Step 4: Identify Relevant Datasets**'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 4：识别相关数据集**'
- en: Once you’ve determined which variables you need, filter the `names_labels` dataframe
    to identify the original datasets (`file_name`) containing them. If a variable
    appears in multiple datasets (e.g., `ID`), you’ll need to identify which dataset
    includes all the variables you’re interested in.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 确定所需的变量后，筛选`names_labels`数据框以识别包含这些变量的原始数据集（`file_name`）。如果某个变量出现在多个数据集中（例如，`ID`），您需要确定哪个数据集包含您感兴趣的所有变量。
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If one of the variables can be found in multiple original datasets (e.g., `ID`),
    you will filter `names_labels` to keep only the original dataset with both variables
    (e.g., `ID` and `VAR1_A`). In our case, the `names_labels` dataframe will be reduced
    to only two rows, one for each of the two variables we were looking for, both
    of which will be found in the same original dataset.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果某个变量在多个原始数据集中都能找到（例如，`ID`），您需要筛选`names_labels`，只保留包含两个变量的原始数据集（例如，`ID`和`VAR1_A`）。在我们的例子中，`names_labels`数据框将只剩下两行，每行对应我们要查找的两个变量，它们都将在同一个原始数据集中找到。
- en: '[PRE2]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**Step 5: Extract the Data**'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤 5：提取数据**'
- en: Now, use the `read_and_select` function (provided at the end). Pass the name
    of the original dataset containing the variables of interest. This function creates
    a new dataframe in your R environment with only the selected variables. For example,
    if your variables are in `ABC.sas7bdat`, the function will create a new dataframe
    called `ABC` with just those variables.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，使用`read_and_select`函数（位于文末）。传入包含相关变量的原始数据集的名称。这个函数会在你的R环境中创建一个新的数据框，仅包含所选择的变量。例如，如果你的变量位于`ABC.sas7bdat`中，函数将创建一个名为`ABC`的新数据框，里面只包含那些变量。
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '**Step 6: Clean Your Environment**'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤6：清理你的环境**'
- en: To keep your workspace tidy, remove unnecessary elements and retain only the
    new dataframe(s) you need. For example, if your variables of interest came from
    `ABC.sas7bdat`, you’ll keep the filtered dataframe `ABC` which was the output
    of the `read_and_select` function.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了保持工作空间整洁，删除不必要的元素，仅保留你需要的新数据框。例如，如果你的相关变量来自`ABC.sas7bdat`，你将保留过滤后的数据框`ABC`，它是`read_and_select`函数的输出结果。
- en: '[PRE4]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Step 7: Merge Multiple Datasets (Optional)**'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: '**步骤7：合并多个数据集（可选）**'
- en: If your variables of interest are in more than one dataset (e.g., `ABC` and
    `DEF`), you can merge them. Use a unique identifier, such as `ID`, to combine
    the datasets into a single dataframe. The result will be a unified dataframe with
    all the variables you need. You will get a `df` dataframe with all the observations
    and only the variables you needed.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的相关变量分布在多个数据集中（例如`ABC`和`DEF`），你可以将它们合并。使用唯一标识符，如`ID`，将数据集合并成一个单一的数据框。最终结果将是一个统一的数据框，包含你所需的所有变量。你将获得一个`df`数据框，里面包含所有观察值，但只有你需要的变量。
- en: '[PRE5]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Why This Workflow Works?**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**为什么这个工作流程有效？**'
- en: This approach saves time and organizes your work into a single, reproducible
    script. If you later decide to add more variables, simply revisit `steps 2 and
    3`, update your list, and rerun the script. This flexibility is invaluable when
    dealing with large datasets. While you’ll still need to consult documentation
    to understand variable definitions and data collection methods, this workflow
    reduces the effort required to locate and prepare your data. Handling multiple
    datasets doesn’t have to be overwhelming. By leveraging my custom functions like
    `get_names_labels` and `read_and_select`, you can streamline your workflow for
    data preparation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这种方法节省了时间，并将你的工作组织成一个单一、可重复的脚本。如果你后来决定添加更多变量，只需重新访问`步骤2和3`，更新你的列表，并重新运行脚本。这种灵活性在处理大数据集时非常宝贵。虽然你仍然需要查阅文档以理解变量定义和数据收集方法，但这种工作流程减少了定位和准备数据的工作量。处理多个数据集不必让人感到不知所措。通过使用像`get_names_labels`和`read_and_select`这样的自定义函数，你可以简化数据准备的工作流程。
- en: '***Have you faced similar challenges when working with multiple datasets? Share
    your thoughts or tips in the comments, or give this article a thumbs up if you
    found it helpful. Let’s keep the conversation going and learn from each other!***'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '***你是否在处理多个数据集时遇到过类似的挑战？如果有，欢迎在评论中分享你的想法或小贴士，或者如果你觉得这篇文章有帮助，给它点赞。让我们继续交流，互相学习！***'
- en: Below are the two custom functions. Save them in an `R` script file, and load
    the script into your working environment whenever needed. For example, you could
    save the file as `_Functions.R` for easy access.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是两个自定义函数。将它们保存在一个`R`脚本文件中，并在需要时将脚本加载到你的工作环境中。例如，你可以将文件保存为`_Functions.R`，以便随时访问。
- en: '[PRE6]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '*You can find me on* [*LinkedIn*](https://www.linkedin.com/in/rodrigo-m-carrillo-larco-md-phd-39016a27/)
    *and happy to connect and discuss.*'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '*你可以在* [*LinkedIn*](https://www.linkedin.com/in/rodrigo-m-carrillo-larco-md-phd-39016a27/)
    *上找到我，期待与你联系并讨论。*'
