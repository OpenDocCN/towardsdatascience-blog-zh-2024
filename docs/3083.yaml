- en: Track Computer Vision Experiments with MLflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/track-computer-vision-experiments-with-mlflow-3852f557b27a?source=collection_archive---------4-----------------------#2024-12-26](https://towardsdatascience.com/track-computer-vision-experiments-with-mlflow-3852f557b27a?source=collection_archive---------4-----------------------#2024-12-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Discover how to set up an efficient MLflow environment to track your experiments,
    compare and choose the best model for deployment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://yagmurcigdemaktas.medium.com/?source=post_page---byline--3852f557b27a--------------------------------)[![Yağmur
    Çiğdem Aktaş](../Images/3b51de551bed7355f467272fc4bd6c50.png)](https://yagmurcigdemaktas.medium.com/?source=post_page---byline--3852f557b27a--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3852f557b27a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3852f557b27a--------------------------------)
    [Yağmur Çiğdem Aktaş](https://yagmurcigdemaktas.medium.com/?source=post_page---byline--3852f557b27a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3852f557b27a--------------------------------)
    ·9 min read·Dec 26, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Training and fine-tuning various models is a basic task for every computer vision
    researcher. Even for easy ones, we do a hyper-parameter search to find the optimal
    way of training the model over our custom dataset. Data augmentation techniques
    (which include many different options already), the choice of optimizer, learning
    rate, and the model itself. Is it the best architecture for my case? Should I
    add more layers, change the architecture, and many more questions will wait to
    be asked and searched?
  prefs: []
  type: TYPE_NORMAL
- en: 'While searching for an answer to all these questions, I used to save the model
    training process log files and output checkpoints in different folders in my local,
    change the output directory name every time I ran a training, and compare the
    final metrics manually one-by-one. Tackling the experiment-tracking process in
    such a manual way has many disadvantages: it’s old school, time and energy-consuming,
    and prone to errors.'
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, I will show you how to use MLflow, one of the best tools
    to track your experiment, allowing you to log whatever information you need, visualize
    and compare the different training experiments you have accomplished, and decide
    which training is the optimal choice in a user- (and eyes-) friendly environment!
  prefs: []
  type: TYPE_NORMAL
