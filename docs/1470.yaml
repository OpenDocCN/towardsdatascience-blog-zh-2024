- en: How to Pivot Tables in SQL
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-pivot-tables-in-sql-88ef2ada5d96?source=collection_archive---------2-----------------------#2024-06-12](https://towardsdatascience.com/how-to-pivot-tables-in-sql-88ef2ada5d96?source=collection_archive---------2-----------------------#2024-06-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: DATA SCIENCE, SQL, ETL
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A comprehensive guide to creating pivot tables in SQL for enhanced data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@yunglinchang?source=post_page---byline--88ef2ada5d96--------------------------------)[![Jack
    Chang](../Images/6783c539c3523b2fd58ada3770c2c99a.png)](https://medium.com/@yunglinchang?source=post_page---byline--88ef2ada5d96--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--88ef2ada5d96--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--88ef2ada5d96--------------------------------)
    [Jack Chang](https://medium.com/@yunglinchang?source=post_page---byline--88ef2ada5d96--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--88ef2ada5d96--------------------------------)
    ·11 min read·Jun 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3c4d61dc0a7e693c31ccfd1ad8255352.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mika Baumeister](https://unsplash.com/@mbaumi?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Preface
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[Structured Query Language (SQL)](https://en.wikipedia.org/wiki/SQL) is an
    essential tool for data professionals such as data scientists and data analysts
    as it allows them to retrieve, manipulate, and analyze large datasets efficiently
    and effectively. It is a widely used tool in the industry, making it an important
    skill to have. **In this article, I want to share how to create Pivot tables in
    SQL.** This article follows up on my last article “[Pandas!!! What I’ve Learned
    after my 1st On-site Technical Interview](https://medium.com/towards-data-science/pandas-what-ive-learned-after-my-1st-on-site-technical-interview-4fb94dbc1b45)”,
    where I shared my learnings on Pandas.'
  prefs: []
  type: TYPE_NORMAL
- en: Did you know that SQL can be used to analyze data?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In SQL, a Pivot table is a technique used to transform data from rows to columns.
  prefs: []
  type: TYPE_NORMAL
- en: 'Joan Casteel’s [Oracle 12c: SQL](https://a.co/d/2Uwgbqd) book mentions that
    “**a pivot table is a presentation of multidimensional data.**” With a pivot table,
    a user can view different aggregations of different data dimensions. It is a powerful
    tool for data analysis, as it allows users to aggregate, summarize, and present
    data in a more intuitive and easy-to-read format.'
  prefs: []
  type: TYPE_NORMAL
- en: For instance, an owner of an ice cream shop may want to analyze which flavor
    of ice cream has sold the best in the past week. A pivot table would be useful
    in this case, with two dimensions of data — ice cream flavor and day of the week.
    Revenue can be summed up as the aggregation for the analysis.
  prefs: []
  type: TYPE_NORMAL
- en: The ice cream shop owner can easily use a pivot table to compare sales by ice
    cream flavor and day of the week. The pivot table will transform the data, making
    it easier to spot patterns and trends. With this information, the owner can make
    data-driven decisions, such as increasing the supply of the most popular ice cream
    flavor or adjusting the prices based on demand.
  prefs: []
  type: TYPE_NORMAL
- en: Overall, pivot tables are an excellent tool for data analysis, allowing users
    to summarize and present multidimensional data in a more intuitive and meaningful
    way. They are widely used in industries such as finance, retail, and healthcare,
    where there is a need to analyze large amounts of complex data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/186a5b835a755ae284ea4f11a994e567.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Lama Roscu](https://unsplash.com/@lamaroscu?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Overview
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**This article will be based on the analytic function in Oracle, typically
    the “PIVOT” function.** It is organized to provide a comprehensive view of utilizing
    pivot tables in SQL in different situations. We will not only go through the most
    naive way to create a pivot table but also the easiest and most common way to
    do the job with the PIVOT function. Last but not least, I will also talk about
    some of the limitations of the PIVOT function.'
  prefs: []
  type: TYPE_NORMAL
- en: 'FYI:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I will use Oracle 11g, but the functions are the same in the newer Oracle 12c
    and above.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The demonstration dataset is [Microsoft](https://github.com/microsoft)’s [Northwind
    dataset](https://github.com/microsoft/sql-server-samples/tree/master/samples/databases/northwind-pubs).
    The sales data for Northwind Traders, a fictitious specialty foods export­/import
    company. The database is [free of use](https://github.com/microsoft/sql-server-samples/blob/master/license.txt)
    and widely distributed for learning and demonstration purposes. Be sure to set
    up the database environment beforehand! I also attached the Northwind schema below:'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: If you are unfamiliar with SQL*Plus, check on Oracle’s [SQL*Plus Quick Start](https://docs.oracle.com/cd/B19306_01/server.102/b14357/qstart.htm)
    before starting.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Without further ado, let’s get started!
  prefs: []
  type: TYPE_NORMAL
- en: Pivot Tables with “DECODE”
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/74a9451ab9ff3d7249015797d4488746.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jean-Philippe Delberghe](https://unsplash.com/@jipy32?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'The crudest way to pivot a table is to utilize the function: [**DECODE()**](https://docs.oracle.com/en/database/oracle/oracle-database/21/sqlrf/DECODE.html#GUID-39341D91-3442-4730-BD34-D3CF5D4701CE).
    DECODE() function is like an if else statement. It compares the input with each
    value and produces an output.'
  prefs: []
  type: TYPE_NORMAL
- en: DECODE(input, value1, return1, value2, return2, …, default)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**input/value**: “input” is compared with all the “values”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**return**: if input = value, then “return” is the output.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**default (optional)**: if input != all of the values, then “default” is the
    output.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: When we know how DECODE() works, it is time to make our first pivot table.
  prefs: []
  type: TYPE_NORMAL
- en: '1st Version: Pivot table without total column and row'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/01c28e4ecd251f365a719f825518832c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Pivot table without total column and row, Source: Me'
  prefs: []
  type: TYPE_NORMAL
- en: With DECODE(), we can map out a pseudocode of a pivot table for the ice cream
    shop owner. When the “day of the week” matches each weekday, DECODE() returns
    the day’s revenue; if it does not match, 0 is returned instead.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '2nd Version: Pivot table with total column and row'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/3a58fe26e6b3c13ffbe6a4ba3bddd4a5.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Pivot table with total column and row, Source: Me'
  prefs: []
  type: TYPE_NORMAL
- en: Great job! Now the ice cream shop owner wants to know more about what happened
    with last week's sales. You could upgrade your pivot table by adding a total column
    and total row.
  prefs: []
  type: TYPE_NORMAL
- en: This could be accomplished using the [GROUPING SETS Expression](https://docs.oracle.com/cd/E93962_01/bigData.Doc/eql_onPrem/src/reql_aggregation_grouping_sets.html)
    in a GROUP BY statement. A GROUPING SETS Expression defines criteria for multiple
    GROUP BY aggregations.
  prefs: []
  type: TYPE_NORMAL
- en: GROUPING SETS (attribute1, …, ())
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**attribute**: a single element or a list of elements to GROUP BY'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**()**: an empty group, which will become the pivot table’s TOTAL row'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: NVL() replaces the null row created by () with ‘TOTAL.’ If you are unfamiliar
    with [NVL()](https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/NVL.html#GUID-3AB61E54-9201-4D6A-B48A-79F4C4A034B2),
    it is simply a function to replace null values.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Another way of calculating the TOTAL column is to add all the revenue from
    MONDAY to SUNDAY:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '3rd Version: Pivot table with total column and row and other totals'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/b51145e9666531e26b0b454773076572.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Pivot table with total column and row and other totals, Source: Me'
  prefs: []
  type: TYPE_NORMAL
- en: 'Say that the ice cream owner wanted one more column on the pivot table you
    provided: the total number of purchases of each flavor of ice cream. No problem!
    You can add another “TOTAL” column with the same concept!'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Now that you know how to do a pivot table with DECODE(), let’s try three exercises
    with the Northwind dataset!
  prefs: []
  type: TYPE_NORMAL
- en: Q1\. Let’s say we want to find out how many employees in each of their origin
    countries serve in each region.
  prefs: []
  type: TYPE_NORMAL
- en: To break up this question, first, we can query all distinct regions in the REGION
    table. Also, check what countries the employees are from.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/3627116e1d54ed0917364c2a13a43fe5.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/80132a8d40c683c0db3caebce861de5a.png)'
  prefs: []
  type: TYPE_IMG
- en: We will have to make a 2 * 4 pivot table for this question.
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, we can make a pivot table using DECODE(). A sample answer and output
    are outlined below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2961edeea876bc9ccf18d701f9e086b6.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1c753723386af8721f3b7d2ea9cb6ec6.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Q2\. For each month in 2010, show the revenue of orders processed by each employee.
    Also, round to the nearest dollar and display the total revenue made and the total
    number of orders.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: Notice the FORMAT command and TO_CHAR() function are for formatting purposes.
    If you want to learn more, please check out the [Format Models](https://docs.oracle.com/en/database/oracle/oracle-database/19/sqlrf/Format-Models.html#GUID-DFB23985-2943-4C6A-96DF-DF0F664CED96)
    and [Formatting SQL*Plus Reports](https://docs.oracle.com/database/121/SQPUG/ch_six.htm#SQPUG016)
    section on Oracle’s website.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/20c3ea352b3155d73bf77da29769b3dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Pivot Tables with “PIVOT”
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/93e298803a661c1d579b990d24846251.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Noah Windler](https://unsplash.com/@noahwindler?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Now that you know how to make a pivot table with DECODE(), we can move on to
    the PIVOT() clause introduced to Oracle in its 11g version.
  prefs: []
  type: TYPE_NORMAL
- en: SELECT *
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: FROM ( query)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PIVOT (aggr FOR column IN (value1, value2, …)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: );
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**aggr**: function such as SUM, COUNT, MIN, MAX, or AVG'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**value**: A list of values for *column* to pivot into headings in the cross-tabulation
    query results'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s get back to the ice cream shop example. Here is how we can make it with
    the PIVOT() clause:'
  prefs: []
  type: TYPE_NORMAL
- en: '1st Version: Pivot table without total column and row'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '2nd Version: Pivot table with total column and row'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If you want to add a total column to your pivot table, doing it with the NVL()
    function is a great way.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '3rd Version: Pivot table with total column and row and other totals'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'When other totals come into the scene, there is only one way to solve the problem.
    That is by using the JOIN() clause:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: In the pseudocode above, We utilize the CUBE and ROLLUP Extension in
    GROUP BY. A small explanation will do the job.'
  prefs: []
  type: TYPE_NORMAL
- en: '**CUBE(A, B, C)**: (A, B, C), (A, B), (A, C), (B, C), (A), (B), (C), ()'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ROLLUP(A, B, C)**: (A, B, C), (A, B), (A), ()'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Once we know how the PIVOT() clause work, can you practice it with the Northwind
    dataset we have in part 1?
  prefs: []
  type: TYPE_NORMAL
- en: Q1\. Let’s say we want to find out how many employees in each of their origin
    countries serve in each region.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: Q2\. For each month in 2010, show the revenue of orders processed by each employee.
    Also, round to the nearest dollar and display the total revenue made and the total
    number of orders.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Epilogue
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this guide, we’ve explored the powerful capabilities of pivot tables in SQL,
    focusing on both the **DECODE()** and **PIVOT()** functions. We began with an
    introduction to pivot tables and their significance in transforming rows into
    columns for enhanced data analysis. We then walked through the process of creating
    pivot tables using DECODE() and examined the more streamlined PIVOT() function
    introduced in Oracle 11g, which simplifies pivot table creation. By applying these
    techniques, we’ve demonstrated how to efficiently analyze multidimensional data
    with practical examples, such as the ice cream shop dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/99f5eaa3aca6a02bd505db3ffccfd7dd.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [karl muscat](https://unsplash.com/@kmus07?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Recap and Takeaways
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Pivot tables with DECODE()**: A fundamental approach using the DECODE() function
    to manually pivot data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Pivot tables with PIVOT()**: Utilizing the PIVOT() function for a more efficient
    and readable pivot table creation.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Feel free to share your answers in the comments.** I love to learn about
    data and reflect on (write about) what I’ve learned in practical applications.
    If you enjoyed this article, please give it a clap to show your support. You can
    contact me via [LinkedIn](https://www.linkedin.com/in/yung-linchang/) and [Twitter](https://twitter.com/yunglinchang)
    if you have more to discuss. Also, feel free to follow me on Medium for more data
    science articles to come!'
  prefs: []
  type: TYPE_NORMAL
- en: Come play along in the data science playground!
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
