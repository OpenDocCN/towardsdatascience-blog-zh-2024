- en: How to Boost the Performance of Python Using Caching Techniques
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-boost-the-performance-of-python-using-the-caching-techniques-156368d191e8?source=collection_archive---------1-----------------------#2024-04-29](https://towardsdatascience.com/how-to-boost-the-performance-of-python-using-the-caching-techniques-156368d191e8?source=collection_archive---------1-----------------------#2024-04-29)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/a8f0242aa656e3bb0aa2c2c3a90d3292.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created in Canva by author
  prefs: []
  type: TYPE_NORMAL
- en: Advanced but out-of-the-box caching decoration in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://christophertao.medium.com/?source=post_page---byline--156368d191e8--------------------------------)[![Christopher
    Tao](../Images/bea1e3c81cc62eb28bdba9275d6b326f.png)](https://christophertao.medium.com/?source=post_page---byline--156368d191e8--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--156368d191e8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--156368d191e8--------------------------------)
    [Christopher Tao](https://christophertao.medium.com/?source=post_page---byline--156368d191e8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--156368d191e8--------------------------------)
    ·8 min read·Apr 29, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Once you are not a Python newbie anymore, it will be time to explore built-in
    features in Python. I bet there will be many out-of-the-box built-in features
    in Python that will surprise you. Today, I’ll introduce one of them in this article.
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever encountered scenarios where a function must be executed multiple
    times and some results can be reused? In the first example below, you will see
    that the caching mechanism improved the performance of a recursive function by
    120 times. So, in this article, I’ll introduce the `lru_cache` decorator in `functools`
    which has been built-in in Python since version 3.2.
  prefs: []
  type: TYPE_NORMAL
- en: In the `functools` module, there is another decorator called `cache` that is
    more straightforward. However, easy to use sometimes means less flexibility. So,
    I’ll start with the `cache` decorator and introduce its limitations. Then, how
    `lru_cache` will give us more flexibility will be focused on.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Recap of the @cache decorator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/cb2b78c9c69e86ae837c9d94003e0560.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created in Canva by author
  prefs: []
  type: TYPE_NORMAL
