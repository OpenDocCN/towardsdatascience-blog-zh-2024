- en: An Interactive Visualisation for Your Graph Neural Network Explanations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/an-interactive-visualisation-for-your-graph-neural-network-explanations-1ac79d8ddd0a?source=collection_archive---------3-----------------------#2024-01-29](https://towardsdatascience.com/an-interactive-visualisation-for-your-graph-neural-network-explanations-1ac79d8ddd0a?source=collection_archive---------3-----------------------#2024-01-29)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A step-by-step guide on how to build one in five easy steps, with code already
    written for you…
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@bl3e967?source=post_page---byline--1ac79d8ddd0a--------------------------------)[![Benjamin
    Lee](../Images/a369931c73019143609812354c773151.png)](https://medium.com/@bl3e967?source=post_page---byline--1ac79d8ddd0a--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ac79d8ddd0a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ac79d8ddd0a--------------------------------)
    [Benjamin Lee](https://medium.com/@bl3e967?source=post_page---byline--1ac79d8ddd0a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ac79d8ddd0a--------------------------------)
    ·16 min read·Jan 29, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a76cc13189333b458e5df122b489e9dc.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author. PubMed dataset network composed of 530 nodes and 778 edges,
    drawn using gravis
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I use graph neural networks in my day-to-day job, and I have wasted many days
    due to the lack of a decent network visualisation tool when trying to explain
    and review the outputs of a newly trained model.
  prefs: []
  type: TYPE_NORMAL
- en: So this has motivated me to write this article, where I provide a step-by-step
    guide on how to create a fully interactive network visualisation of a GNN model
    explanation, in Python, **WITHOUT** having to rely on *expensive* third-party
    solutions.
  prefs: []
  type: TYPE_NORMAL
- en: 'We go from static plots like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/26765c6235f45ab6725f31bb7218faff.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author. The default plot generated using torch-geometric. The graph
    is static, layout is unclear as the graph becomes complex, and node/edge importances
    are inconspicuous.
  prefs: []
  type: TYPE_NORMAL
- en: 'To interactive and insightful visualisations like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/882211b776ce55dc64fa099988c1d8c5.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author. Interactive plot generated using gravis. Nodes can be drag-and-dropped,
    and clicking on nodes can display their features and their importance. Green indicates
    higher importance, blue indicates lower importance.
  prefs: []
  type: TYPE_NORMAL
- en: 'This visualisation will differ from existing methods (e.g. `matplotlib`, `networkx`)
    as it will allow us to:'
  prefs: []
  type: TYPE_NORMAL
- en: Drag and drop nodes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
