- en: A Proposed Perfect Package Prototype for Python Projects
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-proposed-perfect-package-prototype-for-python-projects-cf7c2e89c611?source=collection_archive---------7-----------------------#2024-06-18](https://towardsdatascience.com/a-proposed-perfect-package-prototype-for-python-projects-cf7c2e89c611?source=collection_archive---------7-----------------------#2024-06-18)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How to structure your Python package projects to ensure efficiency, effectiveness
    and future-proofing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://grahamharrison-86487.medium.com/?source=post_page---byline--cf7c2e89c611--------------------------------)[![Graham
    Harrison](../Images/c6bfe00c6e0cfcdf3bd042c7fdc03554.png)](https://grahamharrison-86487.medium.com/?source=post_page---byline--cf7c2e89c611--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--cf7c2e89c611--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--cf7c2e89c611--------------------------------)
    [Graham Harrison](https://grahamharrison-86487.medium.com/?source=post_page---byline--cf7c2e89c611--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--cf7c2e89c611--------------------------------)
    ·14 min read·Jun 18, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8129e996abf25c961497accf8962d8bc.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Luke Heibert](https://unsplash.com/@lukeheibert?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/a-lot-of-brown-boxes-that-are-open-gthSas4oYC0?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: There are many options to consider and many decisions to make when laying out
    the structure of a Python package but once those design choices are committed
    to it is very difficult to make fundamental structural changes.
  prefs: []
  type: TYPE_NORMAL
- en: Also, if your users have started embedding the namespaces in their projects
    any changes you do make mean that those users will need to change their source
    code.
  prefs: []
  type: TYPE_NORMAL
- en: Therefore it is vital to make a good set of design and layout decisions for
    your packages at the outset.
  prefs: []
  type: TYPE_NORMAL
- en: The Problem
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: There are a lot of options for organising a Python package, hence it can be
    challenging to find the right design or at least one that will not cause issues
    later on.
  prefs: []
  type: TYPE_NORMAL
- en: The Opportunity
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: If a standard package layout can be established that addresses all the challenges
    and then prototyped in a skeleton project, creating future packages will be a
    quick and simple copy-and-paste.
  prefs: []
  type: TYPE_NORMAL
- en: The Way Forward
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
