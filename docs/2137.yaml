- en: Create Your Own Meal Planner Using ChatGPT
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用ChatGPT创建你自己的餐单计划器
- en: 原文：[https://towardsdatascience.com/create-your-own-meal-planner-using-chatgpt-1dc4dfe3af7e?source=collection_archive---------4-----------------------#2024-09-02](https://towardsdatascience.com/create-your-own-meal-planner-using-chatgpt-1dc4dfe3af7e?source=collection_archive---------4-----------------------#2024-09-02)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/create-your-own-meal-planner-using-chatgpt-1dc4dfe3af7e?source=collection_archive---------4-----------------------#2024-09-02](https://towardsdatascience.com/create-your-own-meal-planner-using-chatgpt-1dc4dfe3af7e?source=collection_archive---------4-----------------------#2024-09-02)
- en: A brief guide to prompt engineering
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 提示工程简要指南
- en: '[](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)[![Corné
    de Ruijt](../Images/0e2b618b404bc65a8b4c8acc1c9c3d69.png)](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)
    [Corné de Ruijt](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)[![Corné
    de Ruijt](../Images/0e2b618b404bc65a8b4c8acc1c9c3d69.png)](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)
    [Corné de Ruijt](https://medium.com/@cornederuijt?source=post_page---byline--1dc4dfe3af7e--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)
    ·16 min read·Sep 2, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1dc4dfe3af7e--------------------------------)
    ·16分钟阅读·2024年9月2日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/2be06bae37516bbfff869c7ec305a2fa.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2be06bae37516bbfff869c7ec305a2fa.png)'
- en: Generated via DALL-E 3 using the prompt “a pizza calzone on a set table as cartoon”.
    Generated on 2024-05–10.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 通过DALL-E 3生成，使用的提示是“卡通风格的餐桌上的披萨卡尔佐内”。生成日期：2024年5月10日。
- en: 1\. Introduction
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 引言
- en: 'We all know the feeling. You come home late from work; your mind feels like
    a tightly squeezed sponge. You walk into the kitchen and are reminded of yet another
    cognitive task: deciding what to eat this evening. But you know that you’re already
    too late to make that decision, as you’ve unconsciously grabbed the cookie jar
    and put one in your mouth.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们都知道这种感觉。你工作到很晚才回家；大脑像被紧紧挤压的海绵一样。你走进厨房，又被提醒了一个认知任务：今晚吃什么。但你知道，你已经太晚做出这个决定，因为你无意识地抓起了饼干罐，并且把其中一个吃掉了。
- en: 'Luckily, there’s a solution: meal planning. Deciding up front what to eat the
    whole week, getting groceries for the whole week, and already preparing (parts
    of) some meals before the week starts helps to eat healthier. But this still requires
    a lot of work: deciding what to eat, compiling the grocery list, deciding whether
    ordering groceries or heading to the supermarket is the best thing to do. Well,
    thankfully, we now have a magic wand for such tasks: ChatGPT.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，已经有了解决方案：餐单规划。提前决定一周的餐食，采购一周的食材，并在一周开始之前就准备好（部分）餐食，这有助于更健康地饮食。但这仍然需要大量的工作：决定吃什么，列出购物清单，决定是订购食材还是去超市更合适。幸运的是，我们现在有了这样一个“魔法棒”来完成这些任务：ChatGPT。
- en: In short, in this tutorial we will guide you towards creating your own meal
    planner using ChatGPT. You will get some familiarity with common prompt engineering
    techniques (techniques that steer ChatGPT’s response) and how to use this in Python.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 简而言之，在本教程中，我们将引导你使用ChatGPT创建自己的餐单计划器。你将对常见的提示工程技巧（那些引导ChatGPT回答的技巧）有所了解，并学习如何在Python中使用这些技巧。
- en: 'Ready? Let’s get started! In case you want to use/download the notebook version
    of this tutorial, this is available on Github:'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 准备好了吗？让我们开始吧！如果你想使用/下载本教程的笔记本版本，可以在Github上找到：
- en: '[](https://github.com/cornederuijt/LLM-workshop/blob/main/scripts/%5BJNB_11_03_24_04_01_e_a_04_a%5D%20Create%20you%20own%20meal%20planner%2C%20using%20ChatGPT.ipynb?source=post_page-----1dc4dfe3af7e--------------------------------)
    [## LLM-workshop/scripts/[JNB_11_03_24_04_01_e_a_04_a] Create you own meal planner,
    using ChatGPT.ipynb…'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://github.com/cornederuijt/LLM-workshop/blob/main/scripts/%5BJNB_11_03_24_04_01_e_a_04_a%5D%20Create%20you%20own%20meal%20planner%2C%20using%20ChatGPT.ipynb?source=post_page-----1dc4dfe3af7e--------------------------------)
    [## LLM-workshop/scripts/[JNB_11_03_24_04_01_e_a_04_a] 使用ChatGPT创建你自己的餐单计划器.ipynb…'
- en: github.com](https://github.com/cornederuijt/LLM-workshop/blob/main/scripts/%5BJNB_11_03_24_04_01_e_a_04_a%5D%20Create%20you%20own%20meal%20planner%2C%20using%20ChatGPT.ipynb?source=post_page-----1dc4dfe3af7e--------------------------------)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '[github.com](https://github.com/cornederuijt/LLM-workshop/blob/main/scripts/%5BJNB_11_03_24_04_01_e_a_04_a%5D%20Create%20you%20own%20meal%20planner%2C%20using%20ChatGPT.ipynb?source=post_page-----1dc4dfe3af7e--------------------------------)'
- en: 1.2\. Prerequisites
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1.2\. 前提条件
- en: In this tutorial, we will use some Python and the OpenAI API to make calls to
    ChatGPT. In theory, one could follow the tutorial without Python coding, by directly
    prompting on the ChatGPT website. However, when moving beyond the basics explained
    in this tutorial, using prompts in combination with Python, or Python LLM packages
    such as LangChain [1], becomes very powerful.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用一些Python代码和OpenAI API来调用ChatGPT。理论上，您可以不编写Python代码，直接在ChatGPT网站上进行提示，但在超越本教程所解释的基础知识时，结合Python或Python
    LLM包（如LangChain [1]）使用提示将变得非常强大。
- en: 'If you just read “LLM” and thought: “What is ‘LLM’?”, no worries. LLM stands
    for Large Language Model, and it is basically a larger class of models that work
    similarly to ChatGPT. So, whenever in this tutorial you may read LLM, just think
    “ChatGPT, or something similar”, and you’ll be good to go.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您看到“LLM”并想知道：“什么是‘LLM’？”，不用担心。LLM是大语言模型（Large Language Model）的缩写，基本上是一个更大的模型类别，其工作原理类似于ChatGPT。因此，在本教程中，您遇到“LLM”时，只需理解为“ChatGPT或类似的东西”，就可以了。
- en: 'To get started, we require the following:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 要开始，我们需要以下内容：
- en: 1\. Some basic understanding of Python. I’ll take the first three Chapters of
    the [“Introduction to Python”](https://app.datacamp.com/learn/courses/intro-to-python-for-data-science)
    (Python Basics, Python Lists, Functions and Packages) DataCamp tutorial as a reference
    point [2].
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 对Python有一些基本了解。我将以[“Python入门”](https://app.datacamp.com/learn/courses/intro-to-python-for-data-science)（Python基础、Python列表、函数和包）DataCamp教程的前三章为参考点[2]。
- en: 2\. An OpenAI account. If you don’t have one, go to the [ChatGPT website](https://chatgpt.com)
    [3], select “log-in”, at the upper-right and select “sign-up” to create an account.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 一个OpenAI帐户。如果您没有帐户，请访问[ChatGPT网站](https://chatgpt.com) [3]，点击右上角的“登录”，然后选择“注册”创建帐户。
- en: 3\. An API key for OpenAI, which we will briefly guide you through next.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. OpenAI的API密钥，我们将在接下来的步骤中简要指导您。
- en: '**1.2.1 Requesting an OpenAI key**'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2.1 申请OpenAI密钥**'
- en: '*To use the OpenAI API you are required to add some credit card information,
    and depending on how OpenAI computes your free credits, you may be billed for
    the API usage. The cost of following this tutorial should be minimal (a few cents)
    [4].*'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '*要使用OpenAI API，您需要提供一些信用卡信息，并且根据OpenAI计算免费额度的方式，您可能会因使用API而产生费用。按照本教程进行操作的成本应该是最小的（几分钱）[4]。*'
- en: 'To programatically interact with OpenAI, we need to request an API key, which
    we can do following these steps:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要通过编程与OpenAI进行交互，我们需要申请一个API密钥，您可以按照以下步骤进行操作：
- en: 1\. Go to [https://platform.openai.com](https://platform.openai.com) and log-in
    using your account.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 访问[https://platform.openai.com](https://platform.openai.com)，并使用您的帐户登录。
- en: 2\. Go to [https://platform.openai.com/account/billing/overview](https://platform.openai.com/account/billing/overview)
    and add your creditcard information.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 访问[https://platform.openai.com/account/billing/overview](https://platform.openai.com/account/billing/overview)，并添加您的信用卡信息。
- en: '3\. Go to API keys: [https://platform.openai.com/api-keys](https://platform.openai.com/api-keys).'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 前往API密钥：[https://platform.openai.com/api-keys](https://platform.openai.com/api-keys)。
- en: 4\. Select “Create new secret key”, OpenAI will create a long text (string)
    that will act as your API key. **Be aware not to share the API key!**
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 选择“创建新的密钥”，OpenAI将生成一串长文本（字符串），它将作为您的API密钥。**请注意不要共享API密钥！**
- en: 5\. Save the key in some convenient location.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 将密钥保存在方便的位置。
- en: 'For simplicity, we’ll assume that you have stored your API key in a keys.yaml
    file on the working directory. The keys.yaml then has the following content:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 为了简便起见，我们假设您已经将API密钥保存在工作目录中的keys.yaml文件中。该文件内容如下：
- en: '[PRE0]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**1.2.2 Installing packages**'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2.2 安装包**'
- en: In this tutorial, we will work with the OpenAI API, for which there is a Python
    package. This can be installed via pip.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 在本教程中，我们将使用OpenAI API，它有一个Python包，可以通过pip安装。
- en: '[PRE1]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Apart from OpenAI, we assume common data packages (pandas, numpy) are already
    installed.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 除OpenAI外，我们假设常用的数据包（如pandas、numpy）已安装。
- en: '**1.2.3 Some safety guardrails**'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**1.2.3 一些安全防护措施**'
- en: Before moving on, we should be aware of some of the risks of using ChatGPT,
    or any AI platform we find online. Even though something as simple as creating
    a meal planner seems benign, there are still some risks we should take into account.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 在继续之前，我们应该意识到使用 ChatGPT 或任何我们在网上找到的 AI 平台的一些风险。即使像创建餐单这样简单的事情看起来无害，仍然有一些风险是我们需要考虑的。
- en: '**Sharing data with OpenAI —** When we interact with ChatGPT, or any other
    LLM/AI-Agent we find on the web, we share our data with that platform. We should
    be aware of this, and avoid sharing privacy-related and/or sensitive information
    with the platform. For example, when creating a meal planner, ChatGPT doesn’t
    need to know that I’m creating this for my friend Alexander William, who lives
    on the Nieuwezijds Voorburgwal (pardon my Dutch) 147 in Amsterdam (spoiler: he
    likes pancakes [10]).'
  id: totrans-38
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**与 OpenAI 分享数据 —** 当我们与 ChatGPT 或任何我们在网上找到的 LLM/AI-Agent 互动时，我们实际上是在与该平台分享我们的数据。我们应该意识到这一点，并避免与该平台分享任何涉及隐私和/或敏感的信息。例如，在创建餐单时，ChatGPT
    并不需要知道我是为我的朋友 Alexander William 创建这个餐单的，他住在阿姆斯特丹的 Nieuwezijds Voorburgwal（抱歉我的荷兰语）147
    号（剧透：他喜欢煎饼 [10]）。'
- en: '**Be aware of the probabilistic nature of LLMs —** In essence, LLMs *predict*
    the most likely word based on the context you provide. Therefore, its output may
    be illogical. A common example is asking ChatGPT how frequent the letter ‘r’ is
    in strawberry, which it may fail to recognize [11]. Although OpenAI and other
    LLM providers are making significant efforts to enhance LLMs’ logical reasoning
    [12], we must remain mindful of potential errors they may produce. I.a.w., be
    wary that if you ask ChatGPT to create a meal plan for your lactose intolerant
    friend, and you explicitly state that the meal plan cannot contain any dairy products,
    ChatGPT might still include dairy products in the meal plan.'
  id: totrans-39
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**要注意 LLM 的概率性特征 —** 本质上，LLM 会根据你提供的上下文*预测*最可能的词。因此，它的输出可能是没有逻辑的。一个常见的例子是询问
    ChatGPT “草莓”中字母“r”的频率，它可能无法识别 [11]。虽然 OpenAI 和其他 LLM 提供商正在努力提升 LLM 的逻辑推理能力 [12]，但我们仍然必须注意它们可能产生的错误。也就是说，要小心，如果你要求
    ChatGPT 为你乳糖不耐症的朋友制定餐单，并明确说明餐单不能包含任何乳制品，ChatGPT 可能仍会在餐单中包含乳制品。'
- en: 2\. The Meal Planner exercise
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 餐单练习
- en: After a hard day’s work, nothing is more degrading than having to solve that
    impossible puzzle of what to eat for dinner. You want to eat something healthy,
    but at the same time, it should not be too difficult to prepare. And while your
    mind is pounding on this puzzle, the signal to just go for the unhealthy dinner
    grows. Why torture ourselves with this puzzle? Let’s just let ChatGPT decide what
    to have for dinner.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在一天的辛勤工作之后，没什么比解决“晚餐吃什么”的难题更让人感到沮丧了。你想吃些健康的东西，但同时又不能太难准备。当你还在为这个问题苦恼时，那个想要吃不健康晚餐的信号愈加强烈。为什么要折磨自己呢？让我们干脆让
    ChatGPT 来决定晚餐吃什么吧。
- en: 'First, let’s load the required packages:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们加载所需的包：
- en: '[PRE2]'
  id: totrans-43
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Let’s load the API key we created in Section 1.2.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们加载在第 1.2 节中创建的 API 密钥。
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Next, we set an environmental parameter to the OpenAI key. This is just to make
    our lives somewhat easier. After this, we don’t have to care too much about the
    API key anymore.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们为 OpenAI 密钥设置一个环境变量。这只是为了让我们的生活稍微轻松一些。之后，我们就不必再太在意 API 密钥了。
- en: '[PRE4]'
  id: totrans-47
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Let’s create the ChatGPT client:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们创建 ChatGPT 客户端：
- en: '[PRE5]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'And let’s make a call to the ChatGPT API:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们调用 ChatGPT API：
- en: '[PRE6]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'GPT response:'
  id: totrans-52
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: GPT 响应：
- en: '[PRE7]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'The answer does feel a bit like a quote I found in a Medium post a little while
    ago by Maximilian Vogel [5]:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 这个答案确实有点像我不久前在 Maximilian Vogel 的 Medium 博客中找到的一句话 [5]：
- en: '*”AI models are like eager office interns, tireless and enthusiastic but desperately
    in need of guidance.”*'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '*“AI 模型就像是热心的办公室实习生，勤奋且充满热情，但迫切需要指导。”*'
- en: It could work if you have a full-time cook working for you and unlimited time
    and budget for preparing meals, but otherwise…
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你有一位全职厨师为你工作，并且有无限的时间和预算来准备餐点，那是可以的，但否则……
- en: Now to think of it, since I’m Dutch, I usually only care about my dinners, since
    for breakfast and lunch I eat the same boring meal every day (oatmeal and a sandwich),
    or occasionally I eat yesterday’s leftovers. So I really only care about diner.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 现在想起来，因为我来自荷兰，所以我通常只关心我的晚餐，因为早餐和午餐我每天都吃同样无聊的餐点（燕麦粥和三明治），或者偶尔我会吃昨天的剩菜。所以我真的只关心晚餐。
- en: So, how to steer ChatGPT’s response in that direction? Let’s find out.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 那么，如何将 ChatGPT 的回应引导到正确的方向呢？让我们来看看。
- en: '***Exercise 1***Adjust the user prompt in the code that was used to create
    the meal plan. Try to steer the meal plan more to your own liking. How does this
    change ChatGPT’s response?'
  id: totrans-59
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***练习 1*** 调整用于创建餐单的代码中的用户提示。尝试将餐单调整到更符合你自己喜好的方向。这会如何改变ChatGPT的回答？'
- en: 3\. Prompting
  id: totrans-60
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 提示
- en: 3.1 User and system prompts
  id: totrans-61
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.1 用户与系统提示
- en: Perhaps the most important technique to steer ChatGPT’s response in our direction
    is by using prompting. Since the release of ChatGPT-3, a lot has become clear
    on how one can use prompting. An extensive guide is given by [OpenAI itself](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering)
    [6], and for some specific tasks, like generating texts for specific purposes
    (like social media posts), additional references exist (e.g., [[7]](https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41)).
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 或许最重要的技巧之一是通过使用提示来引导ChatGPT的回答。自从ChatGPT-3发布以来，关于如何使用提示的很多内容变得更加清晰。OpenAI本身提供了一个详尽的指南[[6]](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering)，并且对于一些特定任务，比如生成特定目的的文本（如社交媒体帖子），还有其他的参考资料（例如，[[7]](https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41)）。
- en: 'One useful element in prompting is the distinction between two types of messages
    that are sent to ChatGPT: *system prompts* and *user prompts*. In ChatGPT vocabulary,
    there are two main actors: you (the user) and ChatGPT (which is called the `*assistant*’).
    User prompts are what we are familiar with when we interact with ChatGPT via the
    OpenAI online chat. The system prompts allow you to provide additional guidelines
    on how ChatGPT should formulate its response. In that sense, how ChatGPT should
    behave.'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在提示中，一个有用的元素是区分发送给ChatGPT的两种消息类型：*系统提示*和*用户提示*。在ChatGPT的词汇中，有两个主要角色：你（用户）和ChatGPT（也被称为`*助手*`）。用户提示是我们在通过OpenAI在线聊天与ChatGPT互动时所熟悉的内容。系统提示允许你提供额外的指导，说明ChatGPT应该如何构建它的回答。从这个意义上说，系统提示定义了ChatGPT应该如何表现。
- en: '![](../Images/ed51c0a07d68b4591824acec41dafc47.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed51c0a07d68b4591824acec41dafc47.png)'
- en: Fig. 2\. System vs assistant vs user prompts
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2\. 系统提示 vs 助手提示 vs 用户提示
- en: One simple way to illustrate this, is by sending the following prompt to ChatGPT.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 一种简单的方式来说明这一点，是通过向ChatGPT发送以下提示。
- en: '[PRE8]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: 'GPT response:'
  id: totrans-68
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: GPT 回应：
- en: '[PRE9]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'So what happens here? We’ve added a system prompt by adding the message:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 那么这里发生了什么呢？我们通过添加以下消息来添加了一个系统提示：
- en: '[PRE10]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: Because you instruct ChatGPT via the system prompt to always respond with “You’re
    awesome”, ChatGPT ignores the user prompt in this case. Congrats, you’ve steered
    ChatGPT’s response to your own liking!
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 因为你通过系统提示指示ChatGPT始终回应“你很棒”，在这种情况下，ChatGPT会忽略用户提示。恭喜你，你已经将ChatGPT的回答引导到你自己的喜好！
- en: '**Exercise 2**'
  id: totrans-73
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**练习 2**'
- en: Adjust the system prompt in the code above to something of your own liking.
    How does ChatGPT’s response change because of it?
  id: totrans-74
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 调整上面代码中的系统提示，使其更符合你自己的喜好。这会如何改变ChatGPT的回答？
- en: 3.2 Prompting tips
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3.2 提示技巧
- en: As briefly mentioned before, OpenAI provides a great resource on how to use
    different prompting techniques, which I can strongly recommend reading [[6]](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering).
    Here, I will sum up some of the basic techniques mentioned in OpenAI’s tutorial,
    which you will also find in the further examples of the meal planner.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，OpenAI提供了一个关于如何使用不同提示技巧的极好资源，我强烈推荐阅读[[6]](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering)。在这里，我将总结OpenAI教程中提到的一些基本技巧，你将在餐单规划器的后续示例中看到这些技巧。
- en: '**1\. Be specific**'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 具体明确**'
- en: Try to include as many details as you can into the prompt. Does the meal plan
    have to be vegetarian? Perhaps pescatarian? Do you want to eat pizza at least
    once a week? Do you normally eat deserts? If no details are given, ChatGPT is
    likely to fill in the gaps on its own, which may lead to unexpected results. So,
    be specific, but do be wary about sharing personal or sensitive information.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试在提示中包含尽可能多的细节。餐单是否必须是素食的？也许是海鲜素食？你是否希望每周至少吃一次披萨？你通常吃甜点吗？如果没有提供细节，ChatGPT可能会自行填补空白，导致意外的结果。所以，要具体，但也要小心不要分享个人或敏感信息。
- en: '**2\. Ask ChatGPT to adopt a persona**'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 请求ChatGPT采用某种角色**'
- en: Perhaps my favorite research on ChatGPT so far is that by telling ChatGPT it’s
    an expert, it apparently provides better results [8]. So why not tell ChatGPT
    that it’s an expert meal planner? Or perhaps it’s an expert in planning Italian
    dishes?
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 也许我最喜欢的关于 ChatGPT 的研究是告诉 ChatGPT 它是一个专家，它显然会提供更好的结果[8]。那么，为什么不告诉 ChatGPT 它是一个专家级的餐单规划师呢？或者说，它是一个擅长规划意大利菜肴的专家呢？
- en: '**3\. Use delimiters**'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: '**3\. 使用分隔符**'
- en: Just like headers help people read and understand text, so do delimiters help
    ChatGPT to understand different parts of a prompt. Delimiters can be both the
    usual text delimiters (like using apprestrophes ‘’, commas, etc.), but also including
    text markup can be useful. Since ChatGPT is trained on, among other training data,
    HTML pages [13], it can easily recognize things like
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 就像标题帮助人们阅读和理解文本一样，分隔符也能帮助 ChatGPT 理解提示的不同部分。分隔符可以是常见的文本分隔符（如使用引号、逗号等），也可以包括文本标记，这也很有用。由于
    ChatGPT 是在 HTML 页面等多种训练数据上进行训练的[13]，它能轻松识别诸如
- en: '[PRE11]'
  id: totrans-83
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: as a list of planets. Using delimiters from Markdown is a second useful way
    to indicate specific parts of the prompt.
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 这样的行星列表。使用 Markdown 的分隔符是指示提示中特定部分的第二种有用方法。
- en: '[PRE12]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '**4\. Split the task into different steps**'
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: '**4\. 将任务拆分成不同的步骤**'
- en: For more complex tasks, it is helpful to split the task into multiple smaller
    tasks. To indicate the individual task, we can again use delimiters.
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 对于更复杂的任务，将任务拆分为多个小任务是有帮助的。为了表示单独的任务，我们可以再次使用分隔符。
- en: '[PRE13]'
  id: totrans-88
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: '**5\. Give examples and a format for the output**'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: '**5\. 给出示例和输出格式**'
- en: 'Lastly, it can be useful to provide an example of how the output of ChatGPT
    should look like. For example, one could add the following prompt to the meal
    planner:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，提供一个 ChatGPT 输出应该是什么样子的示例会很有用。例如，可以在餐单计划中添加如下提示：
- en: '[PRE14]'
  id: totrans-91
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '**Exercise 3**'
  id: totrans-92
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**练习 3**'
- en: ''
  id: totrans-93
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Consider the following prompt:'
  id: totrans-94
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 考虑以下提示：
- en: '[PRE15]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: a. Explain the difference here between the User role and the System role.
  id: totrans-96
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: a. 解释用户角色和系统角色之间的区别。
- en: ''
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: b. Reflect on the prompt using the five prompting tips. Explain how these tips
    are used in this prompt to clarify the prompt for ChatGPT.
  id: totrans-98
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: b. 使用五个提示技巧反思这个提示。解释这些技巧如何帮助澄清提示，以便 ChatGPT 更好地理解。
- en: ''
  id: totrans-99
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: c. Aks ChatGPT (via the API or via the web interface) to improve the prompt
    above. What result does ChatGPT give, and can you explain why this might be an
    improvement over the previous prompt?
  id: totrans-100
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: c. 通过 API 或网页版接口要求 ChatGPT 改进上述提示。ChatGPT 给出的结果是什么，你能解释为什么这比之前的提示更有改善吗？
- en: ''
  id: totrans-101
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'd. In the cell below you find a full code example. Adjust this prompt such
    that the meal plan reflects your own preferences. Use the prompting tips to tailor
    ChatGPT’s output to your needs. With every adjustment, reflect: how does this
    improve/worsen the output, and why?'
  id: totrans-102
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: d. 在下面的单元格中，您将找到完整的代码示例。调整这个提示，使得餐单计划符合您的个人偏好。使用提示技巧来根据您的需求定制 ChatGPT 的输出。每次调整时，反思：这种调整如何改善/恶化输出，为什么？
- en: ''
  id: totrans-103
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Bonus: Also check other prompting guidelines from [[6]](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering).
    How could certain guidelines help to improve the prompt?'
  id: totrans-104
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 附加：还可以查看来自[[6]](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering)的其他提示指南。这些指南如何帮助改善提示的效果？
- en: '[PRE16]'
  id: totrans-105
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 4\. Parsing ChatGPT results to structured formats
  id: totrans-106
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 将 ChatGPT 结果解析为结构化格式
- en: 4.1 Parsing to json
  id: totrans-107
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.1 将数据解析为 JSON
- en: My first encounter with the ChatGPT API was during a talk at Pydata Amsterdam
    2023, where the speaker explained how he used ChatGPT to classify his to-do list.
    For example, to-do items like ‘cleaning’, ‘laundry’, or ‘vacuum cleaning’ would
    be classified as ‘household jobs’. Although classifying the list wasn’t that difficult,
    parsing the classified list was. Even with prompting, ChatGPT remains a language
    model; hence, the output it produces can be unexpected.
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 我第一次接触 ChatGPT API 是在 2023 年的 Pydata Amsterdam 会议上，当时演讲者讲解了他如何利用 ChatGPT 对待办事项列表进行分类。例如，像“清洁”、“洗衣”或“吸尘”等待办事项会被分类为“家务工作”。尽管分类清单本身并不难，但解析这个分类后的列表却是一个挑战。即使使用了提示，ChatGPT
    依然是一个语言模型，因此它产生的输出有时可能是意外的。
- en: Luckily, ChatGPT has improved since this talk, and new Python packages are simplifying
    the parsing process [[9]](https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/).
    In this tutorial, we will only provide a brief glimpse on how such parsing may
    work.
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 幸运的是，自这次演讲以来，ChatGPT 已经有所改进，新的 Python 包简化了解析过程[[9]](https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/)。在本教程中，我们将仅提供简要的解析工作原理介绍。
- en: ChatGPT generates text, but it is trained on not only ‘plain’ text but also
    many texts that include addition markup, such as HTML and Markdown, or on texts
    that are in structured formats, such as json or yaml. Therefore, it is not only
    capable of understanding such markup (as we have seen in the delimiters section),
    but can also produce it.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: ChatGPT 生成文本，但它不仅仅是基于“纯”文本进行训练，还包括许多带有附加标记的文本，如 HTML 和 Markdown，或是以结构化格式存在的文本，如
    json 或 yaml。因此，它不仅能够理解这些标记（正如我们在分隔符部分所见），还能够生成这些标记。
- en: '[PRE17]'
  id: totrans-111
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: '[PRE18]'
  id: totrans-112
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'In the example above, ChatGPT has successfully parsed the output (Mars and
    Venus) to a structured format that can be read into a dictionary in Python:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的示例中，ChatGPT 成功地将输出（火星和金星）解析为一种结构化格式，可以被 Python 中的字典读取：
- en: '[PRE19]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: '[PRE20]'
  id: totrans-115
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 4.2 Parsing the meal planner
  id: totrans-116
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4.2 解析餐单生成器
- en: Let’s take this a step further. In this example, we first generate a meal plan
    for the entire week. From the meal plan, we then try to extract a shopping list
    that we can use to buy all ingredients. The example is given below.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更进一步。在这个示例中，我们首先为整个一周生成一个餐单。从餐单中，我们接着尝试提取一个购物清单，用于购买所有食材。示例如下所示。
- en: '[PRE21]'
  id: totrans-118
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: And let’s try to parse the result.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 然后让我们尝试解析结果。
- en: '[PRE22]'
  id: totrans-120
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '![](../Images/c03a45d518be4aef82b94e99da8453da.png)'
  id: totrans-121
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c03a45d518be4aef82b94e99da8453da.png)'
- en: And let’s structure it into a more convenient format.
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们将其结构化为更方便的格式。
- en: '[PRE23]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: Lastly, let’s sum up the ingredients and quantities.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，让我们总结一下食材和数量。
- en: '[PRE24]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '![](../Images/aef750a1eb8fe229956698c229595798.png)'
  id: totrans-126
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aef750a1eb8fe229956698c229595798.png)'
- en: '**Exercise 4**'
  id: totrans-127
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**练习 4**'
- en: Try to convert your meal plan created in exercise 3 into a shopping list using
    the same procedure.
  id: totrans-128
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 尝试将你在练习 3 中创建的餐单转换为购物清单，使用相同的过程。
- en: 6\. Eet smakelijk (enjoy your meal)
  id: totrans-129
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 祝您好胃口（enjoy your meal）
- en: So, there you are; you can go shopping or order the ingredients online. But
    perhaps the meal plan is not yet completely to your liking. Perhaps you would
    like it to be more spicy, or the ingredient costs are off, or you like to measure
    ginger in cm rather than inches. Just like any form of programming, prompting
    is another iterative process, and iteratively improving your prompts helps to
    better understand how ChatGPT (or any large language model) behaves and how to
    steer it to your own liking.
  id: totrans-130
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，你可以去购物或者在线订购食材。但也许餐单还不是完全符合你的口味。也许你希望它更辣一些，或者食材的费用不合适，或者你喜欢用厘米来量姜而不是英寸。就像任何形式的编程一样，提示也是一个迭代过程，逐步改进你的提示有助于更好地理解
    ChatGPT（或任何大型语言模型）的行为，并能引导它朝着你喜欢的方向发展。
- en: References & notes
  id: totrans-131
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献与注释
- en: All dates are in dd-mm-YYYY format.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 所有日期均采用 dd-mm-YYYY 格式。
- en: '[1] [https://langchain.com](https://langchain.com/). Last accessed: 10–05–2024.'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] [https://langchain.com](https://langchain.com/)。最后访问时间：10–05–2024。'
- en: '[2] [https://app.datacamp.com/learn/courses/intro-to-python-for-data-science](https://app.datacamp.com/learn/courses/intro-to-python-for-data-science).
    Last accessed: 10–05–2024.'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [https://app.datacamp.com/learn/courses/intro-to-python-for-data-science](https://app.datacamp.com/learn/courses/intro-to-python-for-data-science)。最后访问时间：10–05–2024。'
- en: '[3] [https://chatgpt.com](https://chatgpt.com/). Last accessed: 10–05–2024.'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] [https://chatgpt.com](https://chatgpt.com/)。最后访问时间：10–05–2024。'
- en: '[4] The author of this article takes no responsibility for any cost (expected
    or unexpected) the reader might have when following the steps in this tutorial.'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[4] 本文作者对读者在遵循本教程步骤时可能产生的任何费用（无论是预期的还是意外的）不承担责任。'
- en: '[5] Maximilian Vogel. (2023). ChatGPT, Next Level: Meet 10 Autonomous AI Agents:
    Auto-GPT, BabyAGI, AgentGPT, Microsoft Jarvis, ChaosGPT & friends. [https://medium.com/the-generator/chatgpts-next-level-is-agent-ai-auto-gpt-babyagi-agentgpt-microsoft-jarvis-friends-d354aa18f21](https://medium.com/the-generator/chatgpts-next-level-is-agent-ai-auto-gpt-babyagi-agentgpt-microsoft-jarvis-friends-d354aa18f21)
    Last accessed: 11–07–2024.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '[5] Maximilian Vogel. (2023). ChatGPT, 下一步：认识 10 位自主 AI 代理：Auto-GPT, BabyAGI,
    AgentGPT, Microsoft Jarvis, ChaosGPT 等朋友。 [https://medium.com/the-generator/chatgpts-next-level-is-agent-ai-auto-gpt-babyagi-agentgpt-microsoft-jarvis-friends-d354aa18f21](https://medium.com/the-generator/chatgpts-next-level-is-agent-ai-auto-gpt-babyagi-agentgpt-microsoft-jarvis-friends-d354aa18f21)
    最后访问时间：11–07–2024。'
- en: '[6] [https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering).
    Last accessed: 10–05–2024.'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[6] [https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering](https://platform.openai.com/docs/guides/prompt-engineering/prompt-engineering)。最后访问时间：10–05–2024。'
- en: '[7] Teo S. (2023). How I Won Singapore’s GPT-4 Prompt Engineering Competition.
    [https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41](https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41).
    Last accessed: 10–05–2024'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: '[7] Teo S.（2023）。我如何赢得新加坡的GPT-4提示工程竞赛。 [https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41](https://medium.com/towards-data-science/how-i-won-singapores-gpt-4-prompt-engineering-competition-34c195a93d41)。最后访问时间：2024年5月10日'
- en: '[8] Xu, Benfeng, et al. (2023). Expertprompting: Instructing large language
    models to be distinguished experts. *arXiv preprint arXiv:2305.14688*.'
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: '[8] Xu, Benfeng 等（2023）。Expertprompting: 指导大型语言模型成为杰出专家。 *arXiv预印本arXiv:2305.14688*。'
- en: '[9] [https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/](https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/).
    Last accessed: 12–07–2024.'
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: '[9] [https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/](https://python.langchain.com/v0.1/docs/modules/model_io/output_parsers/)。最后访问时间：2024年7月12日。'
- en: '[10] [https://nos.nl/artikel/2221580-willem-alexander-en-maxima-in-de-keuken-wie-bakt-de-beste-pannenkoeken](https://nos.nl/artikel/2221580-willem-alexander-en-maxima-in-de-keuken-wie-bakt-de-beste-pannenkoeken).
    Last accessed: 19–09–2024'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '[10] [https://nos.nl/artikel/2221580-willem-alexander-en-maxima-in-de-keuken-wie-bakt-de-beste-pannenkoeken](https://nos.nl/artikel/2221580-willem-alexander-en-maxima-in-de-keuken-wie-bakt-de-beste-pannenkoeken)。最后访问时间：2024年9月19日'
- en: '[11] [https://community.openai.com/t/incorrect-count-of-r-characters-in-the-word-strawberry/829618](https://community.openai.com/t/incorrect-count-of-r-characters-in-the-word-strawberry/829618).
    Last accessed: 20–09–2024'
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: '[11] [https://community.openai.com/t/incorrect-count-of-r-characters-in-the-word-strawberry/829618](https://community.openai.com/t/incorrect-count-of-r-characters-in-the-word-strawberry/829618)。最后访问时间：2024年9月20日'
- en: '[12] Such as the recent o1-models: [https://openai.com/o1/](https://openai.com/o1/).
    Last accessed: 23–09–2024'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '[12] 例如最近的o1模型：[https://openai.com/o1/](https://openai.com/o1/)。最后访问时间：2024年9月23日'
- en: '[13] Brown, Tom B. et al. (2020)“Language models are few-shot learners.” *arXiv
    preprint arXiv:2005.14165*.'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: '[13] Brown, Tom B. 等（2020）“语言模型是少样本学习者。” *arXiv预印本arXiv:2005.14165*。'
