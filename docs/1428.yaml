- en: An Easy Way to Comprehend How GraphRAG Works
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/an-easy-way-to-comprehend-how-graphrag-works-6d53f8b540d0?source=collection_archive---------2-----------------------#2024-06-08](https://towardsdatascience.com/an-easy-way-to-comprehend-how-graphrag-works-6d53f8b540d0?source=collection_archive---------2-----------------------#2024-06-08)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Examples to help you understand the GraphRAG mechanism
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@rendysatriadalimunthe?source=post_page---byline--6d53f8b540d0--------------------------------)[![Rendy
    Dalimunthe](../Images/efcd8304211d187271847f4ecc5fb1b1.png)](https://medium.com/@rendysatriadalimunthe?source=post_page---byline--6d53f8b540d0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--6d53f8b540d0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--6d53f8b540d0--------------------------------)
    [Rendy Dalimunthe](https://medium.com/@rendysatriadalimunthe?source=post_page---byline--6d53f8b540d0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--6d53f8b540d0--------------------------------)
    ·6 min read·Jun 8, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Developing a chatbot that can tackle real questions and give appropriate, precise
    answers is really a hard job. While there has been remarkable progress in large
    language models, an open challenge is to couple these models with knowledge bases
    in order to deliver reliable and context-rich responses.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/37b079cf812dd5c41040db84f5f3cbdb.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Google DeepMind](https://unsplash.com/@googledeepmind?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: The key issues almost always come down to hallucination (the model is creating
    wrong or non-existing information) and contextual understanding, where the model
    is unable to understand the nuanced relationships between different pieces of
    information. Others have tried to build robust Q&A systems without much success,
    since the models often return shabby answers, though they are connected to comprehensive
    knowledge bases.
  prefs: []
  type: TYPE_NORMAL
- en: While RAG can reduce hallucination by connecting the generated response to real-world
    data, answering complex questions accurately is a different cup of tea. Users
    are often greeted with answers such as, “*The xx topic is not explicitly covered
    in the retrieved text*” even when the knowledge base clearly contains the information,
    albeit in a less obvious manner. This is where GraphRAG (Graph Retrieval-Augmented
    Generation) comes in handy, improving the model’s model’s ability to provide precise
    and contextually rich answers by leveraging structured knowledge graphs.
  prefs: []
  type: TYPE_NORMAL
- en: '**RAG: Bridging Retrieval and Generation**'
  prefs: []
  type: TYPE_NORMAL
- en: RAG represented a major step in combining the best of both retrieval-based and
    generation-based methods. Given a query, RAG retrieves relevant documents or passages
    from a large corpus and then generates the answer with this information. One can,
    therefore, be sure that the generated text can be informative and context-relevant
    as it is grounded on fact data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, in a question like *”What is the capital of France?”* the RAG system
    will look in its corpus for documents related to the country of France and the
    mention of its capital, Paris. It will retrieve relevant passages and respond
    by generating an answer such as *”The capital of France is Paris.”* This style
    fits very well with a simple query and clearly documented answers.
  prefs: []
  type: TYPE_NORMAL
- en: However, RAG falters on more complex queries, specifically those where one needs
    to understand relationships between entities, when these relationships are not
    explicit in retrieved documents. The system is coming to its failure and the downfall
    with questions like *“How did the scientific contributions of the 17th century
    influence early 20th-century physics?”* (*more on this example later*).
  prefs: []
  type: TYPE_NORMAL
- en: '**GraphRAG: Harnessing the Power of Knowledge Graphs**'
  prefs: []
  type: TYPE_NORMAL
- en: GraphRAG, as first outlined in the Microsoft Research Blog [here](https://www.microsoft.com/en-us/research/blog/graphrag-unlocking-llm-discovery-on-narrative-private-data/),
    aims to get around these limitations by infusing graph-based retrieval mechanisms
    into the model. Basically, it reorganizes the unstructured text of the knowledge
    base into a structured knowledge graph, in which nodes represent entities (e.g.,
    people, places, concepts), and edges represent relationships between entities.
    This structured format enables the model to better comprehend and employ the interrelations
    between different pieces of information.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/eea3b90bdd345ebfb4c9af0a981020e6.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Alina Grubnyak](https://unsplash.com/@alinnnaaaa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Let us now go into a little bit of detail to understand the concept of GraphRAG,
    in a comparison with RAG, using the easy way.
  prefs: []
  type: TYPE_NORMAL
- en: 'As starter, let’s take a hypothetical knowledge base comprising sentences from
    various scientific and historical texts as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '*1\. “Albert Einstein developed the theory of relativity, which revolutionized
    theoretical physics and astronomy.”*'
  prefs: []
  type: TYPE_NORMAL
- en: '*2\. “The theory of relativity was formulated in the early 20th century and
    has had a profound impact on our understanding of space and time.”*'
  prefs: []
  type: TYPE_NORMAL
- en: '*3\. “Isaac Newton, known for his laws of motion and universal gravitation,
    laid the groundwork for classical mechanics.”*'
  prefs: []
  type: TYPE_NORMAL
- en: '*4\. “In 1915, Einstein presented the general theory of relativity, expanding
    on his earlier work on special relativity.”*'
  prefs: []
  type: TYPE_NORMAL
- en: '*5\. “Newton’s work in the 17th century provided the foundation for much of
    modern physics.”*'
  prefs: []
  type: TYPE_NORMAL
- en: In a RAG system, these sentences would be stored as unstructured text. And asking
    *“How did the scientific contributions of the 17th century influence early 20th-century
    physics?”*, for instance, could have put the system in a difficult position if
    **the exact phrasing and retrieval quality of the documents did not link** the
    17th-century influence **directly** with early 20th-century physics. RAG might
    give answers like *“Isaac Newton’s work in the 17th century provided the foundation
    for much of modern physics. Albert Einstein developed the theory of relativity
    in the early 20th century”,* since the mechanism was able to retrieve relevant
    information but cannot clearly explain the influence of 17th-century physics on
    early 20th-century developments.
  prefs: []
  type: TYPE_NORMAL
- en: In contrast, GraphRAG turns this text into a structured knowledge graph. A knowledge
    graph represents how different things are related to each other. It uses a set
    of ontologies, which are a set of rules to help organize the information. This
    way, it can find hidden connections, not only the obvious ones.
  prefs: []
  type: TYPE_NORMAL
- en: Using GraphRAG system, the previous knowledge base will be transformed into
    nodes and edges like the following.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'When prompted with the *question “How did the scientific contributions of the
    17th century influence early 20th-century physics?”* GraphRAG’s -based retriever
    can recognize the progression from Newton’s work to Einstein''s advancements,
    highlighting the influence of 17th-century physics on the early 20th-century development.
    This structured retrieval enables the answer to be contextually rich and accurate*:
    “Isaac Newton’s laws of motion and universal gravitation, formulated in the 17th
    century, provided the foundation for classical mechanics. These principles influenced
    Albert Einstein’s development of the theory of relativity in the early 20th century,
    which expanded our understanding of space and time.”*'
  prefs: []
  type: TYPE_NORMAL
- en: The use of structured knowledge graphs in GraphRAG enhances the ability of the
    model to answer complex queries and at the same time reduces the chances of hallucination
    by providing grounding in explicitly defined relations for the answers. This,
    in essence, grants GraphRAG effectiveness in the development of more reliable
    and intelligent conversational Q&A systems.
  prefs: []
  type: TYPE_NORMAL
- en: Converting unstructured knowledge bases into structured graphs, also enable
    GraphRAG to achieve a deeper meaning from the information, allowing language models
    to generate appropriate responses accurately in context. It is a very important
    stride in the development of conversational AI toward more advanced and reliable
    chatbot systems.
  prefs: []
  type: TYPE_NORMAL
- en: However, as with other benefits of GraphRAG, there exist challenges too.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, it is hard to construct the graph. Turning an unorganized knowledge
    base into a structured knowledge graph is very demanding. It calls for sophisticated
    methods for entity extraction and identification of relationships, which can be
    very computationally expensive.
  prefs: []
  type: TYPE_NORMAL
- en: Secondly, the problem of scalability arises. Knowledge graphs grow in complexity
    with the size of the base of knowledge. This may bring into question issues of
    scalability if the graph grows too large to be easily traversed at runtime. A
    major challenge will be optimizing graph retrieval algorithms for large-scale
    graphs.
  prefs: []
  type: TYPE_NORMAL
- en: 'The third speaks of maintenance overhead: a knowledge graph needs to be constantly
    updated with new information and the changes in existing data. In some domains,
    which are most likely changing quite often, this may become a very costly operation,
    particularly in domains of technology or medicine. This means that, although the
    results may be promising, a lot of effort will have to be put into maintaining
    the correctness and relevance of the knowledge graph over time.'
  prefs: []
  type: TYPE_NORMAL
- en: Nevertheless, GraphRAG promises future conversational AI agents with higher
    intelligence, reliability, and context awareness. More research and development
    could help alleviate the difficulties associated with GraphRAG, paving the way
    for more sophisticated AI-driven solutions.
  prefs: []
  type: TYPE_NORMAL
