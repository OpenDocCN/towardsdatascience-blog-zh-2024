- en: Leveraging Python Pint Units Handler Package ‚Äî Part 1
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/leveraging-python-pint-units-handler-package-part-1-716a13e96b59?source=collection_archive---------11-----------------------#2024-04-16](https://towardsdatascience.com/leveraging-python-pint-units-handler-package-part-1-716a13e96b59?source=collection_archive---------11-----------------------#2024-04-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Operate and manipulate physical quantities in Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@jodhernandezbemj?source=post_page---byline--716a13e96b59--------------------------------)[![Jose
    D. Hernandez-Betancur](../Images/fc2be8064501a06c2e363f6fb7d93be7.png)](https://medium.com/@jodhernandezbemj?source=post_page---byline--716a13e96b59--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--716a13e96b59--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--716a13e96b59--------------------------------)
    [Jose D. Hernandez-Betancur](https://medium.com/@jodhernandezbemj?source=post_page---byline--716a13e96b59--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--716a13e96b59--------------------------------)
    ¬∑8 min read¬∑Apr 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2dd3881c7290d53918a0c30a6f497785.png)'
  prefs: []
  type: TYPE_IMG
- en: Image generated by the author using Gencraft.
  prefs: []
  type: TYPE_NORMAL
- en: If you work in the engineering or science fields, or even if you are someone
    involved in supply chain operations, environmental sustainability, or whatever
    field that uses physical quantities like time, mass, and length, you have faced
    situations where you need to operate and manipulate physical quantities programmatically
    and on the fly. As a data practitioner or software developer working with Python,
    you probably have come up with a solution like creating dictionary-like lookup
    tables to convert between units (e.g., kg to lb) or perform operations containing
    different physical dimensions (e.g., volume and time). One of the features of
    the ever-growing Python ecosystem is the different kinds of packages available
    to do whatever you have in mind. In this post, I will introduce [Pint](https://pint.readthedocs.io/en/stable/),
    a Python package to programmatically handle units in your data science or software
    project üçª. I will organize this post so that you understand not only the key elements
    that make up Pint but also how to seamlessly integrate and extend them for your
    project üß©.
  prefs: []
  type: TYPE_NORMAL
- en: Pint Quantity
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Pint package was developed based on an OOP paradigm. It uses objects to
    set up an arsenal to operate physical quantities ‚Äúpythonically‚Äù. The `Quantity`‚Ä¶
  prefs: []
  type: TYPE_NORMAL
