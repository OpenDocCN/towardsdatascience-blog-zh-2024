- en: Recursion in Python Demystified
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/recursion-in-python-demystified-d3b3b28ba121?source=collection_archive---------7-----------------------#2024-02-12](https://towardsdatascience.com/recursion-in-python-demystified-d3b3b28ba121?source=collection_archive---------7-----------------------#2024-02-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The article shows simple examples of flat and nested recursion patterns in Python.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page---byline--d3b3b28ba121--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--d3b3b28ba121--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d3b3b28ba121--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d3b3b28ba121--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--d3b3b28ba121--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d3b3b28ba121--------------------------------)
    ·15 min read·Feb 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b790fa6fa7dd25e7ee4129cb1874bb59.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Nareeta Martin](https://unsplash.com/@splashabout?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Simply put, a recursive function is a function that calls itself.
  prefs: []
  type: TYPE_NORMAL
- en: 'This may sound simple, but if you try to learn more, you’re likely to find
    explanations of recursion that are not that simple. This is because the casual
    definition of recursion above doesn’t go into any details, and to fully comprehend
    how recursion works, you need to know more than what this simple sentence conveys:'
  prefs: []
  type: TYPE_NORMAL
- en: A recursive function is a function that calls itself.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Check out [Wikipedia](https://en.wikipedia.org/wiki/Recursion_(computer_science))
    for example. Full of technical jargon, the explanation is far from simple, especially
    for beginning programmers without IT- or math-related education. It’s difficult
    to imagine a beginner trying to implement their own recursive function based solely
    on such an explanation.
  prefs: []
  type: TYPE_NORMAL
- en: Even though some recursive functions may look quite simple at first glance,
    trying to implement your first recursive logic may occur very difficult. That
    can be a tough task because one needs to change one’s thinking about problems.
  prefs: []
  type: TYPE_NORMAL
- en: Most data scientists see programming tasks as a sequence of smaller steps that
    lead to…
  prefs: []
  type: TYPE_NORMAL
