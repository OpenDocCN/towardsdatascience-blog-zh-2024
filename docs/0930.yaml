- en: Prompt Engineering for Coding Tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/prompt-engineering-llms-coding-chatgpt-artificial-intelligence-c16620503e4e?source=collection_archive---------2-----------------------#2024-04-12](https://towardsdatascience.com/prompt-engineering-llms-coding-chatgpt-artificial-intelligence-c16620503e4e?source=collection_archive---------2-----------------------#2024-04-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Enhancing Code Generation with LLMs via Prompt Engineering
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@andvalenzuela?source=post_page---byline--c16620503e4e--------------------------------)[![Andrea
    Valenzuela](../Images/ddfc1534af92413fd91076f826cc49b6.png)](https://medium.com/@andvalenzuela?source=post_page---byline--c16620503e4e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--c16620503e4e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--c16620503e4e--------------------------------)
    [Andrea Valenzuela](https://medium.com/@andvalenzuela?source=post_page---byline--c16620503e4e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--c16620503e4e--------------------------------)
    ·7 min read·Apr 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f967e28889a422384c657ce677466485.png)'
  prefs: []
  type: TYPE_IMG
- en: Self-made image.
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve ever used ChatGPT to help with a tedious Python script that you have
    been putting off, or to find the best way to approach a coding University assignment,
    you have likely realized that **while Large Language Models (LLMs) can be helpful
    for some coding tasks, they often struggle to generate efficient and high-quality
    code**.
  prefs: []
  type: TYPE_NORMAL
- en: We are not alone in our interest in having LLMs as coding assistants. There
    has been rapidly growing interest in using LLMs for coding by companies, leading
    to the development of LLM-powered coding assistants such as [GitHub Copilot](https://github.com/features/copilot).
  prefs: []
  type: TYPE_NORMAL
- en: Using LLMs for coding has significant challenges as we discussed in the article
    “[Why LLMs are Not Good for Coding](/llms-coding-chatgpt-python-artificial-intelligence-4ea7a7bbdd93)”.
    Nevertheless, there are prompt engineering techniques that can improve code generation
    for certain tasks.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, **we will introduce some effective prompt engineering techniques
    to enhance code generation**.
  prefs: []
  type: TYPE_NORMAL
- en: '*Let’s dive deep!*'
  prefs: []
  type: TYPE_NORMAL
- en: Prompt Engineering
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Prompt engineering for LLMs involves **carefully crafting prompts to maximize
    the quality and relevance of the model’s output**. This process is both an art
    and a science, as it requires an understanding of how…
  prefs: []
  type: TYPE_NORMAL
