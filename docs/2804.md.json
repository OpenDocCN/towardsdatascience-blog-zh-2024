["```py\npip install langchain_milvus==0.1.6\npip install langchain-huggingface==0.1.0\npip install \"pymilvus[model]==2.4.8\"\n```", "```py\nfrom langchain_huggingface import HuggingFaceEmbeddings\nfrom langchain_milvus.utils.sparse import BM25SparseEmbedding\nfrom langchain_milvus.vectorstores import Milvus\n```", "```py\ndense_embedding = HuggingFaceEmbeddings(model_name=\n    \"sentence-transformers/all-MiniLM-L6-v2\")\nvector_store = Milvus(\n    embedding_function=dense_embedding,\n    connection_args={\"uri\": \"./milvus_dense.db\"}, # Using milvus-lite for simplicity\n    auto_id=True,\n)\n```", "```py\ndocument = [\n    \"Today was very warm during the day but cold at night\",\n    \"In Israel, Hot is a TV provider that broadcasts 7 days a week\",\n]\nvector_store.add_texts(documents)\n```", "```py\nquery = \"What is the weather? is it hot?\"\ndense_output = vector_store.similarity_search(query=query, k=1)\nprint(f\"Dense embeddings results:\\n{dense_output[0].page_content}\\n\")\n\n# output: Dense embeddings results: \n#         Today was very warm during the day but cold at night\n```", "```py\nsparse_embedding = BM25SparseEmbedding(corpus=documents)\nvector_store = Milvus(\n    embedding_function=sparse_embedding,\n    connection_args={\"uri\": \"./milvus_sparse.db\"},\n    auto_id=True,\n)\nvector_store.add_texts(documents)\n\nquery = \"Does Hot cover weather changes during weekends?\"\nsparse_output = vector_store.similarity_search(query=query, k=1)\nprint(f\"Sparse embeddings results:\\n{sparse_output[0].page_content}\\n\")\n\n# output: Sparse embeddings results:\n#         In Israel, Hot is a TV provider that broadcast 7 days a week\n```", "```py\nvector_store = Milvus(\n    embedding_function=[\n        sparse_embedding,\n        dense_embedding,\n    ],\n    connection_args={\"uri\": \"./milvus_hybrid.db\"}, \n    auto_id=True,\n)\nvector_store.add_texts(documents)\n```", "```py\nquery = \"Does Hot cover weather changes during weekends?\"\nhybrid_output = vector_store.similarity_search(\n    query=query,\n    k=1,\n    ranker_type=\"weighted\",\n    ranker_params={\"weights\": [0.49, 0.51]},  # Combine both results!\n)\nprint(f\"Hybrid search results:\\n{hybrid_output[0].page_content}\")\n\n# output: Hybrid search results:\n#         In Israel, Hot is a TV provider that broadcast 7 days a week\n```", "```py\nquery = \"When and where is Hot active?\"\nhybrid_output = vector_store.similarity_search(\n    query=query,\n    k=1,\n    ranker_type=\"weighted\",\n    ranker_params={\"weights\": [0.2, 0.8]},  # Note -> the weights changed\n)\nprint(f\"Hybrid search results:\\n{hybrid_output[0].page_content}\")\n\n# output: Hybrid search results:\n#         Today was very warm during the day but cold at night\n```"]