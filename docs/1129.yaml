- en: Dissolving map boundaries in QGIS and Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/dissolving-map-boundaries-in-qgis-and-python-1ccf224e293b?source=collection_archive---------3-----------------------#2024-05-04](https://towardsdatascience.com/dissolving-map-boundaries-in-qgis-and-python-1ccf224e293b?source=collection_archive---------3-----------------------#2024-05-04)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This post describes some interesting processes for transforming the map boundaries
    in vector datasets using QGIS and geopandas in Python.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@himalaya.birshrestha?source=post_page---byline--1ccf224e293b--------------------------------)[![Himalaya
    Bir Shrestha](../Images/9766140c1c44381029d0a78154217775.png)](https://medium.com/@himalaya.birshrestha?source=post_page---byline--1ccf224e293b--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ccf224e293b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ccf224e293b--------------------------------)
    [Himalaya Bir Shrestha](https://medium.com/@himalaya.birshrestha?source=post_page---byline--1ccf224e293b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ccf224e293b--------------------------------)
    ·6 min read·May 4, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: 'Recently, for one of my projects, I had to define the composition of countries
    in a region, make the region distinct, and highlight it on the map of a continent.
    Let’s take an example of the South Asia region in Asia. The South Asia region
    is comprised of eight countries: Afghanistan, Bangladesh, Bhutan, India, Maldives,
    Nepal, Pakistan and Sri Lanka. From the map of Asia, I wanted to clip off the
    South Asia region and highlight it distinctly in the continental map. Furthermore,
    I wanted to go one step ahead and dissolve the boundaries of the countries in
    the region so that the region could be demonstrated as a single unit.'
  prefs: []
  type: TYPE_NORMAL
- en: I was able to achieve this using both Quantum-GIS (QGIS) and geopandas package
    in Python. In this process, I utilized the clipping feature which I was already
    familiar with, and I learned about the dissolve feature which I found very fascinating.
    In this post, I am going to share my learning about these features and how I achieved
    my objectives. Let’s get started.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/965a4a73e0753f1e2e44ce63513c5041.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. QGIS
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In an empty QGIS project, by typing `world` in the coordinate space in the bottom
    of the page, I could call an in-built map of the world with administrative boundaries
    of all the countries as shown below.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a43bec95f2f44abb01965393b35cc169.png)'
  prefs: []
  type: TYPE_IMG
- en: Getting a world map in QGIS. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Next, by using the select feature, I selected the 8 countries of South Asia
    as highlighted in the map below. QGIS offers the option to select countries by
    hand, by polygon, by radius, and by individually selecting or deselecting countries
    with a mouse click.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3da2006d078fe5f32f8415a23ced1569.png)'
  prefs: []
  type: TYPE_IMG
- en: Selecting countries from the world map. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Clipping in QGIS**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Clipping these countries off of the world map is straightforward in QGIS. One
    needs to go to Vector in the menu-> Select Geoprocessing tools -> Select Clip.
    In the options, I ticked on the check box for the Selected features only in the
    Input layer and ran the process.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9bbfc6d7d75158d7048a3349b2c8d824.png)'
  prefs: []
  type: TYPE_IMG
- en: Running Clipping algorithm. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: The clipping action was completed in 7.24 seconds alone and I got a new layer
    called “Clipped”. This is depicted by the brown color in the screenshot below.
    By going to Properties of the layer, one can use different coloring options in
    QGIS in the Symbology option.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a9c71dde2429b6ef0382d82f1a49cd99.png)'
  prefs: []
  type: TYPE_IMG
- en: New Clipped layer is created. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Dissolving boundaries in QGIS
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Next, I wanted to dissolve the boundaries between countries in South Asia.
    For this, I selected all the countries in South Asia. I went to the Vector Menu
    -> Select Geoprocessing Tools ->Dissolve. Similar to the previous step, I selected
    “Selected featured only” in the input layer and ran the algorithm which took just
    0.08 seconds. A new layer called “Dissolved” was created where the administrative
    boundaries between countries were dissolved and appeared as a single unit as shown
    below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8e9ad81cc549c0f78601a9ca88259005.png)'
  prefs: []
  type: TYPE_IMG
- en: New Dissolved layer is created. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: 'Visualizing both the world layer and Dissolved layer at the same time looks
    as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5b10f5c7f402beaf41b27eb5200b3a65.png)'
  prefs: []
  type: TYPE_IMG
- en: Dissolved layer and world layer. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Geopandas**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this section, I am going to demonstrate how I could the same objective in
    Python using the geopandas package.
  prefs: []
  type: TYPE_NORMAL
- en: In the first step, I read the in-built dataset of the world map within the geopandas
    package. It contains the vector data of the world with the administative boundaries
    of all counntries. This is obtained from the [Natural Earth](https://medium.com/r?url=https%3A%2F%2Fwww.naturalearthdata.com%2Fdownloads%2F110m-cultural-vectors%2F)
    dataset, which is free to use.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/6de3410f24808dbd231fc437bf35a875.png)'
  prefs: []
  type: TYPE_IMG
- en: Plotting world map in geopandas. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Clipping with geopandas
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In my very first [post](https://medium.com/towards-data-science/geoplotting-emissions-intensity-of-electricity-generation-in-europe-90c22b378858),
    I demonstrated how it is possible to clip off a custom Polygon geometry as a mask
    from the original geopandas dataframe or layer. However, for simplicity, I just
    used the filter options to obtain the required layers for Asia and South Asia.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f136146914ae21eb45a76638d80bd51b.png)'
  prefs: []
  type: TYPE_IMG
- en: Filtering Asia continent from world. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: To filter the South Asia region, I used a list containing the name of each country
    as a reference.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/5f47fbf0c16249a031ec624f1b893ad7.png)'
  prefs: []
  type: TYPE_IMG
- en: Filtering South Asia region from Asia. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dissolve boundaries between countries in South Asia using geopandas**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: To dissolve the boundaries between countries in South Asia, I used the `dissolve`
    feature in geopandas. I passed None as an argument, and specified parameters to
    apply certain aggregate functions, in which the population and GDP in the resulting
    dissolved dataframe would sum up the population and GDP in all countries in South
    Asia. I am yet to figure out how the aggregate function can also be applied in
    QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/113b07a65f56da19c15efd1be2d00909.png)'
  prefs: []
  type: TYPE_IMG
- en: Administrative boundaries between countries in South Asia are dissolved. Image
    by Author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Dissolving boundaries between countries within a continent in the world**'
  prefs: []
  type: TYPE_NORMAL
- en: Using the same procedure as above, I wanted to dissolve the boundaries between
    countries within a continent and show different continents distinct from each
    other in a world map based on the number of countries in each continent.
  prefs: []
  type: TYPE_NORMAL
- en: For this purpose, first I added a new column called `num_countries` in the `world`
    geodataframe containing 1 as a value. Then I dissolved the world map using the
    `continent` column as a reference.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'I used the aggregate function to sum up the population and GDP in all countries
    in the continent and count the number of countries in each continent. The resulting
    geodataframe `continents_dissolved` look as shown:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7f856a6ff75cd0d12853f175d2441c5d.png)'
  prefs: []
  type: TYPE_IMG
- en: Resulting continents_dissolved geopandas dataframe.
  prefs: []
  type: TYPE_NORMAL
- en: We see that Asia has the largest population and GDP of all continents. Similarly,
    we see that Africa has the most countries (51) followed by Asia (47), Europe (39),
    North America (18), South America (13), and Oceania (7). Antarctica and Seven
    seas (open ocean) are also regarded as continents in this dataset.
  prefs: []
  type: TYPE_NORMAL
- en: 'Finally, I wanted to plot the world map highlighting the number of countries
    in each continent with the help of a color map. I achieved this using the following
    code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The resulting map appears as shown below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f27cf8b994237d44942f24fc1464deb6.png)'
  prefs: []
  type: TYPE_IMG
- en: Map of the world where the color reflects number of countries in each continent.
    Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this post, I described ways to dissolve map boundaries using QGIS and geopandas
    in Python. In the process, I also explained the clipping process and the possibility
    of using aggregate function while dissolving the map boundaries in geopandas.
    These processes could be very useful for the manipulation, processing, and transformation
    of geographical maps in the form of vector datasets. The code and the QGIS project
    file for this post are available in this GitHub [repository](https://github.com/hbshrestha/Geospatial-Analysis).
    Thank you for reading!
  prefs: []
  type: TYPE_NORMAL
