- en: How to Use Hybrid Search for Better LLM RAG Retrieval
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-use-hybrid-search-for-better-llm-rag-retrieval-032f66810ebe?source=collection_archive---------0-----------------------#2024-08-11](https://towardsdatascience.com/how-to-use-hybrid-search-for-better-llm-rag-retrieval-032f66810ebe?source=collection_archive---------0-----------------------#2024-08-11)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Building an advanced local LLM RAG pipeline by combining dense embeddings with
    BM25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@leoneversberg?source=post_page---byline--032f66810ebe--------------------------------)[![Dr.
    Leon Eversberg](../Images/56dc3579a29933f7047a9ce60be4697a.png)](https://medium.com/@leoneversberg?source=post_page---byline--032f66810ebe--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--032f66810ebe--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--032f66810ebe--------------------------------)
    [Dr. Leon Eversberg](https://medium.com/@leoneversberg?source=post_page---byline--032f66810ebe--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--032f66810ebe--------------------------------)
    ·11 min read·Aug 11, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b0e92b6cc8bed0f23c34ac183693d3f8.png)'
  prefs: []
  type: TYPE_IMG
- en: Code snippet from the hybrid search we are going to implement in this article.
    Image by author
  prefs: []
  type: TYPE_NORMAL
- en: The basic Retrieval-Augmented Generation (RAG) pipeline uses an encoder model
    to search for similar documents when given a query.
  prefs: []
  type: TYPE_NORMAL
- en: This is also called **semantic search** because the encoder transforms text
    into a high-dimensional vector representation (called an embedding) in which semantically
    similar texts are close together.
  prefs: []
  type: TYPE_NORMAL
- en: Before we had Large Language Models (LLMs) to create these vector embeddings,
    the BM25 algorithm was a very popular search algorithm. BM25 focuses on important
    keywords and looks for exact matches in the available documents. This approach
    is called **keyword search**.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to take your RAG pipeline to the next level, you might want to try
    **hybrid search**. Hybrid search combines the benefits of keyword search and semantic
    search to improve search quality.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will cover the theory and implement all three search approaches
    in Python.
  prefs: []
  type: TYPE_NORMAL
- en: Table of Contents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: · [RAG Retrieval](#ae7a)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Keyword Search With BM25](#9f75)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Semantic Search With Dense Embeddings](#afec)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Semantic Search or Hybrid Search?](#2a98)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Hybrid Search](#4bfc)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [Putting It All Together](#919c)
  prefs: []
  type: TYPE_NORMAL
- en: ·…
  prefs: []
  type: TYPE_NORMAL
