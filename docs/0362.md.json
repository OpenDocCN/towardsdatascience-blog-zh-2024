["```py\nfrom textwrap import shorten\n\nshorten(\"This is a long text or sentence.\", width=10)\n# 'This [...]'\nshorten(\"This is a long text or sentence.\", width=15)\n# 'This is a [...]'\nshorten(\"This is a long text or sentence.\", width=15, placeholder=\" <...>\")\n# 'This is a <...>'\n```", "```py\nfrom textwrap import wrap\ns = '1234567890'\nwrap(s, 3)\n# ['123', '456', '789', '0']\n```", "```py\ns = '12\\n3  45678\\t9\\n0'\nwrap(s, 3)\n# ['12', '3  ', '456', '78', '9 0']\n# the first (\"12\") element \"includes\" newline\n# the 4th element (\"78\") \"includes\" tab\nwrap(s, 3, drop_whitespace=False, tabsize=1)\n# ['12 ', '3  ', '456', '78 ', '9 0']\n```", "```py\nwith open(\"some-text.md\", \"r\", encoding=\"utf-8\") as f:\n    formatted = wrap(f.read(), width=80)  # List of lines\n    formatted = fill(f.read(), width=80)  # Single string that includes line breaks \n    # ... write it back\n```", "```py\nimport textwrap\n\nw = textwrap.TextWrapper(width=120, placeholder=\" <...>\")\nfor s in list_of_strings:\n    w.wrap(s)\n    # ...\n```", "```py\nuser = \"John\"\nprefix = user + \": \"\nwidth = 50\nwrapper = TextWrapper(initial_indent=prefix, width=width, subsequent_indent=\" \" * len(prefix))\nmessages = [\"...\", \"...\", \"...\"]\nfor m in messages:\n    print(wrapper.fill(m))\n\n# John: Lorem Ipsum is simply dummy text of the\n#       printing and typesetting industry. Lorem\n# John: Ipsum has been the industry's standard dummy\n#       text ever since the 1500s, when an\n# John: unknown printer took a galley of type and\n#       scrambled it to make a type specimen\n```", "```py\nfrom textwrap import TextWrapper\n\nclass DocumentWrapper(TextWrapper):\n\n    def wrap(self, text):\n        split_text = text.split('\\n')\n        lines = [line for par in split_text for line in TextWrapper.wrap(self, par)]\n        return lines\n\ntext = \"\"\"First line,\n\nAnother, much looooooonger line of text and/or sentence\"\"\"\nd = DocumentWrapper(width=50)\nprint(d.fill(text))\n\n# First line,\n# Another, much looooooonger line of text and/or\n# sentence\n```", "```py\n# Ugly formatting:\nmultiline_string = \"\"\"\nFirst line\nSecond line\nThird line\n\"\"\"\n\nfrom textwrap import dedent\n\nmultiline_string = \"\"\"\n                   First line\n                   Second line\n                   Third line\n                   \"\"\"\n\nprint(dedent(multiline_string))\n\n# First line\n# Second line\n# Third line\n\n# Notice the leading blank line...\n# You can use:\nmultiline_string = \"\"\"\\\n                   First line\n                   Second line\n                   Third line\n                   \"\"\"\n\n# or\nfrom inspect import cleandoc\ncleandoc(multiline_string)\n# 'First line\\nSecond line\\nThird line'\n```", "```py\nfrom textwrap import indent\n\nindented = indent(text, \"    \", lambda x: not text.splitlines()[0] in x)\n```"]