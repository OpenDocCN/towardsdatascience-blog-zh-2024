- en: Plotting Golf Courses in R with Google Earth
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/plotting-golf-courses-in-r-with-google-earth-8ee8aa6f6293?source=collection_archive---------5-----------------------#2024-05-06](https://towardsdatascience.com/plotting-golf-courses-in-r-with-google-earth-8ee8aa6f6293?source=collection_archive---------5-----------------------#2024-05-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A user guide to mapping golf courses in Google Earth and bringing them to life
    in R.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@adam.c.beaudet?source=post_page---byline--8ee8aa6f6293--------------------------------)[![Adam
    Beaudet](../Images/f5084b418f043e11f35a50a6a63d507f.png)](https://medium.com/@adam.c.beaudet?source=post_page---byline--8ee8aa6f6293--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--8ee8aa6f6293--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--8ee8aa6f6293--------------------------------)
    [Adam Beaudet](https://medium.com/@adam.c.beaudet?source=post_page---byline--8ee8aa6f6293--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--8ee8aa6f6293--------------------------------)
    ·7 min read·May 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In the land of data viz, we are often inundated with bar, line, and pie charts.
    But it doesn’t have to be that way — in this article, I will demonstrate how to
    plot golf courses.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/64d7018ea587cf6c48482bb7237bb72b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There are close to 40,000 golf courses worldwide. If you are passionate about
    golf and/or data like I am then this is for you. After plotting a course, there
    are some other cool things we can do as well:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Overlaying shots onto course map —** this can be donewith some manipulation
    using the Plotly package, or by downloading individual golf shot “placemarks”
    from Google Earth and plotting them as points on our map. For that time you first
    broke 90, 80,70, etc. this could be a good way to commemorate the triumph.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Calculating course metrics**— it is generally known that Pebble Beach has
    tiny “postage stamp” greens. Or that Whistling Straits has tons of bunkers. A
    secondary benefit that comes with tracing course element polygons is being able
    to calculate the area of each. This allows us to derive average green sizes, number
    of bunkers, average width of fairways, etc. for any course that we plot.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The above bullet points are not a comprehensive list by any means, but it gives
    the project a future roadmap to expand on.
  prefs: []
  type: TYPE_NORMAL
- en: '**Table of Contents**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I will start by introducing the steps of the project, and later go into more
    detail of each:'
  prefs: []
  type: TYPE_NORMAL
- en: trace polygons in Google Earth that represent elements of a golf course (tee
    boxes, fairways, bunkers, greens, water, hazards)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: download polygons from Google Earth as KML file
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: read KML data into R and do some light data cleaning/manipulation
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: plot golf course using ggplot2
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Polygon Tracing in Google Earth**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To begin, let’s head to Google Earth with a golf course in mind that we would
    like to plot. We will use Erin Hills in Wisconsin as a example. It is often helpful
    to either be familiar with the course layout or have a course map pulled up to
    more easily identify each hole via satellite imagery.
  prefs: []
  type: TYPE_NORMAL
- en: We will want to create a new project by clicking the blue “+ New” button in
    the top left corner. Next, we will use a Local KML file and click “Create”. Lastly,
    give the project a name, likely just the name of the course being mapped. The
    name of the project will be the name of the KML file we end up downloading upon
    completion.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0f0199f76494e9b19a4662505077abf1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Google Earth, edited by the author
  prefs: []
  type: TYPE_NORMAL
- en: Now that our project folder is set up, we can start tracing. **Disclaimer**
    that Erin Hills has 138 bunkers, which I found out the hard way can be a bit tedious
    to trace… Anyway, let’s head to the first tee to start tracing.
  prefs: []
  type: TYPE_NORMAL
- en: Once at the first tee, start by identifying the key elements of the hole. The
    first hole at Erin Hills has water and a hazard left of the fairway, a fairway
    dog-legging to the left, a few bunkers, etc. To begin tracing, click “Add path
    or polygon” which is the icon with a line and connected dots second from the left
    in the top toolbar. This will initialize a pencil of sorts that we can trace with.
  prefs: []
  type: TYPE_NORMAL
- en: '**Additional note**: you can rotate your screen by simultaneously holding shift
    and pressing the left or right arrows.'
  prefs: []
  type: TYPE_NORMAL
- en: 'I typically start with the tee boxes, and work my way to the green. It is required
    that each traced polygon forms a closed shape, meaning you return to the original
    starting point. After finishing a polygon, save it to your project and give it
    a name. It is also important to name each polygon with a consistent naming convention,
    such as **course_hole_element,** which literally translates in this case to: **erin_hills_hole_1_tee**,
    or **erin_hills_hole_5_fairway**, etc. We will later use string matching in our
    R code to extract these key pieces of information from each polygon name. This
    will allow us to create a polygon element-to-color mapping, a.k.a. a way to tell
    ggplot2 how to color each polygon. So if “bunker” is the element, then we want
    to color it tan. If “water” is the element, it should be blue. It also allows
    us to extract the course name and hole numbers which open up additional plotting
    capabilities.'
  prefs: []
  type: TYPE_NORMAL
- en: Below is Hole 15 at Erin Hills (my favorite from when I played there). The left
    image is the raw Google Earth image, the middle is after we have traced it, and
    the right image is after it has been rendered with ggplot2\. I chose not to plot
    rough, trees, cart paths, etc.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a6c3a72c26da37453e5cfbf44c9bd968.png)![](../Images/a5f8a89ee3d185e97d27035f465c1423.png)![](../Images/89e91b1153ebf02adcb95b20b2caa32c.png)'
  prefs: []
  type: TYPE_IMG
- en: (**Left**) Photo from Google Earth, (**Middle**) Photo from Google Earth, edited
    by author, (**Right**) Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: Once we’ve finished mapping our hole or course, it is time to export all that
    hard work into a KML file. This can be done by clicking the three vertical dots
    on the left side of the screen where your project resides. This project works
    best with geoJSON data, which we can easily convert our KML file to in the next
    steps. Now we’re ready to head to R.
  prefs: []
  type: TYPE_NORMAL
- en: '**Plotting in R**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The packages we will need to prepare us for plotting are: **sf** (for working
    with geospatial data), **tidyverse** (for data cleaning and plotting), **stringr**
    (for string matching), and **geojsonsf** (for converting from KML to geoJSON).
    Our first step is reading in the KML file, which can be done with the **st_read()**
    function from sf.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'Great! Now we should have our golf course KML data in R. The data frame should
    have 2 columns: **Name** (project name, or course name in our case), and **geometry**
    (a list of all individual points comprising the polygons we traced). As briefly
    mentioned earlier, let’s convert our KML data to geoJSON and also extract the
    course name and hole numbers.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: To get our maps to point due north we need to project them in a way that preserves
    direction. We can do this with the **st_transform()** function.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: We’re almost ready to plot, but first, we need to tell ggplot2 how each polygon
    should be colored. Below is the color palette my project is using, but feel free
    to customize as you wish.
  prefs: []
  type: TYPE_NORMAL
- en: '**Optional**: in this step we can also calculate the centroids of our polygons
    with the **st_centroid()** function so we can overlay the hole number onto each
    green.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/577b95d109ebd41ce97372c44f0a77d7.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the author
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: We’re officially ready to plot. We can use a combination of **geom_sf()**, **geom_text()**,
    and even **geom_point()** if we want to get fancy and plot shots on top of our
    map. I typically remove gridlines, axis labels, and the legend for a cleaner look.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: And there you have it — a golf course plotted in R, what a concept!
  prefs: []
  type: TYPE_NORMAL
- en: 'To view other courses I have plotted at the time of writing this article, you
    can visit my Shiny app: [https://abodesy14.shinyapps.io/golfMapsR/](https://abodesy14.shinyapps.io/golfMapsR/)'
  prefs: []
  type: TYPE_NORMAL
- en: 'If you followed along, had fun in doing so, or are intrigued, feel free to
    try mapping your favorite courses and create a Pull Request for the **golfMapsR**
    repository that I maintain: [https://github.com/abodesy14/golfMapsR](https://github.com/abodesy14/golfMapsR)'
  prefs: []
  type: TYPE_NORMAL
- en: With some combined effort, we can create a nice little database of plottable
    golf courses around the world!
  prefs: []
  type: TYPE_NORMAL
