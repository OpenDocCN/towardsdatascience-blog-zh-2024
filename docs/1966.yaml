- en: How to practice data analyst interviews with AI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何用 AI 练习数据分析师面试
- en: 原文：[https://towardsdatascience.com/how-to-practice-data-analyst-interviews-with-ai-e933a027e609?source=collection_archive---------12-----------------------#2024-08-12](https://towardsdatascience.com/how-to-practice-data-analyst-interviews-with-ai-e933a027e609?source=collection_archive---------12-----------------------#2024-08-12)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-practice-data-analyst-interviews-with-ai-e933a027e609?source=collection_archive---------12-----------------------#2024-08-12](https://towardsdatascience.com/how-to-practice-data-analyst-interviews-with-ai-e933a027e609?source=collection_archive---------12-----------------------#2024-08-12)
- en: Using LLMs to generate synthetic data and code
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用大型语言模型（LLMs）生成合成数据和代码
- en: '[](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)[![Mathew
    Wang](../Images/487d76ba764d66af4f4bdd72f395d58f.png)](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)
    [Mathew Wang](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)[![Mathew
    Wang](../Images/487d76ba764d66af4f4bdd72f395d58f.png)](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)
    [Mathew Wang](https://medium.com/@mathewnxwang?source=post_page---byline--e933a027e609--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)
    ·8 min read·Aug 12, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e933a027e609--------------------------------)
    ·阅读时间 8 分钟·2024年8月12日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/94cdfdd742c1f83f94ea057bf6d28d57.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/94cdfdd742c1f83f94ea057bf6d28d57.png)'
- en: Photo by [Scott Graham](https://unsplash.com/@homajob?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Scott Graham](https://unsplash.com/@homajob?utm_source=medium&utm_medium=referral)
    于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Intro
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简介
- en: 'I’ve been working on weekend LLM projects. When contemplating what to work
    on, two ideas struck me:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我最近一直在做一些周末的 LLM 项目。在考虑要做什么时，两个想法突然浮现：
- en: '**There are few resources for practicing data analytics interviews** in contrast
    to other roles like software engineering and product management. I relied on friends
    in the industry to make up SQL and Python interview questions when I practiced
    interviewing for my first data analyst job.'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**与软件工程和产品管理等其他职位相比，练习数据分析面试的资源较少**。在我准备第一次数据分析师面试时，我依赖于行业中的朋友，自己编写 SQL 和 Python
    面试问题。'
- en: '**LLMs are really good at generating synthetic datasets and writing code.**'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**大型语言模型（LLMs）在生成合成数据集和编写代码方面非常擅长。**'
- en: As a result, I’ve built the **AI Data Analysis Interviewer** which automatically
    creates a unique dataset and generates Python interview questions for you to solve!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 于是，我构建了 **AI 数据分析面试官**，它可以自动生成独特的数据集，并为你生成 Python 面试问题供你解决！
- en: This article provides an overview of how it works and its technical implementation.
    You can check out the repo [here](https://github.com/mathewnxwang/data_analysis_interview_tool/tree/main).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本文概述了其工作原理和技术实现。你可以在 [这里](https://github.com/mathewnxwang/data_analysis_interview_tool/tree/main)查看该项目的代码库。
- en: Demo
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 演示
- en: 'When I launch the web app I’m prompted to provide details on the type of interview
    I want to practice for, specifically the company and a dataset description. Let’s
    say I’m interviewing for a data analyst role at Uber which focuses on analyzing
    ride data:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 当我启动这个网页应用时，系统会提示我提供关于我想要练习的面试类型的详细信息，具体是公司和数据集描述。假设我正在面试 Uber 的数据分析师职位，重点分析乘车数据：
- en: '![](../Images/75aed9c03ef8ff4d364477cc0e47299a.png)'
  id: totrans-16
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/75aed9c03ef8ff4d364477cc0e47299a.png)'
- en: 'After clicking Submit and waiting for GPT to do its magic, I receive the AI
    generated questions, answers, and an input field where I can execute code on the
    AI generated dataset:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在点击提交并等待 GPT 执行其魔法后，我收到了 AI 生成的问题、答案，以及一个可以在 AI 生成的数据集上执行代码的输入框：
- en: '![](../Images/e18b8f7b3ee76ed23e2a78d99c3ab8a6.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e18b8f7b3ee76ed23e2a78d99c3ab8a6.png)'
- en: 'Awesome! Let’s try to solve the first question: calculate the total distance
    traveled each day. As is good analytics practice, let’s start with data exploration:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！让我们来解决第一个问题：计算每天行驶的总距离。按照良好的分析实践，我们从数据探索开始：
- en: '![](../Images/73dcc32b41105c3c97ecd042f74041a4.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/73dcc32b41105c3c97ecd042f74041a4.png)'
- en: 'It looks like we need to group by the ride_date field and sum the distance_miles
    field. Let’s write and submit that Pandas code:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来我们需要按ride_date字段分组，并对distance_miles字段求和。让我们编写并提交这段Pandas代码：
- en: '![](../Images/a541d03751698530798f9994483d4862.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a541d03751698530798f9994483d4862.png)'
- en: Looks good to me! Does the AI answer agree with our approach?
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 看起来不错！AI的答案是否同意我们的做法？
- en: '![](../Images/f4c0dda442a99b7a9183da79e71dc9d4.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f4c0dda442a99b7a9183da79e71dc9d4.png)'
- en: The AI answer uses a slightly different methodology but solves the problem essentially
    in the same way.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: AI答案使用略有不同的方法，但本质上以相同的方式解决问题。
- en: 'I can rinse and repeat as much as needed to feel great before heading into
    an interview. Interviewing for Airbnb? This tool has you covered. It generates
    the questions:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以反复练习，直到感觉完全准备好再去面试。面试Airbnb？这个工具能帮你。它会生成这些问题：
- en: '![](../Images/4cc47cd2ff09cdba93d2765d1d7d09c3.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cc47cd2ff09cdba93d2765d1d7d09c3.png)'
- en: 'Along with a dataset you can execute code on:'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 以及一个可以执行代码的数据集：
- en: '![](../Images/2fffe8f5b44a4c0ab747bc7cf4ab41a2.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2fffe8f5b44a4c0ab747bc7cf4ab41a2.png)'
- en: How to use the app
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用该应用
- en: Check out the readme of the repo [here](https://github.com/mathewnxwang/data_analysis_interview_tool/blob/main/README.md#how-to-run)
    to run the app locally. Unfortunately I didn’t host it but I might in the future!
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 查看仓库的readme [这里](https://github.com/mathewnxwang/data_analysis_interview_tool/blob/main/README.md#how-to-run)以在本地运行该应用。不幸的是，我没有托管它，但未来可能会！
- en: High-level design
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高层设计
- en: The rest of this article will cover the technical details on how I created the
    AI Data Analysis Interviewer.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 本文接下来将介绍我如何创建AI数据分析面试官的技术细节。
- en: LLM architecture
  id: totrans-34
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LLM架构
- en: I used OpenAI’s gpt-4o as it’s currently my go-to LLM model (it’s pretty easy
    to swap this out with another model though.)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了OpenAI的gpt-4o，因为它目前是我常用的LLM模型（不过换成其他模型也很容易。）
- en: 'There are 3 types of LLM calls made:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 进行的LLM调用有3种类型：
- en: '**Dataset generation**: we ask a LLM to generate a dataset suitable for an
    analytics interview.'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据集生成**：我们请求LLM生成一个适合分析面试的数据集。'
- en: '**Question generation**: we ask a LLM to generate a couple of analytics interview
    questions from that dataset.'
  id: totrans-38
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**问题生成**：我们请求LLM从该数据集生成几个分析面试问题。'
- en: '**Answer generation**: we ask a LLM to generate the answer code for each interview
    question.'
  id: totrans-39
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**答案生成**：我们请求LLM为每个面试问题生成答案代码。'
- en: Front-end
  id: totrans-40
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 前端
- en: I built the front-end using Flask. It’s simple and not very interesting so I’ll
    focus on the LLM details below. Feel free to check out [the code in the repo](https://github.com/mathewnxwang/data_analysis_interview_tool/tree/main)
    however!
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用Flask构建了前端。它简单且不太有趣，所以我将重点讲解LLM的细节。欢迎查看[仓库中的代码](https://github.com/mathewnxwang/data_analysis_interview_tool/tree/main)！
- en: Design details
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 设计细节
- en: LLM manager
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: LLM管理器
- en: LLMManager is a simple class which handles making LLM API calls. It gets our
    OpenAI API key from a local secrets file and makes an OpenAI API call to pass
    a prompt to a LLM model. You’ll see some form of this in every LLM project.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: LLMManager是一个简单的类，负责进行LLM API调用。它从本地的秘密文件中获取我们的OpenAI API密钥，并进行OpenAI API调用，将提示传递给LLM模型。在每个LLM项目中你都会看到类似的形式。
- en: '[PRE0]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Dataset generation
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据集生成
- en: Here is where the fun starts!
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是有趣的部分开始！
- en: 'We first prompt a LLM to generate a dataset with the following prompt:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先通过以下提示请求LLM生成一个数据集：
- en: '[PRE1]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Let’s break it down:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们分解一下：
- en: Many LLM models follow a prompt structure where the LLM accepts a system and
    user message. The system message is intended to define general behavior and the
    user message is intended to provide specific instructions. Here we prompt the
    LLM to be a world class interviewer in the system message. It feels silly but
    hyping up a LLM is a proven prompt hack to get better performance.
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 许多LLM模型遵循一种提示结构，LLM接受系统消息和用户消息。系统消息旨在定义一般行为，用户消息则提供具体指令。在这里，我们通过系统消息要求LLM成为一位世界级面试官。虽然这听起来有些傻，但激励LLM是一个经过验证的提示技巧，可以获得更好的表现。
- en: We pass the user inputs about the company and dataset they want to practice
    interviewing with into the user template through the string variables {company}
    and {description}.
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们通过字符串变量{company}和{description}将用户输入的公司和数据集信息传递到用户模板中，供其练习面试使用。
- en: We prompt the LLM to output data in csv format. This seems like the simplest
    tabular data format for a LLM to produce which we can later convert to a Pandas
    DataFrame for code analysis. JSON would also probably work but may be less reliable
    given the more complex and verbose syntax.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提示LLM以csv格式输出数据。这似乎是LLM生成数据的最简单的表格格式，之后我们可以将其转换为Pandas DataFrame进行代码分析。JSON格式也可能可行，但由于其更复杂且冗长的语法，可能会不那么可靠。
- en: We want the LLM output to be parseable csv, but gpt-4o tends to generate extra
    text likely because it was trained to be very helpful. The end of the user template
    strongly instructs the LLM to just output parseable csv data, but even so we need
    to post-process it.
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们希望LLM的输出是可解析的csv，但gpt-4o往往会生成多余的文本，可能是因为它被训练得非常乐于助人。用户模板的结尾强烈指示LLM只输出可解析的csv数据，但即便如此，我们仍需要对其进行后处理。
- en: 'The class DataGenerator handles all things data generation and contains the
    generate_interview_dataset method which makes the LLM call to generate the dataset:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: DataGenerator类处理所有数据生成相关的工作，并包含generate_interview_dataset方法，该方法进行LLM调用以生成数据集：
- en: '[PRE2]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Note that the clean_llm_dataset_output method does the light post-processing
    mentioned above. It removes any extraneous text before “id,” which denotes the
    start of the csv data.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，clean_llm_dataset_output方法执行了上面提到的轻度后处理。它去除了“id”之前的任何多余文本，“id”表示csv数据的开始。
- en: 'LLMs only can output strings so we need to transform the string output into
    an analyzable Pandas DataFrame. The convert_str_to_df method takes care of that:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: LLM只能输出字符串，因此我们需要将字符串输出转换为可分析的Pandas DataFrame。convert_str_to_df方法处理了这个问题：
- en: '[PRE3]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Question generation
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 问题生成
- en: 'We can prompt a LLM to generate interview questions off of the generated dataset
    with the following prompt:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以使用以下提示，提示LLM根据生成的数据集生成面试问题：
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'To break it down once again:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 再次分解：
- en: The same system prompt is used here as we still want the LLM to embody a world-class
    interviewer when writing the interview questions.
  id: totrans-64
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这里使用的是相同的系统提示，因为我们仍然希望LLM在编写面试问题时体现出世界级面试官的水平。
- en: 'The string output from the dataset generation call is passed into the {dataset}
    string variable. Note that we have to maintain 2 representations of the dataset:
    1\. a string representation that a LLM can understand to generate questions and
    answers and 2\. a structured representation (i.e. DataFrame) that we can execute
    code over.'
  id: totrans-65
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据集生成调用得到的字符串输出被传递到{dataset}字符串变量中。注意，我们必须维护数据集的两种表示方式：1\. 一个LLM可以理解的字符串表示，用于生成问题和答案；2\.
    一个结构化表示（即DataFrame），我们可以在其上执行代码。
- en: We prompt the LLM to return a list. We need the output to be structured so we
    can iterate over the questions in the answer generation step to generate an answer
    for every question.
  id: totrans-66
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们提示LLM返回一个列表。我们需要输出是结构化的，以便在答案生成步骤中遍历问题，为每个问题生成一个答案。
- en: 'The LLM call is made with the generate_interview_questions method of DataGenerator:'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: LLM调用是通过DataGenerator的generate_interview_questions方法进行的：
- en: '[PRE5]'
  id: totrans-68
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Answer generation
  id: totrans-69
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 答案生成
- en: 'With both the dataset and the questions available, we finally generate the
    answers with the following prompt:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在有了数据集和问题之后，我们最终通过以下提示生成答案：
- en: '[PRE6]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: We make as many answer generation LLM calls as there are questions, so 3 since
    we hard coded the question generation prompt to ask for 3 questions. Technically
    you could ask a LLM to generate all 3 answers for all 3 questions in 1 call but
    I suspect that performance would worsen. We want the maximize the ability of the
    LLM to generate accurate answers. A (perhaps obvious) rule of thumb is that the
    harder the task given to a LLM, the less likely the LLM will perform it well.
  id: totrans-72
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们根据问题的数量生成相应数量的答案生成LLM调用，因此是3次，因为我们将问题生成提示硬编码为请求生成3个问题。从技术上讲，你可以要求LLM在一次调用中为所有3个问题生成所有3个答案，但我怀疑这会导致性能下降。我们希望最大化LLM生成准确答案的能力。一个（也许显而易见的）经验法则是，任务越难，LLM完成得越不好。
- en: The prompt instructs the LLM to refer to the dataset as “df” because our interview
    dataset in DataFrame form is called “df” when the user code is executed by the
    CodeExecutor class below.
  id: totrans-73
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 提示指示LLM将数据集称为“df”，因为当用户代码通过下面的CodeExecutor类执行时，我们的面试数据集以DataFrame形式被称为“df”。
- en: '[PRE7]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: Conclusion
  id: totrans-75
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: I hope this article sheds light on how to build a simple and useful LLM project
    which utilizes LLMs in a variety of ways!
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 我希望本文能为如何构建一个简单而有用的LLM项目提供一些启示，这个项目在多种方式上利用了LLM！
- en: 'If I continued to develop this project, I would focus on:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我继续开发这个项目，我会专注于：
- en: Adding more validation on structured output from LLMs (i.e. parseable csv or
    lists). I already covered a couple of edge cases but LLMs are very unpredictable
    so this needs hardening.
  id: totrans-78
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 增加对来自 LLMs 的结构化输出（即可解析的 csv 或列表）的更多验证。我已经覆盖了一些边缘案例，但 LLMs 非常不可预测，因此需要加固。
- en: 2\. Adding more features like
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 添加更多功能，如
- en: Generating multiple relational tables and questions requiring joins
  id: totrans-80
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 生成多个关系表和需要连接的查询
- en: SQL interviews in addition to Python
  id: totrans-81
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 除了 Python 之外的 SQL 面试
- en: Custom dataset upload
  id: totrans-82
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自定义数据集上传
- en: Difficulty setting
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 难度设置
