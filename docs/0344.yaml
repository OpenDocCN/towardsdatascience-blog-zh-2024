- en: Solving a Tennis Refactoring Challenge in Python using SOLID
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/solving-a-tennis-refactoring-challenge-in-python-using-solid-f1282f85e7e0?source=collection_archive---------9-----------------------#2024-02-05](https://towardsdatascience.com/solving-a-tennis-refactoring-challenge-in-python-using-solid-f1282f85e7e0?source=collection_archive---------9-----------------------#2024-02-05)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A step-by-step illustration of how to use SOLID to solve a refactoring challenge
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@tomergabay?source=post_page---byline--f1282f85e7e0--------------------------------)[![Tomer
    Gabay](../Images/1fb1d408bc89415918c1aa6733df44e1.png)](https://medium.com/@tomergabay?source=post_page---byline--f1282f85e7e0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f1282f85e7e0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f1282f85e7e0--------------------------------)
    [Tomer Gabay](https://medium.com/@tomergabay?source=post_page---byline--f1282f85e7e0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f1282f85e7e0--------------------------------)
    ·9 min read·Feb 5, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6946a2918536da57a572b635a87f305b.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Lucas Davies](https://unsplash.com/@lucas_davies?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Code refactor challenges are well-known by software engineers, but less so by
    data scientists, though data scientists can also highly benefit from practising
    such challenges. By practising these, especially when applying the SOLID principles,
    you learn how to write much better code; code that’s modular, of high quality
    and object-oriented. Mastering the SOLID principles as a data scientist can substantially
    elevate the quality and manageability of data science projects. This is particularly
    crucial in teams in which most data scientists are statisticians and mathematicians
    by origin, who may have less familiarity with programming fundamentals than software
    engineers.
  prefs: []
  type: TYPE_NORMAL
- en: There are many refactoring challenges available online. Perhaps the most famous
    one is the [Gilded Rose Kata](https://github.com/emilybache/GildedRose-Refactoring-Kata).
    Another fun refactoring kata is the [Tennis Refactoring Kata](https://github.com/emilybache/Tennis-Refactoring-Kata),
    which we’ll tackle in this article.
  prefs: []
  type: TYPE_NORMAL
- en: Often these challenges are called katas, In the context of a “refactoring kata,”
    the word “kata” is borrowed from martial arts, where it refers to a structured
    practice routine. In martial arts, a kata is a sequence of movements and techniques
    that…
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
