["```py\n01000010 00100000 01111010 11100001\n```", "```py\narray([ 2.43655406e-02, -4.33481708e-02, -1.89688837e-03, -3.76498550e-02,\n       -8.96364748e-02,  2.96154656e-02, -5.79943173e-02,  1.87652372e-02,\n        1.87771711e-02,  6.30387887e-02, -3.23972516e-02, -1.46128759e-02,\n       -3.39277312e-02, -7.04369228e-03,  3.87261175e-02, -5.02494797e-02,\n        ...\n       -1.03239892e-02,  1.83096472e-02, -1.86534156e-03,  1.44851031e-02,\n       -6.21072948e-02, -4.46912572e-02, -1.57684386e-02,  8.28376040e-02,\n       -4.58770394e-02,  1.04658678e-01,  5.53084277e-02, -2.51113791e-02,\n        4.72703762e-02, -2.41811387e-03, -9.09169838e-02,  1.15215247e-02],\n      dtype=float32)\n```", "```py\narray([[-1, -3, -1, ...,  1, -2, -2],\n       [-6, -1, -2, ..., -2, -2, -3],\n       [ 0, -2, -4, ..., -1,  1, -2],\n       ...,\n       [ 3,  0, -5, ..., -5,  7,  0],\n       [-4, -5,  3, ..., -2, -2, -2],\n       [-1,  0, -2, ..., -1,  1, -3]], dtype=int4)\n```", "```py\n# we count the number of 0 over the total number of values\n>>> 1-quantized_regular[:, 29].sum()/sample_vectors[:, 29].size\n0.9424122472338802 \n```", "```py\n# we count the number of 0 over the total number of values\n>>> 1-quantized_tfQ[:, 29].sum()/sample_vectors[:, 29].size\n0.46809423884013734\n```", "```py\n>>> err_regular = .5-quantized_regular.sum()/sample_vectors.size\n>>> err_ftQ = .5-quantized_tfQ.sum()/sample_vectors.size\n>>> err_total = abs(err_regular)-abs(err_ftQ)\n>>> err_total\n0.012901293538566672\n```"]