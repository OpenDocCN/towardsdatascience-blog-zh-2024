- en: The German Tank Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-german-tank-problem-3455237aaf43?source=collection_archive---------2-----------------------#2024-03-06](https://towardsdatascience.com/the-german-tank-problem-3455237aaf43?source=collection_archive---------2-----------------------#2024-03-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Estimating your chances of winning the lottery with sampling
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@doriandrost?source=post_page---byline--3455237aaf43--------------------------------)[![Dorian
    Drost](../Images/1795395ad0586eafd83d3e2f7b975ca8.png)](https://medium.com/@doriandrost?source=post_page---byline--3455237aaf43--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3455237aaf43--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3455237aaf43--------------------------------)
    [Dorian Drost](https://medium.com/@doriandrost?source=post_page---byline--3455237aaf43--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3455237aaf43--------------------------------)
    ·11 min read·Mar 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Statistical estimates can be fascinating, can’t they? By just sampling a few
    instances from a population, you can infer properties of that population such
    as the mean value or the variance. Likewise, under the right circumstances, it
    is possible to estimate the **total size** of the population, as I want to show
    you in this article.
  prefs: []
  type: TYPE_NORMAL
- en: I will use the example of drawing lottery tickets to estimate how many tickets
    there are in total, and hence calculate the likelihood of winning. More formally,
    this means to estimate the population size given a discrete uniform distribution.
    We will see different estimates and discuss their differences and weaknesses.
    In addition, I will point you to some other use cases this approach can be used
    in.
  prefs: []
  type: TYPE_NORMAL
- en: Playing the lottery
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/3a2591c798b46eb0e58bb2b309b57953.png)'
  prefs: []
  type: TYPE_IMG
- en: I’m too anxious to ride one of those, but if it pleases you…Photo by [Oneisha
    Lee](https://unsplash.com/@shapeyourbliss?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Let’s imagine I go to a state fair and buy some tickets in the lottery. As a
    data scientist, I want to know the probability of winning the main prize, of course.
    Let’s assume there is just a single ticket that wins the main prize. So, to estimate
    the likelihood of winning, I need to know the total number of lottery tickets
    N, as my chance of winning is 1/N then (or k/N, if I buy k tickets). But how can
    I estimate that N by just buying a few tickets (which are, as I saw, all losers)?
  prefs: []
  type: TYPE_NORMAL
- en: I will make use of the fact, that the lottery tickets have numbers on them,
    and I assume, that these are consecutive running numbers (which means, that I
    assume a discrete uniform distribution). Say I have bought some tickets and their
    numbers in order are [242,412,823,1429,1702]. What do I know about the total number
    of tickets now? Well, obviously there are at least 1702 tickets (as that is the
    highest number I have seen so far). That gives me a first lower bound of the number
    of tickets, but how accurate is it for the actual number of tickets? Just because
    the highest number I have drawn is 1702, that doesn’t mean that there are any
    numbers higher than that. It is very unlikely, that I caught the lottery ticket
    with the highest number in my sample.
  prefs: []
  type: TYPE_NORMAL
- en: 'However, we can make more out of the data. Let us think as follows: If we knew
    the middle number of all the tickets, we could easily derive the total number
    from that: If the middle number is *m*, then there are *m-1* tickets below that
    middle number, and there are *m-1* tickets above that. That is, the total number
    of tickets would be *(m-1) + (m-1) + 1*, (with the *+1* being the ticket of number
    m itself), which is equal to *2m-1*. We don’t know that middle number m, but we
    can estimate it by the mean or the median of our sample. My sample above has the
    (rounded) average of 922, which yields 2*922-1 = 1843\. That is, from that calculation
    the estimated number of tickets is 1843.'
  prefs: []
  type: TYPE_NORMAL
- en: 'That was quite interesting so far, as just from a few lottery ticket numbers,
    I was able to give an estimate of the total number of tickets. However, you may
    wonder if that is the best estimate we can get. Let me spoil you right away: It
    is not.'
  prefs: []
  type: TYPE_NORMAL
- en: 'The method we used has some drawbacks. Let me demonstrate that to you with
    another example: Say we have the numbers [12,30,88], which leads us to 2*43–1
    = 85\. That means, the formula suggests there are 85 tickets in total. However,
    we have ticket number 88 in our sample, so this can not be true at all! There
    is a general problem with this method: The estimated N can be lower than the highest
    number in the sample. In that case, the estimate has no meaning at all, as we
    already know, that the highest number in the sample is a natural lower bound of
    the overall N.'
  prefs: []
  type: TYPE_NORMAL
- en: 'A better approach: Using even spacing'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/60ee63bed681c8bf2a8a74cfe01c2319.png)'
  prefs: []
  type: TYPE_IMG
- en: These birds are quite evenly spaced on the power line, which is an important
    concept for our next approach. Photo by [Ridham Nagralawala](https://unsplash.com/@ridham?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Okay, so what can we do? Let us think in a different direction. The lottery
    tickets I bought have been sampled randomly from the distribution that goes from
    1 to unknown N. My ticket with the highest number is number 1702, and I wonder,
    how far away is this from being the highest ticket at all. In other words, what
    is the gap between 1702 and N? If I knew that gap, I could easily calculate N
    from that. What do I know about that gap, though? Well, I have reason to assume
    that this gap is expected to be as big as all the other gaps between two consecutive
    tickets in my sample. The gap between the first and the second ticket should,
    on average, be as big as the gap between the second and the third ticket, and
    so on. There is no reason why any of those gaps should be bigger or smaller than
    the others, except for random deviation, of course. I sampled my lottery tickets
    independently, so they should be evenly spaced on the range of all possible ticket
    numbers. On average, the numbers in the range of 0 to N would look like birds
    on a power line, all having the same gap between them.
  prefs: []
  type: TYPE_NORMAL
- en: 'That means I expect N-1702 to equal the average of all the other gaps. The
    other gaps are 242–0=242, 412–242=170, 823–412=411, 1429–823=606, 1702–1429=273,
    which gives the average 340\. Hence I estimate N to be 1702+340=2042\. In short,
    this can be denoted by the following formula:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/02570dd48cf176f3be391c20b40f0e17.png)'
  prefs: []
  type: TYPE_IMG
- en: Here *x* is the biggest number observed (1702, in our case), and *k* is the
    number of samples (5, in our case). This is just a short form of calculating the
    average as we just did.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s do a simulation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just saw two estimates of the total number of lottery tickets. First, we
    calculated *2*m-1*, which gave us 1843, and then we used the more sophisticated
    approach of *x + (x-k)/k* and obtained 2042\. I wonder which estimation is more
    correct now? Are my chances of winning the lottery 1/1843 or 1/2042?
  prefs: []
  type: TYPE_NORMAL
- en: 'To show some properties of the estimates we just used, I did a simulation.
    I drew samples of different sizes k from a distribution, where the highest number
    is 2000, and that I did a few hundred times each. Hence we would expect that our
    estimates also return 2000, at least on average. This is the outcome of the simulation:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fd0f5750fe18415a8727f13c5106914b.png)'
  prefs: []
  type: TYPE_IMG
- en: Probability densities of the different estimates for varying k. Note that the
    ground truth N is 2000\. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: 'What do we see here? On the x-axis, we see the k, i.e. the number of samples
    we take. For each k, we see the distribution of the estimates based on a few hundred
    simulations for the two formulas we just got to know. The dark point indicates
    the mean value of the simulations each, which is always 2000, independent of the
    k. That is a very interesting point: Both estimates converge to the correct value
    if they are repeated an infinite number of times.'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, besides the common average, the distributions differ quite a lot.
    We see, that the formula *2*m-1* has higher variance, i.e. its estimates are far
    away from the real value more often than for the other formula. The variance has
    a tendency to decrease with higher k though. This decrease does not always hold
    perfectly, as this is just as simulation and is still subject to random influences.
    However, it is quite understandable and expected: The more samples I take, the
    more precise is my estimation. That is a very common property of statistical estimates.'
  prefs: []
  type: TYPE_NORMAL
- en: 'We also see that the deviations are symmetrical, i.e. underestimating the real
    value is as likely as overestimating it. For the second approach, this symmetry
    does not hold: While most of the density is above the real mean, there are more
    and larger outliers below. How does that come? Let’s retrace how we computed that
    estimate. We took the biggest number in our sample and added the average gap size
    to that. Naturally, the biggest number in our sample can only be as big as the
    biggest number in total (the N that we want to estimate). In that case, we add
    the average gap size to N, but we can’t get any higher than that with our estimate.
    In the other direction, the biggest number can be very low. If we are unlucky,
    we could draw the sample [1,2,3,4,5], in which case the biggest number in our
    sample (5) is very far away from the actual N. That is why larger deviations are
    possible in underestimating the real value than in overestimating it.'
  prefs: []
  type: TYPE_NORMAL
- en: Which is better?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: From what we just saw, which estimate is better now? Well, both give the correct
    value on average. However, the formula *x + (x-k)/k* has lower variance, and that
    is a big advantage. It means, that you are closer to the real value more often.
    Let me demonstrate that to you. In the following, you see the probability density
    plots of the two estimates for a sample size of *k=5*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/54497bfc9bf4dd95c6320bf84619f8c4.png)'
  prefs: []
  type: TYPE_IMG
- en: Probability densities for the two estimates for k=5\. The colored shape under
    the curves is covering the space from N=1750 to N=2250\. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: I highlighted the point N=2000 (the real value for N) with a dotted line. First
    of all, we still see the symmetry that we have seen before already. In the left
    plot, the density is distributed symmetrically around N=2000, but in the right
    plot, it is shifted to the right and has a longer tail to the left. Now let’s
    take a look at the grey area under the curves each. In both cases, it goes from
    N=1750 to N=2250\. However, in the left plot, this area accounts for 42% of the
    total area under the curve, while for the right plot, it accounts for 73%. In
    other words, in the left plot, you have a chance of 42% that your estimate is
    **not** deviating more than 250 points in either direction. In the right plot,
    that chance is 73%. That means, you are much more likely to be that close to the
    real value. However, you are more likely to slightly overestimate than underestimate.
  prefs: []
  type: TYPE_NORMAL
- en: I can tell you, that x*+ (x-k)/k* is the so-called **uniformly minimum variance
    unbiased estimator**, i.e. it is the estimator with the smallest variance. You
    won’t find any estimate with lower variance, so this is the best you can use,
    in general.
  prefs: []
  type: TYPE_NORMAL
- en: Use cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/2c9e8ec7cdff2ce5c710fb5f9bd6b7eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Make love, not war 💙. Photo by [Marco Xu](https://unsplash.com/@marcoxu?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: We just saw how to estimate the total number of elements in a pool, if these
    elements are indicated by consecutive numbers. Formally, this is a discrete uniform
    distribution. This problem is commonly known as the **German tank problem**. In
    the Second World War, the Allies used this approach to estimate how many tanks
    the German forces had, just by using the serial numbers of the tanks they had
    destroyed or captured so far.
  prefs: []
  type: TYPE_NORMAL
- en: 'We can now think of more examples where we can use this approach. Some are:'
  prefs: []
  type: TYPE_NORMAL
- en: You can estimate how many instances of a product have been produced if they
    are labeled with a running serial number.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can estimate the number of users or customers if you are able to sample
    some of their IDs.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You can estimate how many students are (or have been) at your university if
    you sample students’ matriculation numbers (given that the university has not
    yet used the first numbers again after reaching the maximum number already).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: However, be aware that some requirements need to be fulfilled to use that approach.
    The most important one is, that you indeed draw your samples randomly and independently
    of each other. If you ask your friends, who have all enrolled in the same year,
    for their matriculation numbers, they won’t be evenly spaced on the whole range
    of matriculation numbers but will be quite clustered. Likewise, if you buy articles
    with running numbers from a store, you need to make sure, that this store got
    these articles in a random fashion. If it was delivered with the products of numbers
    1000 to 1050, you don’t draw randomly from the whole pool.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We just saw different ways of estimating the total number of instances in a
    pool under discrete uniform distribution. Although both estimates give the same
    expected value in the long run, they differ in terms of their variance, with one
    being superior to the other. This is interesting because neither of the approaches
    is wrong or right. Both are backed by reasonable theoretical considerations and
    estimate the real population size correctly (in frequentist statistical terms).
  prefs: []
  type: TYPE_NORMAL
- en: I now know that my chance of winning the state fair lottery is estimated to
    be 1/2042 = 0.041% (or 0.24% with the 5 tickets I bought). Maybe I should rather
    invest my money in cotton candy; that would be a save win.
  prefs: []
  type: TYPE_NORMAL
- en: References & Literature
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Mathematical background on the estimates discussed in this article can be found
    here:'
  prefs: []
  type: TYPE_NORMAL
- en: Johnson, R. W. (1994). Estimating the size of a population. *Teaching Statistics*,
    *16*(2), 50–52.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also feel free to check out the Wikipedia articles on the German tank problem
    and related topics, which are quite explanatory:'
  prefs: []
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/German_tank_problem](https://en.wikipedia.org/wiki/German_tank_problem)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://en.wikipedia.org/wiki/Discrete_uniform_distribution](https://en.wikipedia.org/wiki/Discrete_uniform_distribution)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'This is the script to do the simulation and create the plots shown in the article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '*Like this article?* [*Follow me*](/@doriandrost) *to be notified of my future
    posts.*'
  prefs: []
  type: TYPE_NORMAL
