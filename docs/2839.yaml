- en: Another Hike Up Everest
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 再次登顶珠穆朗玛
- en: 原文：[https://towardsdatascience.com/another-hike-up-everest-dc4ec62ec8dd?source=collection_archive---------8-----------------------#2024-11-22](https://towardsdatascience.com/another-hike-up-everest-dc4ec62ec8dd?source=collection_archive---------8-----------------------#2024-11-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/another-hike-up-everest-dc4ec62ec8dd?source=collection_archive---------8-----------------------#2024-11-22](https://towardsdatascience.com/another-hike-up-everest-dc4ec62ec8dd?source=collection_archive---------8-----------------------#2024-11-22)
- en: How to make progress on hard problems in AI
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在人工智能的难题中取得进展
- en: '[](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)[![James
    Barney](../Images/7f39f18db180ffc654caa7f44a9652da.png)](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)
    [James Barney](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)[![James
    Barney](../Images/7f39f18db180ffc654caa7f44a9652da.png)](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)
    [James Barney](https://medium.com/@jamesbarney71?source=post_page---byline--dc4ec62ec8dd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)
    ·8 min read·Nov 22, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--dc4ec62ec8dd--------------------------------)
    ·阅读时间8分钟·2024年11月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/d56829b47a980bf9a64af2e7dbbe3dd9.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d56829b47a980bf9a64af2e7dbbe3dd9.png)'
- en: Mount Everest, known locally as **Sagarmatha** or **Chomolangma** ([Wikipedia](https://en.wikipedia.org/wiki/Mount_Everest))
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 珠穆朗玛峰，当地人称之为**萨加玛塔**或**珠穆朗玛**（[维基百科](https://en.wikipedia.org/wiki/Mount_Everest)）
- en: 'New technology is born, matured, and eventually replaced. AI is no different
    and will follow this curve. Many news articles are already proclaiming that Generative
    AI (Gen AI) has arrived at the Trough of Disillusionment: the point in adoption
    where the early adopters are realizing the promises of the new technology are
    much more difficult to achieve than they realized.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 新技术诞生、成熟，最终被取代。人工智能（AI）也不例外，将遵循这一发展曲线。许多新闻文章已经宣称生成性人工智能（Gen AI）已经进入了“幻灭低谷”：即采用过程中的阶段，早期采用者开始意识到，新技术所承诺的成果比他们想象的要难以实现得多。
- en: '![](../Images/9d495766f9cb58e03dcde63fafeff15f.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d495766f9cb58e03dcde63fafeff15f.png)'
- en: The Gartner Hype Cycle [Wikipedia](https://en.wikipedia.org/wiki/Gartner_hype_cycle)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: Gartner炒作周期 [维基百科](https://en.wikipedia.org/wiki/Gartner_hype_cycle)
- en: 'This is normal and has happened many times before Gen AI. Consider the boom
    and bust of blockchain — the [lettuce you buy in stores](https://www.nytimes.com/2018/09/24/business/walmart-blockchain-lettuce.html)
    will be tracked from farm to table with blockchain! Or Big Data: you’ll be able
    to [know everything about your customer](https://www.nytimes.com/2012/02/12/sunday-review/big-datas-impact-in-the-world.html),
    delivering value to them and profits to you with little effort!'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这是正常现象，在生成性人工智能之前也曾多次发生过。比如区块链的兴起与衰退——[你在商店买的生菜](https://www.nytimes.com/2018/09/24/business/walmart-blockchain-lettuce.html)将通过区块链从农场追踪到餐桌！又比如大数据：你将能够[了解客户的一切](https://www.nytimes.com/2012/02/12/sunday-review/big-datas-impact-in-the-world.html)，以最小的努力为他们提供价值，同时为自己带来利润！
- en: The trouble is that these problems being solved by each of these new technologies
    are actually quite vast. Each is its own Everest.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 问题在于，这些新技术所解决的每个问题实际上都是非常庞大的。每个问题都是一座独立的“珠穆朗玛峰”。
- en: 'And just like Everest, you can’t hike up it in a day. Months or even years
    of preparation are required. Each camp on the way up is specialized for that location.
    Sometimes even the best prepared attempts fail to summit the mountain — that doesn’t
    always mean the team of climbers wasn’t qualified or capable: perhaps the weather
    was bad or they simply took the wrong route.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 就像珠穆朗玛峰一样，你不能在一天内登顶。需要几个月甚至几年的准备。途中每个营地都为该位置量身定制。有时，即使是准备最充分的尝试也未必能成功登顶——这并不意味着登山队不具备资格或能力：可能是天气不好，或者他们走错了路线。
- en: '![](../Images/2409842b726193f4f523752a7cf77b2c.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2409842b726193f4f523752a7cf77b2c.png)'
- en: 1963 American Everest Expedition ([Wikipedia](https://commons.m.wikimedia.org/wiki/File:1963_American_Everest_expedition.svg))
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 1963年美国珠穆朗玛峰远征（[维基百科](https://commons.m.wikimedia.org/wiki/File:1963_American_Everest_expedition.svg)）
- en: Your Gen AI strategy should be the same as your strategy for climbing Mount
    Everest (maybe hold off on the extra oxygen, though).
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 你的生成式人工智能策略应该与爬珠穆朗玛峰的策略相同（不过可以暂时不使用额外的氧气）。
- en: Each problem that Gen AI is being used to solve is typically a [Big Hairy Problem](https://www.investopedia.com/terms/b/big-hairy-audacious-goal-bhag.asp)
    — complicated inputs and complicated outputs with complicated processes connecting
    the two.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式人工智能正在解决的每个问题通常都是一个[大难题](https://www.investopedia.com/terms/b/big-hairy-audacious-goal-bhag.asp)——输入复杂、输出复杂，并且有复杂的过程将两者连接起来。
- en: 'Remember: big leaps are dangerous when climbing mountains. Progress is actually
    made with small gradual steps along a path.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 记住：在爬山时，大幅度的跃进是危险的。进步实际上是通过沿着一条路径的小步伐逐渐取得的。
- en: '![](../Images/e40e0e02e348c85aa39fae0a8be59dfa.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e40e0e02e348c85aa39fae0a8be59dfa.png)'
- en: Don’t jump — use a ladder ([Wikipedia](https://commons.wikimedia.org/wiki/File:Inside_Khumbu-Icefall.jpg))
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 不要跳跃——使用梯子（[维基百科](https://commons.m.wikimedia.org/wiki/File:Inside_Khumbu-Icefall.jpg)）
- en: Every small step to the summit is preceded by the collection and organization
    of the materials needed on the mountain’s face. You do not want to be half way
    up Everest with no food or water left.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 每一步登顶前，都需要在山坡上收集和组织所需的材料。你不想在珠穆朗玛峰的一半高度时没有食物或水。
- en: Similarly, you need to train yourself and your team to be physically able to
    perform at higher altitude in treacherous conditions.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 类似地，你需要训练自己和你的团队在艰险条件下具备在更高海拔上执行任务的体能。
- en: Understand the Problem being solved
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解正在解决的问题
- en: This shouldn’t mean “what does the solution look like today”. Modernization
    efforts often require replacing existing solutions built on workarounds and concessions.
    It’s critical to understand what the actual problem is. Where is the value from
    the outcome of the process actually being derived? How is it making a customer’s
    experience better? Clearly defining the problem helps later when defining clear
    requirements.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 这不应该意味着“今天的解决方案是什么样的”。现代化努力通常需要替换现有的依赖于变通和妥协的解决方案。理解实际问题至关重要。这个过程的结果到底是从哪里产生价值的？它是如何改善客户体验的？明确界定问题有助于后续定义明确的需求。
- en: 'It’s critical to remember that humans are VERY GOOD at dealing with ambiguous
    requirements. As a result, many of the Big Hairy Problems that AI is solving are
    described like this:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是要记住，人类在处理模糊的要求时非常擅长。因此，许多人工智能正在解决的“大难题”通常都是这样描述的：
- en: “We’d like to use AI automate the complicated order system that we use to process
    all our large customers’ orders!”
  id: totrans-26
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “我们希望使用人工智能来自动化处理我们用于处理所有大客户订单的复杂订单系统！”
- en: Sounds awesome! Can you describe how that process works from end-to-end?
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 听起来很棒！你能描述一下从头到尾的整个过程是如何运作的吗？
- en: “Well, we get the email from the customer, extract the order information, and
    put that information into our order form. Then we upload that form into the order
    system for processing. Gen AI can automate that whole process, right??”
  id: totrans-28
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: “嗯，我们从客户那里收到电子邮件，提取订单信息，然后将这些信息放入我们的订单表单。然后我们将表单上传到订单系统中进行处理。生成式人工智能可以自动化整个过程，对吧？”
- en: If we build it step-by-step, sure!
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们一步一步地构建，当然可以！
- en: There’s a lot of ambiguity contained within the process above. Expecting a Gen
    AI process to be able to handle each nuance of the process above with little effort
    is a mistake.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 上述过程包含了大量的模糊性。期望生成式人工智能能够轻松处理上述过程中的每一个细节，是一个错误。
- en: What formats do the emails come in? Is it always the same format?
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电子邮件的格式是什么？总是相同的格式吗？
- en: How is the order information described by the customer? Do they use colloquial
    terms for things? Or are do they use your item numbers?
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户是如何描述订单信息的？他们使用的是口语化的术语吗？还是使用了你的物品编号？
- en: Is the order information from the customer the same that your fulfillment system
    uses? Is there a lookup that happens?
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 客户的订单信息与您的履单系统使用的是否相同？是否存在查找过程？
- en: What format is the upload expecting? Text? PDF? Excel?
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 上传期待的格式是什么？文本？PDF？Excel？
- en: If it’s an Excel template, are there multiple sheets? Unwritable cells? Data
    validation requirements?
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果是Excel模板，是否有多个工作表？不可写入的单元格？数据验证要求？
- en: Gen AI *can* handle all of these tasks — you just have to be able to define
    each step along the way clearly. If you can’t clearly describe the input and output
    of a process, it’s likely that Gen AI will not do exactly what you’re expecting
    it to do.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 生成式 AI *能够* 处理所有这些任务 —— 你只需要能够清晰地定义每一步骤。如果你不能清楚地描述一个流程的输入和输出，生成式 AI 很可能不会按照你预期的方式执行。
- en: If you approach this with a top-down perspective (the prompt would be “you’re
    an AI agent filling out order forms”), you’ll end up with a process that gets
    things right 50% of the time (honestly, still pretty good!) and not in the format
    you’re expecting. The issue is that for you’ll still need a human to review EACH
    output anyways which doubles the work.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你从自上而下的角度来处理（提示是“你是一个填写订单表单的 AI 代理”），你最终会得到一个大约 50% 准确的过程（老实说，这已经挺不错了！），但结果格式可能与你预期的不一致。问题是，你仍然需要人工检查每一个输出，这样就相当于加倍了工作量。
- en: 'The MVP: haven’t we been here before?'
  id: totrans-38
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 最小可行产品（MVP）：我们不是已经在这里走过一遍了吗？
- en: This is nothing new. We’ve been building Minimum Viable Products (MVPs) for
    years now. You must start small, solve a single step in the problem, and build
    bigger from there (with feedback from your customers!). AI products and workflows
    are no different. Build what is immediately useful and then expand from there.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这并不是什么新鲜事。我们已经做了多年的最小可行产品（MVP）了。你必须从小做起，解决问题中的单一步骤，并在此基础上逐步扩展（通过客户反馈！）。AI 产品和工作流也没有什么不同。先构建立即有用的部分，然后从那里扩展。
- en: 'How might we apply that to the order system described above? We should break
    each step in the process down and apply Gen AI where it makes the most sense:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们如何将上述内容应用到订单系统中呢？我们应该将流程中的每个步骤拆解，并在最合适的地方应用生成式 AI：
- en: Customer sends an order email (unstructured inputs)
  id: totrans-41
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 客户发送订单邮件（非结构化输入）
- en: Order details are put into a form (structured inputs)
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 订单详情被填写到表单中（结构化输入）
- en: 'Form is formatted and uploaded into the system (structured outputs) OR:'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 表单已格式化并上传到系统中（结构化输出）或者：
- en: There is no form, and the order is constructed manually (unstructured outputs)
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 没有表单，订单手动构建（非结构化输出）
- en: 'The content of emails are notoriously unstructured which makes the application
    of AI here a great use case! In this situation, ask your process owner “What must
    a valid email order contain?” Data like customer name, account number, address,
    items requested along with item quantity are good candidates. To maximize your
    Gen AI system’s accuracy and resiliency when handling these orders, define data
    structures that the AI should adhere to. I’ll [use](https://docs.pydantic.dev/latest/)
    `[pydantic](https://docs.pydantic.dev/latest/)` [to help build these structures](https://docs.pydantic.dev/latest/)
    below:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 邮件内容通常是非结构化的，这使得在此处应用 AI 成为一个非常好的用例！在这种情况下，询问你的流程负责人：“一个有效的邮件订单应该包含哪些内容？” 客户姓名、账户号码、地址、所请求的商品及商品数量等数据是很好的候选项。为了在处理这些订单时最大化生成式
    AI 系统的准确性和韧性，定义 AI 应遵循的数据结构。我将 [使用](https://docs.pydantic.dev/latest/) `[pydantic](https://docs.pydantic.dev/latest/)`
    [帮助构建这些结构](https://docs.pydantic.dev/latest/) 如下：
- en: '[PRE0]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'From here, we can use these objects to start giving structure to our AI:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里，我们可以利用这些对象来为我们的 AI 提供结构：
- en: '[PRE1]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Now with these examples you can give your Gen AI using few-shot prompting and
    increase accuracy. We’ll use [LangChain OutputParsers](https://python.langchain.com/docs/how_to/#output-parsers)
    to do some of the heavy lifting:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，通过这些示例，你可以使用少量示例提示（few-shot prompting）来提供给你的生成式 AI，并提高准确性。我们将使用 [LangChain
    OutputParsers](https://python.langchain.com/docs/how_to/#output-parsers) 来做一些繁重的工作：
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The actual prompt being sent to OpenAI in this case is:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上发送给 OpenAI 的提示是：
- en: '[PRE3]{"$defs": {"OrderItem": {"properties": {"ItemName": {"title": "Itemname",
    "type": "string"}, "ItemQuantity": {"title": "Itemquantity", "type": "integer"}},
    "required": ["ItemName", "ItemQuantity"], "title": "OrderItem", "type": "object"}},
    "properties": {"CustomerName": {"title": "Customername", "type": "string"}, "AccountNumber":
    {"title": "Accountnumber", "type": "string"}, "ShippingAddress": {"title": "Shippingaddress",
    "type": "string"}, "Items": {"items": {"$ref": "#/$defs/OrderItem"}, "title":
    "Items", "type": "array"}}, "required": ["CustomerName", "AccountNumber", "ShippingAddress",
    "Items"]}[PRE4]'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: '[PRE3]{"$defs": {"OrderItem": {"properties": {"ItemName": {"title": "Itemname",
    "type": "string"}, "ItemQuantity": {"title": "Itemquantity", "type": "integer"}},
    "required": ["ItemName", "ItemQuantity"], "title": "OrderItem", "type": "object"}},
    "properties": {"CustomerName": {"title": "Customername", "type": "string"}, "AccountNumber":
    {"title": "Accountnumber", "type": "string"}, "ShippingAddress": {"title": "Shippingaddress",
    "type": "string"}, "Items": {"items": {"$ref": "#/$defs/OrderItem"}, "title":
    "Items", "type": "array"}}, "required": ["CustomerName", "AccountNumber", "ShippingAddress",
    "Items"]}[PRE4]'
- en: 'When you send that prompt, the LLM follows the example and extracts the information
    for you:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 当你发送这个提示时，LLM会按照示例提取信息：
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: By using this well-defined format for an email order, we can pass this parsed
    object back through the LLM and ask it to ensure that all the required fields
    for an order are present. If it’s not, we can route the email to a human for help!
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 通过使用这个定义明确的格式来处理电子邮件订单，我们可以将这个解析后的对象重新传回LLM，并要求它确保订单中的所有必需字段都存在。如果没有，我们可以将电子邮件发送给人工求助！
- en: For example, let’s suppose that all EmailOrders need a CompanyName field as
    well. If the validation is this straightforward, we can simply use `pydantic`
    validations (no AI needed!). If your use case gets more complicated, the output
    can be passed through an LLM to provide some higher level logic.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，假设所有的EmailOrders也需要一个CompanyName字段。如果验证规则这么简单，我们可以直接使用`pydantic`进行验证（无需AI！）。如果你的使用场景变得更加复杂，输出结果可以通过LLM进行处理，以提供更高层次的逻辑。
- en: 'We’ll take the same order as above but leave out the CompanyName:'
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们将采取与上述相同的订单，但省略CompanyName字段：
- en: '[PRE6]'
  id: totrans-58
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: Pydantic does a lot for us here by throwing a `ValidationError`. Our driver
    program can simply catch this error and funnel the email to a human reviewer.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: Pydantic在这里为我们做了很多工作，抛出了一个`ValidationError`。我们的驱动程序可以简单地捕获这个错误，并将电子邮件发送给人工审查员。
- en: 'Of course, an LLM can also detect this error. I’m showing this for completeness;
    typically you’ll want to leverage traditional programming for data validation:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，一个LLM也可以检测到这个错误。我展示这个是为了完整性；通常你会想利用传统编程来进行数据验证：
- en: '[PRE7]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: With all this in place, we now have a system that can easily handle properly
    written email orders. More importantly, we have implemented a **self-governing
    process** that keeps humans in the loop when the AI needs help.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们现在拥有一个能够轻松处理正确书写的电子邮件订单的系统。更重要的是，我们实现了一个**自我管理的过程**，当AI需要帮助时，会让人工参与。
- en: Crucially, we didn’t rewrite the entire order entry process! We’ve taken a time-consuming
    part of the process and built a system that concentrates human effort in the areas
    where it makes the largest difference. Going forward, we can start modifying the
    other parts of the process, systematically removing the human toil.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 关键是，我们并没有重写整个订单录入过程！我们已经将这个耗时的过程部分化，并建立了一个集中人类努力的系统，将精力集中在那些能够产生最大差异的领域。未来，我们可以开始修改过程中的其他部分，系统地去除人工劳动力。
- en: Summiting Everest
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 登顶珠穆朗玛峰
- en: This iterative approach to solving complicated problems is nothing new. All
    big problems need to be broken down into their constituent parts in order to truly
    be solved.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这种解决复杂问题的迭代方法并不新鲜。所有大问题都需要拆解成其组成部分，才能真正得到解决。
- en: The “magic” of AI is particularly convincing, however. It’s easy to hope to
    make big leaps, given how capable these models are with just a few lines of input.
    Compared to technology like blockchain and Big Data, the effort required to go
    from idea to tantalizing proof-of-concept is minimal. AI doesn’t need dozens of
    custom configured servers to run a Map-Reduce job across 18 TB of data that took
    you 6 months to migrate.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，AI的“魔力”尤其令人信服。鉴于这些模型只需几行输入就能表现得如此强大，很容易希望实现大的突破。与区块链和大数据等技术相比，从创意到令人兴奋的概念验证所需的努力最小。AI不需要数十台定制配置的服务器来执行一个跨越18
    TB数据的Map-Reduce任务，这个任务花了你6个月时间进行迁移。
- en: 'So keep that simplicity in mind as you build your next AI solution: small steps
    to the summit.'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，在构建下一个AI解决方案时，请记住这种简单性：一步一步走向顶峰。
- en: See you up there!
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在那里见！
