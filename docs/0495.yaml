- en: How to Forecast Time Series Data Using any Supervised Learning Model
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用任何监督学习模型预测时间序列数据
- en: 原文：[https://towardsdatascience.com/how-to-forecast-time-series-data-using-any-supervised-learning-model-02dd62cd4bda?source=collection_archive---------0-----------------------#2024-02-22](https://towardsdatascience.com/how-to-forecast-time-series-data-using-any-supervised-learning-model-02dd62cd4bda?source=collection_archive---------0-----------------------#2024-02-22)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-forecast-time-series-data-using-any-supervised-learning-model-02dd62cd4bda?source=collection_archive---------0-----------------------#2024-02-22](https://towardsdatascience.com/how-to-forecast-time-series-data-using-any-supervised-learning-model-02dd62cd4bda?source=collection_archive---------0-----------------------#2024-02-22)
- en: Featurizing time series data into a standard tabular format for classical ML
    models and improving accuracy using AutoML
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 将时间序列数据特征化为标准表格格式，以便应用经典的机器学习模型，并通过使用AutoML提高准确性
- en: '[](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)[![Matthew
    Turk](../Images/2c000da20cc4e662d1fd21e0eca90988.png)](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)
    [Matthew Turk](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)[![Matthew
    Turk](../Images/2c000da20cc4e662d1fd21e0eca90988.png)](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)
    [Matthew Turk](https://medium.com/@mturk24?source=post_page---byline--02dd62cd4bda--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)
    ·10 min read·Feb 22, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--02dd62cd4bda--------------------------------)
    ·10分钟阅读·2024年2月22日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/c143b6e4b58b16095c1e0dda4e22ce73.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c143b6e4b58b16095c1e0dda4e22ce73.png)'
- en: 'Source: [Ahasanara Akter](https://www.vecteezy.com/members/ahasanaraakter)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[Ahasanara Akter](https://www.vecteezy.com/members/ahasanaraakter)
- en: This article delves into enhancing the process of forecasting daily energy consumption
    levels by transforming a time series dataset into a tabular format using open-source
    libraries. We explore the application of a popular multiclass classification model
    and leverage AutoML with Cleanlab Studio to significantly boost our out-of-sample
    accuracy.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本文深入探讨了通过使用开源库将时间序列数据集转换为表格格式，提升每日能耗水平预测过程的效率。我们探索了流行的多类别分类模型的应用，并利用Cleanlab
    Studio与AutoML大幅提高了我们的样本外准确性。
- en: The key takeaway from this article is that we can utilize more general methods
    to model a time series dataset by converting it to a tabular structure, and even
    find improvements in trying to predict this time series data.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的关键要点是，我们可以通过将时间序列数据转换为表格结构，利用更通用的方法来建模该数据集，甚至在预测时间序列数据时找到提升的空间。
- en: Take a Snapshot
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 拍摄快照
- en: 'At a high level we will:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，我们将会：
- en: Establish a baseline accuracy by fitting a Prophet forecasting model on our
    time series data
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过将Prophet预测模型拟合到我们的时间序列数据，建立一个基准准确度
- en: Convert our time series data into a tabular format by using open-source featurization
    libraries and then will show that can outperform our Prophet model with a standard
    multiclass classification (Gradient Boosting) approach by a **67% reduction in
    prediction error** (increase by 38% raw percentage points in out-of-sample accuracy).
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过使用开源特征化库将我们的时间序列数据转换为表格格式，并展示如何通过标准的多类别分类（梯度提升）方法比我们的Prophet模型**减少67%的预测误差**（在样本外准确度上增加38%的原始百分比点）。
- en: Use an AutoML solution for multiclass classification **resulted in a 42% reduction
    in prediction error** (increase by 8% in raw percentage points in out-of-sample
    accuracy) compared to our Gradient Boosting model and **resulted in a 81% reduction
    in prediction error** (increase by 46% in raw percentage points in out-of-sample
    accuracy) compared to our Prophet forecasting model.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用AutoML解决方案进行多类别分类，**相比我们的梯度提升模型，减少了42%的预测误差**（在样本外准确度上增加8%的原始百分比点），**相比我们的Prophet预测模型，减少了81%的预测误差**（在样本外准确度上增加46%的原始百分比点）。
- en: To run the code demonstrated in this article, here’s the [full notebook](https://github.com/mturk24/blog_posts/blob/main/time_series_automl/time_series_automl.ipynb).
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 要运行本文中演示的代码，请参阅[完整的笔记本](https://github.com/mturk24/blog_posts/blob/main/time_series_automl/time_series_automl.ipynb)。
- en: Examine the Data
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 检查数据
- en: You can download the dataset [here](https://www.kaggle.com/datasets/robikscube/hourly-energy-consumption?select=PJME_hourly.csv).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以[在这里](https://www.kaggle.com/datasets/robikscube/hourly-energy-consumption?select=PJME_hourly.csv)下载数据集。
- en: The data represents PJM hourly energy consumption (in megawatts) on an hourly
    basis. PJM Interconnection LLC (PJM) is a regional transmission organization (RTO)
    in the United States. It is part of the Eastern Interconnection grid operating
    an electric transmission system serving many states.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据代表PJM每小时的能源消耗（以兆瓦为单位）。PJM Interconnection LLC（PJM）是美国的一个区域传输组织（RTO）。它是东部电力互联系统的一部分，运营着一个电力传输系统，服务于多个州。
- en: 'Let’s take a look at our dataset. The data includes one datetime column (`object`
    type), and the Megawatt Energy Consumption (`float64`) type) column we are trying
    to forecast as a discrete variable (corresponding to the quartile of hourly energy
    consumption levels). Our aim is to train a time series forecasting model to be
    able to forecast the tomorrow’s daily energy consumption level falling into 1
    of 4 levels: `low` , `below average` , `above average` or `high` (these levels
    were determined based on quartiles of the overall daily consumption distribution).
    We first demonstrate how to apply time-series forecasting methods like Prophet
    to this problem, but these are restricted to certain types of ML models suitable
    for time-series data. Next we demonstrate how to reframe this problem into a standard
    multiclass classification problem that we can apply any machine learning model
    to, and show how we can obtain superior forecasts by using powerful supervised
    ML.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一下我们的数据集。数据包括一个日期时间列（`object` 类型）和一个我们试图预测的Megawatt能源消耗列（`float64` 类型），作为离散变量（对应于每小时能源消耗水平的四分位数）。我们的目标是训练一个时间序列预测模型，能够预测明天的每日能源消耗水平，属于以下四个等级之一：`低`，`低于平均`，`高于平均`
    或 `高`（这些等级是基于整体每日消耗分布的四分位数确定的）。我们首先演示如何将时间序列预测方法（如Prophet）应用于这个问题，但这些方法限制于某些适合时间序列数据的机器学习模型。接下来，我们演示如何将这个问题重新构造为一个标准的多类别分类问题，这样我们就可以应用任何机器学习模型，并展示如何通过使用强大的监督学习获得更优的预测结果。
- en: We first convert this data into a average energy consumption at a daily level
    and rename the columns to the format that the Prophet forecasting model expects.
    These real-valued daily energy consumption levels are converted into quartiles,
    which is the value we are trying to predict. Our training data is shown below
    along with the quartile each daily energy consumption level falls into. The quartiles
    are computed using training data to prevent data leakage.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我们首先将这些数据转换为每日平均能源消耗，并将列重命名为Prophet预测模型所期望的格式。这些实数值的每日能源消耗水平被转换为四分位数，这是我们试图预测的值。我们的训练数据如下所示，并标明了每个每日能源消耗水平所属的四分位数。四分位数是使用训练数据计算的，以防止数据泄漏。
- en: We now show the training data below, which is the data we are using to fit our
    forecasting model.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们展示下面的训练数据，这是我们用来拟合预测模型的数据。
- en: '![](../Images/853f65f5e4e0336e3d5a2d015e420413.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/853f65f5e4e0336e3d5a2d015e420413.png)'
- en: Training data with quartile of daily energy consumption level included
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 包含每日能源消耗水平四分位数的训练数据
- en: We then show the test data below, which is the data we are evaluating our forecasting
    results against.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们展示下面的测试数据，这是我们用来评估预测结果的数据。
- en: '![](../Images/7d8f8c364bbda6c109fefa760b02272d.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7d8f8c364bbda6c109fefa760b02272d.png)'
- en: Test data with quartile of daily energy consumption level included
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 包含每日能源消耗水平四分位数的测试数据
- en: Train and Evaluate Prophet Forecasting Model
  id: totrans-27
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练和评估 Prophet 预测模型
- en: As seen in the images above, we will use a date cutoff of `2015-04-09` to end
    the range of our training data and start our test data at `2015-04-10` . We compute
    quartile thresholds of our daily energy consumption using ONLY training data.
    This avoids data leakage - using out-of-sample data that is available only in
    the future.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 如上图所示，我们将使用 `2015-04-09` 作为训练数据的结束日期，并从 `2015-04-10` 开始我们的测试数据。我们仅使用训练数据计算每日能源消耗的四分位数阈值。这避免了数据泄漏——即使用仅在未来才会获得的样本外数据。
- en: Next, we will forecast the daily PJME energy consumption level (in MW) for the
    duration of our test data and represent the forecasted values as a discrete variable.
    This variable represents which quartile the daily energy consumption level falls
    into, represented categorically as 1 (`low`), 2 (`below average`), 3 (`above average`),
    or 4 (`high`). For evaluation, we are going to use the `accuracy_score` function
    from `scikit-learn` to evaluate the performance of our models. Since we are formulating
    the problem this way, we are able to evaluate our model’s next-day forecasts (and
    compare future models) using classification accuracy.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们将预测测试数据期间每日PJME能源消耗水平（以MW为单位），并将预测值表示为离散变量。该变量表示每日能源消耗水平属于哪个四分位数，分类表示为1（`低`）、2（`低于平均`）、3（`高于平均`）或4（`高`）。为了评估，我们将使用`scikit-learn`中的`accuracy_score`函数来评估模型的性能。由于我们是以这种方式构建问题，我们能够使用分类准确率来评估模型对次日预测的表现（并比较未来的模型）。
- en: '[PRE0]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The out-of-sample accuracy is quite poor at 43%. By modelling our time series
    this way, we limit ourselves to only use time series forecasting models (a limited
    subset of possible ML models). In the next section, we consider how we can more
    flexibly model this data by transforming the time-series into a standard tabular
    dataset via appropriate featurization. Once the time-series has been transformed
    into a standard tabular dataset, we’re able to employ any supervised ML model
    for forecasting this daily energy consumption data.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 样本外准确度相当低，仅为43%。通过这种方式建模我们的时间序列数据，我们仅能使用时间序列预测模型（这是可能的机器学习模型的一个有限子集）。在下一节中，我们将探讨如何通过适当的特征化，将时间序列转换为标准的表格数据集，从而更灵活地建模这些数据。一旦时间序列被转换为标准的表格数据集，我们就能够使用任何监督学习模型来预测每日的能源消耗数据。
- en: Convert time series data to tabular data through featurization
  id: totrans-32
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 通过特征化将时间序列数据转换为表格数据
- en: Now we convert the time series data into a tabular format and featurize the
    data using the open source libraries `sktime`, `tsfresh`, and `tsfel`. By employing
    libraries like these, we can extract a wide array of features that capture underlying
    patterns and characteristics of the time series data. This includes statistical,
    temporal, and possibly spectral features, which provide a comprehensive snapshot
    of the data's behavior over time. By breaking down time series into individual
    features, it becomes easier to understand how different aspects of the data influence
    the target variable.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们将时间序列数据转换为表格格式，并使用开源库`sktime`、`tsfresh`和`tsfel`对数据进行特征化。通过使用这些库，我们可以提取出广泛的特征，捕捉时间序列数据的潜在模式和特征。这些特征包括统计特征、时间特征，以及可能的频谱特征，它们提供了数据随时间变化的全面快照。通过将时间序列分解为单独的特征，变得更加容易理解数据的不同方面如何影响目标变量。
- en: '`TSFreshFeatureExtractor` is a feature extraction tool from the `sktime` library
    that leverages the capabilities of `tsfresh` to extract relevant features from
    time series data. `tsfresh` is designed to automatically calculate a vast number
    of time series characteristics, which can be highly beneficial for understanding
    complex temporal dynamics. For our use case, we make use of the minimal and essential
    set of features from our `TSFreshFeatureExtractor` to featurize our data.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '`TSFreshFeatureExtractor`是`sktime`库中的一个特征提取工具，它利用`tsfresh`的功能从时间序列数据中提取相关特征。`tsfresh`旨在自动计算大量的时间序列特征，这对于理解复杂的时间动态非常有用。在我们的应用场景中，我们使用`TSFreshFeatureExtractor`提取最小且必要的特征集来对数据进行特征化。'
- en: '`tsfel`, or Time Series Feature Extraction Library, offers a comprehensive
    suite of tools for extracting features from time series data. We make use of a
    predefined config that allows for a rich set of features (e.g., statistical, temporal,
    spectral) to be constructed from the energy consumption time series data, capturing
    a wide range of characteristics that might be relevant for our classification
    task.'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '`tsfel`（时间序列特征提取库）提供了一套全面的工具，用于从时间序列数据中提取特征。我们利用一个预定义的配置，可以从能源消耗的时间序列数据中构建一系列丰富的特征（例如，统计特征、时间特征、频谱特征），捕捉到可能与分类任务相关的各种特征。'
- en: '[PRE1]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Next, we clean our dataset by removing features that showed a high correlation
    (above 0.8) with our target variable — average daily energy consumption levels
    — and those with null correlations. High correlation features can lead to overfitting,
    where the model performs well on training data but poorly on unseen data. Null-correlated
    features, on the other hand, provide no value as they lack a definable relationship
    with the target.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们通过删除与目标变量——平均每日能耗水平——有较高相关性（大于0.8）和那些与目标变量无关的特征来清理数据集。高相关性的特征可能导致过拟合，使得模型在训练数据上表现良好，但在未见数据上表现不佳。另一方面，无相关性的特征没有任何价值，因为它们与目标变量缺乏可定义的关系。
- en: By excluding these features, we aim to improve model generalizability and ensure
    that our predictions are based on a balanced and meaningful set of data inputs.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 通过排除这些特征，我们旨在提高模型的泛化能力，并确保我们的预测是基于平衡且有意义的数据输入集。
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: If we look at the first several rows of the training data now, this is a snapshot
    of what it looks like. We now have 73 features that were added from the time series
    featurization libraries we used. The label we are going to predict based on these
    features is the next day’s energy consumption level.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们查看现在的训练数据的前几行，这是它的样子。我们现在有73个特征，这些特征是通过我们使用的时间序列特征化库添加的。我们将基于这些特征预测的标签是第二天的能耗水平。
- en: '![](../Images/b848d10e4e2b4dc50a8d87d45c91344c.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b848d10e4e2b4dc50a8d87d45c91344c.png)'
- en: First 5 rows of training data which is newly featurized and in a tabular format
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 新特征化后的前5行训练数据，采用表格格式
- en: It’s important to note that we used a best practice of applying the featurization
    process separately for training and test data to avoid data leakage (and the held-out
    test data are our most recent observations).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 需要注意的是，我们使用了一项最佳实践，即分别对训练数据和测试数据应用特征化过程，以避免数据泄漏（并且保留的测试数据是我们最新的观察数据）。
- en: Also, we compute our discrete quartile value (using the quartiles we originally
    defined) using the following code to obtain our train/test energy labels, which
    is what our y_labels are.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我们计算了我们的离散四分位数值（使用我们最初定义的四分位数），并使用以下代码来获得我们的训练/测试能耗标签，这就是我们的y_labels。
- en: '[PRE3]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Train and Evaluate GradientBoostingClassifier Model on featurized tabular data
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在特征化的表格数据上训练和评估 GradientBoostingClassifier 模型
- en: Using our featurized tabular dataset, we can apply any supervised ML model to
    predict future energy consumption levels. Here we’ll use a Gradient Boosting Classifier
    (GBC) model, the weapon of choice for most data scientists operating on tabular
    data.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 使用我们特征化的表格数据集，我们可以应用任何监督式机器学习模型来预测未来的能耗水平。这里我们将使用 Gradient Boosting Classifier
    (GBC) 模型，它是大多数数据科学家处理表格数据时的首选武器。
- en: Our GBC model is instantiated from the `sklearn.ensemble` module and configured
    with specific hyperparameters to optimize its performance and avoid overfitting.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的 GBC 模型是从`sklearn.ensemble`模块实例化的，并配置了特定的超参数，以优化其性能并避免过拟合。
- en: '[PRE4]'
  id: totrans-49
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The out-of-sample accuracy of 81% is considerably better than our prior Prophet
    model results.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 81%的样本外准确度明显优于我们之前的 Prophet 模型结果。
- en: Using AutoML to streamline things
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 AutoML 简化操作
- en: 'Now that we’ve seen how to featurize the time-series problem and the benefits
    of applying powerful ML models like Gradient Boosting, a natural question emerges:
    Which supervised ML model should we apply? Of course, we could experiment with
    many models, tune their hyperparameters, and ensemble them together. An easier
    solution is to let AutoML handle all of this for us.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经了解了如何特征化时间序列问题以及应用强大机器学习模型如 Gradient Boosting 的好处，一个自然的问题浮现出来：我们应该应用哪种监督式机器学习模型？当然，我们可以尝试多种模型，调整它们的超参数，并将它们进行集成。一个更简单的解决方案是让
    AutoML 来处理这一切。
- en: 'Here we’ll use a simple AutoML solution provided in [Cleanlab Studio](https://cleanlab.ai/),
    which involves zero configuration. We just provide our tabular dataset, and the
    platform automatically trains many types of supervised ML models (including Gradient
    Boosting among others), tunes their hyperparameters, and determines which models
    are best to combine into a single predictor. Here’s all the code needed to train
    and deploy an AutoML supervised classifier:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我们将使用 [Cleanlab Studio](https://cleanlab.ai/) 提供的一个简单 AutoML 解决方案，该方案不需要任何配置。我们只需提供我们的表格数据集，平台会自动训练多种类型的监督式机器学习模型（包括
    Gradient Boosting 等），调整它们的超参数，并确定哪些模型最适合合并成一个单一的预测器。以下是训练和部署 AutoML 监督分类器所需的所有代码：
- en: '[PRE5]'
  id: totrans-54
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Below we can see model evaluation estimates in the AutoML platform, showing
    all of the different types of ML models that were automatically fit and evaluated
    (including multiple Gradient Boosting models), as well as an ensemble predictor
    constructed by optimally combining their predictions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是我们在AutoML平台上看到的模型评估结果，展示了所有自动拟合和评估的不同类型的机器学习模型（包括多个梯度提升模型），以及通过最佳组合它们的预测结果构建的集成预测器。
- en: '![](../Images/74c3bf0f045edd844f9b2651ce32701b.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/74c3bf0f045edd844f9b2651ce32701b.png)'
- en: AutoML results across different types of models used
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 不同类型模型的AutoML结果
- en: After running inference on our test data to obtain the next-day energy consumption
    level predictions, we see the test accuracy is 89%, a 8% raw percentage points
    improvement compared to our previous Gradient Boosting approach.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 在对我们的测试数据进行推理，获得次日能源消耗预测后，我们发现测试准确度为89%，相比我们之前的梯度提升方法，原始百分比提高了8个百分点。
- en: '![](../Images/9ab4cd48956b723421b807d7b19d0c00.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ab4cd48956b723421b807d7b19d0c00.png)'
- en: AutoML test accuracy on our daily energy consumption level data
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在日常能源消耗数据上的AutoML测试准确度
- en: Conclusion
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: For our PJM daily energy consumption data, we found that transforming the data
    into a tabular format and featurizing it achieved a **67% reduction in prediction
    error** (increase by 38% in raw percentage points in out-of-sample accuracy) compared
    to our baseline accuracy established with our Prophet forecasting model.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于我们的PJM日常能源消耗数据，我们发现将数据转换为表格格式并进行特征化处理，实现了**67%的预测误差减少**（相比我们用Prophet预测模型建立的基准准确度，样本外准确度提高了38%）。
- en: We also tried an easy AutoML approach for multiclass classification, which **resulted
    in a 42% reduction in prediction error** (increase by 8% in raw percentage points
    in out-of-sample accuracy) compared to our Gradient Boosting model and **resulted
    in a 81% reduction in prediction error** (increase by 46% in raw percentage points
    in out-of-sample accuracy) compared to our Prophet forecasting model.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还尝试了一个简单的AutoML方法进行多类别分类，该方法**使预测误差减少了42%**（相比我们的梯度提升模型，样本外准确度提高了8%），并且**使预测误差减少了81%**（相比我们的Prophet预测模型，样本外准确度提高了46%）。
- en: By taking approaches like those illustrated above to model a time series dataset
    beyond the constrained approach of only considering forecasting methods, we can
    apply more general supervised ML techniques and achieve better results for certain
    types of forecasting problems.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 通过采用如上所示的方法来建模时间序列数据集，超越仅考虑预测方法的局限性，我们可以应用更通用的监督学习技术，并在某些类型的预测问题上取得更好的结果。
- en: Unless otherwise noted, all images are by the author.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供。
