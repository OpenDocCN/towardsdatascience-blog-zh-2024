["```py\n>>> import numpy as np\n>>> import static_frame as sf\n>>> import pandas as pd\n\n>>> # an square, uniform float array\n>>> array = np.random.random_sample((10_000, 10_000))\n\n>>> # write peformance\n>>> f1 = sf.Frame(array)\n>>> %time f1.to_npz('/tmp/frame.npz')\nCPU times: user 710 ms, sys: 396 ms, total: 1.11 s\nWall time: 1.11 s\n\n>>> df1 = pd.DataFrame(array)\n>>> %time df1.to_parquet('/tmp/df.parquet', compression=None)\nCPU times: user 6.82 s, sys: 900 ms, total: 7.72 s\nWall time: 7.74 s\n\n>>> # read performance\n>>> %time f2 = f1.from_npz('/tmp/frame.npz')\nCPU times: user 2.77 ms, sys: 163 ms, total: 166 ms\nWall time: 165 ms\n\n>>> %time df2 = pd.read_parquet('/tmp/df.parquet')\nCPU times: user 2.55 s, sys: 1.2 s, total: 3.75 s\nWall time: 866 ms\n```", "```py\n>>> frame = sf.Frame.from_npz(sf.WWW.from_file('https://github.com/static-frame/static-frame/raw/master/doc/source/articles/serialize/frame.npz', encoding=None))\n>>> frame\n<Frame: p>\n<IndexHierarchy: q>       data    data    data    valid  <<U5>\n                          A       B       C       *      <<U1>\n<IndexHierarchy: r>\n2012-03             x     5       4       7       False\n2012-03             y     9       1       8       True\n2012-04             x     3       6       2       True\n<datetime64[M]>     <<U1> <int64> <int64> <int64> <bool>\n```", "```py\n>>> from zipfile import ZipFile\n>>> with ZipFile('/tmp/frame.npz') as zf: print(zf.open('__blocks_1__.npy').read())\nb'\\x93NUMPY\\x01\\x006\\x00{\"descr\":\"|b1\",\"fortran_order\":True,\"shape\":(3,)}    \\n\\x00\\x01\\x01\n```", "```py\n>>> with ZipFile('/tmp/frame.npz') as zf: print(repr(np.load(zf.open('__blocks_1__.npy'))))\narray([False,  True,  True])\n```", "```py\n>>> with ZipFile('/tmp/frame.npz') as zf: print(zf.namelist())\n['__values_index_0__.npy', '__values_index_1__.npy', '__values_columns_0__.npy', '__values_columns_1__.npy', '__blocks_0__.npy', '__blocks_1__.npy', '__meta__.json']\n```", "```py\n>>> with ZipFile('/tmp/frame.npz') as zf: print(zf.open('__meta__.json').read())\nb'{\"__names__\": [\"p\", \"r\", \"q\"], \"__types__\": [\"IndexHierarchy\", \"IndexHierarchy\"], \"__types_index__\": [\"IndexYearMonth\", \"Index\"], \"__types_columns__\": [\"Index\", \"Index\"], \"__depths__\": [2, 2, 2]}'\n```"]