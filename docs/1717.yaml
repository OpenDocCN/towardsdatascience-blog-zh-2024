- en: Three Reasons Why Developers Should Use DuckDB
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/three-reasons-why-developers-should-use-duckdb-0884c8e9f02a?source=collection_archive---------0-----------------------#2024-07-14](https://towardsdatascience.com/three-reasons-why-developers-should-use-duckdb-0884c8e9f02a?source=collection_archive---------0-----------------------#2024-07-14)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: How software developers can use DuckDB for data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mourjo.medium.com/?source=post_page---byline--0884c8e9f02a--------------------------------)[![Mourjo
    Sen](../Images/b0b0ff978e0d8bc6612cbf36f97ffb96.png)](https://mourjo.medium.com/?source=post_page---byline--0884c8e9f02a--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--0884c8e9f02a--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--0884c8e9f02a--------------------------------)
    [Mourjo Sen](https://mourjo.medium.com/?source=post_page---byline--0884c8e9f02a--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--0884c8e9f02a--------------------------------)
    ·5 min read·Jul 14, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: 'Software developers have to wear many hats: from writing code, designing systems
    to analysing data dumps during an incident. Most of our tools are optimised for
    the task — for writing code we have powerful IDEs, for designing systems we have
    feature-rich diagramming tools.'
  prefs: []
  type: TYPE_NORMAL
- en: '**For data analysis, do software developers have the best tool for the job?**
    In this article, I list three key reasons why [DuckDB](https://duckdb.org/), an
    open-source analytical database is a must-have tool for software developers.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/32e90911790344ba172ceaacaf7abff8.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Source: [Unsplash](https://unsplash.com/photos/a-wall-full-of-knives-0CCVIuAjORE)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Reason #1: Uses universally understood SQL'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Imagine you work for a food-delivery company as a software developer. You receive
    an email that there is a sudden increase in payment-related customer complaints.
    The email includes [a CSV file like this](https://github.com/mourjo/duckdb-notes/blob/master/datagenerator/adjusted_transactions.csv)
    with some orders categorised by the nature of the complaint. As a developer under
    the heat, you may be inclined to *quickly* lookup how to analyse a CSV file on
    StackOverflow, which tells us to use `awk`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'It is natural to ask a followup question: how often do we see these errors
    per order? Answering iterative questions using tools like `awk` can be challenging
    because of its unfamiliar syntax. Moreover, had the data been in another format
    like JSON, we would have to use a different tool like `jq` with its completely
    different syntax and usage pattern.'
  prefs: []
  type: TYPE_NORMAL
- en: '**DuckDB solves the problem of needing specific tooling for specific data formats
    by providing a unified SQL interface to a** [**wide array of file types**](https://duckdb.org/docs/guides/file_formats/overview)**.**
    Developers use SQL on a very regular basis and it is the language used to query
    the [most deployed database](https://www.sqlite.org/mostdeployed.html) in the
    world. Owing to the ubiquity of SQL, non-relational data systems have added support
    for accessing data using SQL:like [MongoDB](https://www.mongodb.com/docs/atlas/data-federation/query/query-with-sql/),
    [Spark](https://spark.apache.org/docs/latest/api/sql/), Elastic-search and [AWS
    Athena](https://aws.amazon.com/athena/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'Going back to the original CSV file, using `duckdb` and SQL we can quite simply
    find how often an error is reported per order:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Reason #2: Supports multiple databases and file types'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Assume our fictional food-delivery app is built using microservices. Say, there
    is a `users` microservice which stores user information in PostgreSQL and another
    `orders` microservice which stores order information in MySQL.
  prefs: []
  type: TYPE_NORMAL
- en: '**It is very hard to answer the following cross-microservice question: Are
    VIP users affected more compared to non-VIP users?**'
  prefs: []
  type: TYPE_NORMAL
- en: Typical setups to solve this use data pipelines to aggregate data from all microservices
    in one data warehouse, which is expensive and not easy to keep updated in realtime.
  prefs: []
  type: TYPE_NORMAL
- en: 'Using DuckDB, we can attach a MySQL database and a PostgreSQL database to **join
    data across databases and filter against a CSV file**. The database setup and
    code is available [in this repository](https://github.com/mourjo/duckdb-notes/tree/master):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: In the above snippet we queried PostgreSQL, MySQL and a CSV file,but **DuckDB
    supports many other data sources** like Microsoft Excel, JSON and S3 files — all
    using the same SQL interface.
  prefs: []
  type: TYPE_NORMAL
- en: 'Reason #3: Portability and Extensibility'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: DuckDB runs on the command-line shell as a standalone process without any additional
    dependency (like a server process). This **portability makes DuckDB comparable
    to other Unix tools** like `sed`, `jq` , `sort` and `awk`.
  prefs: []
  type: TYPE_NORMAL
- en: 'DuckDB can also be imported as a library [in programs](https://duckdb.org/docs/api/overview)
    written in languages like Python and Javascript. In fact, DuckDB can also run
    in the browser — [in this link](https://shell.duckdb.org/#queries=v0,select%0A----language%2C%0A----count(1)-as-repo_count%2C%0A----sum(stargazers_count)-as-start_count%0A--from-read_json(''https%3A%2F%2Fapi.github.com%2Fusers%2Frichhickey%2Frepos'')%0A--group-by-1%0A--order-by-2-desc%0A--limit-5~),
    a SQL query fetches Rich Hickey’s repositories from Github and groups them by
    language — all from within the browser:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cb4aeae45e3e11b8636e170acd13e5d6.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot showing DuckDB running in the browser. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: For features not included in DuckDB, [community extensions](https://duckdb.org/2024/07/05/community-extensions.html)
    can be used to add more functionality like [cryptographic hash functions](https://github.com/rustyconover/duckdb-crypto-extension)
    which were added as a community extension.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Data analysis is an iterative process of asking questions about the data
    to get to an explanation of why something is happening.** Quoting Carl Jung, “to
    ask the right question is already half the solution to a problem”.'
  prefs: []
  type: TYPE_NORMAL
- en: With traditional command-line tools, between the data and the question, there
    is the additional step of figuring out how to answer that question. This interrupts
    the iterative questioning process.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/38b25c0ac6366ec15f05152ee8823b7b.png)'
  prefs: []
  type: TYPE_IMG
- en: According to the Unix philosophy, simple tools when “combined with other programs,
    become general and useful tools” ([source](https://en.wikipedia.org/wiki/Unix_philosophy)).
    Because each of these tools have their own usage patterns, composing these tools
    breaks the iterative questioning method by introducing an additional step of figuring
    out how to answer a question. Image by the author.
  prefs: []
  type: TYPE_NORMAL
- en: 'DuckDB unifies the proliferation of tools: (1) it runs everywhere (2) can query
    multiple data sources (3) with a declarative language that is widely understood.
    Using DuckDB, the feedback loop for iterative analysis is much shorter making
    **DuckDB the one true tool that all developers should keep in their toolbox for
    analysing data.**'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9c43e8975c4bff5474470c512612d27a.png)'
  prefs: []
  type: TYPE_IMG
- en: DuckDB unifies the proliferation of data tools and provides a common SQL interface
    to different data sources, facilitating the iterative method of data analysis.
    Image by the author.
  prefs: []
  type: TYPE_NORMAL
