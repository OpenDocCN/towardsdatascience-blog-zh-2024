- en: More Robust Multivariate EDA with Statistical Testing
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/more-robust-multivariate-eda-with-statistical-testing-d221fc145870?source=collection_archive---------5-----------------------#2024-04-16](https://towardsdatascience.com/more-robust-multivariate-eda-with-statistical-testing-d221fc145870?source=collection_archive---------5-----------------------#2024-04-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/53b659ed4f9847990917b4f161ff46fc.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Jessica Ruscello](https://unsplash.com/@jruscello?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Improve robustness in identifying relationships between variables by incorporating
    relevant hypothesis testing methods
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@pararawendy19?source=post_page---byline--d221fc145870--------------------------------)[![Pararawendy
    Indarjo](../Images/afba0cb7f3af9554a187bbc7a3c00e60.png)](https://medium.com/@pararawendy19?source=post_page---byline--d221fc145870--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d221fc145870--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d221fc145870--------------------------------)
    [Pararawendy Indarjo](https://medium.com/@pararawendy19?source=post_page---byline--d221fc145870--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d221fc145870--------------------------------)
    ·8 min read·Apr 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Exploratory Data Analysis (EDA) is a fundamental skill for data scientists.
    To emphasize its significance, I would argue that EDA is more important than ML
    modeling skills. Why? Because EDA is relevant in a larger context than ML modeling.
  prefs: []
  type: TYPE_NORMAL
- en: You come across new data that you need to familiarize yourself with? Do EDA.
    You want to gain insights from data? Do EDA. Even if you want to create an ML
    model? You still need to perform EDA to prepare the modeling dataset.
  prefs: []
  type: TYPE_NORMAL
- en: As you may already be aware, one step in EDA is multivariate analysis. This
    exercise aims at identifying whether there are relationships between variables
    in the dataset. Knowing such relationships (if they exist) may allow one to take
    appropriate action based on the data’s high-level context.
  prefs: []
  type: TYPE_NORMAL
- en: Having said that, we should be aware of the noise-induced relationship. A seemingly
    interesting relationship between two variables observed on a bivariate visualization
    may be due to noise rather than a true meaningful relationship.
  prefs: []
  type: TYPE_NORMAL
- en: Fortunately, statistics provide us with a tool to help us determine whether
    an observed relationship is truly meaningful or is most likely due to noise. Yes,
    we’re talking about statistical hypothesis-testing methods.
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, I’ll discuss how to use statistical testing methods in addition
    to standard bivariate visualization to improve the robustness of multivariate
    EDA exercises.
  prefs: []
  type: TYPE_NORMAL
- en: The remainder of this article will be organized as follows.
  prefs: []
  type: TYPE_NORMAL
- en: Dataset preparation.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Identifying numeric-to-numeric variables relationship: scatter plot + correlation
    test.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Identifying numeric-to-categoric variables relationship: KDE plot + one-way
    ANOVA.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Identifying categoric-to-categoric variables relationship: Count plot + Chi-square
    test.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Dataset Preparation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: We’ll use the popular MPG dataset. It’s a publicly available dataset with a
    [Creative Common 4.0 license](https://archive.ics.uci.edu/dataset/9/auto+mpg)
    (which allows for sharing and adaptation of the dataset for any purpose).
  prefs: []
  type: TYPE_NORMAL
- en: The dataset is about car fuel efficiency details (mile per gallon/MPG) and other
    vehicle attributes. The data dictionary information can be found on its [UCI Machine
    Learning repo](https://archive.ics.uci.edu/dataset/9/auto+mpg) page.
  prefs: []
  type: TYPE_NORMAL
- en: We load the dataset and remove missing values (which are minimal in this dataset
    and therefore acceptable to remove). For method demonstration purposes, we also
    create a new categorical column called `efficiency` from the `mpg` column. It
    has a value of “yes” if the mpg is at least 25, and “no” otherwise.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/58d3b996cfa6c2d31b455814fede0753.png)'
  prefs: []
  type: TYPE_IMG
- en: df.info() output (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b201021478eb6df3d2c7cf23e715c394.png)'
  prefs: []
  type: TYPE_IMG
- en: df.head() output (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Regarding the goal of multivariate EDA on this dataset, we naturally want to
    know which factors influence car fuel efficiency. To that end, we will answer
    the following questions:'
  prefs: []
  type: TYPE_NORMAL
- en: What numerical features influence mpg performance?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do mpg profiles vary depending on origin?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Do different origins result in varying profiles of car efficiency?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Numeric-to-Numeric Relationship
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For the first case of multivariate EDA, let’s discuss about identifying relationship
    between two numerical variables. In this case, it is well known that we can use
    a scatter plot to visually inspect any relationship that exists between the variables.
  prefs: []
  type: TYPE_NORMAL
- en: As previously stated, not all observed patterns are guaranteed meaningful. In
    the numeric-to-numeric case, we can supplement the scatter plot with the Pearson
    correlation test. First, we calculate the Pearson correlation coefficient for
    the plotted variables. Second, we determine whether the obtained coefficient is
    significant by computing its p-values.
  prefs: []
  type: TYPE_NORMAL
- en: The latter step is important as a sanity check whether a certain value of correlation
    coefficient is larger enough to be considered as meaningful (i.e., there is a
    linear relationship between plotted variables). This is especially true in the
    small data size regime. For example, if we only have 10 data points, the correlation
    coefficient must be at least 0.64 to be considered significant ([ref](https://openstax.org/books/introductory-business-statistics-2e/pages/13-2-testing-the-significance-of-the-correlation-coefficient))!
  prefs: []
  type: TYPE_NORMAL
- en: In python, we can use `pearsonr` function from the`scipy` library to do the
    mentioned correlation test.
  prefs: []
  type: TYPE_NORMAL
- en: In the following codes, we draw a scatter plot for each pair of numerical features-mpg
    column. As a title, we print the correlation coefficient plus conditional double-asterix
    characters if the coefficient is significant (p-value < 0.05).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/686931bcf9bcd0c95955e1f7b4f30822.png)'
  prefs: []
  type: TYPE_IMG
- en: Numerical features vs mpg (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Observe that all plot titles contain a double asterix, indicating that the
    correlations are significant. Thus, we can conclude the following:'
  prefs: []
  type: TYPE_NORMAL
- en: Cylinders, displacement, horsepower, and weight have a strong negative correlation
    with mpg. This means that for each of these variables, a higher value corresponds
    to lower fuel efficiency.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Acceleration and model year have a medium positive correlation with mpg. This
    means that longer acceleration times (slower cars) and more recently produced
    cars are associated with higher fuel efficiency.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Numeric-to-Categoric Relationship
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Next, we’ll investigate if the mpg profiles differ depending on the origin.
    Note that origin is a categorical variable. As a result, we’re considering the
    numeric-to-categorical case.
  prefs: []
  type: TYPE_NORMAL
- en: A KDE (kernel density estimation) plot, also known as a smooth version of a
    histogram, can be used to visualize the mpg distribution with breakdowns for each
    origin value.
  prefs: []
  type: TYPE_NORMAL
- en: In terms of statistical testing, we can use one-way ANOVA. The hypothesis we
    want to test is whether there are significant mean differences in mpg between
    different car origins.
  prefs: []
  type: TYPE_NORMAL
- en: In python, we can use `f_oneway` function from `scipy` library to perform one-way
    ANOVA.
  prefs: []
  type: TYPE_NORMAL
- en: In the following code, we create a KDE plot of mpg with breakdowns for different
    origin values. Next, we run one-way ANOVA and display the p-value in the title.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2d06ff86108afe2d4a6ed03e16a551aa.png)'
  prefs: []
  type: TYPE_IMG
- en: KDE plot of MPG by origin (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'The p-value in the plot above is less than 0.05, indicating significance. On
    a high level, we can interpret the plot like this: **In general, cars made in
    the United States are less fuel efficient than cars made elsewhere** (this is
    because the peak of USA mpg distribution is located on the left when compared
    to other origins).'
  prefs: []
  type: TYPE_NORMAL
- en: Categoric-to-Categoric Relationship
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Finally, we will evaluate the scenario in which we have two categorical variables.
    Considering our dataset, we’ll see if different origins produce different car
    efficiency profiles.
  prefs: []
  type: TYPE_NORMAL
- en: In this case, a count plot with breakdown is the appropriate bivariate visualization.
    We’ll show the frequency of cars for each origin, broken down by efficiency flag
    (yes/no).
  prefs: []
  type: TYPE_NORMAL
- en: In terms of statistical testing method to use, chi-square test is the one to
    go. Using this test, we want to validate if different car origins have different
    distribution of efficient vs inefficient cars.
  prefs: []
  type: TYPE_NORMAL
- en: In python, we can use `chisquare` function from `scipy` library. However, unlike
    the previous cases, we must first prepare the data. Specifically, we need to calculate
    the “expected frequency” of each origin-efficient value combination.
  prefs: []
  type: TYPE_NORMAL
- en: For readers who want a more in-depth explanation of this expected frequency
    concept and chi square test overall mechanics, I recommend reading my blog on
    the subject, which is attached below.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/bukalapak-data/meet-the-engine-of-a-b-testing-chi-square-test-30e8a8ab44c5?source=post_page-----d221fc145870--------------------------------)
    [## Meet the Engine of A/B Testing: Chi-Square Test'
  prefs: []
  type: TYPE_NORMAL
- en: Understand the concept and perform one from scratch
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/bukalapak-data/meet-the-engine-of-a-b-testing-chi-square-test-30e8a8ab44c5?source=post_page-----d221fc145870--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The codes to perform the mentioned data preparation are given below.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/13e4075f31ca8f9e5a46a1365969aa38.png)'
  prefs: []
  type: TYPE_IMG
- en: chi_df result (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we can execute the codes below to draw the count plot of car origins
    with breakdowns on efficiency flags. Furthermore, we use `chi_df` to perform the
    chi-square test and get the p-value.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/4c1f50ad11c848742ee83016acda97eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Count plot efficiency vs origin (Image by Author)
  prefs: []
  type: TYPE_NORMAL
- en: The plot indicates that there are differences in the distribution of efficient
    cars across origins (p-value < 0.05). We can see that **American cars are mostly
    inefficient, whereas Japanese and European cars follow the opposite pattern**.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In this blog post, we learned how to improve bivariate visualization using appropriate
    statistical testing methods. This would improve the robustness of our multivariate
    EDA by filtering out noise-induced relationships that would otherwise be visible
    based solely on visual inspection of bivariate plots.
  prefs: []
  type: TYPE_NORMAL
- en: I hope this article will help you during your next EDA exercise! All in all,
    thanks for reading, and let’s connect with me on [LinkedIn](https://www.linkedin.com/in/pararawendy-indarjo/)!
    👋
  prefs: []
  type: TYPE_NORMAL
