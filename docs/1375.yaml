- en: Why You Don’t Need JS to Make 3D plots
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么你不需要JS来制作3D图表
- en: 原文：[https://towardsdatascience.com/la-crime-now-in-3d-no-glasses-required-498398c25a39?source=collection_archive---------2-----------------------#2024-06-01](https://towardsdatascience.com/la-crime-now-in-3d-no-glasses-required-498398c25a39?source=collection_archive---------2-----------------------#2024-06-01)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/la-crime-now-in-3d-no-glasses-required-498398c25a39?source=collection_archive---------2-----------------------#2024-06-01](https://towardsdatascience.com/la-crime-now-in-3d-no-glasses-required-498398c25a39?source=collection_archive---------2-----------------------#2024-06-01)
- en: Visualizing crime geodata in python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在Python中可视化犯罪地理数据
- en: '[](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)[![Aleksei
    Rozanov](../Images/748b69bfaccf39c9aa568a9e6f41eec3.png)](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)
    [Aleksei Rozanov](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)[![Aleksei
    Rozanov](../Images/748b69bfaccf39c9aa568a9e6f41eec3.png)](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)
    [Aleksei Rozanov](https://medium.com/@alexroz?source=post_page---byline--498398c25a39--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)
    ·6 min read·Jun 1, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--498398c25a39--------------------------------)
    ·6分钟阅读·2024年6月1日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/41f0fd59d6221d6335f1d9b4c92ba959.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/41f0fd59d6221d6335f1d9b4c92ba959.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自 [作者](https://medium.com/@alexroz)。
- en: In my opinion, one of the best features geo data possesses is its capability
    for 3D visualization. However, due to the amount of computational resources needed
    for such calculations, it’s really rarely performed in python (often *JavaScript*
    and its libraries used as alternatives). In one of my previous articles I shared
    six python packages which allow creation of beautiful static and interactive maps,
    yet only in 2D space.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在我看来，地理数据最棒的特点之一就是它能够进行3D可视化。然而，由于进行此类计算所需的大量计算资源，这在Python中是非常罕见的（通常*JavaScript*及其相关库被用作替代方案）。在我之前的一篇文章中，我分享了六个Python包，可以创建美丽的静态和交互式地图，但仅限于2D空间。
- en: '[](https://medium.com/@alexroz/6-python-libraries-to-make-beautiful-maps-9fb9edb28b27?source=post_page-----498398c25a39--------------------------------)
    [## 6 python libraries to make beautiful maps'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@alexroz/6-python-libraries-to-make-beautiful-maps-9fb9edb28b27?source=post_page-----498398c25a39--------------------------------)
    [## 6种用于制作美丽地图的Python库'
- en: At some point any Data Scientist faces the need to analyze or model geo spatial
    data, and it can’t be done without the…
  id: totrans-10
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 每个数据科学家都会在某个时刻面临分析或建模地理空间数据的需求，而这无法在没有...
- en: medium.com](https://medium.com/@alexroz/6-python-libraries-to-make-beautiful-maps-9fb9edb28b27?source=post_page-----498398c25a39--------------------------------)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@alexroz/6-python-libraries-to-make-beautiful-maps-9fb9edb28b27?source=post_page-----498398c25a39--------------------------------)
- en: Today I want to bridge this gap and investigate with you a really stylish and
    efficient framework for high-performance web-based visualizations[**deck.jl**](https://deck.gl/),
    which also has a python library **PyDeck**.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 今天，我想弥合这个差距，与大家一起探讨一个非常时尚且高效的框架，用于高性能的基于Web的可视化[**deck.jl**](https://deck.gl/)，它也有一个Python库
    **PyDeck**。
- en: To properly explore its capabilities in python we need a large geospatial dataset.
    A perfect candidate for that is [Los Angeles Crime Data 2010–2020](https://www.kaggle.com/datasets/sumaiaparveenshupti/los-angeles-crime-data-20102020)
    dataset from Kaggle. Luckily, it has an [open license](https://creativecommons.org/publicdomain/zero/1.0/),
    so we could freely use it for our purposes.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 要在Python中充分探索其功能，我们需要一个大型的地理空间数据集。一个理想的候选数据集是[Kaggle上的洛杉矶犯罪数据2010-2020](https://www.kaggle.com/datasets/sumaiaparveenshupti/los-angeles-crime-data-20102020)数据集。幸运的是，它具有[开放许可证](https://creativecommons.org/publicdomain/zero/1.0/)，因此我们可以自由使用它来进行我们的分析。
- en: The authors distribute two *csv* files, which we are going to merge into one
    filtering out all the columns except longitude and latitude (coordinates of the
    places where the crimes were conducted).
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 作者们分发了两个 *csv* 文件，我们将把它们合并为一个，同时过滤掉所有除了经纬度（即犯罪发生地点的坐标）以外的列。
- en: '**🐍The full python code:** [**GitHub**](https://github.com/alexxxroz/Medium/blob/main/PyDeck_3D_Maps.ipynb)**.**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: '**🐍完整的 Python 代码：** [**GitHub**](https://github.com/alexxxroz/Medium/blob/main/PyDeck_3D_Maps.ipynb)**.**'
- en: '[PRE0]'
  id: totrans-16
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: After loading it in pandas, I want to perform a static 2D visualization using
    *cartopy*, just to have a reliable reference. If we simply plot the data, we’ll
    get a bunch of data points, which are of no use for us.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在 pandas 中加载数据后，我想使用 *cartopy* 做一个静态的二维可视化，只是为了有一个可靠的参考。如果我们仅仅绘制数据，我们将得到一堆数据点，对我们没有任何帮助。
- en: '![](../Images/e4c1d339c756c6b642af6d8ab0088150.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4c1d339c756c6b642af6d8ab0088150.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[作者](https://medium.com/@alexroz)。
- en: Instead let’s perform spatial interpolation using the NN method (you can read
    more about it in my other article).
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，让我们使用 NN 方法进行空间插值（你可以在我的另一篇文章中阅读更多关于它的内容）。
- en: '[](/3-best-methods-for-spatial-interpolation-912cab7aee47?source=post_page-----498398c25a39--------------------------------)
    [## 3 Best Methods for Spatial Interpolation'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/3-best-methods-for-spatial-interpolation-912cab7aee47?source=post_page-----498398c25a39--------------------------------)
    [## 3 种最佳空间插值方法'
- en: From scratch, in Python
  id: totrans-22
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 从头开始，在 Python 中
- en: towardsdatascience.com](/3-best-methods-for-spatial-interpolation-912cab7aee47?source=post_page-----498398c25a39--------------------------------)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](/3-best-methods-for-spatial-interpolation-912cab7aee47?source=post_page-----498398c25a39--------------------------------)'
- en: Basically, it means that we transfer sparse observations into a geographical
    grid (PyDeck will do the same thing, in this case it can be called data aggregation).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 基本上，这意味着我们将稀疏的观测数据转化为一个地理网格（PyDeck 将做同样的事情，在这种情况下可以称之为数据聚合）。
- en: '[PRE1]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: After the algorithm is done (you’ll need to wait for some time, since we have
    more than 2 mil rows to process), we can wrap its results into an *xarray* dataset
    and map it.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 算法完成后（你需要等一段时间，因为我们有超过 200 万行数据要处理），我们可以将其结果包装成 *xarray* 数据集并进行映射。
- en: '[PRE2]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '![](../Images/4cb04396ef5a88ff66debcc1afa1e262.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4cb04396ef5a88ff66debcc1afa1e262.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[作者](https://medium.com/@alexroz)。
- en: From my perspective, it looks nice and informative, but if you need to sell
    this project to someone, you’ll most probably fail with such a map xD. So let’s
    pip install PyDeck and see what it can do for us!
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 从我的角度来看，它看起来既不错又具有信息量，但如果你需要将这个项目推销给别人，使用这样的地图你很可能会失败 xD。所以，让我们来安装 PyDeck 并看看它能为我们做些什么！
- en: 1\. Hexagons.
  id: totrans-31
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 1\. 六边形。
- en: 'The first type of map layer I found beautiful was the Hexagon layer. You need
    to specify it while creating the L**ayer** variable in PyDeck. There are several
    other crucial parameters for us:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我发现最美的地图图层类型是六边形图层。在创建 PyDeck 的 L**ayer** 变量时你需要指定它。对于我们来说，还有一些其他至关重要的参数：
- en: radius (the radius of hexagon in meters, i.e. spatial resolution in m);
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 半径（六边形的半径，单位米，即空间分辨率，单位为米）；
- en: elevation_scale (scale factor for bins, the greater the value, the higher the
    hexagons);
  id: totrans-34
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: elevation_scale（箱体的缩放因子，值越大，六边形越高）；
- en: elevation_range (min and max height);
  id: totrans-35
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: elevation_range（最小和最大高度）；
- en: pickable (interactively showing the values);
  id: totrans-36
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 可选择（交互式显示值）；
- en: extruded (cell elevation).
  id: totrans-37
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: extruded（单元格高度）。
- en: '[PRE3]'
  id: totrans-38
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'The second variable we need to create is the View state. We need to feed it
    with:'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要创建的第二个变量是视图状态。我们需要为它提供：
- en: longitude and latitude;
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经度和纬度；
- en: zoom (initial zoom);
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 缩放（初始缩放）；
- en: min_zoom and max_zoom;
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: min_zoom 和 max_zoom；
- en: bearing (left/right view angle);
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 方位角（左/右视角）；
- en: pitch (up/down view angle).
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: pitch（上下视角）。
- en: '[PRE4]'
  id: totrans-45
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'Since we have a large dataset, google colab doesn’t display all the dataset,
    so you have two options:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们有一个大数据集，Google Colab 并不会显示全部数据，因此你有两个选择：
- en: Sample N rows from the dataset;
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从数据集中抽取 N 行样本；
- en: Save the map to html and open it in your browser.
  id: totrans-48
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 将地图保存为 HTML 并在浏览器中打开。
- en: 'If you pick the second one, you’ll get this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你选择第二个，你将得到这个：
- en: '![](../Images/39e06c87e81077954efe4dc5f62ec734.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39e06c87e81077954efe4dc5f62ec734.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[作者](https://medium.com/@alexroz)。
- en: To be honest, I love how hexagons look, but I’ve never seen them in any scientific
    paper/presentation/lecture, so I’d recommend using them consciously.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 说实话，我喜欢六边形的外观，但在任何科学论文/报告/讲座中我都没见过它们，所以我建议大家有意识地使用它们。
- en: 2\. Columns
  id: totrans-53
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2\. 列
- en: 'Now let’s try to create a similar visualization, but using columns. But in
    this case we will need to pass to the function the xarray dataset we created earlier
    and specify the color and the variable to visualize:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们尝试创建一个类似的可视化，但是使用柱状图。但在这种情况下，我们需要将之前创建的xarray数据集传递给函数，并指定颜色和要可视化的变量：
- en: '[PRE5]'
  id: totrans-55
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/cc30a98b5ee2146008744d31b6a2df27.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cc30a98b5ee2146008744d31b6a2df27.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: 3\. Scatter plot
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 3\. 散点图
- en: 'In essence, scatter plot is a cloud of points, but the authors of PyDeck developed
    cylinders, which look quite unique:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，散点图是由点云组成的，但PyDeck的作者们开发了独特的圆柱体，它们看起来非常与众不同：
- en: '![](../Images/02f97b260ea3c59ba0ad2e115cea005f.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02f97b260ea3c59ba0ad2e115cea005f.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: '[PRE6]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '![](../Images/b181b49d8fcccb41ab7b2117138ad0d5.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b181b49d8fcccb41ab7b2117138ad0d5.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: 4\. Map style
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 4\. 地图样式
- en: 'A really cool thing about PyDeck is that as plotly, geemap, folium and other
    interactive mapping tools, it allows users to change the basemap, meaning you
    can design a map according to your project’s context:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: PyDeck的一个非常酷的特点是，像plotly、geemap、folium等交互式映射工具一样，它允许用户更改底图，这意味着你可以根据项目的背景设计地图：
- en: '[PRE7]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/50b2a8f66e10ec360688621211efbdd0.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50b2a8f66e10ec360688621211efbdd0.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: 5\. Titles
  id: totrans-70
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 5\. 标题
- en: 'The next feature, which I find super helpful, is changing the interactive data
    description. By putting a cursor on a column/hexagon/point you can get meta information,
    but often it looks a little bit preposterous. But in PyDeck you can easily overcome
    it:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 下一个我认为非常有用的特性是改变交互式数据描述。通过将光标放在某个柱状图/六边形/点上，你可以获取元数据信息，但有时看起来有些荒谬。但在PyDeck中，你可以轻松克服这一点：
- en: '![](../Images/582e1ea8485234ef1a68a63fe9fa529c.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/582e1ea8485234ef1a68a63fe9fa529c.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: '[PRE8]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '![](../Images/8ea69b8f10ab3eed20ae63fcbfcfb08b.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8ea69b8f10ab3eed20ae63fcbfcfb08b.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: 6\. View angle
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 6\. 视角
- en: 'Finally, the most amazing feature of this library is your ability to change
    the viewing angle on the map simply by clicking the right button of your mouse:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，这个库最惊人的特性就是你可以通过简单地点击鼠标右键来改变地图的视角：
- en: '[PRE9]'
  id: totrans-79
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: '![](../Images/0d126df99ce2a038c2d6a607ca604a79.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0d126df99ce2a038c2d6a607ca604a79.png)'
- en: Image by [author](https://medium.com/@alexroz).
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[作者](https://medium.com/@alexroz)提供。
- en: I definitely enjoy **PyDeck** and plan to dive deeper into the **deck.jl** framework.
    With super easy and intuitive syntax it allows users to build impressive visualizations
    being energy-efficient. Python limits the capabilities of this package a lot,
    so check out their [gallery](https://deck.gl/examples), it’s mind blowing, especially
    their experimental GlobalView feature…
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 我确实很喜欢**PyDeck**，并计划深入了解**deck.jl**框架。它的语法既简单又直观，能够让用户在保证能效的前提下构建出令人印象深刻的可视化。Python在一定程度上限制了这个包的功能，所以你可以查看他们的[画廊](https://deck.gl/examples)，真的非常震撼，尤其是他们的实验性GlobalView功能…
- en: Hopefully this article was informative and insightful for you!
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 希望这篇文章对你有启发并且信息量十足！
- en: ===========================================
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: ===========================================
- en: '***All my publications on Medium are free and open-access, that’s why I’d really
    appreciate if you followed me here!***'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: '***我在Medium上的所有出版物都是免费且开放获取的，因此如果你能在这里关注我，我将非常感激！***'
- en: P.s. I’m extremely passionate about (Geo)Data Science, ML/AI and Climate Change.
    So if you want to work together on some project pls contact me in [LinkedIn](https://www.linkedin.com/in/alexxxroz/).
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 备注：我对（地理）数据科学、机器学习/人工智能以及气候变化充满极大的热情。如果你想一起合作进行某个项目，请通过[LinkedIn](https://www.linkedin.com/in/alexxxroz/)与我联系。
- en: 🛰️Follow for more🛰️
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 🛰️关注我，获取更多更新🛰️
