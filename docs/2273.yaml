- en: The Math Behind Kernel Density Estimation
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 核密度估计背后的数学
- en: 原文：[https://towardsdatascience.com/the-math-behind-kernel-density-estimation-5deca75cba38?source=collection_archive---------1-----------------------#2024-09-17](https://towardsdatascience.com/the-math-behind-kernel-density-estimation-5deca75cba38?source=collection_archive---------1-----------------------#2024-09-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/the-math-behind-kernel-density-estimation-5deca75cba38?source=collection_archive---------1-----------------------#2024-09-17](https://towardsdatascience.com/the-math-behind-kernel-density-estimation-5deca75cba38?source=collection_archive---------1-----------------------#2024-09-17)
- en: Exploring the foundations, concepts, and math of kernel density estimation
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 探索核密度估计的基础、概念和数学原理
- en: '[](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)[![Zackary
    Nay](../Images/b2eca451f39b1227ba868befe969f4ff.png)](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)
    [Zackary Nay](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)[![Zackary
    Nay](../Images/b2eca451f39b1227ba868befe969f4ff.png)](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)
    [Zackary Nay](https://medium.com/@z.nay854?source=post_page---byline--5deca75cba38--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)
    ·14 min read·Sep 17, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5deca75cba38--------------------------------)
    ·14分钟阅读·2024年9月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7b02965740dfdbe0f77e416a5b6eb7e3.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b02965740dfdbe0f77e416a5b6eb7e3.png)'
- en: The Kernel Density Estimator is a fundamental non-parametric method that is
    a versatile tool for uncovering the hidden distributions of your data. This article
    delves into the mathematical foundations of the estimator, provides guidance on
    choosing the optimal bandwidth, and briefly touches on the choice of kernel functions
    and other related topics.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 核密度估计是一个基本的非参数方法，是揭示数据隐藏分布的多功能工具。本文深入探讨了估计器的数学基础，提供了选择最优带宽的指导，并简要触及了核函数的选择以及其他相关话题。
- en: '**Part 1: Introduction**'
  id: totrans-8
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第1部分：简介**'
- en: 'Suppose I give you the following sample of data:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我给你以下样本数据：
- en: '![](../Images/9d7b5704844ecc01c61ef6440a044011.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9d7b5704844ecc01c61ef6440a044011.png)'
- en: 'One of the first and easiest steps in analyzing sample data is to generate
    a histogram, for our data we get the following:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 分析样本数据的第一个也是最简单的步骤之一是生成一个直方图，对于我们的数据，我们得到以下图形：
- en: '![](../Images/52fdb96422c868e48af5ae2cfcb9a638.png)'
  id: totrans-12
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/52fdb96422c868e48af5ae2cfcb9a638.png)'
- en: Not very useful, and we are no closer to understanding what the underlying distribution
    is. There is also the additional problem that, in practice, data rarely exhibit
    the sharp rectangular structure produced by a histogram. The kernel density estimator
    provides a remedy, and it is a non-parametric way to estimate the probability
    density function of a random variable.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 并不是非常有用，我们距离理解底层分布仍然很远。实际上，还有一个额外的问题，那就是数据很少表现出由直方图产生的那种锐利的矩形结构。核密度估计提供了解决方法，它是一种非参数方法，用于估计随机变量的概率密度函数。
- en: '![](../Images/815e4c24ba9ea67563e2a705b1e06d04.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/815e4c24ba9ea67563e2a705b1e06d04.png)'
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**Part 2: Derivation**'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第2部分：推导**'
- en: The following derivation takes inspiration from Bruce E. Hansen’s “Lecture Notes
    on Nonparametric” (2009). If you are interested in learning more you can refer
    to his original lecture notes [here](https://users.ssc.wisc.edu/~bhansen/718/NonParametrics1.pdf).
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 以下推导灵感来源于Bruce E. Hansen的《非参数讲义笔记》（2009年）。如果你有兴趣了解更多，可以参考他的原始讲义笔记[这里](https://users.ssc.wisc.edu/~bhansen/718/NonParametrics1.pdf)。
- en: 'Suppose we wanted to estimate a probability density function, f(t), from a
    sample of data. A good starting place would be to estimate the cumulative distribution
    function, F(t), using the [empirical distribution function](https://en.wikipedia.org/wiki/Empirical_distribution_function#:~:text=The%20empirical%20distribution%20function%20is,to%20the%20Glivenko%E2%80%93Cantelli%20theorem.)
    (EDF). Let X1, …, Xn be independent, identically distributed real random variables
    with the common cumulative distribution function F(t). The EDF is defined as:'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想从一组数据样本中估计一个概率密度函数 f(t)。一个好的起点是通过使用 [经验分布函数](https://en.wikipedia.org/wiki/Empirical_distribution_function#:~:text=The%20empirical%20distribution%20function%20is,to%20the%20Glivenko%E2%80%93Cantelli%20theorem.)
    (EDF) 来估计累积分布函数 F(t)。设 X1, …, Xn 为独立同分布的实值随机变量，其共同的累积分布函数为 F(t)。EDF 定义为：
- en: '![](../Images/124f9bd1a658b206a5279dfd27173ddd.png)'
  id: totrans-19
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/124f9bd1a658b206a5279dfd27173ddd.png)'
- en: 'Then, by the strong law of large numbers, as n approaches infinity, the EDF
    converges almost surely to F(t). Now, the EDF is a step function that could look
    like the following:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，根据大数法则，当 n 趋近于无穷大时，EDF 几乎必然收敛于 F(t)。现在，EDF 是一个阶梯函数，可能如下所示：
- en: '![](../Images/b8c9f6aac2ad35cb70daede61f52be29.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b8c9f6aac2ad35cb70daede61f52be29.png)'
- en: '[PRE1]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'Therefore, if we were to try and find an estimator for f(t) by taking the derivative
    of the EDF, we would get a scaled sum of [Dirac delta functions](https://en.wikipedia.org/wiki/Dirac_delta_function),
    which is not very helpful. Instead let us consider using the t[wo-point central
    difference formula](https://home.cc.umanitoba.ca/~farhadi/Math2120/Numerical%20Differentiation.pdf)
    of the estimator as an approximation of the derivative. Which, for a small h>0,
    we get:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，如果我们尝试通过取经验分布函数（EDF）的导数来找到 f(t) 的估计器，我们将得到一个 [狄拉克 delta 函数](https://en.wikipedia.org/wiki/Dirac_delta_function)
    的加权和，这并没有太大帮助。相反，让我们考虑使用估计器的 t[二点中心差分公式](https://home.cc.umanitoba.ca/~farhadi/Math2120/Numerical%20Differentiation.pdf)作为导数的近似。对于一个小的
    h>0，我们得到：
- en: '![](../Images/59ae71a5b9101204a61466fda298a3b7.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/59ae71a5b9101204a61466fda298a3b7.png)'
- en: 'Now define the function k(u) as follows:'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 现在定义函数 k(u) 如下：
- en: '![](../Images/39d48ca6e7d2b0c4db071cd0eaddc43c.png)'
  id: totrans-26
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/39d48ca6e7d2b0c4db071cd0eaddc43c.png)'
- en: 'Then we have that:'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们得到：
- en: '![](../Images/130318df46d4d42879bfb8b4ef0d52e2.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/130318df46d4d42879bfb8b4ef0d52e2.png)'
- en: 'Which is a special case of the kernel density estimator, where here k is the
    uniform kernel function. More generally, a kernel function is a non-negative function
    from the reals to the reals which satisfies:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 这是核密度估计器的特例，其中 k 是均匀核函数。更一般地，核函数是一个从实数到实数的非负函数，满足以下条件：
- en: '![](../Images/d490e3f1e63f3b07459eb3f97598cde8.png)'
  id: totrans-30
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d490e3f1e63f3b07459eb3f97598cde8.png)'
- en: We will assume that all kernels discussed in this article are symmetric, hence
    we have that k(-u) = k(u).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 我们假设本文讨论的所有核函数都是对称的，因此我们有 k(-u) = k(u)。
- en: 'The moment of a kernel, which gives insights into the shape and behavior of
    the kernel function, is defined as the following:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 核的矩，它为核函数的形状和行为提供了洞察，定义如下：
- en: '![](../Images/3a624958e05b0beb451fdc6b1e39836a.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a624958e05b0beb451fdc6b1e39836a.png)'
- en: Lastly, the order of a kernel is defined as the first non-zero moment.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，核的阶数定义为第一个非零矩。
- en: We can only minimize the error of the kernel density estimator by either changing
    the h value (bandwidth), or the kernel function. The bandwidth parameter has a
    much larger impact on the resulting estimate than the kernel function but is also
    much more difficult to choose. To demonstrate the influence of the h value, take
    the following two kernel density estimates. A Gaussian kernel was used to estimate
    a sample generated from a standard normal distribution, the only difference between
    the estimators is the chosen h value.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 我们只能通过改变 h 值（带宽）或核函数来最小化核密度估计器的误差。带宽参数对结果估计的影响远大于核函数，但选择起来也更加困难。为了演示 h 值的影响，考虑以下两个核密度估计。使用高斯核来估计从标准正态分布生成的样本，两个估计器之间唯一的区别就是所选择的
    h 值。
- en: '![](../Images/8202c10fcb27e1b851f069889558d274.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8202c10fcb27e1b851f069889558d274.png)'
- en: '[PRE2]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Quite a dramatic difference.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 差异相当显著。
- en: Now let us look at the impact of changing the kernel function while keeping
    the bandwidth constant.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们看看在保持带宽不变的情况下改变核函数的影响。
- en: '![](../Images/c99738f2f355e32578811f64b2dd879c.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c99738f2f355e32578811f64b2dd879c.png)'
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: While visually there is a large difference in the tails, the overall shape of
    the estimators are similar across the different kernel functions. Therefore, I
    will focus primarily focus on finding the optimal bandwidth for the estimator.
    Now, let’s explore some of the properties of the kernel density estimator, including
    its bias and variance.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在尾部视觉上有很大的差异，但不同核函数的估计器整体形状相似。因此，我将主要集中于为估计器找到最优带宽。现在，让我们探讨一些核密度估计器的性质，包括其偏差和方差。
- en: '**Part 3: Properties of the Kernel Density Estimator**'
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第 3 部分：核密度估计器的性质**'
- en: 'The first fact that we will need to utilize is that the integral of the estimator
    across the real line is 1\. To prove this fact, we will need to make use of the
    change of u-substitution:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要利用的第一个事实是，估计器在实数线上的积分为 1。为了证明这一事实，我们将使用 u 代换：
- en: '![](../Images/e33cf2e2049c29aca18e8a093ca66c13.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e33cf2e2049c29aca18e8a093ca66c13.png)'
- en: 'Employing that u-substitution we get the following:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 运用 u 代换，我们得到以下结果：
- en: '![](../Images/9f3a57706737f576377668a492d07d83.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9f3a57706737f576377668a492d07d83.png)'
- en: 'Now we can find the mean of the estimated density:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们可以找到估计密度的均值：
- en: '![](../Images/ed503405029561f4a7976cd6a585ae03.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed503405029561f4a7976cd6a585ae03.png)'
- en: Therefore, the mean of the estimated density is simply the sample mean.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，估计密度的均值就是样本均值。
- en: Now let us find the second moment of the estimator.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 现在让我们找到估计量的第二阶矩。
- en: '![](../Images/bfe471ec7996859cc904c593b9a23c86.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bfe471ec7996859cc904c593b9a23c86.png)'
- en: 'We can then find the variance of the estimated density:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 然后我们可以找到估计密度的方差：
- en: '![](../Images/2c822ab90eee6dff0793fa3b7c7ddaa8.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2c822ab90eee6dff0793fa3b7c7ddaa8.png)'
- en: To find the optimal bandwidth and kernel, we will be minimizing the mean squared
    error of the estimator. To achieve this, we will first need to find the bias and
    variance of the estimator.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 为了找到最优带宽和核函数，我们将最小化估计量的均方误差。为此，我们首先需要找到估计量的偏差和方差。
- en: 'The expected value of a random variable, X, with a probability density function
    of f, can be calculated as:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 随机变量 X 的期望值，具有概率密度函数 f，可以通过以下公式计算：
- en: '![](../Images/1675a80c94a4c62e844235a9ee73b25f.png)'
  id: totrans-57
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1675a80c94a4c62e844235a9ee73b25f.png)'
- en: Thus,
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![](../Images/3f155d13144fd99e7f129ce6610dc563.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3f155d13144fd99e7f129ce6610dc563.png)'
- en: 'Where z is a dummy variable of integration. We can then use a change of variables
    to get the following:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 其中 z 是一个虚拟的积分变量。然后我们可以使用变量代换得到以下结果：
- en: '![](../Images/c0a469d13dbaa87efedfbe3e45fac73f.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c0a469d13dbaa87efedfbe3e45fac73f.png)'
- en: 'Therefore, we get the following:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们得到以下结果：
- en: '![](../Images/33a5697549c9c8fc7aef8cc5cc5ac786.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/33a5697549c9c8fc7aef8cc5cc5ac786.png)'
- en: 'Most of the time, however, the integral above is not analytically solvable.
    Therefore, we will have to approximate f(x+ hu) by using its Taylor expansion.
    As a reminder, the Taylor expansion of f(x) around a is:'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，大多数情况下，上述积分无法解析求解。因此，我们将通过使用泰勒展开来近似 f(x+ hu)。作为提醒，f(x) 关于 a 的泰勒展开式为：
- en: '![](../Images/e21d33426eddb14757b89477692c5e9c.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e21d33426eddb14757b89477692c5e9c.png)'
- en: 'Thus, assume f(x) is differentiable to the v+1 term. For f(x+hu) the expansion
    is:'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，假设 f(x) 对 v+1 次项可微。对于 f(x+hu)，展开式为：
- en: '![](../Images/b0e29e10c63fa4e7688400f1b90e4c1e.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b0e29e10c63fa4e7688400f1b90e4c1e.png)'
- en: 'Then for a v-order kernel, we can take the expression out to the v’th term:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，对于 v 阶核函数，我们可以将表达式展开到 v’项：
- en: '![](../Images/e062240689da239fe38625a7e2a75c84.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e062240689da239fe38625a7e2a75c84.png)'
- en: 'Where the last term is the remainder, which vanishes faster than h as h approaches
    0\. Now, assuming that k is a v’th order kernel function, we have that:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 其中最后一项是余项，当 h 趋近于 0 时，该项的消失速度比 h 快。现在，假设 k 是 v 阶核函数，我们得到：
- en: '![](../Images/f7854ca857959f4e956f84b66bff38be.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f7854ca857959f4e956f84b66bff38be.png)'
- en: 'Therefore:'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 因此：
- en: '![](../Images/9618d12cb67889aa94553603e126194a.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9618d12cb67889aa94553603e126194a.png)'
- en: 'Thus we have that the bias of the estimator is then:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，估计量的偏差为：
- en: '![](../Images/aeab30eaee8173e839d4b93f05452fbf.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aeab30eaee8173e839d4b93f05452fbf.png)'
- en: The upper bound for the variance can be obtained via the following calculation
    [[Chen 2].](https://faculty.washington.edu/yenchic/17Sp_403/Lec7-density.pdf)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 方差的上界可以通过以下计算获得 [[Chen 2].](https://faculty.washington.edu/yenchic/17Sp_403/Lec7-density.pdf)
- en: '![](../Images/4082e2eee9c96f468b9e2bd8e068cdae.png)'
  id: totrans-77
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4082e2eee9c96f468b9e2bd8e068cdae.png)'
- en: 'Where:'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 其中：
- en: '![](../Images/349e7cdc90db769123596f25b306f7f0.png)'
  id: totrans-79
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/349e7cdc90db769123596f25b306f7f0.png)'
- en: This term is also known as the roughness and can be denoted as R(k).
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 这个项也被称为粗糙度，可以表示为 R(k)。
- en: 'Finally, we can get an expression for the mean squared error:'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，我们可以得到均方误差的表达式：
- en: '![](../Images/9c1d3c9c4559f6512c1fd4194a06d4ea.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9c1d3c9c4559f6512c1fd4194a06d4ea.png)'
- en: Where AMSE is short for asymptotic mean squared error. We can then minimize
    the asymptotic mean integrated square error defined as follows,
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: AMSE 是渐近均方误差（Asymptotic Mean Squared Error）的缩写。我们可以最小化渐近均积分平方误差，该误差定义如下，
- en: '![](../Images/02ada6a1f661f96e4fbc20bc99bbf909.png)'
  id: totrans-84
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/02ada6a1f661f96e4fbc20bc99bbf909.png)'
- en: 'to find what bandwidth will lead to the lowest error (Silverman, 1986):'
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 以找到能带来最小误差的带宽（Silverman, 1986）：
- en: '![](../Images/c473fd6806cfa8781ba6b8a6a67c3ebb.png)'
  id: totrans-86
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c473fd6806cfa8781ba6b8a6a67c3ebb.png)'
- en: 'Then, by setting the equation to 0 and simplifying we find that the optimal
    bandwidth for a kernel of order v is:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，通过将方程设置为 0 并简化，得到一个核函数的最优带宽为：
- en: '![](../Images/b95e30c3665889767077d44b94e3e699.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b95e30c3665889767077d44b94e3e699.png)'
- en: 'The more familiar expression is for second order kernels, where the bandwidth
    that minimizes the AMISE is:'
  id: totrans-89
  prefs: []
  type: TYPE_NORMAL
  zh: 更为熟悉的表达式适用于二阶核，其中最小化 AMISE 的带宽为：
- en: '![](../Images/53599fe5eeb322d7a7b1003ac5a7276d.png)'
  id: totrans-90
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53599fe5eeb322d7a7b1003ac5a7276d.png)'
- en: However, this solution may be a letdown as we require knowing the distribution
    that we are estimating to find the optimal bandwidth. In practice, we would not
    have this distribution if we were using the kernel density estimator in the first
    place.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，这个解法可能令人失望，因为我们需要知道我们正在估计的分布才能找到最优的带宽。实际上，如果我们一开始就使用核密度估计器，我们就不会知道这个分布。
- en: '**Part 4: Bandwidth Selection**'
  id: totrans-92
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第 4 部分：带宽选择**'
- en: Despite not being able to find the bandwidth that minimizes the mean integrated
    square error, there are several methods available to choose a bandwidth without
    knowing the underlying distribution. **It is important to note, however, that
    a larger h value will cause your estimator to have less variance but greater bias,
    while a smaller bandwidth will produce a rougher estimate with less bias (Eidous
    et al., 2010).**
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管无法找到最小化均积分平方误差的带宽，但仍有几种方法可以在不知道基础分布的情况下选择带宽。**然而，值得注意的是，较大的 h 值会导致估计量的方差较小，但偏差较大，而较小的带宽会产生一个粗略的估计，偏差较小（Eidous
    等，2010）。**
- en: 'Some methods to find a bandwidth include using:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 一些用于找到带宽的方法包括使用：
- en: '1: The Solve-the-Equation Rule'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '1: 解方程规则'
- en: '2: Least Squares Cross-Validation'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '2: 最小二乘交叉验证'
- en: '3: Biased Cross-Validation'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '3: 偏差交叉验证'
- en: '4: The Direct Plug in Method'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '4: 直接代入法'
- en: '5: The Contrast Method'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '5: 对比法'
- en: It is important to note that depending on the sample size and skewness of your
    data, the ‘best’ method to choose your bandwidth changes. Most packages in Python
    allow you to use Silverman's proposed method, where you directly plug in some
    distribution (typically normal) for f and then compute the bandwidth based upon
    the kernel function that you have chosen. This procedure, known as **Silverman’s
    Rule of Thumb,** provides a relatively simple estimate for the bandwidth. However,
    it often tends to overestimate, resulting in a smoother estimate with lower variance
    but higher bias. Silverman’s Rule of Thumb also specifically does not perform
    well for bimodal distributions, and there are more accurate techniques available
    for those cases.
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 值得注意的是，根据样本大小和数据的偏斜程度，选择带宽的“最佳”方法会有所不同。Python 中的大多数软件包允许你使用 Silverman 提出的法则，你可以直接代入某个分布（通常是正态分布）来表示
    f，然后根据你选择的核函数计算带宽。这一过程被称为**Silverman 经验法则**，它为带宽提供了一个相对简单的估计。然而，它往往会高估带宽，导致较平滑的估计，方差较低，但偏差较大。Silverman
    经验法则对于双峰分布的表现也不好，对于这种情况，有更精确的技术可供选择。
- en: 'If you assume that your data is normally distributed with a mean of 0, use
    the sample standard deviation, and apply the Epanechnikov kernel (discussed below),
    you can select the bandwidth using the Rule of Thumb via the following equation:'
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 如果假设数据服从均值为 0 的正态分布，使用样本标准差，并应用 Epanechnikov 核（下文讨论），你可以通过以下方程使用经验法则选择带宽：
- en: '![](../Images/15398a17b0be9cacc757582fe73205c7.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15398a17b0be9cacc757582fe73205c7.png)'
- en: Eidous et al. found the Contrast Method to have the best performance compared
    to the other methods I listed. However, this method has drawbacks, as it increases
    the number of parameters to be chosen.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: Eidous 等人发现，与我列出的其他方法相比，对比法表现最佳。然而，这种方法有其缺点，因为它增加了需要选择的参数数量。
- en: The cross validation method is another good choice in bandwidth selection method,
    as it often leads to a small bias but a large variance (Heidenreich et al, 2013).
    It is most useful for when you are looking for a bandwidth selector that tends
    to undershoot the optimal bandwidth. To keep this article not overly long I will
    only be going over the Ordinary Least Squares Cross Validation method. The method
    tends to work well for rather wiggly densities and a moderate sample size of around
    50 to 100\. If you have a very small or large sample size this [paper](https://core.ac.uk/download/pdf/159147961.pdf)
    is a good resource to find another way to choose your bandwidth. As pointed out
    by Heidenreich, “**it definitely makes a difference which bandwidth selector is
    chosen; not only in numerical terms but also for the quality of density estimation**”.
  id: totrans-104
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉验证方法是带宽选择的另一种不错选择，因为它通常会导致较小的偏差，但较大的方差（Heidenreich 等，2013）。它在寻找倾向于低估最佳带宽的带宽选择器时非常有用。为了避免这篇文章过长，我将只介绍普通最小二乘交叉验证方法。该方法对于较为弯曲的密度和样本量大约为
    50 到 100 的情况效果较好。如果样本量非常小或非常大，[这篇论文](https://core.ac.uk/download/pdf/159147961.pdf)是一个很好的资源，可以帮助你找到另一种选择带宽的方法。如
    Heidenreich 所指出的，“**选择哪个带宽选择器确实有很大不同；不仅在数值上，而且对密度估计的质量也有影响**”。
- en: As a quick refresher, when we are creating a model we reserve some of our sample
    as a validation set to see how our model performs on the sample that it has not
    been trained on. K Fold Cross Validation minimizes the impact of possibly selecting
    a test set that misrepresents the dataset by splitting the dataset into K parts
    and then training the model K times and allowing each part to be the validation
    set once.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 为了快速复习，当我们创建模型时，我们会保留一部分样本作为验证集，以查看模型在未训练的样本上的表现。K 折交叉验证通过将数据集分成 K 部分并训练模型 K
    次，从而最小化可能选择错误测试集的影响，每一部分都会轮流作为验证集一次。
- en: Leave One Out Cross Validation is K Fold Cross Validation taken to the extreme,
    where for a sample size of n, we train the model n times and leave out one sample
    each time. [Here](https://machinelearningmastery.com/loocv-for-evaluating-machine-learning-algorithms/)
    is an article that goes more in-depth into the method in the context of training
    machine learning algorithms.
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 留一法交叉验证（Leave One Out Cross Validation）是 K 折交叉验证的极端形式，对于样本量为 n 的情况，我们训练模型 n
    次，每次留出一个样本。[这里](https://machinelearningmastery.com/loocv-for-evaluating-machine-learning-algorithms/)有一篇文章详细探讨了这种方法在训练机器学习算法中的应用。
- en: 'Let us turn back to the AMISE expression. Instead of investigating the asymptotic
    mean integrated square error, we will minimize the mean integrated square error
    (MISE). First, we can expand the square:'
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们回到 AMISE 表达式。我们将不再研究渐近平均积分平方误差，而是最小化平均积分平方误差（MISE）。首先，我们可以展开平方：
- en: '![](../Images/8d07064b850466ae87e1c1924a01c17d.png)'
  id: totrans-108
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8d07064b850466ae87e1c1924a01c17d.png)'
- en: 'As we have no control over the expected value of the last term, we can seek
    to minimize the first two terms and drop the third. Then, because X is an unbiased
    estimator for E[X], we can find the first term directly:'
  id: totrans-109
  prefs: []
  type: TYPE_NORMAL
  zh: 由于我们无法控制最后一项的期望值，因此我们可以尽力最小化前两项并舍弃第三项。然后，由于 X 是 E[X] 的无偏估计量，我们可以直接求得第一项：
- en: '![](../Images/5e82bb063a7a2eccf4342d6c403d000a.png)'
  id: totrans-110
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5e82bb063a7a2eccf4342d6c403d000a.png)'
- en: 'Then the convolution of k with k is defined as the following:'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，k 与 k 的卷积定义如下：
- en: '![](../Images/57fa4edb38fda6db5b996091bd9dd4df.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57fa4edb38fda6db5b996091bd9dd4df.png)'
- en: Hence,
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，
- en: '![](../Images/bba7957ebdfc234384c04e6ebd32959b.png)'
  id: totrans-114
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bba7957ebdfc234384c04e6ebd32959b.png)'
- en: 'Thus, for the first term, we have:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，对于第一项，我们得到：
- en: '![](../Images/dfba3c5255b22e2d8c8b1b0a13996df6.png)'
  id: totrans-116
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dfba3c5255b22e2d8c8b1b0a13996df6.png)'
- en: Next, we can approximate the second term by Monte Carlo methods. First, as discussed
    earlier, the density function is equivalent to the derivative of the cumulative
    distribution function, which we can approximate via the empirical distribution
    function. Then, the integral can be approximated by the average value of the estimator
    over the [sample](https://jwmi.github.io/BMS/chapter5-monte-carlo.pdf).
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 接下来，我们可以通过蒙特卡洛方法来逼近第二项。首先，正如前面讨论的，密度函数等于累积分布函数的导数，我们可以通过经验分布函数来逼近它。然后，积分可以通过估计量在[样本](https://jwmi.github.io/BMS/chapter5-monte-carlo.pdf)上的平均值来逼近。
- en: '![](../Images/f96f9260cac17a62a41b9d40be4bb682.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f96f9260cac17a62a41b9d40be4bb682.png)'
- en: 'Then the least squares cross validation selector (LSCV) is defined as the following:'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，最小二乘交叉验证选择器（LSCV）被定义为如下：
- en: '![](../Images/d4fc33d8d1ce23ecd2bd8b275c7012fc.png)![](../Images/f372f058f5adfa4cc5fd14285e1ffcbb.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d4fc33d8d1ce23ecd2bd8b275c7012fc.png)![](../Images/f372f058f5adfa4cc5fd14285e1ffcbb.png)'
- en: 'We then get the final selector defined as:'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: 我们得到最终定义的选择器如下：
- en: '![](../Images/2d69b80d31ae868cc3d74514a1728103.png)'
  id: totrans-122
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2d69b80d31ae868cc3d74514a1728103.png)'
- en: 'The optimal bandwidth is the h value that minimizes LSCV, defined as the following:'
  id: totrans-123
  prefs: []
  type: TYPE_NORMAL
  zh: 最优带宽是最小化LSCV的h值，定义如下：
- en: '![](../Images/3088842523b4847cd1a05dd2477eb061.png)'
  id: totrans-124
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3088842523b4847cd1a05dd2477eb061.png)'
- en: The LSCV(h) function can have multiple local minimums, hence the optimal bandwidth
    that you find can be sensitive to the interval chosen. It is useful to graph the
    function and then visually investigate where the global minimum lies.
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: LSCV(h)函数可能有多个局部最小值，因此你找到的最优带宽可能对选择的区间非常敏感。绘制该函数并直观地检查全局最小值所在位置是很有用的。
- en: '**Part 5: Optimal Kernel Selection**'
  id: totrans-126
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第五部分：最优内核选择**'
- en: If we are working with a second order kernel (which is typical), the choice
    in kernel selection is much more straightforward than bandwidth. **Under the criteria
    of minimizing the AMISE, the Epanechnikov** **kernel is an optimal kernel.** The
    full proof can be found in this paper by [Muler](https://projecteuclid.org/journals/annals-of-statistics/volume-12/issue-2/Smooth-Optimum-Kernel-Estimators-of-Densities-Regression-Curves-and-Modes/10.1214/aos/1176346523.full).
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们使用的是二阶内核（这很常见），则内核选择比带宽选择要简单得多。**在最小化AMISE的标准下，Epanechnikov** **内核是最优的内核。**完整的证明可以在[Muler](https://projecteuclid.org/journals/annals-of-statistics/volume-12/issue-2/Smooth-Optimum-Kernel-Estimators-of-Densities-Regression-Curves-and-Modes/10.1214/aos/1176346523.full)的论文中找到。
- en: '![](../Images/cfe9062c4a6e3b26a7b94a474d190507.png)'
  id: totrans-128
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cfe9062c4a6e3b26a7b94a474d190507.png)'
- en: There are other kernels which are as efficient as the Epanechnikov kernel, which
    are also touched on in Muler’s paper. However, I wouldn’t worry too much about
    your choice of kernel function, the choice in bandwidth is much more important.
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 还有一些内核与Epanechnikov内核一样高效，这些也在Muler的论文中有所提及。然而，我认为你不必过于担心内核函数的选择，带宽的选择要重要得多。
- en: '**Part 6: Further Topics and Conclusion**'
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**第六部分：进一步的主题与结论**'
- en: Adaptive Bandwidths
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自适应带宽
- en: One of the proposed ways to improve the Kernel Density Estimator is through
    an adaptive bandwidth. An adaptive bandwidth adjusts the bandwidth for each data
    point, increasing it when the density of the sample data is lower and decreasing
    it when the density is higher. While promising in theory, an adaptive bandwidth
    has been shown to perform quite poorly in the univariate case ([Terrel, Scott
    1992](https://projecteuclid.org/journals/annals-of-statistics/volume-20/issue-3/Variable-Kernel-Density-Estimation/10.1214/aos/1176348768.full)).
    While it may be better for larger dimensional spaces, for the one-dimensional
    case I believe it is best to stick with a constant bandwidth.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 提出的一种改进核密度估计器的方法是通过自适应带宽。自适应带宽会根据每个数据点的密度调整带宽，当样本数据的密度较低时增加带宽，密度较高时减少带宽。虽然理论上很有前景，但在一维情况下，自适应带宽的表现却非常差（[Terrel,
    Scott 1992](https://projecteuclid.org/journals/annals-of-statistics/volume-20/issue-3/Variable-Kernel-Density-Estimation/10.1214/aos/1176348768.full)）。虽然它在高维空间中可能表现更好，但在一维情况下，我认为坚持使用常数带宽是最好的选择。
- en: Multivariate Kernel Density Estimation
  id: totrans-133
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 多变量核密度估计
- en: The kernel density estimator can also be extended to higher dimensions, where
    the kernel is a radial basis function or is a product of multiple kernel functions.
    The approach does suffer from the curse of dimensionality, where as the dimension
    grows larger the number of data points needed to produce a useful estimator grows
    exponentially. It is also computationally expensive and is not a great method
    for analyzing high-dimensional data.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 核密度估计器还可以扩展到更高维度，其中内核是径向基函数，或是多个内核函数的乘积。这种方法确实存在维度灾难的问题，随着维度的增加，所需数据点的数量会呈指数增长。它计算成本高昂，对于高维数据分析并不是一个理想的方法。
- en: Nonparametric multivariate density estimation is still a very active field,
    with [Masked Autoregressive Flow](https://arxiv.org/abs/1705.07057) appearing
    to be quite a new and promising approach.
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 非参数多变量密度估计仍然是一个非常活跃的领域，[Masked Autoregressive Flow](https://arxiv.org/abs/1705.07057)似乎是一个全新且有前景的方法。
- en: Real World Applications
  id: totrans-136
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 现实世界应用
- en: Kernel density estimation has numerous applications across disciplines. First,
    it has been shown to improve machine learning algorithms such as in the case of
    the flexible naive Bayes classifier.
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 核密度估计在各个学科中有着广泛的应用。首先，它已被证明能改善机器学习算法，例如在灵活的朴素贝叶斯分类器中。
- en: It has also been used to estimate [traffic accident density](https://www.sciencedirect.com/science/article/pii/S2095756415305808).
    The linked paper uses the KDE to help make a model that indicates the risk of
    traffic accidents in different cities across Japan.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 它还被用于估算[交通事故密度](https://www.sciencedirect.com/science/article/pii/S2095756415305808)。该链接的论文使用KDE帮助构建模型，指示日本不同城市的交通事故风险。
- en: Another fun use is in [seismolog](https://pubs.geoscienceworld.org/ssa/bssa/article-abstract/86/2/353/120015/Kernel-estimation-methods-for-seismic-hazard-area)y,
    where the KDE has been used for modelling the risk of earthquakes in different
    locations.
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的应用是在[地震学](https://pubs.geoscienceworld.org/ssa/bssa/article-abstract/86/2/353/120015/Kernel-estimation-methods-for-seismic-hazard-area)y中，KDE被用于建模不同地点的地震风险。
- en: Conclusion
  id: totrans-140
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: The kernel density estimator is an excellent addition to the data analysts’
    toolbox. While a histogram is certainly a fine way of analyzing data without using
    any underlying assumptions, the kernel density estimator provides a solid alternative
    for univariate data. For higher dimensional data, or for when computational time
    is a concern, I would recommend looking elsewhere. Nonetheless, the KDE is an
    intuitive, powerful and versatile tool in data analysis.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 核密度估计器是数据分析师工具箱中的一个优秀补充。虽然直方图无疑是分析数据的一种良好方式，它不依赖任何假设，但核密度估计器为单变量数据提供了一个稳固的替代方案。对于高维数据，或当计算时间是一个问题时，我建议考虑其他方法。尽管如此，KDE仍然是数据分析中直观、强大且多用途的工具。
- en: '*Unless otherwise noted, all images are by the author.*'
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有注明，所有图片均为作者提供。*'
