- en: 'Removing Spikes from Raman Spectra with Python: A Step-by-Step Guide'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/removing-spikes-from-raman-spectra-a-step-by-step-guide-with-python-b6fd90e8ea77?source=collection_archive---------4-----------------------#2024-11-06](https://towardsdatascience.com/removing-spikes-from-raman-spectra-a-step-by-step-guide-with-python-b6fd90e8ea77?source=collection_archive---------4-----------------------#2024-11-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Find, remove and replace spikes with interpolated values
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nicopez?source=post_page---byline--b6fd90e8ea77--------------------------------)[![Nicolas
    Coca, PhD](../Images/548630c393526a802cf560344990a1e3.png)](https://medium.com/@nicopez?source=post_page---byline--b6fd90e8ea77--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b6fd90e8ea77--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b6fd90e8ea77--------------------------------)
    [Nicolas Coca, PhD](https://medium.com/@nicopez?source=post_page---byline--b6fd90e8ea77--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b6fd90e8ea77--------------------------------)
    ·7 min read·Nov 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: This tutorial is part of a growing series on [Data Science for Raman Spectroscopy
    with Python](/data-science-for-raman-spectroscopy-a-practical-example-e81c56cf25f)
    published in [towards data science](https://towardsdatascience.com/). It is based
    on this [publication](https://doi.org/10.1016/j.aca.2024.342312) in the journal
    Analytica Chimica Acta. By following along, you’ll add a valuable tool to your
    data analysis toolkit — an effective method for cleaning up Raman spectra that’s
    already used in published research.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7b4c0ebe0c2398f9f9dbcf05ecffd68a.png)'
  prefs: []
  type: TYPE_IMG
- en: Despiking Graphene’s Raman spectrum. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Spike removal is an essential part of Raman data preprocessing. Spikes, caused
    by cosmic rays impacting the detector, appear as intense, narrow peaks that can
    distort the analysis. These bursts of energy hit the charge-coupled device (CCD)
    camera, creating sharp, high-intensity peaks that, if left uncorrected, can interfere
    with further processing steps like normalization, spectral search, or multivariate
    data analysis. Cleaning these artifacts is therefore a priority. This tutorial
    will cover a practical algorithm for removing spikes from Raman spectra. Using
    Python, we’ll walk through a user-friendly, customizable approach for spike detection
    and correction to keep Raman data accurate and reliable.
  prefs: []
  type: TYPE_NORMAL
- en: Figure 1 shows an example of a graphene Raman spectrum where a spike is present.
    Graphene’s exceptional physical properties — such as its electrical and thermal
    conductivity — have made it a highly studied material. Its Raman spectrum contains
    peaks that reflect structural characteristics, revealing information about doping,
    strain, and grain boundaries. Therefore, Raman spectroscopy is a widely used technique
    to characterize graphene. However, to make the most of this tool, spikes must
    be previously removed.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0de7cbb79612e8ba4c036fcb4f2ef06f.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. Raman spectrum from graphene with a spike. The code to generate this
    figure is shown below. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The spike removal algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The spike removal algorithm presented here consists of four main steps:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Peak finding**'
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Spike detection**'
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. Spike flagging**'
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. Spectrum correction**'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let’s take a look at the different steps with Python code snippets:'
  prefs: []
  type: TYPE_NORMAL
- en: '**1\. Peak finding:** First, the algorithm identifies significant peaks by
    checking for local maxima with a minimum prominence threshold. Adding a prominence
    threshold helps to exclude small noise-generated peaks, as we don’t aim to correct
    all the noise. See the following figure for comparison.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/df05fdd0e60900a17df9f01be6273e5a.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 1: Find the peaks in a spectrum. Image by author.'
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Spike detection:** Then, spikes are flagged based on their characteristic
    narrow widths. This point might help in the automation of large spectral datasets.
    If we know the width of the Raman bands present in our spectra, we can choose
    a threshold below such a value. For example, with our system resolution, we do
    not expect to have graphene Raman bands with widths below 10 cm-1.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2ac54ea631976e354b792ba9f176db79.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 2: Finding the widths of the peaks. Image by author.'
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. Spike flagging** Next, any data points affected by spikes are flagged
    using a range calculated from the peak’s prominence, effectively isolating corrupted
    pixels. In other words, we select the window that must be corrected'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/6ca5b8f53884b5222fac8b105f5c4608.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 3: Flagging the corrupted bins. Image by author.'
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. Spectrum correction** Finally, these points are corrected through interpolation
    of nearby values, preserving the spectrum’s integrity for subsequent analyses.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1a41d905031018d2af7adab04d555510.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Step 4: Spectrum correction. Image by author.'
  prefs: []
  type: TYPE_NORMAL
- en: A full spike removal function in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'All these snippets can be summarized in a single function. This function is
    designed to be customizable based on your specific data needs, with parameters
    for adjusting prominence and width:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'The function with the algorithm can then be applied to the spiked graphene
    spectrum as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f9d4520f321b03ec94650f47c718108d.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of spike removal in a Raman spectrum. Image by author.
  prefs: []
  type: TYPE_NORMAL
- en: With this spike removal approach, you can ensure your Raman spectra are clean
    and reliable, minimizing artefacts without losing essential spectral details.
    The method is ideal for automation, especially if the expected minimum peak width
    is known, making it highly adaptable for large-scale spectral datasets and high-throughput
    analysis
  prefs: []
  type: TYPE_NORMAL
- en: I hope you enjoyed this tutorial. Feel free to drop any questions or share your
    own Raman data challenges in the comments — I’d love to hear how this algorithm
    helps in your projects!
  prefs: []
  type: TYPE_NORMAL
- en: Ready to try it out? Download the Jupyter Notebook [here](https://github.com/nicocopez/pyspikes/blob/main/Tutorial%20to%20remove%20spikes%20from%20Raman%20spectra%20-%20A%20step%20by%20step%20guide.ipynb).
    And if you found this useful, please, remember to cite the [original work](https://doi.org/10.1016/j.aca.2024.342312),
    that would help me a lot! :)
  prefs: []
  type: TYPE_NORMAL
