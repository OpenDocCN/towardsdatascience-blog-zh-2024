- en: 'Pandas Columns: Bracket Indexing (df[‘x’]) Versus Dot Syntax (df.x)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pandas-columns-bracket-indexing-df-x-versus-dot-syntax-df-x-aedd38f4a350?source=collection_archive---------1-----------------------#2024-03-01](https://towardsdatascience.com/pandas-columns-bracket-indexing-df-x-versus-dot-syntax-df-x-aedd38f4a350?source=collection_archive---------1-----------------------#2024-03-01)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PANDAS FOR DATA SCIENCE
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Does it matter how you do it? Maybe one is faster than the other?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page---byline--aedd38f4a350--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--aedd38f4a350--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--aedd38f4a350--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--aedd38f4a350--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--aedd38f4a350--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--aedd38f4a350--------------------------------)
    ·5 min read·Mar 1, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/33495307aa2cf1f1805eaad074017b2c.png)'
  prefs: []
  type: TYPE_IMG
- en: The dot syntax is very popular in Python, also in Pandas. Photo by [Alejandro
    Barba](https://unsplash.com/@albrb?utm_source=medium&utm_medium=referral) on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'When using Pandas, most data scientists would go for `df[''x'']` or `df["x"]`
    — it doesn’t really matter which one you use as long as you stick to whichever
    you’ve chosen. You can read more about this here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/pythoniq/so-single-or-double-quotes-in-python-47c2e7425f32?source=post_page-----aedd38f4a350--------------------------------)
    [## So, Single (‘) or Double (“) Quotes in Python?'
  prefs: []
  type: TYPE_NORMAL
- en: Many claim you should prefer single over double quotes in Python. Should you?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/pythoniq/so-single-or-double-quotes-in-python-47c2e7425f32?source=post_page-----aedd38f4a350--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Hence, from now on, wherever I will write `df["x"]`, this will equally refer
    to `df['x']`. Nevertheless, there’s another option. You can also go for `df.x`.
    While it’s a less frequent option, it can improve readability, assuming that the
    column’s name is a [valid Python identifier](https://docs.python.org/3/reference/lexical_analysis.html#identifiers).¹
  prefs: []
  type: TYPE_NORMAL
- en: 'Does it matter which syntax you choose? This article aims to address this issue,
    from two most important points of view: readability and performance.'
  prefs: []
  type: TYPE_NORMAL
- en: Pros and cons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The two approaches — `df["x"]` and `df.x` — are common methods for accessing
    the column (here, `"x"`) from a data frame (here, `df`). In the data science realm,
    most…
  prefs: []
  type: TYPE_NORMAL
