- en: Speech to Text to Speech with AI Using Python — a How-To Guide
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Python 和 AI 的语音转文本再转语音 — 一份如何实现的指南
- en: 原文：[https://towardsdatascience.com/speech-to-text-to-speech-with-ai-using-python-a-how-to-guide-ee9b0b0ef082?source=collection_archive---------1-----------------------#2024-02-11](https://towardsdatascience.com/speech-to-text-to-speech-with-ai-using-python-a-how-to-guide-ee9b0b0ef082?source=collection_archive---------1-----------------------#2024-02-11)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/speech-to-text-to-speech-with-ai-using-python-a-how-to-guide-ee9b0b0ef082?source=collection_archive---------1-----------------------#2024-02-11](https://towardsdatascience.com/speech-to-text-to-speech-with-ai-using-python-a-how-to-guide-ee9b0b0ef082?source=collection_archive---------1-----------------------#2024-02-11)
- en: How to Create a Speech-to-Text-to-Speech Program
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何创建一个语音转文本再转语音程序
- en: '[](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[![Naomi
    Kriger](../Images/14839f859e1375965c046912f00df5b9.png)](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)
    [Naomi Kriger](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[![Naomi
    Kriger](../Images/14839f859e1375965c046912f00df5b9.png)](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)
    [Naomi Kriger](https://naomikriger.medium.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)
    ·8 min read·Feb 11, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--ee9b0b0ef082--------------------------------)
    ·阅读时长 8 分钟·2024年2月11日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/9373a2a21c40ba755fe7e692fc61b292.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9373a2a21c40ba755fe7e692fc61b292.png)'
- en: '[Image](https://unsplash.com/photos/aaujbh59zqI) by [Mariia Shalabaieva](https://unsplash.com/@maria_shalabaieva)
    from [unsplash](http://unsplash.com)'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[图片](https://unsplash.com/photos/aaujbh59zqI) 由 [Mariia Shalabaieva](https://unsplash.com/@maria_shalabaieva)
    提供，来源于 [unsplash](http://unsplash.com)'
- en: 'It’s been exactly a decade since I started attending GeekCon (yes, a geeks’
    conference 🙂) — a weekend-long hackathon-makeathon in which all projects must
    be useless and just-for-fun, and this year there was an exciting twist: all projects
    were required to incorporate some form of AI.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 自从我开始参加 GeekCon（是的，一个极客会议 🙂）已经整整十年了——这是一个为期一周末的黑客马拉松式活动，所有项目必须是无用的、纯粹为了好玩，今年有一个激动人心的变化：所有项目都必须包含某种形式的
    AI。
- en: 'My group’s project was a speech-to-text-to-speech game, and here’s how it works:
    the user selects a character to talk to, and then verbally expresses anything
    they’d like to the character. This spoken input is transcribed and sent to ChatGPT,
    which responds as if it were the character. The response is then read aloud using
    text-to-speech technology.'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 我们小组的项目是一个语音转文本再转语音的游戏，工作原理如下：用户选择一个角色进行对话，然后通过语音表达他们想对角色说的任何话。这段语音输入被转录后发送给
    ChatGPT，ChatGPT 会像角色一样进行回应。然后，使用语音合成技术将回应读出来。
- en: Now that the game is up and running, bringing laughs and fun, I’ve crafted this
    how-to guide to help you create a similar game on your own. Throughout the article,
    we’ll also explore the various considerations and decisions we made during the
    hackathon.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 现在游戏已经上线，带来了许多欢笑与乐趣，我编写了这份指南，帮助你自己创建一个类似的游戏。在整篇文章中，我们还将探索我们在黑客马拉松中所做的各种考虑和决策。
- en: Want to see the full code? [Here is the link](https://github.com/NaomiKriger/speech_to_speech_magician)!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 想查看完整代码吗？[点击这里查看](https://github.com/NaomiKriger/speech_to_speech_magician)!
- en: The Program’s Flow
  id: totrans-12
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 程序的流程
- en: Once the server is running, the user will hear the app “talking”, prompting
    them to choose the figure they want to talk to and start conversing with their
    selected character. Each time they want to talk out loud — they should press and
    hold a key on the keyboard while talking. When they finish talking (and release
    the key), their recording will be transcribed by `[Whisper](https://platform.openai.com/docs/guides/speech-to-text/quickstart)`
    (a speech-to-text model by `[OpenAI](https://platform.openai.com/docs/introduction/overview)`),
    and the transcription will be sent to `[ChatGPT](https://platform.openai.com/docs/guides/gpt/chat-completions-api)`
    for a response. The response will be read out loud using a text-to-speech library,
    and the user will hear it.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦服务器运行，用户将听到应用程序“讲话”，提示他们选择想要交谈的人物并开始与所选角色对话。每次想要大声说话时 —— 他们应按住键盘上的某个键并进行讲话。当他们讲话结束（并松开按键）时，录音将通过
    `[Whisper](https://platform.openai.com/docs/guides/speech-to-text/quickstart)`（`OpenAI`
    的语音转文本模型）进行转录，转录结果将发送给 `[ChatGPT](https://platform.openai.com/docs/guides/gpt/chat-completions-api)`
    以获取回复。回复将通过文本转语音库大声朗读，用户将听到回复内容。
- en: Implementation
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 实现
- en: Disclaimer
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 免责声明
- en: 'Note: The project was developed on a Windows operating system and incorporates
    the `pyttsx3` library, which lacks compatibility with M1/M2 chips. As `pyttsx3`
    is not supported on Mac, users are advised to explore alternative text-to-speech
    libraries that are compatible with macOS environments.'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意：该项目是在 Windows 操作系统上开发的，并且包含了 `pyttsx3` 库，该库与 M1/M2 芯片不兼容。由于 `pyttsx3` 在 Mac
    上不受支持，因此建议用户探索与 macOS 环境兼容的其他文本转语音库。
- en: Openai Integration
  id: totrans-17
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: OpenAI 集成
- en: 'I utilized two `OpenAI` models: `Whisper`, for speech-to-text transcription,
    and the `ChatGPT` API for generating responses based on the user’s input to their
    selected figure. While doing so costs money, the pricing model is very cheap,
    and personally, my bill is still under $1 for all my usage. To get started, I
    made an initial deposit of $5, and to date, I have not exhausted this deposit,
    and this initial deposit won’t expire until a year from now.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用了两个 `OpenAI` 模型：`Whisper` 用于语音转文本转录，`ChatGPT` API 用于根据用户对所选人物的输入生成回复。尽管这样做会产生费用，但定价模型非常便宜，就我个人而言，我的账单至今还不到
    $1。为了开始使用，我进行了 $5 的初始存款，到目前为止，我还没有用完这笔存款，而且这笔初始存款将持续到一年后才会过期。
- en: I’m not receiving any payment or benefits from `OpenAI` for writing this.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 我写这篇文章并未从 `OpenAI` 获得任何报酬或利益。
- en: Once you get your `OpenAI` API key — set it as an environment variable to use
    upon making the API calls. Make sure not to push your key to the codebase or any
    public location, and not to share it unsafely.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你获得了 `OpenAI` API 密钥 —— 请将其设置为环境变量，在进行 API 调用时使用。确保不要将密钥推送到代码库或任何公共位置，也不要不安全地共享它。
- en: Speech to Text — Create Transcription
  id: totrans-21
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 语音转文本 —— 创建转录
- en: The implementation of the speech-to-text feature was achieved using `Whisper`,
    an `OpenAI` model.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 语音转文本功能的实现是通过 `Whisper` 完成的，这是一种 `OpenAI` 模型。
- en: 'Below is the code snippet for the function responsible for transcription:'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是负责转录的函数代码片段：
- en: '[PRE0]'
  id: totrans-24
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: This function is marked as asynchronous (async) since the API call may take
    some time to return a response, and we await it to ensure that the program doesn’t
    progress until the response is received.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数被标记为异步（async），因为 API 调用可能需要一些时间才能返回响应，我们使用 `await` 等待它，以确保程序在收到响应之前不会继续执行。
- en: As you can see, the `get_transcript` function also invokes the `print_text_while_waiting_for_transcription`
    function. Why? Since obtaining the transcription is a time-consuming task, we
    wanted to keep the user informed that the program is actively processing their
    request and not stuck or unresponsive. As a result, this text is gradually printed
    as the user awaits the next step.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你所看到的，`get_transcript` 函数还调用了 `print_text_while_waiting_for_transcription`
    函数。为什么？因为获取转录是一个耗时的任务，我们希望让用户知道程序正在积极处理他们的请求，而不是卡住或无响应。因此，在用户等待下一步操作时，这段文字会逐渐打印出来。
- en: String Matching Using FuzzyWuzzy for Text Comparison
  id: totrans-27
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 FuzzyWuzzy 进行文本比较的字符串匹配
- en: After transcribing the speech into text, we either utilized it as is, or attempted
    to compare it with an existing string.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 将语音转录为文本后，我们要么直接使用它，要么尝试将其与现有字符串进行比较。
- en: 'The comparison use cases were: selecting a figure from a predefined list of
    options, deciding whether to continue playing or not, and when opting to continue
    - deciding whether to choose a new figure or stick with the current one.'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 比较的使用案例包括：从预定义的选项列表中选择一个角色，决定是否继续游戏，以及在选择继续时——决定是选择新角色还是继续当前角色。
- en: In such cases, we wanted to compare the user’s spoken input transcription with
    the options in our lists, and therefore we decided to use the `FuzzyWuzzy` library
    for string matching.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，我们希望将用户的语音输入转录与我们列表中的选项进行比较，因此我们决定使用`FuzzyWuzzy`库进行字符串匹配。
- en: This enabled choosing the closest option from the list, as long as the matching
    score exceeded a predefined threshold.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得我们可以从列表中选择最接近的选项，只要匹配分数超过预定的阈值。
- en: 'Here’s a snippet of our function:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们功能的一段代码：
- en: '[PRE1]'
  id: totrans-33
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: If you want to learn more about the `FuzzyWuzzy` library and its functions —
    you can check out an article I wrote about it [here](/string-comparison-is-easy-with-fuzzywuzzy-library-611cc1888d97).
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多关于`FuzzyWuzzy`库及其功能的信息，可以阅读我写的这篇文章[这里](/string-comparison-is-easy-with-fuzzywuzzy-library-611cc1888d97)。
- en: Get ChatGPT Response
  id: totrans-35
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 获取ChatGPT响应
- en: Once we have the transcription, we can send it over to `ChatGPT` to get a response.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们得到了转录内容，就可以将其发送给`ChatGPT`以获取回复。
- en: For each `ChatGPT` request, we added a prompt asking for a short and funny response.
    We also told `ChatGPT` which figure to pretend to be.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 对于每个`ChatGPT`请求，我们都会添加一个提示，要求它给出简短而有趣的回应。我们还告诉`ChatGPT`应该假装成哪个角色。
- en: 'So our function looked as follows:'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 所以我们的功能如下所示：
- en: '[PRE2]'
  id: totrans-39
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'and the system instructions looked as follows:'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 系统指令如下所示：
- en: '[PRE3]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Text to Speech
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 文本转语音
- en: For the text-to-speech part, we opted for a Python library called `pyttsx3`.
    This choice was not only straightforward to implement but also offered several
    additional advantages. It’s free of charge, provides two voice options — male
    and female — and allows you to select the speaking rate in words per minute (speech
    speed).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 对于文本转语音部分，我们选择了一个名为`pyttsx3`的Python库。这个选择不仅实现起来直接，而且还提供了若干额外的优势。它是免费的，提供两种语音选项——男性和女性——并允许你选择语速（每分钟单词数）。
- en: When a user starts the game, they pick a character from a predefined list of
    options. If we couldn’t find a match for what they said within our list, we’d
    randomly select a character from our “fallback figures” list. In both lists, each
    character was associated with a gender, so our text-to-speech function also received
    the voice ID corresponding to the selected gender.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 当用户开始游戏时，他们从预定义的选项列表中选择一个角色。如果我们在列表中找不到匹配的内容，就会从“备选角色”列表中随机选择一个角色。在这两个列表中，每个角色都与一个性别关联，因此我们的文本转语音功能也会收到对应所选性别的语音ID。
- en: 'This is what our text-to-speech function looked like:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们文本转语音功能的样子：
- en: '[PRE4]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The Main Flow
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 主要流程
- en: Now that we’ve more or less got all the pieces of our app in place, it’s time
    to dive into the gameplay! The main flow is outlined below. You might notice some
    functions we haven’t delved into (e.g. `choose_figure`, `play_round`), but you
    can explore the full code by [checking out the repo](https://github.com/NaomiKriger/speech_to_speech_magician).
    Eventually, most of these higher-level functions tie into the internal functions
    we’ve covered above.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经大致完成了应用程序的所有部分，是时候深入了解游戏玩法了！主要流程如下所示。你可能会注意到一些我们尚未深入探讨的功能（例如`choose_figure`、`play_round`），但你可以通过[查看仓库](https://github.com/NaomiKriger/speech_to_speech_magician)来探索完整代码。最终，大部分这些更高层次的功能都与我们上面提到的内部功能相联系。
- en: 'Here’s a snippet of the main game flow:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这是主游戏流程的一段代码：
- en: '[PRE5]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The Roads Not Taken
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 未走的道路
- en: 'We had several ideas in mind that we didn’t get to implement during the hackathon.
    This was either because we did not find an API we were satisfied with during that
    weekend, or due to the time constraints preventing us from developing certain
    features. These are the paths we didn’t take for this project:'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 我们有几个想法，在黑客松期间没有实现。这是因为在那个周末我们没有找到一个令我们满意的API，或者由于时间限制无法开发某些功能。这些就是我们未选择的路径：
- en: Matching the Response Voice with the Chosen Figure’s “Actual” Voice
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 匹配响应语音与所选角色的“实际”语音
- en: Imagine if the user chose to talk to Shrek, Trump, or Oprah Winfrey. We wanted
    our text-to-speech library or API to articulate responses using voices that matched
    the chosen figure. However, we couldn’t find a library or API during the hackathon
    that offered this feature at a reasonable cost. We’re still open to suggestions
    if you have any =)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，如果用户选择与史瑞克、特朗普或奥普拉·温弗瑞对话。我们希望我们的文本到语音库或API能够用与所选人物匹配的声音来表达回应。然而，在黑客松期间，我们没有找到一个价格合理的库或API提供这个功能。如果你有建议，我们依然欢迎哦
    =)
- en: Let the Users Talk to “Themselves”
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 让用户与“自己”对话
- en: Another intriguing idea was to prompt users to provide a vocal sample of themselves
    speaking. We would then train a model using this sample and have all the responses
    generated by ChatGPT read aloud in the user’s own voice. In this scenario, the
    user could choose the tone of the responses (affirmative and supportive, sarcastic,
    angry, etc.), but the voice would closely resemble that of the user. However,
    we couldn’t find an API that supported this within the constraints of the hackathon.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个有趣的想法是提示用户提供他们自己的语音样本。我们将使用这个样本训练一个模型，然后让ChatGPT生成的所有回应用用户自己的声音朗读。在这种情况下，用户可以选择回应的语气（肯定和支持、讽刺、愤怒等），但声音会尽可能像用户自己的声音。然而，在黑客松的限制下，我们没能找到支持这种功能的API。
- en: Adding a Frontend to Our Application
  id: totrans-57
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为我们的应用添加前端
- en: Our initial plan was to include a frontend component in our application. However,
    due to a last-minute change in the number of participants in our group, we decided
    to prioritize the backend development. As a result, the application currently
    runs on the command line interface (CLI) and doesn’t have frontend side.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我们最初的计划是在应用程序中包含一个前端组件。然而，由于组内参与者人数的临时变动，我们决定优先开发后端。因此，当前应用程序仅在命令行界面（CLI）上运行，没有前端部分。
- en: Additional Improvements We Have In Mind
  id: totrans-59
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 我们考虑的其他改进
- en: Latency is what bothers me most at the moment.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 当前最困扰我的是延迟。
- en: 'There are several components in the flow with a relatively high latency that
    in my opinion slightly harm the user experience. For example: the time it takes
    from finishing providing the audio input and receiving a transcription, and the
    time it takes since the user presses a button until the system actually starts
    recording the audio. So if the user starts talking right after pressing the key
    — there will be at least one second of audio that won’t be recorded due to this
    lag.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 流程中有几个相对较高延迟的组件，在我看来稍微影响了用户体验。例如：从提供音频输入到收到转录文本之间的时间，以及从用户按下按钮到系统实际开始录音之间的时间。所以，如果用户在按下按钮后立即开始讲话——由于这种延迟，至少会有一秒钟的音频没有被录制。
- en: Link to the Repo & Credits
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 仓库链接与致谢
- en: Want to see the whole project? [It’s right here](https://github.com/NaomiKriger/speech_to_speech_magician)!
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 想看看整个项目吗？[就在这里](https://github.com/NaomiKriger/speech_to_speech_magician)!
- en: Also, warm credit goes to [Lior Yardeni](https://www.linkedin.com/in/lioryardeni),
    my hackathon partner with whom I created this game.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，温暖的致谢送给我的黑客松伙伴[利奥尔·雅尔德尼](https://www.linkedin.com/in/lioryardeni)，是他和我一起创造了这个游戏。
- en: Summing Up
  id: totrans-65
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 总结
- en: In this article, we learned how to create a speech-to-text-to-speech game using
    Python, and intertwined it with AI. We’ve used the `Whisper` model by `OpenAI`
    for speech recognition, played around with the `FuzzyWuzzy` library for text matching,
    tapped into `ChatGPT`’s conversational magic via their developer API, and brought
    it all to life with `pyttsx3` for text-to-speech. While `OpenAI`’s services (`Whisper`
    and `ChatGPT` for developers) do come with a modest cost, it’s budget-friendly.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们学习了如何使用Python创建一个语音到文本再到语音的游戏，并将其与AI结合。我们使用了`OpenAI`的`Whisper`模型进行语音识别，玩弄了`FuzzyWuzzy`库进行文本匹配，利用`ChatGPT`的对话魔力通过开发者API实现，并通过`pyttsx3`将其转换为语音。虽然`OpenAI`的服务（`Whisper`和`ChatGPT`开发者版）确实有一定的费用，但它还是很实惠的。
- en: We hope you’ve found this guide enlightening and that it’s motivating you to
    embark on your projects.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望这篇指南对你有所启发，并激励你开始你的项目。
- en: Cheers to coding and fun! 🚀
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 为编程和乐趣干杯！🚀
