- en: 'Don’t Crash Your App: Load Records from the Database in Batches for Better
    Performance'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/dont-crash-your-app-load-records-from-the-databse-in-batches-for-better-performance-ab09f3598d96?source=collection_archive---------6-----------------------#2024-04-18](https://towardsdatascience.com/dont-crash-your-app-load-records-from-the-databse-in-batches-for-better-performance-ab09f3598d96?source=collection_archive---------6-----------------------#2024-04-18)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Save your Python app’s performance by efficiently loading query
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page---byline--ab09f3598d96--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page---byline--ab09f3598d96--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--ab09f3598d96--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--ab09f3598d96--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page---byline--ab09f3598d96--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--ab09f3598d96--------------------------------)
    ·7 min read·Apr 18, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5f4bed285bcfbe44453241b68a82e675.png)'
  prefs: []
  type: TYPE_IMG
- en: Python transporting small batches of data (image generated by ChatGPT)
  prefs: []
  type: TYPE_NORMAL
- en: 'This article is about optimizing the communication between your Python app
    and a database so that your app runs smoothly and your database server doesn’t
    melt. This article addresses a common **inefficiency: the habit of loading all
    data from a query at once.**'
  prefs: []
  type: TYPE_NORMAL
- en: 'When faced with queries that returns a lot of records it’s **often impractical
    or even impossible to load all returned records.** Instead of loading *all* results
    in memory and then processing row-by-row, in this article we’ll find out how to
    **load many small chunks**. Instead of loading 1 million records and processing
    we’ll load a 400 batches of 2.500 records each! This way your app doesn’t have
    to load all results in memory which has clear benefits:'
  prefs: []
  type: TYPE_NORMAL
- en: Enhanced memory usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Better perceived response times
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reduces database stress
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will also take a look under the hood and dive into the technical details
    of this technique, showing you exactly how it works behind the scenes. Let’s code!
  prefs: []
  type: TYPE_NORMAL
- en: Why use fetchmany
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
