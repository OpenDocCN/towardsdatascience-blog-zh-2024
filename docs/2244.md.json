["```py\ngit clone https://github.com/fosfrancesco/asap-dataset\n```", "```py\npip install partitura\n```", "```py\nfrom pathlib import Path\nimport partitura as pt\n\n# set the path to the asap dataset (change it to your local path!)\nasap_basepath = Path('../asap-dataset/')\n# select a performance, here we use Bach Prelude BWV 848 in C#\nperformance_path = Path(\"Bach/Prelude/bwv_848/Denisova06M.mid\")\nprint(\"Loading midi file: \", asap_basepath/performance_path)\n# load the performance\nperformance = pt.load_performance_midi(asap_basepath/performance_path)\n# extract the note array\nnote_array = performance.note_array()\n# print the dtype of the note array (helpful to know how to interpret it)\nprint(\"Numpy dtype:\")\nprint(note_array.dtype)\n# print the first 10 notes in the note array\nprint(\"First 10 notes:\")\nprint(performance.note_array()[:10])\n```", "```py\nNumpy dtype:\n[('onset_sec', '<f4'), ('duration_sec', '<f4'), ('onset_tick', '<i4'), ('duration_tick', '<i4'), ('pitch', '<i4'), ('velocity', '<i4'), ('track', '<i4'), ('channel', '<i4'), ('id', '<U256')]\nFirst 10 notes:\n[(1.0286459, 0.21354167,  790, 164, 49, 53, 0, 0, 'n0')\n (1.03125  , 0.09765625,  792,  75, 77, 69, 0, 0, 'n1')\n (1.1302084, 0.046875  ,  868,  36, 73, 64, 0, 0, 'n2')\n (1.21875  , 0.07942709,  936,  61, 68, 66, 0, 0, 'n3')\n (1.3541666, 0.04166667, 1040,  32, 73, 34, 0, 0, 'n4')\n (1.4361979, 0.0390625 , 1103,  30, 61, 62, 0, 0, 'n5')\n (1.4361979, 0.04296875, 1103,  33, 77, 48, 0, 0, 'n6')\n (1.5143229, 0.07421875, 1163,  57, 73, 69, 0, 0, 'n7')\n (1.6380209, 0.06380209, 1258,  49, 78, 75, 0, 0, 'n8')\n (1.6393229, 0.21484375, 1259, 165, 51, 54, 0, 0, 'n9')]\n```", "```py\nfrom pathlib import Path\nimport partitura as pt\n\n# set the path to the asap dataset (change it to your local path!)\nasap_basepath = Path('../asap-dataset/')\n# select a score, here we use Bach Prelude BWV 848 in C#\nscore_path = Path(\"Bach/Prelude/bwv_848/midi_score.mid\")\nprint(\"Loading midi file: \", asap_basepath/score_path)\n# load the score\nscore = pt.load_score_midi(asap_basepath/score_path)\n# extract the note array\nnote_array = score.note_array()\n# print the dtype of the note array (helpful to know how to interpret it)\nprint(\"Numpy dtype:\")\nprint(note_array.dtype)\n# print the first 10 notes in the note array\nprint(\"First 10 notes:\")\nprint(score.note_array()[:10])\n```", "```py\nNumpy dtype:\n[('onset_beat', '<f4'), ('duration_beat', '<f4'), ('onset_quarter', '<f4'), ('duration_quarter', '<f4'), ('onset_div', '<i4'), ('duration_div', '<i4'), ('pitch', '<i4'), ('voice', '<i4'), ('id', '<U256'), ('divs_pq', '<i4')]\nFirst 10 notes:\n[(0\\. , 1.9958333 , 0\\.  , 0.99791664,   0, 479, 49, 1, 'P01_n425', 480)\n (0\\. , 0.49583334, 0\\.  , 0.24791667,   0, 119, 77, 1, 'P00_n0', 480)\n (0.5, 0.49583334, 0.25, 0.24791667, 120, 119, 73, 1, 'P00_n1', 480)\n (1\\. , 0.49583334, 0.5 , 0.24791667, 240, 119, 68, 1, 'P00_n2', 480)\n (1.5, 0.49583334, 0.75, 0.24791667, 360, 119, 73, 1, 'P00_n3', 480)\n (2\\. , 0.99583334, 1\\.  , 0.49791667, 480, 239, 61, 1, 'P01_n426', 480)\n (2\\. , 0.49583334, 1\\.  , 0.24791667, 480, 119, 77, 1, 'P00_n4', 480)\n (2.5, 0.49583334, 1.25, 0.24791667, 600, 119, 73, 1, 'P00_n5', 480)\n (3\\. , 1.9958333 , 1.5 , 0.99791664, 720, 479, 51, 1, 'P01_n427', 480)\n (3\\. , 0.49583334, 1.5 , 0.24791667, 720, 119, 78, 1, 'P00_n6', 480)]\n```"]