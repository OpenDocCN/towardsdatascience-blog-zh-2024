["```py\njson_schema = {\n    \"name\": \"NamedEntities\",\n    \"schema\": {\n        \"type\": \"object\",\n        \"properties\": {\n            \"entities\": {\n                \"type\": \"array\",\n                \"description\": \"List of entity names and their corresponding types\",\n                \"items\": {\n                    \"type\": \"object\",\n                    \"properties\": {\n                        \"name\": {\n                            \"type\": \"string\",\n                            \"description\": \"The actual name as specified in the text, e.g. a person's name, or the name of the country\"\n                        },\n                        \"type\": {\n                            \"type\": \"string\",\n                            \"description\": \"The entity type, such as 'Person' or 'Organization'\",\n                            \"enum\": [\"Person\", \"Organization\", \"Location\", \"DateTime\"]\n                        }\n                    },\n                    \"required\": [\"name\", \"type\"],\n                    \"additionalProperties\": False\n                }\n            }\n        },\n        \"required\": [\"entities\"],\n        \"additionalProperties\": False\n    },\n    \"strict\": True\n}\n```", "```py\ncompletion = client.beta.chat.completions.parse(\n    model=\"gpt-4o-2024-08-06\",\n    messages=[\n        {\n            \"role\": \"system\",\n            \"content\": \"\"\"You are a Named Entity Recognition (NER) assistant.\n                Your job is to identify and return all entity names and their \n                types for a given piece of text. You are to strictly conform\n                only to the following entity types: Person, Location, Organization\n                and DateTime. If uncertain about entity type, please ignore it.\n                Be careful of certain acronyms, such as role titles \"CEO\", \"CTO\",\n                \"VP\", etc - these are to be ignore.\"\"\",\n        },\n        {\n            \"role\": \"user\",\n            \"content\": s\n        }\n    ],\n    response_format={\n        \"type\": \"json_schema\",\n        \"json_schema\": json_schema,\n    }\n)\n```", "```py\n{   'entities': [   {'name': 'Samuel Harris Altman', 'type': 'Person'},\n                    {'name': 'April 22, 1985', 'type': 'DateTime'},\n                    {'name': 'American', 'type': 'Location'},\n                    {'name': 'OpenAI', 'type': 'Organization'},\n                    {'name': '2019', 'type': 'DateTime'},\n                    {'name': 'November 2023', 'type': 'DateTime'}]}\n```", "```py\n{   'entities': [   {'name': 'Samuel Harris Altman',\n```"]