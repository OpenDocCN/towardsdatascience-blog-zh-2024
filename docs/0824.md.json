["```py\n# Load necessary libraries\nlibrary(ggplot2)\n\n# Set seed for reproducibility\nset.seed(123)\n\n# Define the distributions\nx <- seq(-4, 4, length.out = 200)\ny_gaussian <- dnorm(x)\ny_t3 <- dt(x, df = 3)\ny_t10 <- dt(x, df = 10)\ny_t30 <- dt(x, df = 30)\n\n# Create a data frame for plotting\ndf <- data.frame(x, y_gaussian, y_t3, y_t10, y_t30)\n\n# Plot the distributions\nggplot(df, aes(x)) +\n  geom_line(aes(y = y_gaussian, color = \"Gaussian\")) +\n  geom_line(aes(y = y_t3, color = \"t, df=3\")) +\n  geom_line(aes(y = y_t10, color = \"t, df=10\")) +\n  geom_line(aes(y = y_t30, color = \"t, df=30\")) +\n  labs(title = \"Comparison of Gaussian and Student t-Distributions\",\n       x = \"Value\",\n       y = \"Density\") +\n  scale_color_manual(values = c(\"Gaussian\" = \"blue\", \"t, df=3\" = \"red\", \"t, df=10\" = \"green\", \"t, df=30\" = \"purple\")) +\n  theme_classic()\n```", "```py\nlibrary(ggplot2)\nlibrary(brms)\nlibrary(ggdist)\nlibrary(easystats)\nlibrary(dplyr)\nlibrary(tibble)\nlibrary(ghibli)\n```", "```py\ndata <- read.csv(\"Data/Rotarod.csv\")\ndata$Day <- factor(data$Day, levels = c(\"1\", \"2\"))\ndata$Genotype <- factor(data$Genotype, levels = c(\"WT\", \"KO\"))\nhead(data)\n```", "```py\nedv <- ggplot(data, aes(x = Day, y = Trial3, fill=Genotype)) +\n  scale_fill_ghibli_d(\"SpiritedMedium\", direction = -1) +\n  geom_boxplot(width = 0.1,\n               outlier.color = \"red\") +\n  xlab('Day') +\n  ylab('Time (s)') +\n  ggtitle(\"Rorarod performance\") +\n  theme_classic(base_size=18, base_family=\"serif\")+\n  theme(text = element_text(size=18),\n        axis.text.x = element_text(angle=0, hjust=.1, vjust = 0.5, color = \"black\"),\n        axis.text.y = element_text(color = \"black\"),\n        plot.title = element_text(hjust = 0.5),\n        plot.subtitle = element_text(hjust = 0.5),\n        legend.position=\"bottom\")+\n  scale_y_continuous(breaks = seq(0, 100, by=20), \n                     limits=c(0,100)) +\n# Line below adds dot plots from {ggdist} package \n  stat_dots(side = \"left\", \n            justification = 1.12,\n            binwidth = 1.9) +\n# Line below adds half-violin from {ggdist} package\n  stat_halfeye(adjust = .5, \n               width = .6, \n               justification = -.2, \n               .width = 0, \n               point_colour = NA)\nedv\n```", "```py\nGaussian_Fit1 <- brm(Trial3 ~ Day * Genotype, \n           data = data, \n           family = gaussian(),\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/20240222_OutliersStudent-t/Gaussian_Fit1.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nGaussian_Fit1 <- \n  add_criterion(Gaussian_Fit1, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nset.seed(8807)\n\npp_check(Gaussian_Fit1, ndraws = 100) +\n  labs(title = \"Gaussian model\") +\n  theme_classic()\n```", "```py\nset.seed(88071)\n\npp_check(Gaussian_Fit1, group = \"Genotype\", type = \"dens_overlay_grouped\", ndraws = 100) +\n  labs(title = \"Density by Genotype\") +\n    theme_classic()\n\npp_check(Gaussian_Fit1, type = \"stat_grouped\", group = \"Genotype\", stat = \"var\", binwidth = 3) +\n  coord_cartesian(xlim = c(0, 300)) +\n  ggtitle(\"Grouped variance\") +\n  theme_classic()\n\npp_check(Gaussian_Fit1, type = \"stat\", stat = \"var\", binwidth = 3) +\n  coord_cartesian(xlim = c(0, 600)) +\n  ggtitle(\"How well we captured the variace\") +\n  theme_classic()\n\npp_check(Gaussian_Fit1, type = \"stat\", stat = \"mean\", binwidth = 2) +\n  coord_cartesian(xlim = c(0, 50)) +\n  ggtitle(\"How well we captured the mean\") +\n  theme_classic()\n```", "```py\ndescribe_posterior(Gaussian_Fit1,\n                   centrality = \"mean\",\n                   dispersion = TRUE,\n                   ci_method = \"HDI\",\n                   test = \"rope\",\n                   )\n```", "```py\n# We create the graph for convex hull\nGaussian_CondEffects <- \n  conditional_effects(Gaussian_Fit1)\n\nGaussian_CondEffects <- plot(Gaussian_CondEffects, \n       plot = FALSE)[[3]]\n\nGaussian_CondEffects + \n  geom_point(data=data, aes(x = Day, y = Trial3, color = Genotype), inherit.aes=FALSE) +\n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n```", "```py\nStudent_Fit <- brm(Trial3 ~ Day * Genotype, \n           data = data, \n           family = student,\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/20240222_OutliersStudent-t/Student_Fit.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nStudent_Fit <- \n  add_criterion(Student_Fit, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\ndescribe_posterior(Student_Fit,\n                   centrality = \"mean\",\n                   dispersion = TRUE,\n                   ci_method = \"HDI\",\n                   test = \"rope\",\n                   )\n```", "```py\nStudent_CondEffects <- \n  conditional_effects(Student_Fit)\n\nStudent_CondEffects <- plot(Student_CondEffects, \n       plot = FALSE)[[3]]\n\nStudent_CondEffects + \n  geom_point(data=data, aes(x = Day, y = Trial3, color = Genotype), inherit.aes=FALSE) +\n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n```", "```py\nStudent_Mdl2 <- bf (Trial3 ~ Day * Genotype,\n                     sigma ~ Day * Genotype)\n\nStudent_Fit2 <- brm(\n           formula = Student_Mdl2,\n           data = data, \n           family = student,\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/20240222_OutliersStudent-t/Student_Fit2.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nStudent_Fit2 <- \n  add_criterion(Student_Fit2, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nStudent_CondEffects2 <- \n  conditional_effects(Student_Fit2)\n\nStudent_CondEffects2 <- plot(Student_CondEffects2, \n       plot = FALSE)[[3]]\n\nStudent_CondEffects2 + \n  geom_point(data=data, aes(x = Day, y = Trial3, color = Genotype), inherit.aes=FALSE) +\n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nStudent_CondEffects3 <- \n  conditional_effects(Student_Fit2, dpar = \"sigma\")\n\nStudent_CondEffects3 <- plot(Student_CondEffects3, \n       plot = FALSE)[[3]]\n\nStudent_CondEffects3 + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n```", "```py\nFit_Comp <- \n  compare_performance(\n    Gaussian_Fit1, \n    Student_Fit, \n    Student_Fit2, \n    metrics = \"all\")\n\nFit_Comp\n```", "```py\nFit_Comp_W <- \nloo_compare(\n Gaussian_Fit1, \n    Student_Fit, \n    Student_Fit2,  \n  criterion = \"waic\")\n\n# Generate WAIC graph\nFit_Comp_WAIC <- \n  Fit_Comp_W[, 7:8] %>% \n  data.frame() %>% \n  rownames_to_column(var = \"model_name\") %>% \n\nggplot(\n  aes(x    = model_name, \n      y    = waic, \n      ymin = waic - se_waic, \n      ymax = waic + se_waic)\n  ) +\n  geom_pointrange(shape = 21) +\n  scale_x_discrete(\n    breaks=c(\"Gaussian_Fit1\", \n             \"Student_Fit\", \n             \"Student_Fit2\"), \n\n    labels=c(\"Gaussian_Fit1\", \n             \"Student_Fit\", \n             \"Student_Fit2\") \n\n    ) +\n  coord_flip() +\n  labs(x = \"\", \n       y = \"WAIC (score)\",\n       title = \"\") +\n  Plot_theme\n\nFit_Comp_WAIC\n```"]