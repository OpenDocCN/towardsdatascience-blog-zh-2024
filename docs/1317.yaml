- en: Physics-Informed Neural Network with Forcing Function
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 带强制函数的物理信息神经网络
- en: 原文：[https://towardsdatascience.com/physics-informed-neural-network-with-forcing-function-81f59aa24c39?source=collection_archive---------1-----------------------#2024-05-27](https://towardsdatascience.com/physics-informed-neural-network-with-forcing-function-81f59aa24c39?source=collection_archive---------1-----------------------#2024-05-27)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/physics-informed-neural-network-with-forcing-function-81f59aa24c39?source=collection_archive---------1-----------------------#2024-05-27](https://towardsdatascience.com/physics-informed-neural-network-with-forcing-function-81f59aa24c39?source=collection_archive---------1-----------------------#2024-05-27)
- en: '**Solving differential equations directly with neural networks *(with code)***'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**直接使用神经网络解微分方程*(附代码)***'
- en: '[](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)[![John
    Morrow](../Images/4a8ce62a0b4e1eb1cf77ecaba6b7ddcc.png)](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)
    [John Morrow](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)[![John
    Morrow](../Images/4a8ce62a0b4e1eb1cf77ecaba6b7ddcc.png)](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)
    [John Morrow](https://medium.com/@john_morrow?source=post_page---byline--81f59aa24c39--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)
    ·7 min read·May 27, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--81f59aa24c39--------------------------------)
    ·阅读时长7分钟·2024年5月27日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/606da5e15190e1076896e6f2b0203807.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/606da5e15190e1076896e6f2b0203807.png)'
- en: image by agsandrew on iStock
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由agsandrew提供，来自iStock
- en: In physics, mathematics, economics, engineering, and many other fields, differential
    equations describe a function in terms of the derivatives of the variables. Put
    simply, when the rate of change of a variable in terms of other variables is involved,
    you will likely find a differential equation. Many [examples](https://en.wikipedia.org/wiki/List_of_named_differential_equations)
    describe these relationships. A differential equation’s solution is typically
    derived through analytical or numerical methods.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在物理学、数学、经济学、工程学以及许多其他领域，微分方程通过变量的导数来描述一个函数。简单来说，当一个变量相对于其他变量的变化率涉及其中时，通常会遇到微分方程。许多[例子](https://en.wikipedia.org/wiki/List_of_named_differential_equations)描述了这些关系。微分方程的解通常通过解析或数值方法推导得出。
- en: While deriving the analytic solution can be a tedious or, in some cases, an
    impossible task, a physics-informed neural network (PINN) produces the solution
    directly from the differential equation, bypassing the analytic process. This
    innovative approach to solving differential equations is an important development
    in the field.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 在推导解析解时，可能会遇到繁琐甚至在某些情况下无法完成的任务，而物理信息神经网络（PINN）则直接从微分方程中得到解，绕过了解析过程。这种解微分方程的创新方法是该领域的重要发展。
- en: A [previous article](https://medium.com/towards-data-science/inverse-physics-informed-neural-net-3b636efeb37e)
    by the author used a PINN to find the solution to a differential equation describing
    a simple electronic circuit. This article explores the more challenging task of
    finding a solution when driving the circuit with a forcing function. Consider
    the following series-connected electronic circuit that comprises a resistor *R*,
    capacitor *C*, inductor *L*, and a sinusoidal voltage source *V sin(ωt)*. The
    behavior of the current flow, *i(t)*, in this circuit is described by Equation
    1, a 2nd-order non-homogeneous differential equation with forcing function, *Vω/L
    cos(ωt)*.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 作者的[上一篇文章](https://medium.com/towards-data-science/inverse-physics-informed-neural-net-3b636efeb37e)中，使用PINN找到了解一个描述简单电子电路的微分方程的解。本文探讨了在通过强制函数驱动电路时，寻找解的更具挑战性的任务。考虑下列串联电子电路，其中包含电阻*R*、电容*C*、电感*L*，以及一个正弦电压源*V
    sin(ωt)*。该电路中电流* i(t)* 的行为由方程1描述，这是一个带有强制函数*Vω/L cos(ωt)*的二阶非齐次微分方程。
- en: '![](../Images/db0fbad3f8570d544e8cd6e091cc7384.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db0fbad3f8570d544e8cd6e091cc7384.png)'
- en: 'Figure 1: **RLC circuit with sinusoidal voltage source**'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: '图 1: **带正弦电压源的 RLC 电路**'
- en: '![](../Images/b214ed62114f959ed2d5f400852f2ac1.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b214ed62114f959ed2d5f400852f2ac1.png)'
- en: '**Equation 1**'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 1**'
- en: '**Analytic solution**'
  id: totrans-15
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**解析解**'
- en: The analytic solution to Equation 1 requires solving the equation for three
    cases depending upon the relationship between *λ* and *ω₀*. As seen below, each
    results in a complicated and unique formula for *i(t)*. In tests presented later
    in **Results**, these solutions will be compared against results produced by a
    PINN. The PINN will produce the solution directly from the differential equation
    without consideration of these cases.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 方程 1 的解析解要求根据*λ*和*ω₀*的关系解决三种不同情况。如下所示，每种情况都会得到一个复杂且独特的*i(t)*公式。在稍后的**结果**部分，将把这些解析解与
    PINN 求解得到的结果进行比较。PINN 直接从微分方程中产生解，而无需考虑这些特殊情况。
- en: (A detailed analytic solution by the author using Laplace transform techniques
    is available [here](https://github.com/jmorrow1000/PINN-with-forcing-function).)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: （作者使用拉普拉斯变换技术的详细解析解可在[此处](https://github.com/jmorrow1000/PINN-with-forcing-function)查看。）
- en: '**Case 1: Under-damped (***λ/2 < ω₀*)'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: '**案例 1：欠阻尼（***λ/2 < ω₀*）'
- en: Damping refers to how fast the circuit transitions from its starting transit
    to equilibrium. An under-damped response attempts to transition quickly but typically
    cycles through overshooting and undershooting before reaching equilibrium.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 阻尼指的是电路从初始过渡到平衡状态的速度。欠阻尼响应试图快速过渡，但通常会经历过度和欠调的周期性波动，才最终达到平衡。
- en: '![](../Images/c338c1f20f47e542a90500e04b389766.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c338c1f20f47e542a90500e04b389766.png)'
- en: '**Equation 2**'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 2**'
- en: '**Case 2: Over-damped (***λ/2 >ω₀*)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**案例 2：过阻尼（***λ/2 > ω₀*）'
- en: An over-damped response slowly transitions from starting transit to equilibrium
    without undergoing cycles of overshooting and undershooting.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 过阻尼响应会从初始过渡缓慢地过渡到平衡状态，而不会经历过度和欠调的周期性波动。
- en: '![](../Images/fc2cb05714bb5c7684e505a7173cea54.png)'
  id: totrans-24
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc2cb05714bb5c7684e505a7173cea54.png)'
- en: '**Equation 3**'
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 3**'
- en: '**Case 3: Critically-damped (***λ/2 = ω₀*)'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: '**案例 3：临界阻尼（***λ/2 = ω₀*）'
- en: A critically-damped response falls between under-damped and over-damped, delivering
    the fastest response from starting transit to equilibrium.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 临界阻尼响应介于欠阻尼和过阻尼之间，提供了从初始过渡到平衡状态的最快响应。
- en: '![](../Images/bdd758e22d8b82a78a8828fa598e6fcb.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bdd758e22d8b82a78a8828fa598e6fcb.png)'
- en: '**Equation 4**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 4**'
- en: '**PINN solution**'
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**PINN 解**'
- en: PyTorch code is available [here](https://github.com/jmorrow1000/PINN-with-forcing-function).
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 代码可在[此处](https://github.com/jmorrow1000/PINN-with-forcing-function)获取。
- en: A neural network is typically trained with pairs of inputs and desired outputs.
    The inputs are applied to the neural network, and back-propagation adjusts the
    network’s weights and biases to minimize an objective function. The objective
    function represents the error in the neural network’s output compared to the desired
    output.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 神经网络通常通过输入和期望输出的配对进行训练。输入数据被传入神经网络，反向传播调整网络的权重和偏置，以最小化目标函数。目标函数表示神经网络输出与期望输出之间的误差。
- en: 'The objective function of a PINN, in contrast, requires three components: a
    residual component (*obj* *ᵣₑₛ*) and two initial condition components (*obj ᵢₙᵢₜ₁*
    and *obj* *ᵢₙᵢₜ*₂). These are combined to produce the objective function:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 相比之下，PINN 的目标函数需要三个分量：残差分量（*obj* *ᵣₑₛ*）和两个初始条件分量（*obj ᵢₙᵢₜ₁* 和 *obj* *ᵢₙᵢₜ*₂）。这些分量结合起来构成目标函数：
- en: '![](../Images/19c6a8727252c5abf6ea24df3a4a16c7.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/19c6a8727252c5abf6ea24df3a4a16c7.png)'
- en: '**Equation 5**'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 5**'
- en: '![](../Images/fff0ab3129a246ee2670d6d090921c40.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fff0ab3129a246ee2670d6d090921c40.png)'
- en: '**PINN objective function**'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: '**PINN 目标函数**'
- en: '**Residual**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**残差**'
- en: The residual component is where *physics-informed* comes into play. This component,
    incorporating derivatives of the output, constrains the network to conform to
    the defining differential equation. The residual, Equation 6, is formed by rearranging
    Equation 1.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 残差分量是*物理信息*的关键所在。这个分量包含了输出的导数，约束网络必须符合定义的微分方程。残差方程（方程 6）是通过重新排列方程 1 得到的。
- en: '![](../Images/df65ffa7c3d425398f069611eb792afb.png)'
  id: totrans-40
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/df65ffa7c3d425398f069611eb792afb.png)'
- en: '**Equation 6**'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 6**'
- en: 'During training, values of *t* are presented to the neural network’s input,
    resulting in a residual. Backpropagation then reduces the residual component of
    the objective to a minimum value close to *0* over all the training points. The
    residual component is given by:'
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练过程中，*t* 的值被输入到神经网络中，产生一个残差。然后反向传播将目标函数的残差部分减少到接近 *0* 的最小值，涵盖所有训练点。残差部分由以下公式给出：
- en: '![](../Images/f2d90cb6e39531082d56833d1673b0bb.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2d90cb6e39531082d56833d1673b0bb.png)'
- en: '**Equation 7**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 7**'
- en: The first and second derivatives, *di/dt* and *d²i/dt²*, required by Equation
    6 are provided by the automatic differentiation function in the PyTorch and TensorFlow
    neural network platforms.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 方程 6 所要求的第一和第二阶导数，*di/dt* 和 *d²i/dt²*，由 PyTorch 和 TensorFlow 神经网络平台中的自动微分功能提供。
- en: '**Initial condition 1**'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '**初始条件 1**'
- en: In this circuit example, the first initial condition requires that the PINN’s
    output, *i(t) = 0* when input *t = 0*. This is due to the sinusoidal source *V
    sin(t) = 0* at *t = 0*, resulting in no current flowing in the circuit. The objective
    component for initial condition 1 is given by Equation 8\. During training, backpropagation
    will reduce this component to a value near *0*.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个电路示例中，第一个初始条件要求当输入 *t = 0* 时，PINN 的输出为 *i(t) = 0*。这是因为在 *t = 0* 时，正弦源 *V
    sin(t) = 0*，导致电路中没有电流流动。初始条件 1 的目标部分由方程 8 给出。在训练过程中，反向传播将减少该部分到接近 *0* 的值。
- en: '![](../Images/915dca72ab9b43afd54a753c473d2a35.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/915dca72ab9b43afd54a753c473d2a35.png)'
- en: '**Equation 8**'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 8**'
- en: '**Initial condition 2**'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '**初始条件 2**'
- en: 'The second initial condition requires that *L di/dt = 0* when input *t = 0*.
    It is derived from [Kirchhoff’s voltage law](https://en.wikipedia.org/wiki/Kirchhoff%27s_circuit_laws)
    (i.e., the sum of voltage drops around a closed loop is zero). Specifically, at
    *t = 0* the following conditions exist in the circuit:'
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个初始条件要求当输入 *t = 0* 时，*L di/dt = 0*。这个条件源自于[基尔霍夫电压定律](https://en.wikipedia.org/wiki/Kirchhoff%27s_circuit_laws)（即，闭合回路中电压降的总和为零）。具体来说，在
    *t = 0* 时，电路中存在以下条件：
- en: voltage source *V sin(ωt) = 0*
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电压源 *V sin(ωt) = 0*
- en: capacitor *C* has an initial charge of *Q = 0* , yielding a capacitor voltage
    of *V_cap = Q/C = 0*
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电容器 *C* 的初始电荷为 *Q = 0*，因此电容器电压为 *V_cap = Q/C = 0*
- en: voltage across the resistor *R* is *V_res = iR = 0*, since *i(t) = 0* (initial
    condition 1)
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电阻器 *R* 两端的电压为 *V_res = iR = 0*，因为 *i(t) = 0*（初始条件 1）
- en: voltage across the inductor *L* is *V_ind = L di/dt*
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 电感器 *L* 两端的电压为 *V_ind = L di/dt*
- en: given the above conditions, the sum of the voltage drops around the circuit
    reduces to *L di/dt = 0*
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 根据上述条件，电路中电压降的总和减少为 *L di/dt = 0*
- en: The objective component for initial condition 2 is given by Equation 9\. Backpropagation
    will reduce this component to a value near 0.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 初始条件 2 的目标部分由方程 9 给出。反向传播将减少该部分到接近 0 的值。
- en: '![](../Images/4c670e274daa775038f59303a0f9ebca.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4c670e274daa775038f59303a0f9ebca.png)'
- en: '**Equation 9**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**方程 9**'
- en: '**Objective plot**'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标图**'
- en: 'The following figure shows the reduction in the value of the objective during
    training:'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 以下图显示了训练过程中目标值的减少：
- en: '![](../Images/073cb167d96415af82c2757de2813a30.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/073cb167d96415af82c2757de2813a30.png)'
- en: '**Objective plot**'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: '**目标图**'
- en: Results
  id: totrans-64
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结果
- en: The following test cases compare the response of the trained PINN to the appropriate
    analytic solution for each case. The circuit component values were chosen to produce
    the conditions of under-damped, overdamped, and critically-damped responses, as
    discussed above. All three cases are driven with a sinusoidal voltage source of
    *V = 10 volts* and *ω = 1.8 radians/second*. For each case, the capacitor and
    inductor values are *C = 0.3 farads* and *L = 1.51 henries*, respectively. The
    value of the resistor *R* is noted below for each case.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 以下测试案例比较了训练后的 PINN 对每种情况的适当解析解的响应。电路元件的值被选择以产生欠阻尼、过阻尼和临界阻尼响应，如上所讨论。所有三种情况都由一个正弦电压源驱动，*V
    = 10 伏特* 和 *ω = 1.8 弧度/秒*。对于每种情况，电容器和电感器的值分别为 *C = 0.3 法拉* 和 *L = 1.51 亨利*。每种情况的电阻器
    *R* 的值如下所示。
- en: '**Under-damped** (*R = 1.2 ohms*)'
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: '**欠阻尼** (*R = 1.2 欧姆*)'
- en: '![](../Images/bebbbf47fa38540073e17b1920b45faa.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/bebbbf47fa38540073e17b1920b45faa.png)'
- en: '**Underdamped test case**'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '**欠阻尼测试案例**'
- en: '**Over-damped** (*R = 6.0 ohms*)'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: '**过阻尼** (*R = 6.0 欧姆*)'
- en: '![](../Images/c951ac3a6978e890f3fd2e6443e3e9c0.png)'
  id: totrans-70
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c951ac3a6978e890f3fd2e6443e3e9c0.png)'
- en: '**Over-damped test case**'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**过阻尼测试案例**'
- en: '**Critically-damped** (*R = 4.487 ohms*)'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: '**临界阻尼** (*R = 4.487 欧姆*)'
- en: '![](../Images/be7a71c2f40b4bd4d3523ea3ffdadfc4.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be7a71c2f40b4bd4d3523ea3ffdadfc4.png)'
- en: '**critically-damped test case**'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '**临界阻尼测试案例**'
- en: Conclusion
  id: totrans-75
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, a neural network with a custom objective function was used
    to successfully solve a differential equation describing an electronic circuit
    driven by a sinusoidal source. Typically, the solution to a differential equation
    is derived through a tedious analytic process or numerically. The example presented
    here demonstrates that a neural network can accurately solve these equations in
    a straightforward and efficient manner. As shown in the three test cases, the
    neural network response is identical to the analytic solution.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用具有自定义目标函数的神经网络成功解决了描述正弦源驱动电子电路的微分方程。通常，微分方程的解是通过繁琐的解析过程或数值方法推导出来的。这里提供的示例展示了神经网络能够以直接和高效的方式准确解决这些方程。如三个测试案例所示，神经网络的响应与解析解完全一致。
- en: 'Appendix: PINN training notes'
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 附录：PINN训练笔记
- en: 'PINN structure:'
  id: totrans-78
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PINN结构：
- en: '- input layer, 1 input'
  id: totrans-79
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 输入层，1个输入'
- en: '- hidden layer, 128 neurons with GELU activation'
  id: totrans-80
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 隐藏层，128个神经元，使用GELU激活函数'
- en: '- hidden layer, 128 neurons with GELU activation'
  id: totrans-81
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 隐藏层，128个神经元，使用GELU激活函数'
- en: '- output layer, 1 neuron with linear activation'
  id: totrans-82
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 输出层，1个神经元，使用线性激活函数'
- en: The PINN is trained with 220 points in the time domain of 0 to 20 seconds. The
    number of points is controlled by the duration of the domain and a hyperparameter
    for the number of points per second, which is set to 11 points/sec for the test
    cases. This value gives a sufficient number of training points for each period
    of a sinusoidal driving source with *ω = 1.8*. For higher values of *ω*, more
    points per second are required, e.g., *ω = 4.0* requires 25 points/sec.
  id: totrans-83
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PINN在0到20秒的时间域内使用220个点进行训练。点的数量由域的持续时间和每秒点数的超参数控制，测试案例中每秒设置为11个点。这个值为每个正弦驱动源周期提供了足够的训练点，*ω
    = 1.8*。对于更高的*ω*值，需要更多的点每秒，例如，*ω = 4.0*需要25个点/秒。
- en: The PINN is trained in batches of 32 points sampled from the set of all training
    points. The training points are randomly shuffled at every epoch.
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: PINN在每次从所有训练点中采样32个点的批次中进行训练。训练点在每个epoch都会随机打乱。
- en: The learning rate starts at a value of 0.01 at the beginning of training and
    decreases by factor of 0.75 every 2000 epochs.
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 学习率在训练开始时设置为0.01，并且每2000个epoch减少0.75倍。
- en: The objective plot is an important indicator of successful training. As training
    progresses, the objective should decrease by several orders of magnitude and bottom
    out at a small value near 0\. If training fails to produce this result, the hyperparameters
    will require adjustment. It is recommended to first try increasing the number
    of epochs and then increasing the number of training points per second.
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 目标图是成功训练的重要指标。随着训练的进行，目标值应该下降几个数量级，并在接近0的一个小值处达到最低。如果训练没有产生这个结果，则需要调整超参数。建议首先尝试增加epoch数量，然后增加每秒训练点数。
- en: '**A pdf of this article is available** [**here**](https://github.com/jmorrow1000/PINN-with-forcing-function)**.**'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: '**本文的PDF版本可通过** [**此处**](https://github.com/jmorrow1000/PINN-with-forcing-function)**获取。**'
- en: '*All images, unless otherwise noted, are by the author.*'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有说明，所有图片均由作者提供。*'
