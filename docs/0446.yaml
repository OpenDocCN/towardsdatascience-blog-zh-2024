- en: A Practical Approach to Algorithm Efficiency
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-practical-approach-to-algorithm-efficiency-377621dbc04e?source=collection_archive---------11-----------------------#2024-02-16](https://towardsdatascience.com/a-practical-approach-to-algorithm-efficiency-377621dbc04e?source=collection_archive---------11-----------------------#2024-02-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/3483c983a658b21d42e96f1573a5485e.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Julian Hochgesang](https://unsplash.com/@julianhochgesang?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Exploring Big O Notation, Runtime Efficiency, and Algorithmic Scalability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@marcellopoliti?source=post_page---byline--377621dbc04e--------------------------------)[![Marcello
    Politi](../Images/484e44571bd2e75acfe5fef3146ab3c2.png)](https://medium.com/@marcellopoliti?source=post_page---byline--377621dbc04e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--377621dbc04e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--377621dbc04e--------------------------------)
    [Marcello Politi](https://medium.com/@marcellopoliti?source=post_page---byline--377621dbc04e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--377621dbc04e--------------------------------)
    ·8 min read·Feb 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In my articles, I have often attempted to emphasize the fact that software engineering
    skills are essential even when working in AI, because at the end of the day what
    we produce is code. The same goes for algorithmic theory because **Machine Learning
    algorithms are still algorithms, and understanding how to evaluate them is essential**.
    For example, **do you know how the attention mechanism scales in transformers**?
  prefs: []
  type: TYPE_NORMAL
- en: 'I run the scripts using [Deepnote](https://deepnote.com/): a cloud-based notebook
    that’s great for collaborative data science projects, good for prototyping'
  prefs: []
  type: TYPE_NORMAL
- en: Basic Algorithm Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: When we study or develop an algorithm, it is essential to **understand how much
    of what resources in terms of time and space it needs**. Only in this way can
    we understand how it will scale. A sorting algorithm might seem optimal on a toy
    case where we have to sort an array of length 3, but be highly inefficient when
    we have an array of length 10M.
  prefs: []
  type: TYPE_NORMAL
- en: For this reason, it is not trivial to compare the performance of two different
    algorithms. One might seem faster in specific instances, and the other faster
    in others; we need a mathematical and **formal method to properly evaluate**…
  prefs: []
  type: TYPE_NORMAL
