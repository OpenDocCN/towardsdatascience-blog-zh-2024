["```py\nasync def fetch_data():\n    print(\"Fetching data...\")\n    await asyncio.sleep(1)  # Simulate a network call\n    print(\"Data fetched\")\n    return \"data\"\n\nasync def main():\n    result = await fetch_data()  # Current coroutine pauses here\n    print(f\"Result: {result}\")\n\nasyncio.run(main())\n```", "```py\nasync def fetch_data():\n    # Simulate a network call\n    await asyncio.sleep(1)\n    return \"data\"\n\nasync def main():\n    # Schedule fetch_data\n    task = asyncio.create_task(fetch_data())  \n    # Simulate doing other work\n    await asyncio.sleep(5)  \n    # Now, await task to get the result\n    result = await task  \n    print(result)\n\nasyncio.run(main())\n```", "```py\nimport asyncio\nimport time\n\ndef sync_task():\n    time.sleep(2)\n    return \"Completed\"\n\nasync def main():\n    result = await asyncio.to_thread(sync_task)\n    print(result)\n\nasyncio.run(main())\n```"]