- en: PCA & K-Means for Traffic Data in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pca-k-means-for-traffic-data-in-python-a0ec66ab4789?source=collection_archive---------2-----------------------#2024-05-07](https://towardsdatascience.com/pca-k-means-for-traffic-data-in-python-a0ec66ab4789?source=collection_archive---------2-----------------------#2024-05-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Reduce dimensionality and cluster Taipei MRT stations based on hourly traffic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@beth-ouyang?source=post_page---byline--a0ec66ab4789--------------------------------)[![Beth
    Ou Yang](../Images/d182a3e58759953dcf90039c064390ac.png)](https://medium.com/@beth-ouyang?source=post_page---byline--a0ec66ab4789--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a0ec66ab4789--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a0ec66ab4789--------------------------------)
    [Beth Ou Yang](https://medium.com/@beth-ouyang?source=post_page---byline--a0ec66ab4789--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a0ec66ab4789--------------------------------)
    ·8 min read·May 7, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9e36326467465bce72fda2a126249d5e.png)'
  prefs: []
  type: TYPE_IMG
- en: Taipei Rail Map ( Actually Introduced Romanization Standards based ) Including
    THSR, TRA, Taipei MRT & Other Lines. Image by [Taiwan J](https://commons.wikimedia.org/wiki/User:Taiwan_Junior).
  prefs: []
  type: TYPE_NORMAL
- en: Principal Component Analysis (PCA) has been used in traffic data to detect anomalies,
    but it can also be used to capture the patterns of a transit station’s traffic
    history, just like what it does on the purchase data of a customer.
  prefs: []
  type: TYPE_NORMAL
- en: '**In this article, we will go through:**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: What tricks does PCA do
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What can we do after applying PCA
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Playtime**!'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Take a look into our dataset:'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Taipei Metro Rapid Transit System, Hourly Traffic Data](https://www.kaggle.com/datasets/bethouyang/taipei-mrt-hourly-traffic-data)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '[Full code](https://www.kaggle.com/code/bethouyang/pca-k-means-for-traffic-data-in-python)
    is also included in the above kaggle dataset.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Using PCA on hourly traffic data
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clustering on the PCA result
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Insights on the Taipei MRT traffic
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Key takeaways
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 1\. What tricks does PCA do
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In brief, PCA summarizes the data by finding linear combinations of features,
    which can be thought of as taking several pictures of an 3D object, and it will
    naturally sort the pictures by the most representative to the least before handing
    to you.
  prefs: []
  type: TYPE_NORMAL
- en: 'With the input being our original data, there would be 2 useful outputs of
    PCA: **Z** and **W**. By multiply them, we can get the reconstruction data, which
    is the original data but with some tolerable information loss (since we have reduced
    the dimensionality.)'
  prefs: []
  type: TYPE_NORMAL
- en: We will explain these 2 output matrices with our data in the practice below.
  prefs: []
  type: TYPE_NORMAL
- en: 2\. What can we do after applying PCA
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After applying PCA to our data to reduce the dimensionality, we can use it for
    other machine learning tasks, such as clustering, classification, and regression.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of Taipei MRT later in this artical, we will perform clustering
    on the lower dimensional data, where a few dimensions can be interpreted as passenger
    proportions in different parts of a day, such as morning, noon, and evening. Those
    stations share similar proportions of passengers in the daytime would be consider
    to be in the same cluster (their patterns are alike!).
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Take a look in **our traffic dataset!**
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'The datast we use here is [Taipei Metro Rapid Transit System, Hourly Traffic
    Data](https://www.kaggle.com/datasets/bethouyang/taipei-mrt-hourly-traffic-data),
    with columns: `date, hour, origin, destination, passenger_count`.'
  prefs: []
  type: TYPE_NORMAL
- en: In our case, I will keep weekday data only, since there are more interesting
    patterns between different stations during weekdays, such as stations in residential
    areas may have more commuters entering in the daytime, while in the evening, those
    in business areas may have more people getting in.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/533227a1535cfdcb7b77e75a8a2557e8.png)'
  prefs: []
  type: TYPE_IMG
- en: Stations in residential areas may have more commuters entering in the daytime.
  prefs: []
  type: TYPE_NORMAL
- en: The plot above is 4 different staitons’ hourly traffic trend (the amount the
    passengers entering into the station). The 2 lines in red are Xinpu and Yongan
    Market, which are actually located in the super crowded areas in New Taipei City.
    On the otherhands, the 2 lines in blue are Taipei City Hall and Zhongxiao Fuxing,
    where most of the companies locate and business activities happen.
  prefs: []
  type: TYPE_NORMAL
- en: The trends reflect both the nature of these areas and stations, and we can notice
    that the difference is most obvious when comparing their trends during commute
    hours (7 to 9 a.m., and 17 to 19 p.m.).
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Using PCA on hourly traffic data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Why reducing dimensionality before conducting further machine learning tasks?
  prefs: []
  type: TYPE_NORMAL
- en: 'There are 2 main reasons:'
  prefs: []
  type: TYPE_NORMAL
- en: '**As the number of dimensions increases**, all data points appear to be sparse
    and dissimilar in many ways, which would be refered to as “the curse of dimensionality”.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Due to the **high-dimensional** nature of the traffic data, it is **difficult
    to visualize** **and interpret**.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: By applying PCA, we can identify the hours when the traffic trends of different
    stations are most obvious and representative. Intuitively, by the plot shown previously,
    we can assume that hours around 8 a.m. and 18 p.m. may be representative enough
    to cluster the stations.
  prefs: []
  type: TYPE_NORMAL
- en: Remember we mentioned the useful output matrices, Z and W, of PCA in the [previous
    section](#1f50)? Here, we are going to interpret them with our MRT case.
  prefs: []
  type: TYPE_NORMAL
- en: '***Original data, X***'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8f069365eec76c988e00eee62ec8d0bb.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Index : stations'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Column : hours'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Values : the proportion of passenger entering in the specific hour (For each
    station: #passenger / #total passengers)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'With such X, we can apply PCA by the following code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Here, we specify the parameter **n_components**to be 3, which implies that PCA
    will extract the 3 most significant components for us.
  prefs: []
  type: TYPE_NORMAL
- en: Note that, it is like “*taking several pictures of an 3D object, and it will
    sort the pictures by the most representative to the least,*” and we choose the
    top 3 pictures. So, if we set **n_components**to be 5, we will get 2 more pictures,
    but our top 3 will remain the same!
  prefs: []
  type: TYPE_NORMAL
- en: '***PCA output, W matrix***'
  prefs: []
  type: TYPE_NORMAL
- en: '**W** can be thought of as the weights on each features (i.e. hours) with regard
    to our “pictures”, or more specificly, **principal components**.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b6650ff1b3d09c6532026a9c8c47e445.png)'
  prefs: []
  type: TYPE_IMG
- en: For our 3 principal components, we can see that PC_1 weights more on night hours,
    while PC_2 weights more on noon, and PC_3 is about morning time.
  prefs: []
  type: TYPE_NORMAL
- en: '***PCA output, Z matrix***'
  prefs: []
  type: TYPE_NORMAL
- en: We can interpret **Z** matrix as the representations of stations.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7149bc2c7b25cf5e4b0ed63493a3cdc3.png)'
  prefs: []
  type: TYPE_IMG
- en: In our case, as we have interpreted the W matrix and understood the latent meaning
    of each components, we can assign the PCs with names.
  prefs: []
  type: TYPE_NORMAL
- en: The Z matrix for these 4 stations indicates that the first 2 stations have larger
    proportion of night hours, while the other 2 have more in the mornings. This distribution
    also seconds the findings in our EDA (recall the line chart of these 4 stations
    in the earlier part).
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Clustering on the PCA result with K-Means
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After getting the PCA result, let’s further cluster the transit stations according
    to their traffic patterns, which is represented by 3principal components.
  prefs: []
  type: TYPE_NORMAL
- en: In the last section, Z matrix has representations of stations with regard to
    night, noon, and morning.
  prefs: []
  type: TYPE_NORMAL
- en: We will cluster the stations based on these representations, such that the stations
    in the same group would have similar passenger distributions among these 3 periods.
  prefs: []
  type: TYPE_NORMAL
- en: There are bunch of clustering methods, such as K-Means, DBSCAN, hierarchical
    clustering, e.t.c. Since the main topic here is to see the convenience of PCA,
    we will skip the process of experimenting which method is more suitable, and go
    with **K-Means**.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: After fitting the K-Means model, let’s visualize the clusters with 3D scatter
    plot by [plotly](https://plotly.com/python/3d-scatter-plots/).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7d09ac0d02ba0ba94479078c60e23685.png)'
  prefs: []
  type: TYPE_IMG
- en: 6\. Insights on the Taipei MRT traffic — Clustering results
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/061d07d462968e4e9f17f73d5838ab51.png)'
  prefs: []
  type: TYPE_IMG
- en: '**Cluster 0** : More passengers in daytime, and therefore it may be the “living
    area” group.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster 2** : More passengers in evening, and therefore it may be the “business
    area” group.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Cluster 1** : Both day and night hours are full of people entering the stations,
    and it is more complicated to explain the nature of these stations, for there
    could be variant reasons for different stations. Below, we will take a look into
    2 extreme cases in this cluster.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/7609ef3f6ef55d89c339bd98e2def7ff.png)'
  prefs: []
  type: TYPE_IMG
- en: For example, in **Cluster 1**, the station with the largest amount of passengers,
    Taipei Main Station, is a huge transit hub in Taipei, where commuters are allowed
    to transfer from buses and railway systems to MRT here. Therefore, the high-traffic
    pattern during morning and evening is clear.
  prefs: []
  type: TYPE_NORMAL
- en: On the contrary, Taipei Zoo station is in Cluster 1 as well, but it is not the
    case of “both day and night hours are full of people”. Instead, there is not much
    people in either of the periods because few residents live around that area, and
    most citizens seldom visit Taipei Zoo on weekdays.
  prefs: []
  type: TYPE_NORMAL
- en: The patterns of these 2 stations are not much alike, while they are in the same
    cluster. That is, Cluster 1 might contain too many stations that are actually
    not similar. Thus, in the future, we would have to fine-tune hyper-parameters
    of K-Means, such as the number of clusters, and methods like **silhouette score**
    and **elbow method** would be helpful.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In summary,
  prefs: []
  type: TYPE_NORMAL
- en: Applying PCA on traffic data to reduce dimensionality can be implemented as
    extracting 3 important periods (morning, noon, evening)from totally 21 working
    hours**.**
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: PCA outputs are W and Z matrices, where Z can be viewed as the representations
    of stations with regard to principal components (time periods), and W can be thought
    of as the representations of principal components (time periods) with regard to
    original features (hours).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Considering W matrix can help us understand the latent meaning of each principal
    component.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Clustering methods can be used on the PCA output, Z matrix.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Note that we skipped EDA and hyper-parameters tuning here in order to focus
    on the topic of this article, but they are actually important.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Thank you for reading so far!
  prefs: []
  type: TYPE_NORMAL
- en: Hope you have a wonderful online journey in Taipei 🫶
  prefs: []
  type: TYPE_NORMAL
- en: Further Readings
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[KMeans Hyper-parameters Explained with Examples](/kmeans-hyper-parameters-explained-with-examples-c93505820cd3),
    Sujeewa Kumaratunga PhD'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[How to Combine PCA and K-means Clustering in Python?](https://365datascience.com/tutorials/python-tutorials/pca-k-means/),
    Elitsa Kaloyanova'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: DSCI 563 Lecture Notes, UBC Master of Data Science, Varada Kolhatkar
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[K Means Clustering on High Dimensional Data.](https://medium.com/swlh/k-means-clustering-on-high-dimensional-data-d2151e1a4240),
    shivangi singh'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[Curse of Dimensionality — A “Curse” to Machine Learning](/curse-of-dimensionality-a-curse-to-machine-learning-c122ee33bfeb),
    Shashmi Karanam'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Unless otherwise noted, all images are by the author.*'
  prefs: []
  type: TYPE_NORMAL
