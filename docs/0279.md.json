["```py\ntorch>=1.9.0\ntransformers>=4.11.3 \ndatasets>=1.14.0 \ntokenizers>=0.11.0\npandas\nnumpy\n```", "```py\n # load hugging face library and model\n\nfrom transformers import pipeline\nclassifier = pipeline(\"zero-shot-classification\", model=\"MoritzLaurer/DeBERTa-v3-base-mnli-fever-anli\")\n\n# load in pandas and numpy for data manipulation\nimport pandas as pd\nimport numpy as np\n```", "```py\n#reading in data \ndf = pd.read_csv(\"https://raw.githubusercontent.com/akaba09/redditmentalhealth/main/code/dep.csv\")\n```", "```py\n# Creating a list of emotions to use as labels\ntext_labels = [\"anticipation\", \"anger\", \"disgust\", \"fear\", \"joy\", \"trust\"]\n```", "```py\n# Sample piece of text\nsample_text = \"still have depression symptoms not as bad as they used to be in fact my therapist says im improving a lot but for the past years ive been stuck in this state of emotional numbness feeling disconnected from myself others and the world and time doesnt seem to be passing\"\n\n# Run the model on the sample text\nclassifier(sample_text, text_labels, multi_label = False)\n```", "```py\n#output \n# {'sequence': ' still have depression symptoms not as bad as they used to be in fact my therapist says im improving a lot but for the past years ive been stuck in this state of emotional numbness feeling disconnected from myself others and the world and time doesnt seem to be passing',\n # 'labels': ['anticipation', 'trust', 'joy', 'disgust', 'fear', 'anger'],\n # 'scores': [0.6039842963218689,\n   #0.1163715273141861,\n   #0.074860118329525,\n   #0.07247171550989151,\n   #0.0699692890048027,\n   #0.0623430535197258]}\n```", "```py\ndef predict_sentiment(df, text_column, text_labels):\n\n\"\"\"\n    Predict the sentiment for a piece of text in a dataframe.\n\n    Args:\n        df (pandas.DataFrame): A DataFrame containing the text data to perform sentiment analysis on.\n        text_column (str): The name of the column in the DataFrame that contains the text data.\n        text_labels (list): A list of text labels for sentiment classification.\n\n    Returns:\n        pandas.DataFrame: A DataFrame containing the original data with additional columns for the predicted \n        sentiment label and corresponding score.\n\n    Raises:\n        ValueError: If the DataFrame (df) does not contain the specified text_column.\n\n    Example:\n        # Assuming df is a pandas DataFrame and text_labels is a list of text labels\n        result = predict_sentiment(df, \"text_column_name\", text_labels)\n    \"\"\"\n\n    result_list = []\n    for index, row in df.iterrows():\n        sequence_to_classify = row[text_column]\n        result = classifier(sequence_to_classify, text_labels, multi_label = False)\n        result['sentiment'] = result['labels'][0]\n        result['score'] = result['scores'][0]\n        result_list.append(result)\n    result_df = pd.DataFrame(result_list)[['sequence','sentiment', 'score']]\n    result_df = pd.merge(df, result_df, left_on = \"text\", right_on=\"sequence\", how = \"left\")\n    return result_df\n```", "```py\n# run prediction on df\n\nresults_df = predict_sentiment(df=df, text_column =\"text\", text_labels= text_labels)\n```"]