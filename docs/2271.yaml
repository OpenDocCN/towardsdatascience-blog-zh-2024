- en: 'Introducing NumPy, Part 4: Doing Math with Arrays'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/introducing-numpy-part-4-doing-math-with-arrays-5e77ac595641?source=collection_archive---------13-----------------------#2024-09-16](https://towardsdatascience.com/introducing-numpy-part-4-doing-math-with-arrays-5e77ac595641?source=collection_archive---------13-----------------------#2024-09-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Quick Success Data Science
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Plus reading and writing array data!
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page---byline--5e77ac595641--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page---byline--5e77ac595641--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5e77ac595641--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5e77ac595641--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page---byline--5e77ac595641--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5e77ac595641--------------------------------)
    ·11 min read·Sep 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/99e5016cd06af6e82b0228cb5a843e79.png)'
  prefs: []
  type: TYPE_IMG
- en: An array doing math as imagined by DALL-E3
  prefs: []
  type: TYPE_NORMAL
- en: 'Welcome to the fourth and final edition of the beginner series, *Introducing
    NumPy*! In the previous articles, we reviewed NumPy’s workhorse *arrays*: what
    they are and how to create them ([Part 1](https://medium.com/towards-data-science/introducing-numpy-part-1-understanding-arrays-3f6fecc97e3d));
    how to index and slice them ([Part 2](https://medium.com/towards-data-science/introducing-numpy-part-2-indexing-arrays-5b381b90d1d0));
    and how to manipulate them ([Part 3](https://medium.com/towards-data-science/introducing-numpy-part-3-manipulating-arrays-2685f5d3299d)).
    Now it’s time to apply them to their main purpose: mathematical operations.'
  prefs: []
  type: TYPE_NORMAL
- en: 'NumPy uses two internal implementations to perform math on arrays efficiently:
    *vectorization* and *broadcasting*. Vectorization supports operations between
    *equal-sized* arrays, and broadcasting extends this behavior to arrays with *different
    shapes*.'
  prefs: []
  type: TYPE_NORMAL
- en: Vectorization
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the most powerful features of `ndarrays`, vectorization lets you perform
    batch operations on data without the need for explicit `for` loops. This means
    you can apply an operation on an entire array at once without selecting each element
    from it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Arithmetic operations are applied *elementwise* for equal-sized arrays, as
    shown in the following figure:'
  prefs: []
  type: TYPE_NORMAL
- en: Because looping takes place behind the scenes with code implemented in C, vectorization
    leads to faster processing. Let’s look at an example in which we…
  prefs: []
  type: TYPE_NORMAL
