["```py\nimport pandas as pd\n\ndf = pd.read_csv('source/1850-2024.csv')\n```", "```py\n# Function to convert YYYYMM to YYYY-MM-DD\ndef convert_to_date(yyyymm):\n    year = int(str(yyyymm)[:4])\n    month = int(str(yyyymm)[4:6])\n    return pd.Timestamp(year=year, month=month, day=1)\n\n# Apply the conversion function to the Date column\ndf['Date'] = df['Date'].apply(convert_to_date)\n```", "```py\nimport altair as alt\n\nchart = alt.Chart(df\n).mark_line(\n).encode(\n    x='Date',\n    y='Anomaly'\n).properties(\n    width=800\n)\n\nchart\n```", "```py\nchart = alt.Chart(df\n).mark_bar(\n).encode(\n    x='Date',\n    y='Anomaly'\n).properties(\n    width=900\n)\n\nchart\n```", "```py\nchart = alt.Chart(df\n).mark_bar(\n).encode(\n    x='Date',\n    y='Anomaly',\n    color=alt.Color('Anomaly', scale=alt.Scale(scheme='redblue', reverse=True))\n).properties(\n    width=800\n)\n\nchart\n```", "```py\nchart = alt.Chart(df\n).mark_bar(\n).encode(\n    x='Decade:N',\n    y='Anomaly',\n    color=alt.Color('Anomaly', scale=alt.Scale(scheme='redblue', reverse=True))\n).properties(\n    width=800\n).transform_filter(\n    \"year(datum.Date) < 2020\"\n).transform_calculate(\n     Decade = \"(year(datum.Date) - year(datum.Date) % 10)\"  # Calculate the decade\n).transform_aggregate(\n    Anomaly='mean(Anomaly)',\n    groupby=['Decade']\n)\n\nchart\n```", "```py\nchart = chart.encode(\n    x=alt.X('Decade:O', axis=alt.Axis(\n        title='',\n        labelAngle=0,\n        labelExpr=\"datum.value + 's'\",  # Add 's' to the end of each decade label\n        )\n    ),\n    y=alt.Y('Anomaly', title='Global Surface Temperature Anomalies (°C)'),\n    color=alt.Color('Anomaly', scale=alt.Scale(scheme='redblue', reverse=True))\n)\n\nchart\n```", "```py\ntext = chart.mark_text(\n    align='center',\n    baseline='top',\n    dy = alt.expr(alt.expr.if_(alt.datum.Anomaly > 0, -15, 5))\n).encode(\n    text=alt.Text('mean(Anomaly):Q', format='.2f'),  # Format the anomaly value with 2 decimal places\n\n)\n\nchart + text\n```", "```py\nchart = chart.properties(\n    title=alt.TitleParams(\n        text='Global Surface Temperature Anomalies',\n        subtitle='Between the 1850s and the 2010s, surface temperatures increased by 0.94°C.',    \n    )\n)\n\nchart + text\n```", "```py\n# reference line\n\nrl_df = pd.DataFrame({\n    'x'     : [1970],\n    'text'  : [['Since 1977 temperatures', 'slowly started to increase.']]\n})\n\nrl = alt.Chart(rl_df).mark_rule(\n    color='red',\n).encode(\n    x='x:N'\n)\n\ntext_rl = rl.mark_text(\n    color = 'red',\n    baseline='top',\n    align='left',\n    y=10,\n    dx=10\n).encode(\n    text='text'\n)\n\nchart + text + rl + text_rl\n```", "```py\npred_df = pd.DataFrame({\n    'x'     : ['2050'],\n    'y'     : [1.2],\n    'text'  :  '?'\n})\n\npred =  alt.Chart(pred_df\n).mark_bar(\n    color = 'black'\n).encode(\n    x = 'x:N',\n    y = 'y'\n)\n\npred_text = pred.mark_text(\n    color = 'black',\n    dy=-15\n).encode(\n    text = 'text'\n)\n\nchart = chart.properties(\n    title=alt.TitleParams(\n        text='How big will the temperature anomaly be in 2050?',\n        subtitle='Between the 1850s and the 2010s, surface temperatures increased by 0.94°C.'\n    )\n)\n\nfinal = (chart + text + rl + text_rl + pred + pred_text)\nfinal \n```", "```py\nfinal.configure_title(\n    fontSize = 30,\n    subtitleFontSize= 20\n)\n```"]