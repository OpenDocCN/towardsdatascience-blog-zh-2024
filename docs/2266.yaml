- en: 'PySpark Explained: The InferSchema Problem'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/pyspark-explained-the-inferschema-problem-12a08c989371?source=collection_archive---------8-----------------------#2024-09-16](https://towardsdatascience.com/pyspark-explained-the-inferschema-problem-12a08c989371?source=collection_archive---------8-----------------------#2024-09-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/7fee21d875d5afa38e089f8af407ea74.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by AI (Dalle-3)
  prefs: []
  type: TYPE_NORMAL
- en: Think before using this common option when reading large CSV’s
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@thomas_reid?source=post_page---byline--12a08c989371--------------------------------)[![Thomas
    Reid](../Images/c1b4e5f577272633ba07e5dbfd21c02d.png)](https://medium.com/@thomas_reid?source=post_page---byline--12a08c989371--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--12a08c989371--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--12a08c989371--------------------------------)
    [Thomas Reid](https://medium.com/@thomas_reid?source=post_page---byline--12a08c989371--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--12a08c989371--------------------------------)
    ·10 min read·Sep 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Whether you’re a data scientist, data engineer, or programmer, reading and processing
    CSV data will be one of your bread-and-butter skills for years.
  prefs: []
  type: TYPE_NORMAL
- en: Most programming languages can, either natively or via a library, read and write
    CSV data files, and PySpark is no exception.
  prefs: []
  type: TYPE_NORMAL
- en: It provides a very useful `**spark.read**` function. You’ll probably have used
    this function along with its `**inferschema**` directive many times. So often
    in fact that it almost becomes habitual.
  prefs: []
  type: TYPE_NORMAL
- en: If that’s you, in this article, I hope to convince you that this is usually
    a bad idea from a performance perspective when reading large CSV files, and I’ll
    show you what you can do instead.
  prefs: []
  type: TYPE_NORMAL
- en: Firstly, we should examine where and when inferschema is used and why it’s so
    popular.
  prefs: []
  type: TYPE_NORMAL
- en: The where and when is easy. Inferschema is used explicitly as an option in the
    **spark.read** function when reading CSV files into Spark Dataframes.
  prefs: []
  type: TYPE_NORMAL
- en: You might ask, “What about other types of files”?
  prefs: []
  type: TYPE_NORMAL
- en: The schema for Parquet and ORC data files is already stored within the files.
    So explicit schema inference is not required.
  prefs: []
  type: TYPE_NORMAL
