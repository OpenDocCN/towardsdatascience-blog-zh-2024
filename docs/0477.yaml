- en: Visualizing Complex-Valued Functions in Python and Mathematica
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/today-i-was-pouring-through-my-complex-variables-and-analytic-functions-book-written-by-the-e9205f71485d?source=collection_archive---------8-----------------------#2024-02-19](https://towardsdatascience.com/today-i-was-pouring-through-my-complex-variables-and-analytic-functions-book-written-by-the-e9205f71485d?source=collection_archive---------8-----------------------#2024-02-19)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Unlocking visual insights into a difficult but powerful branch of math
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@Dani_Lisle?source=post_page---byline--e9205f71485d--------------------------------)[![Dani
    Lisle](../Images/2933bbbca26cf198e7964547a91b2751.png)](https://medium.com/@Dani_Lisle?source=post_page---byline--e9205f71485d--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e9205f71485d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e9205f71485d--------------------------------)
    [Dani Lisle](https://medium.com/@Dani_Lisle?source=post_page---byline--e9205f71485d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e9205f71485d--------------------------------)
    ·3 min read·Feb 19, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Today I was pouring through *Complex Variables and Analytic Functions* by the
    esteemed Fornberg and Piret, trying my best to wrap my mind around how complex-valued
    functions behave. Mentally vizualization such functions is extra difficult since
    they take a real and an imaginary input, and outputs two components as well. Therefore,
    a single 3-D plot is not sufficient to see how the function behaves. Rather, we
    have to split such a visualization into separate plots of the imaginary and real
    parts, or alternatively by magnitude and argument, or angle.
  prefs: []
  type: TYPE_NORMAL
- en: I wanted to be able to play around with any function I could think of, drag
    and zoom around its plots, and explore it in visual detail to understand how it
    resulted from the equation. For such a task, Wolfram Mathematica is an excellent
    starting tool.
  prefs: []
  type: TYPE_NORMAL
- en: Wolfram Language
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '[https://github.com/dreamchef/complex-functions-visualization](https://github.com/dreamchef/complex-functions-visualization)'
  prefs: []
  type: TYPE_NORMAL
- en: I wrote the above Mathematica code to produce a grid of plots showing the function
    in both ways just described. On the top, the imaginary and real parts of the function
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9b6073b85b9639da070285491a0935ae.png)'
  prefs: []
  type: TYPE_IMG
- en: 'are shown, and on the bottom, and the magnitude, and the phase shown in color:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0234fbdcc4486ce649d41dee4561a6a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Component-Wise and Magnitude-Phase Plots of f(z) from Wolfram
  prefs: []
  type: TYPE_NORMAL
- en: After playing around with a few functions using this code and convincing myself
    they made sense, I was interested in getting the same functionality in Python,
    to connect it to my other mathematical programming projects.
  prefs: []
  type: TYPE_NORMAL
- en: Python, PyPlot and complex-plotting-tools
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'I found an excellent project on GitHub ([https://github.com/artmenlope/complex-plotting-tools](https://github.com/artmenlope/complex-plotting-tools))
    which I decided to use as a starting point, and potentially contribute to in the
    future. The repo provided a very easy interface for plotting complex-valued functions
    in a variety of ways. Thanks [https://github.com/artmenlope](https://github.com/artmenlope)!
    For example, after importing `numpy`, `matplotlib`, and the repo’s `cplotting_tools`
    module defining the function and calling `cplt.complex_plot3D(x,y,f,log_mode=False)`
    produces the following:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/da80e1f86e6827c86fbbf1432799ac18.png)'
  prefs: []
  type: TYPE_IMG
- en: Magnitude and Phase Plot of f(z) from complex-plotting-tools
  prefs: []
  type: TYPE_NORMAL
- en: 'These are all for the same f(z) as above. To view the side-by-side imaginary
    and real parts of the function, use `cplot.plot_re_im(x,y,f,camp="twilight",contour=False,alpha=0.9`:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d9943d906a41a280988bde245410cb8.png)'
  prefs: []
  type: TYPE_IMG
- en: Component-Wise Plots from complex-plotting-tools
  prefs: []
  type: TYPE_NORMAL
- en: 'Additionally, the library provides other cool ways to study functions, including
    a stream plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c026babc96d69ed06a58d6453cc920af.png)'
  prefs: []
  type: TYPE_IMG
- en: Stream Plot of f(z) from complex-plotting-tools
  prefs: []
  type: TYPE_NORMAL
- en: Future Direction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The library shows a lot of promise and is relatively easy to use! It does require
    a `pts` variable to be defined that encodes the poles and zeros of the given function.
    Wolfram does not require this because it computes the locations of these points
    under the hood. It would save a lot of effort for the user if complex-plotting-tools
    had this functionality as well. I plan to implement this is into the module in
    the near future.
  prefs: []
  type: TYPE_NORMAL
- en: In the meantime, have fun plotting with Wolfram and Python, and share your thoughts
    and questions in comments below, connect with me on [LinkedIn](http://linkedin.com/in/danilisle)
    or collaborate with me on [GitHub](http://github.com/dreamchef)!
  prefs: []
  type: TYPE_NORMAL
- en: '*Unless otherwise noted, all images were created by the author.*'
  prefs: []
  type: TYPE_NORMAL
