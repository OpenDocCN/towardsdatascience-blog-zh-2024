- en: Convolutional Layer— Building Block of CNNs
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/convolutional-layer-building-block-of-cnns-501b5b643e7b?source=collection_archive---------5-----------------------#2024-01-11](https://towardsdatascience.com/convolutional-layer-building-block-of-cnns-501b5b643e7b?source=collection_archive---------5-----------------------#2024-01-11)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: What convolutional layers are and how they enable deep learning for computer
    vision
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@egorhowell?source=post_page---byline--501b5b643e7b--------------------------------)[![Egor
    Howell](../Images/1f796e828f1625440467d01dcc3e40cd.png)](https://medium.com/@egorhowell?source=post_page---byline--501b5b643e7b--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--501b5b643e7b--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--501b5b643e7b--------------------------------)
    [Egor Howell](https://medium.com/@egorhowell?source=post_page---byline--501b5b643e7b--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--501b5b643e7b--------------------------------)
    ·9 min read·Jan 11, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ca56d63285bf4ce110a2a1c7552d2fd1.png)'
  prefs: []
  type: TYPE_IMG
- en: ”[https://www.flaticon.com/free-icons/neural-network](https://www.flaticon.com/free-icons/neural-network)"
    title=”neural network icons”>Neural network icons created by juicy_fish — Flaticon..
  prefs: []
  type: TYPE_NORMAL
- en: How Computers See Images
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Unlike me and you, computers only work in binary numbers. So, they can’t see
    and understand an image. However, we can represent images using [***pixels***](https://en.wikipedia.org/wiki/Pixel)***.***
    For a grayscale image, the smaller the pixel the darker it is. A pixel takes on
    values anywhere between 0 (black) and 255 (white), numbers in the middle are a
    spectrum of greys. This number range is equal to a [***byte***](https://homepages.inf.ed.ac.uk/rbf/HIPR2/value.htm)
    in binary, which is ²⁸, this is the smallest working unit of most computers.
  prefs: []
  type: TYPE_NORMAL
- en: 'Below is an example image that I created in Python and its corresponding pixel
    values:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f21a52e1ce798b5425f62002ce8d9e98.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of a flower-like image broken down into its pixels. Plot generated by
    author in LaTeX.
  prefs: []
  type: TYPE_NORMAL
- en: Using this concept, we can develop algorithms that can see patterns in these
    pixels to classify images. This is exactly what a [***Convolutional Neural Network
    (CNN)***](https://en.wikipedia.org/wiki/Convolutional_neural_network)does***.***
  prefs: []
  type: TYPE_NORMAL
- en: Most images are not grayscale and have some color. They are typically represented
    using RGB, where we have three channels that are red, green, and blue. Each color
    is a two-dimensional pixel grid, which is then stacked on top of each other…
  prefs: []
  type: TYPE_NORMAL
