- en: From Default Python Line Chart to Journal-Quality Infographics
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/from-default-python-line-chart-to-journal-quality-infographics-80e3949eacc3?source=collection_archive---------2-----------------------#2024-12-30](https://towardsdatascience.com/from-default-python-line-chart-to-journal-quality-infographics-80e3949eacc3?source=collection_archive---------2-----------------------#2024-12-30)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Transform boring default Matplotlib line charts into stunning, customized visualizations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@vzhyvov?source=post_page---byline--80e3949eacc3--------------------------------)[![Vladimir
    Zhyvov](../Images/419b3d81707b445c95ea554b0a017769.png)](https://medium.com/@vzhyvov?source=post_page---byline--80e3949eacc3--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--80e3949eacc3--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--80e3949eacc3--------------------------------)
    [Vladimir Zhyvov](https://medium.com/@vzhyvov?source=post_page---byline--80e3949eacc3--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--80e3949eacc3--------------------------------)
    ·4 min read·5 days ago
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9baee349eeb0c00bd49abee4f17d213f.png)'
  prefs: []
  type: TYPE_IMG
- en: Cover, image by the Author
  prefs: []
  type: TYPE_NORMAL
- en: Everyone who has used Matplotlib knows how ugly the default charts look like.
    In this series of posts, I’ll share some tricks to make your visualizations stand
    out and reflect your individual style.
  prefs: []
  type: TYPE_NORMAL
- en: We’ll start with a simple line chart, which is widely used. The main highlight
    will be adding a gradient fill below the plot — a task that’s not entirely straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: So, let’s dive in and walk through all the key steps of this transformation!
  prefs: []
  type: TYPE_NORMAL
- en: Let’s make all the necessary imports first.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Now we need to generate sample data for our visualization. We will create something
    similar to what stock prices look like.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Let’s check how it looks with the default Matplotlib settings.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/ae51668ab816134bd1ef655e631997a7.png)'
  prefs: []
  type: TYPE_IMG
- en: Default plot, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Not really fascination, right? But we will gradually make it looking better.
  prefs: []
  type: TYPE_NORMAL
- en: set the title
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: set general chart parameters — size and font
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: placing the Y ticks to the right
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: changing the main line color, style and width
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0dfe063bd1de2749ecef86453875713a.png)'
  prefs: []
  type: TYPE_IMG
- en: General params applied, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Alright, now it looks a bit cleaner.
  prefs: []
  type: TYPE_NORMAL
- en: Now we’d like to add minimalistic grid to the background, remove borders for
    a cleaner look and remove ticks from the Y axis.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/80175d4f2523f488ff7429f2879a0a7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Grid added, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Now we’re adding a tine esthetic detail — year near the first tick on the axis
    X. Also we make the font color of tick labels more pale.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/60fd2791a28bedc91e2ff7bf1624137c.png)'
  prefs: []
  type: TYPE_IMG
- en: Year near first date, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: And we’re getting closer to the trickiest moment — how to create a gradient
    under the curve. Actually there is no such option in Matplotlib, but we can simulate
    it creating a gradient image and then clipping it with the chart.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/afc5c1fd0ee710440ce009002af8e301.png)'
  prefs: []
  type: TYPE_IMG
- en: Gradient added, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: Now it looks clean and nice. We just need to add several details using any editor
    (I prefer Google Slides) — title, round border corners and some numeric indicators.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa35cc0196b358b936f3ff2966471271.png)'
  prefs: []
  type: TYPE_IMG
- en: Final visualization, image by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'The full code to reproduce the visualization is below:'
  prefs: []
  type: TYPE_NORMAL
