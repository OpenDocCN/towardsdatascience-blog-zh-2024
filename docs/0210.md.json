["```py\nsns.scatterplot(data=tips, x=\"total_bill\", y=\"tip\", hue=\"time\")\n```", "```py\nimport seaborn as sns; import teeplot as tp\ntp.save = {\".eps\": True, \".pdf\": True}  # set custom output behavior\n```", "```py\ntp.tee(sns.scatterplot,\n   data=sns.load_data(\"tips\"), x=\"total_bill\", y=\"tip\", hue=\"time\")\n```", "```py\n# adapted pandas.pydata.org/docs/reference/api/pandas.DataFrame.plot.box.html\nimport pandas as pd; from teeplot import teeplot as tp\n\nage_list = [8, 10, 12, 14, 72, 74, 76, 78, 20, 25, 30, 35, 60, 85]\ndf = pd.DataFrame({\"gender\": list(\"MMMMMMMMFFFFFF\"), \"age\": age_list})\n\ntp.tee(df.plot.box,  # plotter...\n    column=\"age\", by=\"gender\", figsize=(4, 3))  # ...forwaded to plotter\n```", "```py\n# adapted from https://matplotlib.org/stable/tutorials/pyplot.html\nfrom matplotlib import pyplot as plt\nimport numpy as np; from teeplot import teeplot as tp\n\n# tee output format can be configured globally (or per call to tp.tee)\ntp.save = {\".eps\": True}  # make calls output to .eps only\n\n# set up example data\ndf = {'weight': np.arange(50), 'profit': np.random.randint(0, 50, 50),\n        'carbon': np.random.randn(50)}\ndf['price'], = df['weight'] + 10 * np.random.randn(50)\ndf['carbon'] = np.abs(df['carbon']) * 100\n\n# ----- begin plotting -----\nsaveit, __ = tp.tee(  # --- \"saveit\" is callback to finalize output\n    plt.scatter,  # plotter...\n    data=df,  # then plotting kwargs\n    x='weight', y='price', c='profit', s='carbon',\n    teeplot_callback=True)  # defer plotting to callback\n\n# tweak visualization as you usually would...\nplt.xlabel('entry a')  \nplt.ylabel('entry b')\nplt.gcf().set_size_inches(5, 3)\nsaveit()  # dispatch output callback\n```", "```py\nfrom matplotlib import pyplot as plt; import seaborn as sns\nfrom teeplot import teeplot as tp\n\ndef cuteplot(subject, descriptor, amount):  # custom plotter\n    sns.dogplot()\n    plt.gca().text(10, 400, \n        f\"{subject} \\n is a {descriptor} dog\" + \"!\" * amount,\n        color=\"white\", size=40)\n\ntp.tee(cuteplot,  # plotter\n    amount=4, subject=\"who\", descriptor=\"good\",  # plotting args\n    teeplot_outinclude=\"amount\")  # override to use numeric kwarg in filename\n```", "```py\npython3 -m pip install \\\n    matplotlib `# ==3.8.2`\\\n    numpy `# ==1.26.2` \\\n    teeplot `# ==1.0.1` \\\n    pandas `# ==2.1.3` \\\n    seaborn `# ==0.13.0`\n```"]