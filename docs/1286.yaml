- en: Turn Your Python Function into a Decorator with One Line of Code
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/turn-your-python-function-into-a-decorator-with-one-line-of-code-1ebd738f31c0?source=collection_archive---------0-----------------------#2024-05-23](https://towardsdatascience.com/turn-your-python-function-into-a-decorator-with-one-line-of-code-1ebd738f31c0?source=collection_archive---------0-----------------------#2024-05-23)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A new way to write shorter, clearer, and more readable Python decorators that
    also act as a context manager
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mikehuls.medium.com/?source=post_page---byline--1ebd738f31c0--------------------------------)[![Mike
    Huls](../Images/8f9f55a0d25db00799c5d37383b7f5b6.png)](https://mikehuls.medium.com/?source=post_page---byline--1ebd738f31c0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ebd738f31c0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ebd738f31c0--------------------------------)
    [Mike Huls](https://mikehuls.medium.com/?source=post_page---byline--1ebd738f31c0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ebd738f31c0--------------------------------)
    ·4 min read·May 23, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/819b3ce51931583081a67238f9efb95b.png)'
  prefs: []
  type: TYPE_IMG
- en: Decorating made easier (image by [Tobias Bjørkli](https://www.pexels.com/@tobiasbjorkli/)
    on [Pexels](https://www.pexels.com/photo/multicolored-graffiti-2119706/))
  prefs: []
  type: TYPE_NORMAL
- en: Do you want to write a decorator but can’t remember the syntax? Decorators have
    a pretty difficult syntax that involves a lot of boilerplate code. In this article
    we’ll demonstrate a simpler way of writing decorators. This new way will be much
    shorter, clearer, and more readable. Let’s code!
  prefs: []
  type: TYPE_NORMAL
- en: The default way to create a decorator
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The code below is the default way to create a decorator. It times how long a
    decorated function runs. Check out [this article](https://mikehuls.medium.com/six-levels-of-python-decorators-1f12c9067b23)
    for a deep dive in decorators.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'This way we can use our code like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
