- en: 'System Design: Consistent Hashing'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/system-design-consistent-hashing-43ddf48d2d32?source=collection_archive---------1-----------------------#2024-03-13](https://towardsdatascience.com/system-design-consistent-hashing-43ddf48d2d32?source=collection_archive---------1-----------------------#2024-03-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Unlocking the power of efficient data partitioning in distributed databases
    like Cassandra and Dynamo DB.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@slavahead?source=post_page---byline--43ddf48d2d32--------------------------------)[![Vyacheslav
    Efimov](../Images/441e600862b2b93564c6cd81abb0092d.png)](https://medium.com/@slavahead?source=post_page---byline--43ddf48d2d32--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--43ddf48d2d32--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--43ddf48d2d32--------------------------------)
    [Vyacheslav Efimov](https://medium.com/@slavahead?source=post_page---byline--43ddf48d2d32--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--43ddf48d2d32--------------------------------)
    ·7 min read·Mar 13, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/8c8018c09601a9fce07a351aebeee8eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We are living in a world where data is massively generated every day. In large
    corporations, it is practically impossible to store all the data on a single server.
    That is why we need **horizontal scaling** where every data part is stored on
    a separate server.
  prefs: []
  type: TYPE_NORMAL
- en: Contrary to **vertical scaling** where we can simply store all the data in a
    single place, with horizontal scaling, it is crucial to organise storage in a
    manner that would result in rapid access to the data on different servers. By
    understanding the performance disadvantages of the naive system implementation,
    we will then design a resilient system that will alleviate the mentioned problems.
  prefs: []
  type: TYPE_NORMAL
- en: In system design, the principle we will be using is known as **consistent hashing**.
  prefs: []
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Imagine we have n data objects that need to be stored across k different servers.
    The configuration of servers can change over time:'
  prefs: []
  type: TYPE_NORMAL
- en: Any server can be shut down;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A new server can be added to the system.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
