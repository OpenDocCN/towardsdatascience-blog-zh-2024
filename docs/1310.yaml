- en: 'How to: Handle Missing Data for Time Series'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-handle-missing-data-for-time-series-680810f648ed?source=collection_archive---------3-----------------------#2024-05-25](https://towardsdatascience.com/how-to-handle-missing-data-for-time-series-680810f648ed?source=collection_archive---------3-----------------------#2024-05-25)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Should you drop, interpolate, or impute?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@pelletierhaden?source=post_page---byline--680810f648ed--------------------------------)[![Haden
    Pelletier](../Images/8f73fc8222e783883c4ebcaee14513e0.png)](https://medium.com/@pelletierhaden?source=post_page---byline--680810f648ed--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--680810f648ed--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--680810f648ed--------------------------------)
    [Haden Pelletier](https://medium.com/@pelletierhaden?source=post_page---byline--680810f648ed--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--680810f648ed--------------------------------)
    ·5 min read·May 25, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/229268897c4d0e5ec19aa8f51bcf62d0.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mika Baumeister](https://unsplash.com/@kommumikation?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'There is no such thing as a perfect dataset. Every data scientist knows that
    feeling during data exploration when they call:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 'and see something like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/560f6e43bf14b6389f0dcfd2f2b5312c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[UCI Machine Learning Repository Air Quality dataset](https://archive.ics.uci.edu/dataset/360/air+quality)
    info (CC BY 4.0). Image by author'
  prefs: []
  type: TYPE_NORMAL
- en: Most ML models cannot process NaN or null values, so it is important that if
    your features or target contain them, they are dealt with appropriately **before
    attempting to fit a model to the data.**
  prefs: []
  type: TYPE_NORMAL
- en: In this article, I will explore 3 simple ways to handle nulls/missing data in
    time series datasets.
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Drop nulls
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This is probably the simplest and most straightforward way to handle missing
    data: Just get rid of it.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: By default, pandas’ [dropna](https://pandas.pydata.org/docs/reference/api/pandas.DataFrame.dropna.html)
    function searches for nulls across the board (in all columns) and drops **any
    row** where there is a null in **any column.** However, this can be modified using
    various parameters.
  prefs: []
  type: TYPE_NORMAL
