- en: Customizing RStudio Container with Docker Compose
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23](https://towardsdatascience.com/customizing-rstudio-container-with-docker-compose-60cdfe0e8894?source=collection_archive---------1-----------------------#2024-03-23)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A step-by-step guide for customizing and launching RStudio Server inside a container
    with Docker Compose
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[![Rami
    Krispin](../Images/8af28c282d42a2a27c28aa8af4c8d482.png)](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    [Rami Krispin](https://medium.com/@rami.krispin?source=post_page---byline--60cdfe0e8894--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--60cdfe0e8894--------------------------------)
    ·6 min read·Mar 23, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In this post, we will review the steps of setting up a [Docker-Compose](https://docs.docker.com/compose/)
    workflow to launch an RStudio Server inside a container. We will introduce the
    Docker Compose settings process and discuss when you should consider using it.
    Last but not least, we will demonstrate how to transition the `docker run` workflow
    that was introduced in the [previous post](https://medium.com/towards-data-science/running-rstudio-inside-a-container-e9db5e809ff8)
    and launch the [Rocker RStudio image](https://hub.docker.com/r/rocker/rstudio)
    with the Docker Compose process.
  prefs: []
  type: TYPE_NORMAL
- en: 'Related articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
    [## Running RStudio Inside a Container'
  prefs: []
  type: TYPE_NORMAL
- en: A step-by-step guide for setting up an RStudio server inside a container with
    your local RStudio settings
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/running-rstudio-inside-a-container-e9db5e809ff8?source=post_page-----60cdfe0e8894--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: By the end of this tutorial, you will be able to transition your `docker run`
    settings to a `docker-compose.yml` file and seamlessly launch your RStudio container
    with the `docker-compose` command.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/49748bef7511670c428781da1624c48a.png)'
  prefs: []
  type: TYPE_IMG
- en: Launching RStudio Server inside a container with Docker Compose (screenshot
    by the author)
  prefs: []
  type: TYPE_NORMAL
- en: Motivation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Before getting started, let’s explain what Docker Compose is and when you should
    consider using it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Starting with the **what —** Docker Compose is a simplistic framework for launching
    single or multiple containers. It is a wrapper of the `docker run` command, and
    it manages the container launch settings using a YAML file. It is recommended
    to set a Docker Compose workflow instead of using the `docker run` command **when**:'
  prefs: []
  type: TYPE_NORMAL
- en: The number of arguments of the`docker run` command increases, and it becomes
    convoluted to manage it via the CLI
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: You regularly use and work with the container
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The level of complexity is high (e.g., launching multiple containers in parallel,
    etc.)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'We use the `docker-compose.yml` file to set up a Docker Compose framework and
    launch it with the `docker-compose` command. This process includes mapping the
    `docker run` arguments into YAML format. Simple `docker-compose.yml` file settings
    will include the following two arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Version** — the Docker Compose version, which is currently 3.9'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Services** — a list of containers to launch and their corresponding arguments'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s illustrate the mapping process of the `docker run` command arguments
    to the `docker-compose.yml` file with the below example:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Where this command has the following three arguments — `argument_a`, `argument_b`,
    `argument_c`, and their corresponding values are `argument_a_values`, `argument_b_values`,
    `argument_c_values`, and calling the following image — `IMAGE_NAME/IMAGE_TAG`.
  prefs: []
  type: TYPE_NORMAL
- en: 'The below `docker-compose.yml` represents the mapping of the above `docker
    run` arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: The `version` and `services` arguments, as mentioned above, define the Docker
    Compose version and the list of images to launch during the run time, respectively.
    In this case, we use the most recent version, 3.9, and define a single container
    under the `services` argument named `my_service`. Under the `my_service` section,
    we define the run time arguments corresponding to the above `docker run` command
    arguments following the standard YAML format.
  prefs: []
  type: TYPE_NORMAL
- en: It is important to note that naming convention mapping between the `docker run`
    command arguments and their settings in the `docker-compose.yml` file is not always
    one-to-one. The Docker Compose documentation is a great resource for identifying
    the argument settings.
  prefs: []
  type: TYPE_NORMAL
- en: In the next section, we will connect the dots and map the `docker run` command
    we set in the previous tutorial to a `docker-compose.yml` file.
  prefs: []
  type: TYPE_NORMAL
- en: Setting RStudio with Docker Compose
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Recall that in the [previous tutorial](/running-rstudio-inside-a-container-e9db5e809ff8),
    we used the below `docker run` command to launch the RStudio server inside a container:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'In short, the above run command uses the following arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: Volume or `v` to mount local folders with the container file system
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Environment or `e` to set the RStudio server password as an environment variable
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Port or `p` to map between the local and container ports
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The below YAML file represents the mapping of the above `docker run` command:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'Where we set a single service named `rstudio` under the `services` argument
    and defined the corresponding run arguments:'
  prefs: []
  type: TYPE_NORMAL
- en: '`image` — defines the image name, in this case, using the RStudio Rocker image
    `rocker/rstudio`'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`ports` — sets the port mapping between the local machine and the container'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`volumes` — maps the folders mount, using the `type` argument to define the
    type of mount and the `source` and `target` arguments to define the local and
    container folder path mapping. More details on the volume arguments can be found
    [here](https://docs.docker.com/storage/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`environment` — defines environment variables, in this case, we set `PASSWORD`
    variable to define the RStudio server password'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Once the YAML file is set, we can use the `docker-compose` command on the CLI
    to launch the RStudio container:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Where the `up` argument is used to launch the container. You should expect
    the following output:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'After launching the container, you can access the RStudio server from your
    browser using the local host address with the port number, in this case — [http://localhost:8787](http://localhost:8787):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5a36f324527f067e61dabcf0f8cce827.png)'
  prefs: []
  type: TYPE_IMG
- en: RStudio Server inside a container (screenshot by the author)
  prefs: []
  type: TYPE_NORMAL
- en: '**Note:** Once launching the container with the `docker-compose up` command,
    it keeps the CLI attached to the terminal until stopping it. Alternatively, you
    can add the `d` argument to run it in a detach mode:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Likewise, the `docker-compose down` command stops the container run time.
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In this tutorial, we reviewed how to set up a Docker Compose framework to launch
    your RStudio container. This includes setting a `docker-compose.yml` file and
    using the `docker-compose` command to launch the container concisely.
  prefs: []
  type: TYPE_NORMAL
- en: 'The motivations for wrapping your `docker run` command with Docker Compose
    are:'
  prefs: []
  type: TYPE_NORMAL
- en: Efficient and concise — required a one-time setting and, afterward, the launch
    time is simple with the`docker-compose` command (as opposed to a long `docker
    run` command)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Higher complexity — it simplifies the process of launching a single or multiple
    containers seamlessly. For example, one good use case would be running the RStudio
    and Postgres database together. In this case, you can set the Docker Compose process
    to launch the two containers to work side-by-side
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Resources
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Running RStudio Inside a Container — [https://towardsdatascience.com/running-rstudio-inside-a-container-e9db5e809ff8](/running-rstudio-inside-a-container-e9db5e809ff8)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker Compose — [https://docs.docker.com/compose/](https://docs.docker.com/compose/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Rocker Project — [https://rocker-project.org/](https://rocker-project.org/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Docker Hub — [https://hub.docker.com/](https://hub.docker.com/)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: RStudio Docker Compose template — [https://github.com/RamiKrispin/rstudio-docker-template](https://github.com/RamiKrispin/rstudio-docker-template)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
