["```py\n+----------+-------+---------+-----------+-----------+\n| start_ip | end_ip| country |   city    |   owner   |\n+----------+-------+---------+-----------+-----------+\n| 1        | 2     | ca      | Toronto   | Telus     |\n| 3        | 4     | ca      | Quebec    | Rogers    |\n| 5        | 8     | ca      | Vancouver | Bell      |\n| 10       | 14    | ca      | Montreal  | Telus     |\n| 19       | 22    | ca      | Ottawa    | Rogers    |\n| 23       | 29    | ca      | Calgary   | Videotron |\n+----------+-------+---------+-----------+-----------+\n```", "```py\nSELECT\n    country,\n    SUM(end_ip - start_ip + 1) as num_ip\nFROM\n    geo_table\nGROUP BY\n    country\n```", "```py\n+---------+--------+\n| country | num_ip |\n+---------+--------+\n| ca      | 24     |\n+---------+--------+\n```", "```py\n+----------+-------+---------+\n| start_ip | end_ip| country |\n+----------+-------+---------+\n| 1        | 8     | ca      |\n| 10       | 14    | ca      |\n| 19       | 29    | ca      |\n+----------+-------+---------+\n```", "```py\nSELECT\n    *,\n    LAG(end_ip) OVER (\n      PARTITION BY country \n      ORDER BY start_ip) AS prev_end_ip,\n    LEAD(start_ip) OVER (\n      PARTITION BY country \n      ORDER BY start_ip) AS next_start_ip\nFROM\n    geo_table\n```", "```py\n+----------+-------+---------+-------------+---------------+\n| start_ip | end_ip| country | prev_end_ip | next_start_ip |\n+----------+-------+---------+-------------+---------------+\n| 1        | 2     | ca      | null        | 3             |\n| 3        | 4     | ca      | 2           | 5             |\n| 5        | 8     | ca      | 4           | 10            |\n| 10       | 14    | ca      | 8           | 19            |\n| 19       | 22    | ca      | 14          | 23            |\n| 23       | 29    | ca      | 22          | null          |\n+----------+-------+---------+-------------+---------------+\n```", "```py\nSELECT\n    *,\n    CASE\n        WHEN (end_ip = next_start_ip - 1) \n           AND (start_ip = prev_end_ip + 1) THEN 'remove'\n        WHEN (end_ip = next_start_ip - 1) THEN 'start'\n        WHEN (start_ip = prev_end_ip + 1) THEN 'end'\n        ELSE 'keep'\n    END AS state\nFROM\n    view_1\n```", "```py\n+----------+-------+---------+-------------+---------------+-------+\n| start_ip | end_ip| country | prev_end_ip | next_start_ip | state |\n+----------+-------+---------+-------------+---------------+-------+\n| 1        | 2     | ca      | null        | 3             | start |\n| 3        | 4     | ca      | 2           | 5             | remove|\n| 5        | 8     | ca      | 4           | 10            | end   |\n| 10       | 14    | ca      | 8           | 19            | keep  |\n| 19       | 22    | ca      | 14          | 23            | start |\n| 23       | 29    | ca      | 22          | null          | end   |\n+----------+-------+---------+-------------+---------------+-------+\n```", "```py\nSELECT\n    start_ip,\n    end_ip,\n    country,\n    state\nFROM\n    view_2\nWHERE\n    state IN ('start', 'end', 'keep')\n```", "```py\n+----------+-------+---------+-------+\n| start_ip | end_ip| country | state |\n+----------+-------+---------+-------+\n| 1        | 2     | ca      | start |\n| 5        | 8     | ca      | end   |\n| 10       | 14    | ca      | keep  |\n| 19       | 22    | ca      | start |\n| 23       | 29    | ca      | end   |\n+----------+-------+---------+-------+\n```", "```py\nSELECT\n    *,\n    LEAD(end_ip) OVER (\n      PARTITION BY country \n      ORDER BY start_ip) AS next_end_ip\nFROM\n    view_3\n```", "```py\n+----------+-------+---------+-------+-------------+\n| start_ip | end_ip| country | state | next_end_ip |\n+----------+-------+---------+-------+-------------+\n| 1        | 2     | ca      | start | 8           |\n| 5        | 8     | ca      | end   | 14          |\n| 10       | 14    | ca      | keep  | 22          |\n| 19       | 22    | ca      | start | 29          |\n| 23       | 29    | ca      | end   | null        |\n+----------+-------+---------+-------+-------------+\n```", "```py\nSELECT\n    start_ip AS final_start,\n    CASE\n        WHEN (state = 'start') THEN next_end_ip\n        WHEN (state = 'keep') THEN end_ip\n        ELSE NULL\n    END AS final_end_ip\nFROM\n    view_4\nWHERE\n    state IN ('start', 'keep')\n```", "```py\n+----------+-------+---------+-------+-------------+------------+----------+\n| start_ip | end_ip| country | state | next_end_ip | final_start| final_end|\n+----------+-------+---------+-------+-------------+------------+----------+\n| 1        | 2     | ca      | start | 8           | 1          | 8        |\n| 10       | 14    | ca      | keep  | 22          | 10         | 14       |\n| 19       | 22    | ca      | start | 29          | 19         | 29       |\n+----------+-------+---------+-------+-------------+------------+----------+\n```", "```py\nSELECT\n    country,\n    final_start,\n    IF(state = 'start', next_end_ip, final_end) AS final_end\nFROM (\n    SELECT\n        country,\n        start_ip AS final_start,\n        end_ip AS final_end,\n        LEAD(end_ip) OVER (\n          PARTITION BY country \n          ORDER BY start_ip) AS next_end_ip\n    FROM (\n        SELECT\n            start_ip,\n            end_ip,\n            country,\n            CASE\n                WHEN (end_ip = next_start_ip - 1) \n                  AND (start_ip = prev_end_ip + 1) THEN 'remove'\n                WHEN (end_ip = next_start_ip - 1) THEN 'start'\n                WHEN (start_ip = prev_end_ip + 1) THEN 'end'\n                ELSE 'keep'\n            END AS state\n        FROM (\n            SELECT\n                *,\n                LAG(end_ip) OVER (\n                    PARTITION BY country \n                    ORDER BY start_ip) AS prev_end_ip,\n                LEAD(start_ip) OVER (\n                    PARTITION BY country \n                    ORDER BY start_ip) AS next_start_ip\n            FROM \n                geo_table\n        )\n        WHERE \n            state IN ('start', 'end', 'keep')\n    )\n)\nWHERE \n    state IN ('start', 'keep')\n```"]