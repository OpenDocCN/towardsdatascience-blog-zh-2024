["```py\nimport numpy as np\n\nsimple_array = np.array([1, 2, 3])\nmixed_array = np.array([1, 2, 3, \"a\", \"b\", \"c\", 4.5])\nprint (\"Simple array: \", simple_array)\nprint (\"First element of simple_array: \", simple_array[0])\nprint (\"Shape of simple_array: \", simple_array.shape)\nprint (\"Size of simple_array; \", simple_array.size)\nprint (\"\\n\")\nprint (\"Mixed array: \", mixed_array)\nprint (\"Last element of mixed_array: \", mixed_array[-1])\nprint (\"Length of mixed_array: \", len(mixed_array))\n```", "```py\na = np.array([[0, 1],[2,3]])\nb = np.array([[3,4],[5,6]])\nprint (\"Dot Product of a and b: \\n\", np.dot(a,b))\nprint (\"Matrix multiplication of a and b \\n\",a*b)\n```", "```py\nprint (“Addition of a and b:\\n”, np.add(a, b))\nprint (\"Also addition of a and b:\\n\", a+b)\nprint (\"Transpose of a:\\n\", a.T)\nprint (\"Determinant of a:\\n\", np.linalg.det(a))\nprint (\"Inverse of a:\\n\", np.linalg.inv(a))\n```", "```py\ncountries_lived = [“Nepal”,”India”,”Germany”,”Netherlands”]\ncapitals = [“Kathmandu”,”New Delhi”,”Berlin”,”Amsterdam”]\n```", "```py\narray1 = np.array([countries_lived, capitals])\nprint (\"array1:\\n\", array1)\nprint (\"Shape of array1:\\n\", array1.shape)\nprint (\"Size of array1:\\n\", array1.size)\n\narray2 = np.array([countries_lived, capitals]).T\nprint (\"array2:\\n\", array2)\nprint (\"Shape of array2:\\n\", array2.shape)\nprint (\"Size of array2:\\n\", array2.size)\n```", "```py\narray2 = np.append(array2, [[“France”,”Paris”]], axis = 0)\nprint (\"array2 after appening new row: \\n\", array2)\n\nimport pandas as pd\n\ndf = pd.DataFrame(array2,\n                 columns = [\"Country\", \"Capital\"])\n\ndf\n```", "```py\nPublic countries(1 to 4) as String\nPublic capitals(4) as String\nPublic countries_visited() as String\n```", "```py\nDim countries(1 to 4) as String\nDim capitals(4) as String\n```", "```py\nOption Base 1\n\nSub array_1d()\n\ncountries(1) = \"Nepal\"\ncountries(2) = \"India\"\ncountries(3) = \"Germany\"\ncountries(4) = \"Netherlands\"\n\nDim i As Integer\nRange(\"A1\").Value = \"Country\"\n\nFor i = 1 To 4\n    Range(\"A\" & i + 1).Value = countries(i)\nNext i\n\nEnd Sub\n```", "```py\nSub array_2d()\n\nDim country_capital(4, 2) As String\n\nFor i = 1 To 4\n    country_capital(i, 1) = countries(i)\nNext i\n\ncountry_capital(1, 2) = \"Kathmandu\"\ncountry_capital(2, 2) = \"New Delhi\"\ncountry_capital(3, 2) = \"Berlin\"\ncountry_capital(4, 2) = \"Amsterdam\"\n\nRange(\"B1\").Value = \"Capital\"\n\nFor i = 1 To 4\n    Range(\"A\" & i + 1).Value = country_capital(i, 1)\n    Range(\"B\" & i + 1).Value = country_capital(i, 2)\n\nNext i\n\nEnd Sub\n```", "```py\nOption Base 1\n\nPublic countries_visited() As String\nPublic population() As Long\n\nSub dynamic_array()\n\nDim wb As Workbook\nDim ws2 As Worksheet\nSet wb = ThisWorkbook\nSet ws2 = wb.Worksheets(\"Sheet2\")\n\nReDim countries_visisted(4)\nReDim population(4)\n\ncountries_visited(1) = \"France\"\npopulation(1) = 68\n\ncountries_visited(2) = \"Spain\"\npopulation(2) = 48\n\ncountries_visited(3) = \"Iran\"\npopulation(3) = 88\n\ncountries_visited(4) = \"Indonesia\"\npopulation(4) = 274\n\nEnd Sub \n```", "```py\nReDim Preserve countries_visited(1 to 5)\nReDim Preserve population(1 to 5)\n```", "```py\nOption Base 1\n\nPublic countries_visited() As String\nPublic population() As Long\n\nSub dynamic_array()\n\nDim wb As Workbook\nDim ws2 As Worksheet\nSet wb = ThisWorkbook\nSet ws2 = wb.Worksheets(\"Sheet2\")\n\nReDim countries_visisted(4)\nReDim population(4)\n\ncountries_visited(1) = \"France\"\npopulation(1) = 68\n\ncountries_visited(2) = \"Spain\"\npopulation(2) = 48\n\ncountries_visited(3) = \"Iran\"\npopulation(3) = 88\n\ncountries_visited(4) = \"Indonesia\"\npopulation(4) = 274\n\nws2.Range(\"A1\").Value = \"Countries visited\"\nws2.Range(\"B1\").Value = \"Population (million)\"\n\nReDim Preserve countries_visited(5)\nReDim Preserve population(5)\n\ncountries_visited(5) = \"Portugal\"\npopulation(5) = 10\n\nDim i As Integer\nFor i = 2 To 6\n    Range(\"A\" & i).Value = countries_visited(i - 1)\n    Range(\"B\" & i).Value = population(i - 1)\n\nNext i\n\nEnd Sub\n```", "```py\nOption Base 0\n\nSub variant_test()\n\nDim test() As Variant\nReDim test(3)\n\ntest = Array(\"Germany population in million: \", 83, Date)\n\nDim i As Integer\nFor i = 0 To 2 \n     Debug.Print \"Element \" & i & \" of test array is: \" & test(i) & \" of type \" & TypeName(test(i))\nNext i\n\nEnd Sub\n```"]