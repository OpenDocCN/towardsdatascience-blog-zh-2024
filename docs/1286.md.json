["```py\ndef timer(name:str) -> Callable:\n    def decorator(func:Callable) -> Callable:\n        @wraps(func)\n        def decorator_implementation(*args, **kwargs):\n            try:\n                print(f\"TIMER:   {name} start\")\n                strt = time.perf_counter()\n                return func(*args, **kwargs)\n            finally:\n                print(f\"TIMER:   {name} finished in {time.perf_counter() - strt}\")\n        return decorator_implementation\n    return decorator\n```", "```py\n@timer(name=\"test\")\ndefâ€¦\n```"]