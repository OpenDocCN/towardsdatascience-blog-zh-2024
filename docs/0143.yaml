- en: Using RabbitMQ Streams in Go
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 在Go中使用RabbitMQ Streams
- en: 原文：[https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15](https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15](https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15)
- en: Learn how to use RabbitMQ Streams using both Core and Plugin in this tutorial
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 在本教程中，学习如何在Go中使用RabbitMQ Streams，既可以使用Core，也可以使用插件。
- en: '[](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Percy
    Bolmér](../Images/34949a468cbbb5c609807903775afddb.png)](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    [Percy Bolmér](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Percy
    Bolmér](../Images/34949a468cbbb5c609807903775afddb.png)](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    [Percy Bolmér](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    ·21 min read·Jan 15, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布在[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    ·21分钟阅读·2024年1月15日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/aeb857ebda89f9995f767e59f79fb5b5.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aeb857ebda89f9995f767e59f79fb5b5.png)'
- en: An image representing RabbitMQ Streams created by Dall-E
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 一张由Dall-E创建的表示RabbitMQ Streams的图片
- en: Recently I published an article about RabbitMQ and how to use it in Go to build
    a Event Driven Architecture.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 最近我发布了一篇关于RabbitMQ的文章，介绍如何在Go中使用它来构建事件驱动架构。
- en: All Images in this article is made by Percy Bolmér. Gopher by Takuya Ueda, Original
    Go Gopher by Renée French (CC BY 3.0)
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 本文中的所有图片由Percy Bolmér制作。Gopher由Takuya Ueda设计，原版Go Gopher由Renée French制作（CC BY
    3.0）
- en: That article covers the basics of RabbitMQ, this time, however, we will increase
    our knowledge and learn about **Streams**. This article expects that you have
    a basic understanding of RabbitMQ Queues; If you don’t I highly recommend my previous
    article.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这篇文章介绍了RabbitMQ的基础知识，但这次我们将扩展我们的知识，学习**Streams**。本文假设你已经对RabbitMQ队列有基本了解；如果没有，我强烈推荐阅读我之前的文章。
- en: '[](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
    [## Learn RabbitMQ for Event-Driven Architecture (EDA)'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
    [## 学习RabbitMQ以构建事件驱动架构（EDA）'
- en: A beginner-friendly tutorial on how RabbitMQ works and how to use RabbitMQ in
    Go using a Event Driven Architecture
  id: totrans-12
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 一篇面向初学者的教程，介绍RabbitMQ的工作原理以及如何在Go中使用RabbitMQ构建事件驱动架构
- en: programmingpercy.tech](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: programmingpercy.tech](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
- en: I have always relied on RabbitMQ and Kafka combined. RabbitMQ for most stuff
    and the times when I needed **replayability**, **time traveling**, or **events
    that persisted** thenI used Kafka.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 我一直依赖RabbitMQ和Kafka的结合。RabbitMQ用于大多数场景，而在需要**重放**、**时间旅行**或**持久化事件**时，我则使用Kafka。
- en: Time traveling is when you can replay events from a certain time in your system
  id: totrans-15
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 时间旅行是指你可以从系统中的某个时间点重放事件
- en: Using two brokers became more complex since I now needed to deploy Kafka and
    handle both brokers.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用两个代理变得更加复杂，因为现在我需要同时部署Kafka并处理两个代理。
