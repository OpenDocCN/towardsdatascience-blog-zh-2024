- en: Using RabbitMQ Streams in Go
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15](https://towardsdatascience.com/using-rabbitmq-streams-in-go-1ce132d75a47?source=collection_archive---------5-----------------------#2024-01-15)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learn how to use RabbitMQ Streams using both Core and Plugin in this tutorial
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Percy
    Bolmér](../Images/34949a468cbbb5c609807903775afddb.png)](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    [Percy Bolmér](https://programmingpercy.medium.com/?source=post_page---byline--1ce132d75a47--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1ce132d75a47--------------------------------)
    ·21 min read·Jan 15, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aeb857ebda89f9995f767e59f79fb5b5.png)'
  prefs: []
  type: TYPE_IMG
- en: An image representing RabbitMQ Streams created by Dall-E
  prefs: []
  type: TYPE_NORMAL
- en: Recently I published an article about RabbitMQ and how to use it in Go to build
    a Event Driven Architecture.
  prefs: []
  type: TYPE_NORMAL
- en: All Images in this article is made by Percy Bolmér. Gopher by Takuya Ueda, Original
    Go Gopher by Renée French (CC BY 3.0)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: That article covers the basics of RabbitMQ, this time, however, we will increase
    our knowledge and learn about **Streams**. This article expects that you have
    a basic understanding of RabbitMQ Queues; If you don’t I highly recommend my previous
    article.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
    [## Learn RabbitMQ for Event-Driven Architecture (EDA)'
  prefs: []
  type: TYPE_NORMAL
- en: A beginner-friendly tutorial on how RabbitMQ works and how to use RabbitMQ in
    Go using a Event Driven Architecture
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: programmingpercy.tech](https://programmingpercy.tech/blog/event-driven-architecture-using-rabbitmq/?source=post_page-----1ce132d75a47--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: I have always relied on RabbitMQ and Kafka combined. RabbitMQ for most stuff
    and the times when I needed **replayability**, **time traveling**, or **events
    that persisted** thenI used Kafka.
  prefs: []
  type: TYPE_NORMAL
- en: Time traveling is when you can replay events from a certain time in your system
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using two brokers became more complex since I now needed to deploy Kafka and
    handle both brokers.
  prefs: []
  type: TYPE_NORMAL
