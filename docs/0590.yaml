- en: Making Causal Discovery work in real-world business settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/making-causal-discovery-work-in-real-world-business-settings-80e80c5f66b8?source=collection_archive---------1-----------------------#2024-03-04](https://towardsdatascience.com/making-causal-discovery-work-in-real-world-business-settings-80e80c5f66b8?source=collection_archive---------1-----------------------#2024-03-04)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Causal AI, exploring the integration of causal reasoning into machine learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@raz1470?source=post_page---byline--80e80c5f66b8--------------------------------)[![Ryan
    O''Sullivan](../Images/7cd161d38d67d2c0b7da2d8f3e7d33fe.png)](https://medium.com/@raz1470?source=post_page---byline--80e80c5f66b8--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--80e80c5f66b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--80e80c5f66b8--------------------------------)
    [Ryan O''Sullivan](https://medium.com/@raz1470?source=post_page---byline--80e80c5f66b8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--80e80c5f66b8--------------------------------)
    ·10 min read·Mar 4, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f05a4aa4db90cf22a2acbe769fe06153.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [N.](https://unsplash.com/@ellladee?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: What is this series of articles about?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Welcome to my series on Causal AI, where we will explore the integration of
    causal reasoning into machine learning models. Expect to explore a number of practical
    applications across different business contexts.
  prefs: []
  type: TYPE_NORMAL
- en: In the first article we explored *using Causal Graphs to answer causal questions*.
    This time round we will delve into *making Causal Discovery work in real-world
    business settings*.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you missed the first article on Causal Graphs, check it out here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@raz1470/using-causal-graphs-to-answer-causal-questions-5fd1dd82fa90?source=post_page-----80e80c5f66b8--------------------------------)
    [## Using Causal Graphs to answer causal questions'
  prefs: []
  type: TYPE_NORMAL
- en: This article gives a practical introduction to the potential of causal graphs.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@raz1470/using-causal-graphs-to-answer-causal-questions-5fd1dd82fa90?source=post_page-----80e80c5f66b8--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: '**Introduction**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This article aims to help you navigate the world of causal discovery.
  prefs: []
  type: TYPE_NORMAL
- en: '**It is aimed at anyone who wants to understand more about:**'
  prefs: []
  type: TYPE_NORMAL
- en: What causal discovery is, including what assumptions it makes.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A deep dive into conditional independence tests, the building blocks of causal
    discovery.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An overview of the PC algorithm, a popular causal discovery algorithm.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A worked case study in Python illustrating how to apply the PC algorithm.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Guidance on making causal discovery work in real-world business settings.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'The full notebook can be found here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/raz1470/causal_ai/blob/main/notebooks/making%20causal%20discovery%20work%20in%20real%20world%20business%20settings.ipynb?source=post_page-----80e80c5f66b8--------------------------------)
    [## causal_ai/notebooks/making causal discovery work in real world business settings.ipynb
    at main ·…'
  prefs: []
  type: TYPE_NORMAL
- en: This project introduces Causal AI and how it can drive business value. - causal_ai/notebooks/making
    causal discovery…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/raz1470/causal_ai/blob/main/notebooks/making%20causal%20discovery%20work%20in%20real%20world%20business%20settings.ipynb?source=post_page-----80e80c5f66b8--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: What is Causal Discovery?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In my last article, I covered how causal graphs could be used to answer causal
    questions.
  prefs: []
  type: TYPE_NORMAL
- en: Often referred to as a DAG (directed acyclic graph), a causal graph contains
    nodes and edges — Edges link nodes that causally related.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two ways to determine a causal graph:'
  prefs: []
  type: TYPE_NORMAL
- en: Expert domain knowledge
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Causal discovery algorithms
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We don’t always have the expert domain knowledge to determine a causal graph.
    In this notebook we will explore how to take observational data and determine
    the causal graph using causal discovery algorithms.
  prefs: []
  type: TYPE_NORMAL
- en: Algorithms
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Causal discovery is a heavily researched area in academia with four groups
    of methods proposed:'
  prefs: []
  type: TYPE_NORMAL
- en: It isn’t clear from currently available research which method is best. One of
    the challenges in answering this question is the lack of realistic ground truth
    benchmark datasets.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3a67ca0bfe5871399e38649c64eb6e00.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: In this blog we are going to focus on understanding the PC algorithm, a constraint-based
    method that uses conditional independence tests.
  prefs: []
  type: TYPE_NORMAL
- en: Assumptions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we introduce the PC algorithm, let’s cover the key assumptions made
    by causal discovery algorithms:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Causal Markov Condition:** Each variable is conditionally independent of
    its non-descendants, given its direct causes. This tells us that if we know the
    causes of a variable, we don’t gain any additional power by knowing the variables
    that are not directly influenced by those causes. This fundamental assumption
    simplifies the modelling of causal relationships enabling us to make causal inferences.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Causal Faithfulness:** If statistical independence holds in the data, then
    there is no direct causal relationships between the corresponding variables. Testing
    this assumption is challenging and violations may indicate model misspecification
    or missing variables.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Causal Sufficiency:** Are the variables included sufficient to make causal
    claims about the variables of interest? In other words, we need all confounders
    of the variables included to be observed. Testing this assumption involves sensitivity
    analysis which assesses the impact of potentially unobserved confounders.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Acyclicity:** No cycles in the graph.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: In practice, while these assumptions are necessary for causal discovery, they
    are often treated as assumptions rather than directly tested.
  prefs: []
  type: TYPE_NORMAL
- en: Even with making these assumptions, we can end up with a Markov equivalence
    class. We have a Markov equivalence class when we have multiple causal graphs
    each as likely as each other.
  prefs: []
  type: TYPE_NORMAL
- en: Conditional Independence tests
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Conditional independence tests are the building blocks of causal discovery and
    are used by the PC algorithm (which we will cover shortly).
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start by understanding independence. Independence between two variables
    implies that knowing the value of one variable provides no information about the
    value of the other. In this case, it is fairly safe to assume that neither directly
    causes the other. However, if two variables aren’t independent, it would be wrong
    to blindly assume causation.
  prefs: []
  type: TYPE_NORMAL
- en: Conditional independence tests can be used to determine whether two variables
    are independent of each other given the presence of one or more other variables.
    If two variables are conditionally independent, we can then infer that they are
    not causally related.
  prefs: []
  type: TYPE_NORMAL
- en: The Fisher’s exact test can be used to determine if there is a significant association
    between two variables whilst controlling for the effects of one or more additional
    variables (use the additional variables to split the data into subsets, the test
    can then be applied to each subset of data). The null hypothesis assumes that
    there is no association between the two variables of interest. A p-value can then
    be calculated and if it is below 0.05 the null hypothesis will be rejected suggesting
    that there is significant association between the variables.
  prefs: []
  type: TYPE_NORMAL
- en: Identifying spurious correlations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We can use an example of a spurious correlation to illustrate how to use conditional
    independence tests.
  prefs: []
  type: TYPE_NORMAL
- en: Two variables have a spurious correlation when they have a common cause e.g.
    High temperatures increasing the number of ice cream sales and shark attacks.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/f544381e6bb7d26d0958df2b2aee2515.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8012d363828cd7ea22e2d474b5c29f9b.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: 'The following conditional independence tests can be used to determine the causal
    graph:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/a85b275df7ee00a835fef623cdb5687f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Although we don’t know the direction of the relationships, we can correctly
    infer that temperature is causally related to both ice cream sales and shark attacks.
  prefs: []
  type: TYPE_NORMAL
- en: PC algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The PC algorithm (named after its inventors Peter and Clark) is a constraint-based
    causal discovery algorithm that uses conditional independence tests.
  prefs: []
  type: TYPE_NORMAL
- en: 'It can be summarised into 2 main steps:'
  prefs: []
  type: TYPE_NORMAL
- en: It starts with a fully connected graph and then uses conditional independence
    tests to remove edges and identify the undirected causal graph (nodes linked but
    with no direction).
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: It then (partially) directs the edges using various orientation tricks.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'We can use the previous spurious correlation example to illustrate the first
    step:'
  prefs: []
  type: TYPE_NORMAL
- en: Start with a fully connected graph
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Test ID 1: Accept the null hypothesis and delete edge, no causal link between
    ice cream sales and shark attacks'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Test ID 2: Reject the null hypothesis and keep the edge, causal link between
    ice cream sales and temperature'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Test ID 3: Reject the null hypothesis and keep the edge, causal link between
    shark attacks and ice cream sales'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Evaluating results
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: One of the key challenges in causal discovery is evaluating the results. If
    we knew the causal graph, we wouldn’t need to apply a causal discovery algorithm!
    However, we can create synthetic datasets to evaluate how well causal discovery
    algorithms perform.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are several metrics we can use to evaluate causal discovery algorithms:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f5865fe263ed76a07bffd2b393348ee6.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: '*True positives: Identify causal link correctly*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*False positives: Identify causal link incorrectly*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*True negatives: Correctly identify no causal link*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*False negatives: Incorrectly identify no causal link*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Reversed edges: Identify causal link correctly but in the wrong direction*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We want a high number of True positives, but this should not be at the expense
    of a high number of False positives (as when we come to build an SCM, wrong causal
    links can be very damaging). Therefore GScore seems to capture this well whilst
    giving an interpretable ratio between 0 and 1.
  prefs: []
  type: TYPE_NORMAL
- en: Call Centre case study
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will revisit the call centre case study from my previous article. First of
    all, we determine the causal graph (to be used as ground truth) and then use our
    knowledge of the data-generating process to create some samples.
  prefs: []
  type: TYPE_NORMAL
- en: The ground truth causal graph and generated samples will enable us to evaluate
    the PC algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/7f87d73da2c5be5e5e94137445c52f12.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c1a355767929b4851297ba48e8f2fb1d.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Applying the PC algorithm
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The Python package gCastle has several causal discovery algorithms implemented,
    including the PC algorithm:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/huawei-noah/trustworthyAI/tree/master/gcastle?source=post_page-----80e80c5f66b8--------------------------------)
    [## trustworthyAI/gcastle at master · huawei-noah/trustworthyAI'
  prefs: []
  type: TYPE_NORMAL
- en: Trustworthy AI related projects. Contribute to huawei-noah/trustworthyAI development
    by creating an account on GitHub.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/huawei-noah/trustworthyAI/tree/master/gcastle?source=post_page-----80e80c5f66b8--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: When we feed the algorithm our samples we receive back the learned causal graph
    (in the form of an adjacency matrix).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/05a6f4f3f1d28011a50f0e7f11811d18.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: gCastle also has several evaluation metrics available, including gScore. The
    GScore of our learned graph is 0! Why has it done so poorly?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/cff9208e806a15803a1eb51b797ab5d9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: On closer inspection of the learned graph, we can see that it correctly identified
    the undirected graph and then struggled to orient the edges.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fab02cea93344a2bae808a12a80c12e1.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Evaluating the undirected graph
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To build on the learning from applying the PC algorithm, we can use gCastle
    to extract the undirected causal graph that was learned.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/c062b2429c96d525e3003542879584f0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: If we transform our ground truth graph into an undirected adjacency matrix,
    we can then use it to calculate the Gscore of the undirected graph.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: Using the learned undirected causal graph we get a GScore of 1.00.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d21aa0f78e089638117ec5e5ef87362a.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: We have accurately learned an undirected graph — could we use expert domain
    knowledge to direct the edges? The answer to this will vary across different use
    cases, but it is a reasonable strategy.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8f7cc6d5bee46dbbbec62b82a6aa8c2f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by author
  prefs: []
  type: TYPE_NORMAL
- en: Making Causal Discovery work in real-world business settings
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**We need to start seeing causal discovery as an essential EDA step in any
    causal inference project:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*However, we also need to be transparent about its limitations.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*Causal discovery is a tool that needs complementing with expert domain knowledge.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Be pragmatic with the assumptions:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Can we ever expect to observe all confounders? Probably not. However, with
    the correct domain knowledge and extensive data gathering, it is feasible that
    we could observe all the key confounders.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Pick an algorithm where we can apply constraints to incorporate expert domain
    knowledge — gCastle allows us to apply constraints to the PC algorithm:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*Initially work on identifying the undirected causal graph and then share this
    output with domain experts and use them to help orient the graph.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Be cautious when using proxy variables and consider enforcing constraints
    on relationships we strongly believe exist:**'
  prefs: []
  type: TYPE_NORMAL
- en: '*For example, if include Google trends data as a proxy for product demand,
    we may need to enforce constraints in terms of this driving sales.*'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Future work
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What if we have non-linear relationships? Can the PC algorithm handle this?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What happens if we have unobserved confounders? Can the FCI algorithm deal with
    this situation effectively?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: How do constraint-based, score-based, functional-based and gradient-based methods
    compare?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Follow me if you want to continue this journey into Causal AI — In the next
    article we will understand how Double Machine Learning can help de-bias treatment
    effects.
  prefs: []
  type: TYPE_NORMAL
