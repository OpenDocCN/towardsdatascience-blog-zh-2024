- en: How to Reduce Python Runtime for Demanding Tasks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-to-reduce-python-runtime-for-demanding-tasks-2857efad0cec?source=collection_archive---------2-----------------------#2024-11-17](https://towardsdatascience.com/how-to-reduce-python-runtime-for-demanding-tasks-2857efad0cec?source=collection_archive---------2-----------------------#2024-11-17)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Practical techniques to accelerate heavy workloads with GPU optimization in
    Python
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@jiayanyin.simba?source=post_page---byline--2857efad0cec--------------------------------)[![Jiayan
    Yin](../Images/1a67e16a388877478366a8c6b2736dda.png)](https://medium.com/@jiayanyin.simba?source=post_page---byline--2857efad0cec--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--2857efad0cec--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--2857efad0cec--------------------------------)
    [Jiayan Yin](https://medium.com/@jiayanyin.simba?source=post_page---byline--2857efad0cec--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--2857efad0cec--------------------------------)
    ·7 min read·Nov 17, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1ae3414a7bd043dd9961fd3c068ce1fc.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mathew Schwartz](https://unsplash.com/@cadop?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: One of the biggest challenges that data scientists face is the lengthy runtime
    of Python code when handling extremely large datasets or highly complex machine
    learning/deep learning models. Many methods have proven effective for improving
    code efficiency, such as dimensionality reduction, model optimization, and feature
    selection — these are algorithm-based solutions. Another option to address this
    challenge is to use a different programming language in certain cases. In today’s
    article, I won’t focus on algorithm-based methods for improving code efficiency.
    Instead, I’ll discuss practical techniques that are both convenient and easy to
    master.
  prefs: []
  type: TYPE_NORMAL
- en: To illustrate, I’ll use the Online Retail dataset, a publicly available dataset
    under a Creative Commons Attribution 4.0 International (CC BY 4.0) license. You
    can download the original dataset [Online Retail data](https://archive.ics.uci.edu/dataset/352/online+retail)
    from the UCI Machine Learning Repository. This dataset contains all the transactional
    data occurring between a specific period for a UK-based and registered non-store
    online retail. The target is to train a model to predict whether the customer
    would make a repurchase and the following python code is used to achieve the objective.
  prefs: []
  type: TYPE_NORMAL
