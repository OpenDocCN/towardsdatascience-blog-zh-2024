["```py\ncurl -X PUT \"http://localhost:9200/logs_index?pretty\"\n```", "```py\ncurl -X POST \"http://localhost:9200/logs_index/_doc?pretty\"\\\n     -H 'Content-Type: application/json'\\\n     -d'\n{\n  \"timestamp\": \"2024-07-21T12:00:00\",\n  \"log_level\": \"INFO\",\n  \"message\": \"This is a log message.\"\n}'\n```", "```py\ncurl -X GET \"http://localhost:9200/logs_index/_search?pretty\"\\\n     -H 'Content-Type: application/json'\\\n     -d'\n{\n  \"query\": {\n    \"match\": {\n      \"message\": \"This is a log message.\"\n    }\n  }\n}'\n```", "```py\ninput {\n  beats {\n    port => 5044\n  }\n}\n\nfilter {}\n\noutput {\n  elasticsearch {\n    hosts => [\"http://localhost:9200\"]\n    index => \"filebeat-logs-%{+YYYY.MM.dd}\"\n  }\n}\n```", "```py\nbin/logstash -f /etc/logstash/conf.d/test.conf --config.test_and_exit\n```", "```py\n#!/bin/bash\n\n# Check if the script is run as root\nif [ \"$EUID\" -ne 0 ]; then\n  echo \"Please run as root\"\n  exit 1\nfi\n\n# Download filebeat installation package\nSRC_URL=\"https://artifacts.elastic.co/downloads/beats/filebeat/filebeat-8.14.3-amd64.deb\"\nDEST_DIR=\"/tmp\"\nFILENAME=$(basename \"$SRC_URL\")\nwget -q -O \"$DEST_DIR/$FILENAME\" \"$SRC_URL\"\n\n# Install filebeat\nexport DEBIAN_FRONTEND=noninteractive\ndpkg -i /tmp/filebeat-8.14.3-amd64.deb\napt-get -f install -y\n\n# Configure filebeat\ncp /etc/filebeat/filebeat.yml /etc/filebeat/filebeat_backup.yml\ntee /etc/filebeat/filebeat.yml > /dev/null <<EOL\nfilebeat.inputs:\n- type: filestream\n  id: my-application-filestream-001\n  enabled: true\n  paths:\n    - /var/log/myapplication/*.txt\n  parsers:\n    - ndjson:\n      keys_under_root: true\n      overwrite_keys: true\n      add_error_key: true\n      expand_keys: true\n\nprocessors:\n- timestamp:\n    field: timestamp\n    layouts:\n      - \"2006-01-02T15:04:05Z\"\n      - \"2006-01-02T15:04:05.0Z\"\n      - \"2006-01-02T15:04:05.00Z\"\n      - \"2006-01-02T15:04:05.000Z\"\n      - \"2006-01-02T15:04:05.0000Z\"\n      - \"2006-01-02T15:04:05.00000Z\"\n      - \"2006-01-02T15:04:05.000000Z\"\n    test:\n      - \"2024-07-19T09:45:20.754Z\"\n      - \"2024-07-19T09:40:26.701Z\"\n\noutput.logstash:\n  hosts: [\"localhost:5044\"]\n\nlogging:\n  level: debug\n  to_files: true\n  files:\n    path: /var/log/filebeat\n    name: filebeat\n    keepfiles: 7\n    permissions: 0644\nEOL\n\n# Start filebeat service\nsystemctl start filebeat\n\n# Verify status\n# systemctl status filebeat\n```", "```py\nclass NDJSONFormatter(logging.Formatter):\n    def __init__(self, extra_fields=None):\n        super().__init__()\n        self.extra_fields = extra_fields if extra_fields is not None else {}\n\n    def format(self, record):\n        log_record = {\n            \"timestamp\": datetime.datetime.fromtimestamp(record.created).isoformat() + 'Z',\n            \"log.level\": record.levelname.lower(),\n            \"message\": record.getMessage(),\n            \"logger.name\": record.name,\n            \"path\": record.pathname,\n            \"lineno\": record.lineno,\n            \"function\": record.funcName,\n            \"pid\": record.process,\n        }\n        log_record = {**log_record, **self.extra_fields}\n        if record.exc_info:\n            log_record[\"exception\"] = self.formatException(record.exc_info)\n        return json.dumps(log_record)\n```"]