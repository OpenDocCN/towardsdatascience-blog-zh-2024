- en: How Lucky is a Bowl of Lucky Charms?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/how-lucky-is-a-bowl-of-lucky-charms-9040fe2cc560?source=collection_archive---------5-----------------------#2024-03-16](https://towardsdatascience.com/how-lucky-is-a-bowl-of-lucky-charms-9040fe2cc560?source=collection_archive---------5-----------------------#2024-03-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[](https://medium.com/@gjkernsysu?source=post_page---byline--9040fe2cc560--------------------------------)[![G.
    Jay Kerns](../Images/90cd81ec764a7a0823a449451c03be4c.png)](https://medium.com/@gjkernsysu?source=post_page---byline--9040fe2cc560--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--9040fe2cc560--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--9040fe2cc560--------------------------------)
    [G. Jay Kerns](https://medium.com/@gjkernsysu?source=post_page---byline--9040fe2cc560--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--9040fe2cc560--------------------------------)
    ·16 min read·Mar 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '`**tl;dr**` **version:** A team of students helped design and carry out an
    experiment to determine whether bowls of Lucky Charms are equally “lucky” over
    the course of a box of cereal. Turns out, not so much. We estimate a decrease
    of approximately 2.7 total charms per additional bowl on average. This corresponds
    to more than a 50% drop-off in charms from the first bowl to the last. The weight
    of cereal also appears to play a role, and for each 1g of cereal we estimate approximately
    0.5 more charms on average with bowl held constant. The interaction between bowl
    and weight is not statistically significant.'
  prefs: []
  type: TYPE_NORMAL
- en: See [this GitHub repository](https://github.com/gjkerns/luckyCharms) for the
    data, code, photos, *etc*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3caa39c0eb2d0d19288406fd963ca120.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 1: They’re Magically Delicious! (*Image by author*)'
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: In the early 2010’s there was a kerfuffle on the Internet over an investigation
    into whether or not “Double Stuf” Oreos were actually double-stuffed. (They’re
    not.) It was an engaging idea, and a substantial amount of material has been written
    about it since, [see here for starters](http://blog.recursiveprocess.com/2013/03/03/oreo-original-vs-double-vs-mega/).
    The discussion caused enough splash that some teachers were evidently repeating
    the experiment as an activity in their classrooms, and local students have reported
    performing similar experiments at their own schools more than 10 years later.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: One morning in the summer of 2023 I was eating a bowl of Lucky Charms for breakfast.
    The box was nearly empty and I sighed to myself, “Can’t wait until this box is
    done so I can open up a new one…” Now, if you’re anything like me, or millions
    of other people, then you love Lucky Charms, and you’ve loved them for as long
    as you can remember, [being around for 60 years](https://en.wikipedia.org/wiki/Lucky_Charms)
    and all. They truly are *Magically Delicious.* But sitting there on that summer
    morning of discontent with a spoon in my hand it struck me that the bowl of cereal
    I was eating just didn’t quite seem as *magical* as the earlier bowls had been.
    It was missing something. (The charms, of course.) Was it my imagination? Could
    this effect be real? And if so, could it be measured?
  prefs: []
  type: TYPE_NORMAL
- en: I happened to be teaching an undergraduate probability & statistics course at
    the time and the four students and I were determined to find out.
  prefs: []
  type: TYPE_NORMAL
- en: Experiment and data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: After some discussion, the team decided on the following materials and methods.
  prefs: []
  type: TYPE_NORMAL
- en: Materials
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Six (6) boxes of Family-size Lucky Charms (18.6oz, 527g)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Electronic kitchen scale
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Two plastic “bowls”, Container A and Container B, measuring 40.125g and 28.375g
    respectively
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Large bowl for discards, some trash bags, other ancillaries
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The Lucky Charms were purchased from our local retailer—Wal-Mart. There was
    nothing special about *n* = 6 boxes, it was simply the number of boxes a person
    could carry with two hands to the 6th floor of Cafaro Hall in a single trip. The
    kitchen scale was for measuring the weight of cereal, which the team thought might
    be important, and the scale would also help with data collection because we didn’t
    want to be overly preoccupied with sampling the exact same amount of cereal every
    time.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/992a73324ae33367314a8c8aaf466d78.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 2: Weighing in. (*Image by author*)'
  prefs: []
  type: TYPE_NORMAL
- en: Methods
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the purposes of this experiment, a “bowl” was taken to be approximately
    1 serving of cereal as recommended by the box (1 cup or 36g), even though it is
    ridiculous for anybody but a tiny magic leprechaun to get by on 36g of Lucky Charms
    for breakfast. The team was not especially picky about maintaining bowl size consistency,
    anything close to 1 cup was considered good enough. We were accounting for mass
    of cereal with the kitchen scale anyway and were shooting for a healthy range
    of observed weights.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e09a2e7c9bfe2af06ed95619969c03e0.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3\. Gavin Duwe (L.) and Brenna Brocker (R.) (*Image by author*)
  prefs: []
  type: TYPE_NORMAL
- en: 'Each bowl of cereal was poured directly from the box into the plastic container,
    weighed, and then emptied onto the table surface for counting. The toasted oats
    were separated from the marshmallows and discarded. Next the following eight (8)
    charm types were recognized and their number recorded: Pink Hearts, Rainbows,
    Purple Horseshoes, Blue Moons, Green Clovers, Unicorns, Tasty Red Balloons, and
    Orange Stars.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0d848871a144d7c6c924eab8cde57c11.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4\. This was counted as 3 Purple Horseshoes. (*Image by author*)
  prefs: []
  type: TYPE_NORMAL
- en: Occasionally there were little marshmallow bits in the bowl; not every charm
    was 100% intact. To deal with this, the team attempted to classify the bit into
    the type of charm (Green Clover, Blue Moon, *etc*.), and if the type could be
    determined, then that bit was counted as 1 in the respective category. If the
    bit was nondescript or too small for type identification then it was discarded.
  prefs: []
  type: TYPE_NORMAL
- en: The data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Data were collected during two separate class meetings. The students worked
    in pairs to pour and count the charms. I helped with the scale and recording a
    hard copy of weight values as they were called out for entry into the computer.
    The team got into a data collection groove and by the end of the experiment all
    4 students were pouring and counting charms independently.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7118fa7d073caf5464f72e929ea426cc.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5\. Data don’t get much rawer than this. (*Image by author*)
  prefs: []
  type: TYPE_NORMAL
- en: The plastic container + cereal were weighed together each round, and the weight
    of the container (measured at the start of the experiment) was subtracted from
    the observed total weight. The charms were entered into their respective columns
    and totaled.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/446a02c9dc9e996577ab7c73ac9bab22.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 6\. Pictured: Kate Coppola (*Image by author*)'
  prefs: []
  type: TYPE_NORMAL
- en: Measured variables
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '`Box`: the box number (1 through 6)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Bowl`: the sequential bowl for each box (ranges from 1 to 13)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Observation`: the observed order of bowls across boxes (1 to 69)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Totweight`: weight of the plastic container + cereal, in grams'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Weight`: of cereal in grams, after subtracting the weight of the container'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Hearts`, `Stars`, *etc*: how many of that charm in that bowl'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '`Totcharms`: sum total of the assorted charms'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/78b6c49ca2e52ae833f526c39251a47f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 7\. Pictured: Haziq Rabbani (*Image by author*)'
  prefs: []
  type: TYPE_NORMAL
- en: Here is some [R](https://www.r-project.org/) code to read in and show the top
    of the dataset (first 6 rows). The data and all code are shared in [this GitHub
    repository](https://github.com/gjkerns/luckyCharms).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: The first 6 rows of the Lucky Charms dataset.
  prefs: []
  type: TYPE_NORMAL
- en: Equipped with these data we can report things like the mean observed `Weight`
    was approximately 46.3g, the maximum number of a particular charm in any one bowl
    was 15 (Pink Hearts tied with Purple Horseshoes), and so forth. Indeed, we could
    spend all day computing statistics on this dataset to our Pink Heart’s content,
    but at the moment we are primarily focused on `Totcharms` and how it relates to
    `Bowl` and maybe `Weight` to a lesser extent.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a graph of `Totcharms` by `Bowl`, colored by `Box`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0214b1a790381f3a7c07491adbcc5c7b.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8\. A scatterplot of Totcharms versus Bowl colored by Box
  prefs: []
  type: TYPE_NORMAL
- en: 'Here we see a clear decreasing trend in `Totcharms` as `Bowl` increases, and
    the pattern is surprisingly linear. There may be a slight curvature. The colors
    are tricky to pick out, so let’s make a line plot and highlight a couple of series:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d18035a524c82585a6cc24fe6f757583.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9\. A line plot of selected series of Totcharms by Bowl colored by Box
  prefs: []
  type: TYPE_NORMAL
- en: There is a general trend downward for all series, but the path to get there
    varies for individual boxes. Notice how Box 3 starts high and stays high for a
    few bowls before dropping off smoothly to Bowl 10, crashing promptly afterwards.
    Look at how Box 1 starts the lowest of the crowd, increases after Bowl 5, peaks
    at Bowl 8, then nosedives down to Bowl 12\. The data would suggest that charms
    were more concentrated near the top of Box 3, but were more clustered in a pocket
    near the middle of Box 1\. Some boxes bounce around, other boxes drift in more
    of a straight line downward. Put it all together, though, and the overall trend
    is decreasing and linear. Note that every box made it at least to `Bow1 = 11`,
    but only two boxes had 12 bowls, and a single box (Box 4) lasted to `Bow1 = 13`.
  prefs: []
  type: TYPE_NORMAL
- en: 'Now let’s take a look at `Totcharms` versus `Weight`:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/71482a84c028a7500c2366ca298ded18.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Figure 10\. A scatterplot of # Charms versus Weight of cereal colored by Box.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This plot is noisy as we might have guessed. We have a nice range of weights,
    from a minimum under 30g to a maximum near 70g. Notice there was one bowl that
    clocked-in extraordinarily heavy. The outlier doesn’t have any obvious explanation,
    but if we dig a little deeper and plot `Weight` versus `Bowl` we may gain some
    insight:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/5cd80d6acac427a6d983a30020cea3a3.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 11\. Scatterplot of Weight versus Bowl colored by Box
  prefs: []
  type: TYPE_NORMAL
- en: We see that the extra-heavy bowl was the last `Bowl = 12` of `Box = 1`. The
    origin of that particular data point has unfortunately been lost to the sands
    of time, but bearing in mind that it was the first box the team had ever finished,
    near the end it may have been difficult to judge how much cereal was left, and
    perhaps all the remainder was dumped into that final bowl—I do the same thing
    at breakfast all the time when I get close to the end of a box of cereal. If that
    12th bowl of 70g had been split into (say) two bowls of 40g and 30g, respectively,
    then there would have been two boxes that made it all the way to 13 bowls instead
    of just one, and maybe the models below would have fit the data slightly better.
    Alas! We will never know. Such is the scientific enterprise.
  prefs: []
  type: TYPE_NORMAL
- en: 'While there isn’t much of a linear association between `Totcharms` and `Weight`
    by themselves, there is a hidden relationship between `Totcharms`, `Bowl`, and
    `Weight` which can best be explored with a 3D visualization:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/72bd48b01eb64c10635a008fe19528c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 13\. (Static) 3D scatterplot of Lucky Charms. Go try the interactive
    version!
  prefs: []
  type: TYPE_NORMAL
- en: 'Plots in 3D are super-cool, but the above static display doesn’t do the data
    justice. I’ve set up an [interactive version of the plot](https://gkerns.people.ysu.edu/lucky3D.html)
    at the following link which should work in most mobile/desktop browsers:'
  prefs: []
  type: TYPE_NORMAL
- en: '[## Interactive Lucky 3D Scatterplot'
  prefs: []
  type: TYPE_NORMAL
- en: An interactive 3D scatterplot of the Lucky Charms data
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gkerns.people.ysu.edu](https://gkerns.people.ysu.edu/lucky3D.html?source=post_page-----9040fe2cc560--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Please go *there*, spin the data around, zoom, pan—check it out. If you spin
    it around just right you will see that the dots scatter loosely about a flat plane
    in 3D-space. This is ***exactly*** the kind of relationship we are looking for
    in a multiple linear regression model (we’ll get to that in a minute).
  prefs: []
  type: TYPE_NORMAL
- en: Model fitting
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now let’s try to quantify the linear relationship between these variables. We
    will start with a simple linear regression model relating `Totcharms` to `Bowl`.
  prefs: []
  type: TYPE_NORMAL
- en: For Bowl
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is the model:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'We see that `Bowl` is strongly linearly associated with `Totcharms`. The slope
    on `Bowl` is approximately −2.7, in other words, for each additional bowl of Lucky
    Charms eaten we estimate the average `Totcharms` to decrease by 2.7 charms. Our
    coefficient of determination is *R²* = 0.5442, that is, approximately 54% of the
    variance in `Totcharms` is explained by the regression model with `Bowl` as a
    predictor. Next we really ought to include a proper residual analysis but we are
    going to skip it. Suffice it to say that the residual plots are relatively well-behaved.
    Let’s check out a fitted line plot with confidence bands for the regression line
    (the default):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/71887dc0a412405a54895c5e2c974818.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 14\. Fitted line plot with confidence bands for Totcharms versus Bowl
  prefs: []
  type: TYPE_NORMAL
- en: That’s a nice relationship with a clear decreasing trend.
  prefs: []
  type: TYPE_NORMAL
- en: For Weight
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'We will do the same thing for `Weight`, ignoring `Bowl` for the time being.
    Here we go:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE10]'
  prefs: []
  type: TYPE_PRE
- en: 'We do not find `Weight` to be a very useful predictor of `Totcharms` on its
    own, which jives with the scatterplot we saw earlier. We note for reference that
    the slope on `Weight` is estimated at 0.3502, that is, each additional 1g of Lucky
    Charms corresponds to an average `Totcharms` increase of 0.35 charms. This sounds
    reasonable: more cereal, more charms. The coefficient of determination is pretty
    bad: *R²* = 0.0347, in other words, approximately *NONE*% of the variance in `Totcharms`
    is explained by the regression model with `Weight` as a predictor. That’s okay;
    `Weight` was more of a supplementary device to help control for variability in
    the cereal amounts. The residual analysis here turns out to be not as bad as it
    could have been, which is comforting, and we should expect a few problems anyway
    given the extreme observations on the high/low ends of the weight scale. For the
    sake of completeness we include another fitted line plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE11]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/964e9fd810d443ea3d662c48921768b0.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 15\. Fitted line plot of Totcharms versus Weight colored by Box
  prefs: []
  type: TYPE_NORMAL
- en: 'I originally planned to use the `ggpubr` package to put these fitted-line plots
    together and try to save some space in the discussion, but the plots were cramped
    and not very informative. Anyway, this is what I was going to do:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE12]'
  prefs: []
  type: TYPE_PRE
- en: Multiple regression
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now for the fun part: we’ve explored the relationships `Totcharms ~ Bowl` and
    `Totcharms ~ Weight` individually, but what happens if we put them together? Let’s
    find out:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE13]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE14]'
  prefs: []
  type: TYPE_PRE
- en: Check it out! Now `Bowl` and `Weight` are **both** strongly linearly associated
    with `Totcharms`. The slope on `Bowl` is almost identical to what it was before,
    −2.7, but the estimated slope on `Weight` has now increased to nearly 0.5 charms
    for each additional 1g of cereal. Our (adjusted) Multiple *R²* has jumped to almost
    60%—this is remarkable considering the small sample size (*n* = 6), the general
    noise level of the dataset, and maybe some questionable design choices (every
    little marshmallow bit counts as 1, *etc*.). In retrospect, it is kind of amazing
    that the data didn’t turn out a lot worse. Real data collected by hand in the
    wild are seldom so good-natured.
  prefs: []
  type: TYPE_NORMAL
- en: Adding the regression plane
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The code for this visualization is a bit more involved than the other examples
    and has been omitted for brevity, but you can check it all out [in this GitHub
    Gist](https://gist.github.com/gjkerns/8636439f9e6afdea1ba9d301b2b38947). Let’s
    get on with the plot:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/cdceacfdabf6d6b338ff068f9e97bd66.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 16\. 3D scatterplot of Lucky Charms with added regression plane
  prefs: []
  type: TYPE_NORMAL
- en: 'Again: a super-cool plot but the static version doesn’t do the data justice.
    [Check out the interactive version](https://gkerns.people.ysu.edu/lucky3Dplane.html)
    instead:'
  prefs: []
  type: TYPE_NORMAL
- en: '[## Interactive Lucky 3D with Regression Plane'
  prefs: []
  type: TYPE_NORMAL
- en: Lucky Charms 3D scatterplot with regression plane added
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: gkerns.people.ysu.edu](https://gkerns.people.ysu.edu/lucky3Dplane.html?source=post_page-----9040fe2cc560--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Interactive 3D-plots are a lot of fun. I hope you enjoy playing with the graph
    as much as I have. As a final remark, in the `tl;dr` statement we claimed that
    the interaction between `Bowl` and `Weight` is not significant. The reader can
    confirm it isn’t with the following (output omitted):'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE15]'
  prefs: []
  type: TYPE_PRE
- en: Discussion and questions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I originally thought that either the whole thing would turn out to be a figment
    of my imagination or the effect would be too small to detect without LOTS AND
    LOTS of Lucky Charms. I was wrong on both counts. The effect is real, and it is
    big enough to detect with a handful of boxes, literally two hands full.
  prefs: []
  type: TYPE_NORMAL
- en: The Lucky Charms drop-off
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The full model leads us quickly to some startling conclusions. For example,
    how many charms do we estimate in the first bowl of a box of Lucky Charms? We
    saw earlier that the average `Weight` in this study was 46.3g. When `Box = 1`
    the model estimates the average `Totcharms` to be
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE16]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE17]'
  prefs: []
  type: TYPE_PRE
- en: That is, around 53 charms in the first bowl of cereal—Mmm, mouth’s watering
    already. What about the last bowl? Okay, not every box made it to `Bowl 13`, but
    they all made it to `Bowl = 11`. How many charms?
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE18]'
  prefs: []
  type: TYPE_PRE
- en: '[PRE19]'
  prefs: []
  type: TYPE_PRE
- en: '**WOW.** 25.3 charms on average. This corresponds to a 52% reduction in charms
    from the first bowl to the eleventh. No, it was most definitely not my imagination.
    Forget multiple linear regression models and fancy 3D plots, a hungry toddler
    could detect this difference wearing a blindfold.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Next question: *Why* is there a drop-off? An analysis on physical grounds might
    go something like this: Consider a box of Lucky Charms to be a simple mechanical
    mixture of frosted toasted oats and marshmallows. Many external forces agitate
    the box over the course of its lifetime, such as jostling during transport, placement
    on the store shelf, and transit to the home, not to mention activity in and around
    the cupboard. This inevitably leads to a shifting of contents, with the slightly
    less dense marshmallows migrating toward the top of the box, and the denser toasty
    oats settling toward the bottom.'
  prefs: []
  type: TYPE_NORMAL
- en: 'This rationale is logical, anyway. But it leaves some related questions unanswered:'
  prefs: []
  type: TYPE_NORMAL
- en: Does the same pattern hold true for the individual charm types? (A quick glance
    suggests “No”.)
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Is the association truly linear, or would a more complicated model better describe
    the relationship?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What other important factors have we overlooked?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Are there strategies a person can use to decelerate the Lucky Charm drop-off?
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Can we cleverly shake the box (somehow) to better mix the marshmallows?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What about storage practices? Does it help if the box is stored upside-down?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Or flat on its side?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: and so forth.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: These open questions will have to wait for another day.
  prefs: []
  type: TYPE_NORMAL
- en: Next steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Since the original experiment in Summer 2023, I’ve rerun the experiment a couple
    more times with other groups of students. The first was in November 2023 with
    middle schoolers on [YSU MegaMath Day](https://megamath.ysu.edu/). I failed to
    give the MegaMath students very specific instructions and before I knew it all
    teams had removed the plastic bags of cereal from the box and were scooping from
    the middle of the bag spread flat on the tabletop. I couldn’t blame them; it is
    easier to scoop cereal from the middle with the bag out in the open. Unfortunately,
    this approach completely destroys any natural density sort-order that may have
    have been present, the key underlying element we suspect is at play, which compromises
    the integrity of the experiment. Plus, I doubt anybody’s parents ever let them
    eat their Lucky Charms that way.
  prefs: []
  type: TYPE_NORMAL
- en: The second was in February 2024 with high school students at [YSU MathFest](https://mathfest.ysu.edu/)
    in a sequence of two workshops. This time I was ready for them. I put together
    and distributed a data collection sheet ([which you can find here](https://gkerns.people.ysu.edu/LuckyCharmsDataCollectionSheet.docx))
    with more detailed guidance. You can check out the extra datasets on GitHub [in
    the](https://github.com/gjkerns/luckyCharms/tree/master/extraData) `[extraData](https://github.com/gjkerns/luckyCharms/tree/master/extraData)`
    [directory](https://github.com/gjkerns/luckyCharms/tree/master/extraData).
  prefs: []
  type: TYPE_NORMAL
- en: Moving forward, more data are needed to better estimate the Lucky Charm drop-off,
    and it would be interesting to test strategies for distributing the charms more
    uniformly throughout the box. If successful, the first bowl of the box might not
    be so magical, but on the other hand, maybe those final bowls won’t feel like
    such a chore waiting to open the next brand new box of Lucky Charms!
  prefs: []
  type: TYPE_NORMAL
- en: Acknowledgements
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'This experiment and these results would not have been possible without the
    infectious enthusiasm and tireless attention to detail of all four STAT 3743 students
    in Summer 2023: Brenna Brocker, Kate Coppola, Gavin Duwe, and Haziq Rabbani. I
    thank them for hiking down this statistical path with me. I would also like to
    thank the Department of Mathematics and Statistics at Youngstown State University
    for supporting both this research and additional data collection at YSU MegaMath
    Day and YSU MathFest.'
  prefs: []
  type: TYPE_NORMAL
- en: Disclaimers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In case it isn’t already abundantly clear, the author is a Lucky Charms fan,
    so too are the 4 students. The outcomes reported here were not and are not meant
    as a critique of General Mills, Inc., its subsidiaries, their factory production
    standards, nor the fine humans and robots gainfully employed there. We are all
    bound by the same Laws of Physics, and that includes boxes of breakfast cereal.
  prefs: []
  type: TYPE_NORMAL
- en: 'And full disclosure: I’ve taken a peek at the extra data collected in the reruns
    of the experiment. From what I can tell the effect is still present, but it isn’t
    as dramatic. I don’t know if this is because the effect is truly smaller than
    what we originally estimated, or if it is somehow related to the data collection
    protocol in the middle/high school setting. Only time — and more data — will tell.'
  prefs: []
  type: TYPE_NORMAL
- en: References and code examples
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In putting together this article I tried to keep a record of the places I went
    to find code to build the plots that I wanted and below is a mostly complete list,
    but maybe I missed some links. If you notice something I missed, then please alert
    me in the comments and I will fix it.
  prefs: []
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/74750478/correct-syntax-for-manually-scaling-the-width-of-lines-in-ggplot](https://stackoverflow.com/questions/74750478/correct-syntax-for-manually-scaling-the-width-of-lines-in-ggplot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://www.statology.org/ggplot-default-colors/](https://www.statology.org/ggplot-default-colors/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/37348719/ggplot2-single-regression-line-when-colour-is-coded-for-by-a-variable](https://stackoverflow.com/questions/37348719/ggplot2-single-regression-line-when-colour-is-coded-for-by-a-variable)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[http://blog.recursiveprocess.com/2013/03/03/oreo-original-vs-double-vs-mega/](http://blog.recursiveprocess.com/2013/03/03/oreo-original-vs-double-vs-mega/)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/38331198/add-regression-plane-to-3d-scatter-plot-in-plotly](https://stackoverflow.com/questions/38331198/add-regression-plane-to-3d-scatter-plot-in-plotly)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/38593153/plotly-regression-line-r](https://stackoverflow.com/questions/38593153/plotly-regression-line-r)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[https://stackoverflow.com/questions/15633714/adding-a-regression-line-on-a-ggplot](https://stackoverflow.com/questions/15633714/adding-a-regression-line-on-a-ggplot)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
