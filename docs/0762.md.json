["```py\n\"\"\"Description of the function, class or method etc.\n\nArgs:\n    varA (str): Description of varA\n    varB (bool): Description of varB\n\nReturns:\n    list: Description of returned list\n\nRaises:\n    ValueError: Description of raised error\n\"\"\"\n```", "```py\npip install cookiecutter\ncookiecutter https://github.com/drivendata/cookiecutter-data-science\n```", "```py\nmkdir docs\ncd docs\n\npip install sphinx\nsphinx-quickstart\n```", "```py\n#  sys.path.insert(0,  os.path.abspath('.')) \n```", "```py\nsys.path.insert(0,  os.path.abspath('../src'))\n\n\"\"\"\n# you can use the following syntax to specify relative locations:\n\n'.' # current path of conf.py\n'..' # parent path of conf.py\n'../..' # parent of the parent path of conf.py\n\"\"\"\n```", "```py\n#  add in the extension names to the empty list variable 'extensions'\nextensions = [\n      'sphinx.ext.autodoc', \n      'sphinx.ext.napoleon', \n      'autodocsumm', \n      'sphinx.ext.coverage'\n]\n\n# add in this line for the autosummary functionality\nauto_doc_default_options = {'autosummary': True}\n```", "```py\nhtml_theme = 'sphinx_rtd_theme' # read the docs theme. This variable is 'default' by default.\n```", "```py\nsphinx-apidoc -f -o output_dir module_dir/\n```", "```py\nmake html\n```", "```py\n.\\make.bat html\n```", "```py\nmake clean html\n```"]