["```py\nawk -F',' \\\n  'NR > 1 {count[$6]++} END \\\n  {for (value in count) print value, count[value]}' \\\n  datagenerator/adjusted_transactions.csv | sort\n\nCUSTOMER_SUPPORT_REFUND 8494\nINSUFFICIENT_FUNDS 1232\nMANUAL_ADJUSTMENT 162\nREVERSED_PAYMENT 62815\n```", "```py\nduckdb -c \"\n  with per_order_counts AS (\n       select\n         order_id, reason,\n         count(transaction_id) as num_reports\n       from 'datagenerator/adjusted_transactions.csv'\n       group by 1,2\n  )\n  select reason, avg(num_reports) AS avg_per_order_count\n  from per_order_counts group by 1 order by reason;\"\n┌─────────────────────────┬─────────────────────┐\n│         reason          │ avg_per_order_count │\n│         varchar         │       double        │\n├─────────────────────────┼─────────────────────┤\n│ CUSTOMER_SUPPORT_REFUND │  10.333333333333334 │\n│ INSUFFICIENT_FUNDS      │   2.871794871794872 │\n│ MANUAL_ADJUSTMENT       │                 1.2 │\n│ REVERSED_PAYMENT        │   50.57568438003221 │\n└─────────────────────────┴─────────────────────┘\n```", "```py\nATTACH 'host=localhost port=5432 dbname=flock user=swan password=mallard'\n  AS pg_db (TYPE postgres_scanner, READ_ONLY);\n\nATTACH 'host=localhost port=3306 database=flock user=swan password=mallard'\n  AS mysql_db (TYPE mysql_scanner, READ_ONLY);\n\nselect u.tier, \n       count(distinct o.id) as order_count\nfrom pg_db.users u join mysql_db.orders o \n     on u.id = o.created_by \nwhere o.id IN (\n     select order_id \n     from 'datagenerator/adjusted_transactions.csv'\n) \ngroup by 1 ;\n\n┌─────────┬─────────────┐\n│  tier   │ order_count │\n│ varchar │    int64    │\n├─────────┼─────────────┤\n│ plus    │         276 │\n│ normal  │         696 │\n│ club    │         150 │\n│ vip     │         148 │\n└─────────┴─────────────┘\n```"]