["```py\n# Python\nxx = self.n_xx[min_range]\n```", "```py\n// Rust\nfn select_indices(values: &DVector<f64>,\n                  indices: &DVector<usize>) -> DVector<f64> {\n    indices.map(|i| values[i])\n}\n```", "```py\n// Rust\nlet xx = select_indices(&self.xx, min_range);\n```", "```py\n// Rust\nrange = DVector::<usize>::from_iterator(window, 0..window);\n```", "```py\n# Python\nnp.arange(0, window)\n```", "```py\n# Python\nfor i in range(1, degree + 1):\n    xm[:, i] = np.power(self.n_xx[min_range], i)\n```", "```py\n// Rust\nfor i in 1..=degree {\n    for j in 0..window {\n        xm[(j, i)] = self.xx[min_range[j]].powi(i as i32);\n    }\n}\n```"]