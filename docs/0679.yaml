- en: Data Analysis with Named Lambda Functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/data-analysis-with-named-lambda-functions-86e095153058?source=collection_archive---------8-----------------------#2024-03-13](https://towardsdatascience.com/data-analysis-with-named-lambda-functions-86e095153058?source=collection_archive---------8-----------------------#2024-03-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: You shouldn’t use named anonymous functions in Python. Never. Ever?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page---byline--86e095153058--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--86e095153058--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--86e095153058--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--86e095153058--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--86e095153058--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--86e095153058--------------------------------)
    ·5 min read·Mar 13, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/13d012fd2225642ab623a1f3d4582fea.png)'
  prefs: []
  type: TYPE_IMG
- en: Lambda functions can be very useful in data science — and not only anonymous
    ones. Photo by [Daniel Monteiro](https://unsplash.com/@danielmonteirox?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Technically, you should *not* use named lambda functions, since this is like
    naming a function that is anonymous in nature:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/should-you-define-named-python-functions-using-lambda-fb5806c0898b?source=post_page-----86e095153058--------------------------------)
    [## Should You Define Named Python Functions Using lambda?'
  prefs: []
  type: TYPE_NORMAL
- en: Doing so is against PEP8, so why so many authors suggest this?
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/should-you-define-named-python-functions-using-lambda-fb5806c0898b?source=post_page-----86e095153058--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: In actual code, especially in production, I *never* do things like that — and
    you shouldn’t, either. Lambdas are reserved for specific situations — and these
    specific situations do *not* include naming anonymous functions.
  prefs: []
  type: TYPE_NORMAL
- en: 'This is what I wrote in the above-cited article:'
  prefs: []
  type: TYPE_NORMAL
- en: And I do hope I have convinced you. Even if both types of function definition
    seem equally fine to you — even then I would *not* use named `lambda` definitions.
    This is because using them, you do *not* gain anything, at the same time risking
    that others will disagree with you. And if even that does not convince you, remember
    that doing so you’re going against PEP8.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This is all true. But…
  prefs: []
  type: TYPE_NORMAL
- en: Is data analysis code an exception?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
