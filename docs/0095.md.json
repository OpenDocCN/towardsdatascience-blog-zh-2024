["```py\n👨‍👩‍👧 = U+1F468 U+200D U+1F469 U+200D U+1F467\n```", "```py\nimport base64\nfrom io import BytesIO\nfrom PIL import Image\n\n## decode and convert first row Apple image\nim_str = df.Apple[0].replace('data:image/png;base64,', '')\nim = Image.open(BytesIO(base64.b64decode(im_str)))\nim\n```", "```py\nimport clip\ntext_tokens = clip.tokenize(\"a dog\")\nprint(text_tokens)\n```", "```py\ntensor([[49406,   320,  1929, 49407,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0,     0,     0,     0,\n             0,     0,     0,     0,     0,     0,     0]], dtype=torch.int32)\n```", "```py\nclip.tokenize(\"🐶\")\n## [49406, 10631, 49407, 0, ...]\n```", "```py\nclip.tokenize(\"ðŁĲ¶\")\n## [49406, 127, 108, 40419, 72, 329, 126, 370, 49407, 0, ...]\n```", "```py\nclip.tokenize(\"🇨🇲\")\n## [49406, 8989, 366, 49407, 0, ...]\n```", "```py\n!pip install fiftyone\n\nfrom scipy.spatial.distance import cosine\nimport fiftyone.zoo as foz\n\nmodel = foz.load_zoo_model(\"clip-vit-base32-torch\")\n\ndef compare_emoji_to_texts(emoji, texts):\n    emoji_embedding = model.embed_prompt(emoji)\n    text_embeddings = model.embed_prompts(texts)\n\n    for text, text_embedding in zip(texts, text_embeddings):\n        print(f\"Dist b/w {emoji} and {text}: {cosine(emoji_embedding, text_embedding):.4f}\")\n```", "```py\ntexts=​​[\"birthday\", \"birthday present\", \"cake\", \"candle\", \"car\", \"date\", \"dog\", \"holiday\", \"man\"]\n\ncompare_emoji_to_texts(\"🎂\", texts)\n```", "```py\nDist b/w 🎂 and birthday: 0.1205\nDist b/w 🎂 and birthday present: 0.1385\nDist b/w 🎂 and cake: 0.1238\nDist b/w 🎂 and candle: 0.2030\nDist b/w 🎂 and car: 0.1610\nDist b/w 🎂 and date: 0.1921\nDist b/w 🎂 and dog: 0.1344\nDist b/w 🎂 and holiday: 0.1844\nDist b/w 🎂 and man: 0.0849\n```", "```py\nMethod        Min       Mean     Max\nA             16.96     29.04    37.49\nB             15.85     29.47    38.43\nC             18.94     33.25    44.60\nD             19.47     32.59    42.57\nE             18.95     31.83    43.35\n```", "```py\nQUERY_TEXT = \"\"\"\nYour task is to write a brief description of the emoji {emoji}, in the format 'A photo of a ...'.  For example, 'A photo of a dog'. Do not include the emoji name or unicode in your description. Do not include the skin tone of the emoji. Do not include the word yellow in your response.  You may include the word 'emoji' in your description, but it is not necessary. Your description should be a single phrase, of no more than 10 words.\n\"\"\"\n```", "```py\npip install fiftyone\n```", "```py\nfiftyone plugins download https://github.com/jacobmarks/emoji-search-plugin\nfiftyone plugins requirements @jacobmarks/emoji_search --install\n```", "```py\nfiftyone app launch\n```", "```py\npip install git+https://github.com/jacobmarks/emoji_search.git\n```", "```py\nemoji-search beautiful sunset\n```", "```py\n+-------+-----------------+---------+\n| Emoji |       Name       Unicode  |\n+-------+-----------------+---------+\n|  🌞   |   sun with face | U+1F31E |\n|  🌇   |      sunset     | U+1F307 |\n|  🌅   |      sunrise    | U+1F305 |\n|  🔆   |   bright button | U+1F506 |\n|  🌆   |cityscape at dusk| U+1F306 |\n+-------+-----------------+---------+\n```"]