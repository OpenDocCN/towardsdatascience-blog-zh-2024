- en: 'Dummy Classifier, Explained: A Visual Guide with Code Examples for Beginners'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/dummy-classifier-explained-a-visual-guide-with-code-examples-for-beginners-009ff95fc86e?source=collection_archive---------3-----------------------#2024-08-14](https://towardsdatascience.com/dummy-classifier-explained-a-visual-guide-with-code-examples-for-beginners-009ff95fc86e?source=collection_archive---------3-----------------------#2024-08-14)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: CLASSIFICATION ALGORITHM
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Setting the bar in machine learning with simple baseline models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--009ff95fc86e--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--009ff95fc86e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--009ff95fc86e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--009ff95fc86e--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--009ff95fc86e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--009ff95fc86e--------------------------------)
    ¬∑7 min read¬∑Aug 14, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7d5f5043f52cd1660f09ce3ca7c6cdca.png)'
  prefs: []
  type: TYPE_IMG
- en: '`‚õ≥Ô∏è More CLASSIFICATION ALGORITHM, explained: ‚ñ∂ [Dummy Classifier](/dummy-classifier-explained-a-visual-guide-with-code-examples-for-beginners-009ff95fc86e)
    ¬∑ [K Nearest Neighbor Classifier](/k-nearest-neighbor-classifier-explained-a-visual-guide-with-code-examples-for-beginners-a3d85cad00e1)
    ¬∑ [Bernoulli Naive Bayes](/bernoulli-naive-bayes-explained-a-visual-guide-with-code-examples-for-beginners-aec39771ddd6)
    ¬∑ [Gaussian Naive Bayes](/gaussian-naive-bayes-explained-a-visual-guide-with-code-examples-for-beginners-04949cef383c)
    ¬∑ [Decision Tree Classifier](/decision-tree-classifier-explained-a-visual-guide-with-code-examples-for-beginners-7c863f06a71e)
    ¬∑ [Logistic Regression](/logistic-regression-explained-a-visual-guide-with-code-examples-for-beginners-81baf5871505)
    ¬∑ [Support Vector Classifier](/support-vector-classifier-explained-a-visual-guide-with-mini-2d-dataset-62e831e7b9e9)
    ¬∑ [Multilayer Perceptron](/multilayer-perceptron-explained-a-visual-guide-with-mini-2d-dataset-0ae8100c5d1c)`'
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever wondered how data scientists measure the performance of their
    machine learning models? Enter the dummy classifier ‚Äî a simple yet powerful tool
    in the world of data science. Think of it as the baseline player in a game, setting
    the minimum standard that other, more sophisticated models need to beat.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0a0897b06ce54ce8e54d961956cd7d50.png)'
  prefs: []
  type: TYPE_IMG
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  prefs: []
  type: TYPE_NORMAL
- en: Definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A dummy classifier is a simple machine learning model that makes predictions
    using basic rules, without actually learning from the input data. It serves as
    a baseline for comparing the performance of more complex models. The dummy classifier
    helps us understand if our sophisticated models are actually learning useful patterns
    or just guessing.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/834c5b63a06e05517583e5ef01f746fd.png)'
  prefs: []
  type: TYPE_IMG
- en: Dummy Classifier is one of the basic key algorithms in machine learning.
  prefs: []
  type: TYPE_NORMAL
- en: üìä Dataset & Libraries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this article, we‚Äôll use this simple artificial golf dataset (inspired
    by [1]) as an example. This dataset predicts whether a person will play golf based
    on weather conditions. It includes features like outlook, temperature, humidity,
    and wind, with the target variable being whether to play golf or not.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e66ab987f34572e8d046e05b218444ab.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Columns: ‚ÄòOutlook‚Äô, ‚ÄòTemperature‚Äô, ‚ÄòHumidity‚Äô, ‚ÄòWind‚Äô and ‚ÄòPlay‚Äô (target feature)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Main Mechanism
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The dummy classifier operates on simple strategies to make predictions. These
    strategies don‚Äôt involve any actual learning from the data. Instead, they use
    basic rules like:'
  prefs: []
  type: TYPE_NORMAL
- en: Always predicting the most frequent class
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Randomly predicting a class based on the training set‚Äôs class distribution
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Always predicting a specific class
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/e1b4e2a1f75224a4bcd2ba1463a3f662.png)'
  prefs: []
  type: TYPE_IMG
- en: For our golf dataset, a dummy classifier might always predict ‚ÄúYes‚Äù for playing
    golf if that‚Äôs the most common outcome in the training data.
  prefs: []
  type: TYPE_NORMAL
- en: Training Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The ‚Äútraining‚Äù process for a dummy classifier is quite simple and doesn‚Äôt involve
    the usual learning algorithms. Here‚Äôs a general outline:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Select Strategy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Choose one of the following strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Stratified**: Makes random guesses based on the original class distribution.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Most Frequent**: Always picks the most common class.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Uniform**: Randomly picks any class.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/193f2e00ddd807b5bfa47b80495d4bf2.png)'
  prefs: []
  type: TYPE_IMG
- en: Depends on the strategy, Dummy Classifier makes different prediction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Collect Training Labels
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Collect the class labels from the training dataset to determine the strategy
    parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/958c4951d13c4f031f4c031406d4d28d.png)'
  prefs: []
  type: TYPE_IMG
- en: The algorithm is simply getting information of the ‚ÄúMost Frequent‚Äù class in
    the training dataset ‚Äî in this case ‚ÄúYes‚Äù.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Apply Strategy to Test Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the chosen strategy to **generate a list of predicted labels** for your
    test data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7fef1b9ca434ce80d241417b6b352ff5.png)'
  prefs: []
  type: TYPE_IMG
- en: If we choose the ‚Äúmost frequent‚Äù strategy and find that ‚ÄúYes‚Äù (play golf) appears
    more often in our training data, the dummy classifier will simply remember to
    always predict ‚ÄúYes‚Äù.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/1215f23c0f13b608c805f8ade38364ad.png)'
  prefs: []
  type: TYPE_IMG
- en: Dummy classifier gives 64% accuracy as the baseline for future models.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Key Parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While dummy classifiers are simple, they do have a few important parameters:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Strategy**: This determines how the classifier makes predictions. Common
    options include:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '- ‚Äòmost_frequent‚Äô: Always predicts the most common class in the training set.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- ‚Äòstratified‚Äô: Generates predictions based on the training set‚Äôs class distribution.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- ‚Äòuniform‚Äô: Generates predictions uniformly at random.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- ‚Äòconstant‚Äô: Always predicts a specified class.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Random State**: If using a strategy that involves randomness (like ‚Äòstratified‚Äô
    or ‚Äòuniform‚Äô), this parameter ensures reproducibility of results.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Constant**: When using the ‚Äòconstant‚Äô strategy, this parameter specifies
    which class to always predict.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/da1d5ccd4035c1ab005bddf2f648b443.png)'
  prefs: []
  type: TYPE_IMG
- en: For our golf dataset, we might choose the ‚Äòmost_frequent‚Äô strategy, which doesn‚Äôt
    require additional parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Pros and Cons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Like any tool in machine learning, dummy classifiers have their strengths and
    limitations.
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Simplicity**: Easy to understand and implement.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Baseline Performance**: Provides a minimum performance benchmark for other
    models.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Overfitting Check**: Helps identify when complex models are overfitting by
    comparing their performance to the dummy classifier.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Quick to Train and Predict**: Requires minimal computational resources.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cons:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Limited Predictive Power**: By design, it doesn‚Äôt learn from the data, so
    its predictions are often inaccurate.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**No Feature Importance**: It doesn‚Äôt provide insights into which features
    are most important for predictions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Not Suitable for Complex Problems**: In real-world scenarios with intricate
    patterns, dummy classifiers are too simplistic to be useful on their own.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Final Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Understanding dummy classifiers is crucial for any data scientist or machine
    learning enthusiast. They serve as a reality check, helping us ensure that our
    more complex models are actually learning useful patterns from the data. As you
    continue your journey in machine learning, always remember to compare your models
    against these simple baselines ‚Äî you might be surprised by what you learn!
  prefs: []
  type: TYPE_NORMAL
- en: üåü Dummy Classifier Code Summarized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Further Reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For a detailed explanation of the [DummyClassifier](https://scikit-learn.org/stable/modules/generated/sklearn.dummy.DummyClassifier.html)
    and its implementation in scikit-learn, readers can refer to the official documentation
    [2], which provides comprehensive information on its usage and parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Technical Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article uses Python 3.7 and scikit-learn 1.5\. While the concepts discussed
    are generally applicable, specific code implementations may vary slightly with
    different versions.
  prefs: []
  type: TYPE_NORMAL
- en: About the Illustrations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/408bdcc3b6471d42cad83e91e574d97e.png)'
  prefs: []
  type: TYPE_IMG
- en: For a concise visual summary of Dummy Classifier, check out [the companion Instagram
    pos](https://www.instagram.com/p/C-ssgsAyFSI/)t.
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[1] T. M. Mitchell, [Machine Learning](https://www.cs.cmu.edu/afs/cs.cmu.edu/user/mitchell/ftp/mlbook.html)
    (1997), McGraw-Hill Science/Engineering/Math, pp. 59'
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôéùôöùôö ùô¢ùô§ùôßùôö ùòæùô°ùôñùô®ùô®ùôûùôõùôûùôòùôñùô©ùôûùô§ùô£ ùòºùô°ùôúùô§ùôßùôûùô©ùôùùô¢ùô® ùôùùôöùôßùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----009ff95fc86e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Classification Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----009ff95fc86e--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôîùô§ùô™ ùô¢ùôûùôúùôùùô© ùôñùô°ùô®ùô§ ùô°ùôûùô†ùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----009ff95fc86e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Regression Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----009ff95fc86e--------------------------------)5
    stories![A cartoon doll with pigtails and a pink hat. This ‚Äúdummy‚Äù doll, with
    its basic design and heart-adorned shirt, visually represents the concept of a
    dummy regressor in machine. Just as this toy-like figure is a simplified, static
    representation of a person, a dummy regressor is a basic models serve as baselines
    for more sophisticated analyses.](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----009ff95fc86e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Ensemble Learning
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/ensemble-learning-673fc83cd7db?source=post_page-----009ff95fc86e--------------------------------)4
    stories![](../Images/1bd2995b5cb6dcc956ceadadc5ee3036.png)![](../Images/22a5d43568e70222eb89fd36789a9333.png)![](../Images/8ea1a2f29053080a5feffc709f5b8669.png)'
  prefs: []
  type: TYPE_NORMAL
