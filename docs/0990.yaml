- en: How to Read and Analyze GDAT Files Using Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何使用 Python 阅读和分析 GDAT 文件
- en: 原文：[https://towardsdatascience.com/how-to-read-and-analyze-gdat-files-using-python-5c8dece157d4?source=collection_archive---------10-----------------------#2024-04-18](https://towardsdatascience.com/how-to-read-and-analyze-gdat-files-using-python-5c8dece157d4?source=collection_archive---------10-----------------------#2024-04-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-read-and-analyze-gdat-files-using-python-5c8dece157d4?source=collection_archive---------10-----------------------#2024-04-18](https://towardsdatascience.com/how-to-read-and-analyze-gdat-files-using-python-5c8dece157d4?source=collection_archive---------10-----------------------#2024-04-18)
- en: A quick tutorial on how to work with these computer-modelled binary files.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 这是一份关于如何处理这些计算机建模的二进制文件的快速教程。
- en: '[](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)[![Madison
    Hunter](../Images/fa84176a13175e75944b49e110b92e14.png)](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)
    [Madison Hunter](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)[![Madison
    Hunter](../Images/fa84176a13175e75944b49e110b92e14.png)](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)
    [Madison Hunter](https://madison13.medium.com/?source=post_page---byline--5c8dece157d4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)
    ·9 min read·Apr 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5c8dece157d4--------------------------------)
    ·阅读时间 9 分钟·2024年4月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/58606c4133be520f96406ac6d15f979c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/58606c4133be520f96406ac6d15f979c.png)'
- en: Photo by [Werclive 👹](https://unsplash.com/@werclive?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Werclive 👹](https://unsplash.com/@werclive?utm_source=medium&utm_medium=referral)
    于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Data comes in all shapes and sizes.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据有各种形式和大小。
- en: While many of us spend most of our data education and careers working with data
    in relatively “friendly” formats, such as spreadsheets and CSV files, there may
    come a time when you’re confronted with data that isn’t so friendly. You might
    not even be able to visualize it straight out of the box.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们中的许多人在数据教育和职业生涯中大部分时间都在处理相对“友好”的数据格式，如电子表格和 CSV 文件，但总有一天你可能会遇到一些不太友好的数据。你甚至可能无法直接从这些数据中进行可视化。
- en: This happened to me recently, when a computer model I was running was outputting
    data in a gridded binary format. The tricky thing about binary files is figuring
    out how to read them to access and analyze their contained data. After scouring
    the edges of the internet for a solution, I cobbled together a simple Python function
    that allows you to read gridded binary data so that it can later be analyzed using
    your favorite Python libraries, such as matplotlib, or NumPy.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 这最近发生在我身上，当时我运行的一个计算机模型输出了一个网格化的二进制格式数据。二进制文件的难点在于弄清楚如何读取它们，以便访问和分析其中的数据。在浏览互联网寻找解决方案后，我拼凑出了一个简单的
    Python 函数，允许你读取网格化的二进制数据，然后可以使用你喜欢的 Python 库（如 matplotlib 或 NumPy）对其进行分析。
- en: 'This niche solution will allow you to read gridded binary data files with GDAT
    file endings produced from computer models, particularly those modeling natural
    processes, such as environmental or meteorological phenomena. As such, the code
    below makes these assumptions:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这个专业解决方案将帮助你读取由计算机模型生成的、具有 GDAT 文件扩展名的网格化二进制数据文件，特别是那些建模自然过程的文件，如环境或气象现象。因此，下面的代码假设以下几点：
- en: Your GDAT file follows [GrADS](http://cola.gmu.edu/grads/) conventions (though
    this will likely work for various other binary files).
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 GDAT 文件遵循 [GrADS](http://cola.gmu.edu/grads/) 规范（尽管这也可能适用于其他各种二进制文件）。
- en: Your GDAT file represents a gridded study area over a specified study period.
  id: totrans-13
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 你的 GDAT 文件表示在指定研究期间内一个网格化的研究区域。
- en: In the GDAT file, there is a grid of data values for each day in the specified
    study period.
  id: totrans-14
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在 GDAT 文件中，每一天的数据值都组成一个网格，覆盖指定的研究期间。
- en: Each cell in the grid of data values contains a tuple of values.
  id: totrans-15
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每个数据值网格中的单元格包含一个值的元组。
- en: The grid of data values has a set number of rows and columns that can be used
    to index cells.
  id: totrans-16
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据值的网格有固定的行列数，可用于索引单元格。
- en: '![](../Images/1d2bd1f4334c609319a16f93f7d4f316.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1d2bd1f4334c609319a16f93f7d4f316.png)'
- en: Visual representation of the gridded binary data, with each grid of values representing
    a study area organized into days (for each day of the study period). The cells
    in each grid can be indexed using row and column indices. Figure by the author
    using [Canva](https://www.canva.com/).
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 数据的网格化二进制表示，每个值的网格表示一个按天组织的研究区域（对应研究期内的每一天）。每个网格中的单元格可以通过行列索引来访问。图示由作者使用 [Canva](https://www.canva.com/)
    创建。
- en: Reading the binary GDAT file
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 读取二进制 GDAT 文件
- en: '[PRE0]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The above code reads a binary GDAT file and structures its data to resemble
    the grid of your study area for easier interpretation and analysis.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码读取一个二进制 GDAT 文件，并将其数据结构化为类似于研究区域网格的形式，便于后续的解释和分析。
- en: '**import struct**: [struct](https://docs.python.org/3/library/struct.html)
    is a Python module that allows you to work with binary data. This module contains
    functions that allow you to convert binary data into Python objects and vice versa.'
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**import struct**：[struct](https://docs.python.org/3/library/struct.html) 是一个
    Python 模块，允许你处理二进制数据。该模块包含允许你将二进制数据转换为 Python 对象以及反向转换的函数。'
- en: '**def read_gdat_file(file_path, format_string, number_rows, number_columns,
    number_days):** This line begins the function that will allow us to read a binary
    file. For it to work, we will need to pass in arguments that detail the path to
    the correct GDAT file, the format type of the GDAT file, the number of rows and
    columns representing the study area, and finally the number of days the GDAT data
    covers. Knowing the number of days represented in the GDAT file allows the function
    to correctly partition the binary data into the rows and columns necessary to
    represent the study area for each day. This facilitates accurate analysis of the
    data later on. You should be able to find the number of days, as well as the number
    of rows and columns needed to represent the study area within whatever computer
    model parameters you’re using to generate the GDAT data.'
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**def read_gdat_file(file_path, format_string, number_rows, number_columns,
    number_days):** 这一行定义了一个函数，用于读取二进制文件。为了使其正常工作，我们需要传入一些参数，详细描述正确 GDAT 文件的路径、GDAT
    文件的格式类型、表示研究区域的行和列的数量，以及 GDAT 数据所覆盖的天数。知道 GDAT 文件中表示的天数，能够帮助该函数将二进制数据正确地划分为表示每一天研究区域所需的行和列，这有助于之后的数据分析。你应该能够在用于生成
    GDAT 数据的计算机模型参数中找到天数、以及表示研究区域所需的行列数。'
- en: '**data = []**: This line initializes an empty Python list that will be used
    to contain the GDAT data in its final grid format.'
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**data = []**：这一行初始化一个空的 Python 列表，将用于存储最终网格格式的 GDAT 数据。'
- en: '**with open(file_path, ‘rb’) as f:** This line opens the binary file in read
    mode (designated by the **‘rb’** argument), allowing the function to access its
    data. Opening the binary file using the **‘with’** statement ensures that the
    file is closed after you have accessed the data.'
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**with open(file_path, ‘rb’) as f:** 这一行以读取模式（由**‘rb’** 参数指定）打开二进制文件，允许函数访问其中的数据。使用
    **‘with’** 语句打开二进制文件，确保在访问完数据后自动关闭文件。'
- en: '**for _ in range(number_days):** This for loop iterates through the binary
    data and reads the data for each specified day. I’ve opted to use an underscore
    in this for loop (as well as the following for loops) because the variable doesn’t
    need to have a name as I will not be using it later. You can use typical iteration
    counter variables, such as **i**, or **j** if it better suits your programming
    style.'
  id: totrans-26
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**for _ in range(number_days):** 这个 for 循环遍历二进制数据，读取每一天的数据。在这个 for 循环（以及接下来的
    for 循环）中，我选择使用下划线，因为这个变量不需要命名，因为我后续不会使用它。如果你的编程风格更喜欢，你也可以使用典型的迭代计数器变量，例如 **i**
    或 **j**。'
- en: '**day_data = []**: This line initializes an empty Python list that will be
    used to contain the binary data for each day. It will contain all of the rows
    of binary data relating to that specific day.'
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**day_data = []**：这一行初始化一个空的 Python 列表，将用于存储每一天的二进制数据。它将包含与特定日期相关的所有行的二进制数据。'
- en: '**for _ in range(number_rows):** This for loop iterates through the specified
    number of rows within the specified day.'
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**for _ in range(number_rows):** 这个 for 循环在指定日期内遍历指定数量的行。'
- en: '**row_data = []**: This line initializes an empty Python list that will be
    used to contain the binary data for the current row within the specified day.'
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**row_data = []**：这一行初始化一个空的 Python 列表，将用于存储指定日期内当前行的二进制数据。'
- en: '**for _ in range(number_columns):** This for loop iterates through the data
    found in the specified number of columns within the specified row.'
  id: totrans-30
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**for _ in range(number_columns):** 这个for循环会遍历指定行中指定列数的数据。'
- en: '**value = struct.unpack(format_string, f.read(4))[0]**: This line initializes
    a variable called **value** and, using the **unpack** function from the **struct**
    module, reads however many bytes of binary data from the GDAT file at a time and
    interprets it according to the **format_string** specified (read section [“Format
    Characters”](https://docs.python.org/3/library/struct.html) to understand which
    format string you need to specify). The **unpack** function returns a tuple. In
    the code line, **[0]** is placed at the end to indicate that the function should
    only return the first (and in some instances, the only) value of the tuple. If
    each cell in your modeled study area contains a tuple with multiple values, it
    is unnecessary to include **[0]** at the end of the line unless you’re only interested
    in one of the cell values. For example, a scenario where you may have cells containing
    tuples with multiple values arises when the value measured in the cell has x and
    y components (i.e., wind).'
  id: totrans-31
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**value = struct.unpack(format_string, f.read(4))[0]**：这一行初始化了一个名为**value**的变量，并使用**struct**模块中的**unpack**函数，每次从GDAT文件中读取一定数量的二进制数据，并根据指定的**format_string**进行解析（阅读[“格式字符”](https://docs.python.org/3/library/struct.html)部分以了解需要指定的格式字符串）。**unpack**函数返回一个元组。在这一行代码中，**[0]**放在末尾，表示函数应该只返回元组中的第一个（在某些情况下是唯一的）值。如果每个单元格中包含一个有多个值的元组，则除非你只对其中一个单元格的值感兴趣，否则末尾无需加上**[0]**。例如，当单元格中的值包含x和y分量（例如风速）时，可能会有多个值的元组。'
- en: '**row_data.append(value):** This line appends the unpacked float value to **row_data,**
    which represents the current row.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**row_data.append(value):** 这一行将解包后的浮动值附加到**row_data**中，**row_data**代表当前行。'
- en: '**day_data.append(row_data):** This line appends the current row to **day_data**,
    which represents the current day.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**day_data.append(row_data):** 这一行将当前行附加到**day_data**中，**day_data**代表当前的一天。'
- en: '**data.append(day_data):** This line appends the data for the current day to
    **data**, which represents the overall dataset.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**data.append(day_data):** 这一行将当前一天的数据附加到**data**中，**data**代表整个数据集。'
- en: '**return data**: This function will continue iterating through the binary data
    file until it has read the grid data for each day into the overall dataset, designated
    as **data**. This line returns the overall dataset, converted from the binary
    file into a Python list. **data** returns gridded data separated into each day
    of the study period. This dataset can now be analyzed.'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**return data**：这个函数将继续遍历二进制数据文件，直到它将每一天的网格数据读取到整体数据集**data**中。这一行返回整体数据集，将二进制文件转换为Python列表。**data**返回的是按天划分的网格数据。现在可以对这个数据集进行分析了。'
- en: Returning the data for a particular cell in the study area grid for the entire
    study period
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 返回研究区域网格中特定单元格的整个研究期间的数据。
- en: While your computer model likely produces data for a large study area, you may
    only be interested in analyzing the data for a particular cell within the grid
    across the entire study period.
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然你的计算机模型可能会生成一个大范围研究区域的数据，但你可能只对分析研究期间内网格中特定单元格的数据感兴趣。
- en: Say, for example, you want to see how closely the computer model produced wind
    speed values compared to observed wind speed values. There exists a meteorological
    station with wind speed observations in a particular cell. We will extract the
    data for the cell containing the meteorological station for the entire study period,
    after which you will be able to plot the observed versus the modeled data to determine
    how accurate the model is.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 比如说，你想看看计算机模型生成的风速值与观测的风速值之间的匹配度。存在一个气象站，它在某个特定单元格中提供风速观测数据。我们将提取该包含气象站的单元格数据，覆盖整个研究周期，之后你可以绘制观测数据与模型数据的对比图，以确定模型的准确度。
- en: The Python function below uses the Python list data returned from the previous
    function.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 下面的Python函数使用了从之前的函数返回的Python列表数据。
- en: '[PRE1]'
  id: totrans-40
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The above code extracts the specified cell data for the entire study period.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 上述代码提取了整个研究期间内指定单元格的数据。
- en: '**def read_cell_data_for_study_period(data, row_index, column_index)**: This
    line begins the function that will extract the cell data for a specified cell
    using a row index and a column index to specify the cell’s location. The **data**
    argument takes the variable containing the list holding the GDAT data in its final
    grid format (this was created using the previous function). The **row_index**
    and **column_index** arguments take the integers specifying the row and column
    where the cell of interest is located.'
  id: totrans-42
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**def read_cell_data_for_study_period(data, row_index, column_index)**：这一行定义了一个函数，该函数将使用行索引和列索引提取指定单元格的数据。**data**参数接收包含以最终网格格式存储的GDAT数据的列表（这是通过前面的函数创建的）。**row_index**和**column_index**参数接收指定单元格所在行和列的整数值。'
- en: '**cell_data = []**: This line initializes an empty Python list that will contain
    the cell data for the entire study period.'
  id: totrans-43
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**cell_data = []**：这一行初始化了一个空的Python列表，用于存储整个研究期间的单元格数据。'
- en: '**for day_data in data:** This for loop iterates through the gridded data for
    each day of the study period.'
  id: totrans-44
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**for day_data in data:** 这个for循环遍历研究期间每一天的网格数据。'
- en: '**reversed_day_data = day_data[::-1]**: This optional line of code is used
    if, upon printing out the cell data for the specified study period, you find that
    the gridded data is not being read from the correct starting point. In most scenarios,
    gridded data will be read from the upper left corner and will therefore be “0
    indexed”. However, in some scenarios, the gridded data is read from the lower
    left corner. This phenomenon causes the grid indexing to be wrong, resulting in
    the wrong cell being read using your specified **row_index** and **column_index**.
    Therefore, this optional line of code flips the gridded data vertically so it
    is read beginning from the upper left corner. **Note: This line should only be
    used if it is determined that the grid of data is being read from the lower left
    corner. Omit this line if your data grid is being read correctly to avoid erroneous
    data readings.**'
  id: totrans-45
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**reversed_day_data = day_data[::-1]**：这一行是可选的，如果在打印指定研究期间的单元格数据时发现网格数据没有从正确的起始点读取，可以使用这一行。在大多数情况下，网格数据是从左上角读取的，因此是“0索引”。然而，在某些情况下，网格数据是从左下角读取的。这种现象会导致网格索引错误，从而导致使用指定的**row_index**和**column_index**访问到错误的单元格。因此，这一行代码将网格数据垂直翻转，使其从左上角开始读取。**注意：此行代码只应在确定数据网格是从左下角读取时使用。如果你的数据网格被正确读取，避免使用此行以防止错误的数据读取。**'
- en: '**cell_value = reversed_day_data[row_index][column_index]**: This line initializes
    a variable called **cell_value** which will contain the cell data at the specified
    row and column index for each day of the study period. As you can see, your specified
    **row_index** and **column_index** arguments are used to access the correct cell
    in the gridded data.'
  id: totrans-46
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**cell_value = reversed_day_data[row_index][column_index]**：这一行初始化了一个名为**cell_value**的变量，它将存储每一天研究期间指定行和列索引位置的单元格数据。如你所见，指定的**row_index**和**column_index**参数用于访问网格数据中的正确单元格。'
- en: '**cell_data.append(cell_value)**: This line appends the cell data for the current
    day to **cell_data**, which represents the overall list containing all of the
    cell values for the entire study period.'
  id: totrans-47
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**cell_data.append(cell_value)**：这一行将当前一天的单元格数据添加到**cell_data**中，后者表示包含整个研究期间所有单元格值的整体列表。'
- en: '**return cell_data**: This function will continue iterating through each day
    of data and appending the value at a specific cell to the list designated as **cell_data**.
    This line returns the list, after which you will be able to print out and analyze
    the cell values for each day of the study period.'
  id: totrans-48
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**return cell_data**：这个函数将继续遍历每一天的数据，并将指定单元格的值添加到名为**cell_data**的列表中。这一行返回该列表，之后你将能够打印并分析研究期间每一天的单元格值。'
- en: Example of how you can analyze cell data
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何分析单元格数据的示例
- en: '[PRE2]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Troubleshooting
  id: totrans-51
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 故障排除
- en: Read your computer model documentation to understand how its output is formatted.
    This will help you determine which values you want to extract from the tuple of
    data representing each cell, as well as what format the cell values are in (i.e.,
    floating point, etc.).
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 阅读你的计算机模型文档，以了解其输出格式。这将帮助你确定从表示每个单元格的数据元组中提取哪些值，以及单元格数据的格式（例如浮点数等）。
- en: If possible, create TIF files from your GDAT files and open them in a GIS program.
    This will allow you to visualize your gridded data, as well as to check that your
    gridded data is being read from the upper left corner by the function used to
    read cell data for each day of your study period.
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果可能，从您的 GDAT 文件创建 TIF 文件，并在 GIS 程序中打开它们。这将使您能够可视化您的网格数据，并检查用于读取每一天研究期间单元格数据的函数是否从左上角开始读取网格数据。
- en: 'Subscribe to get my stories sent directly to your inbox: [Story Subscription](https://madison13.medium.com/subscribe)'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅以直接将我的故事发送到您的收件箱：[故事订阅](https://madison13.medium.com/subscribe)
- en: 'Please become a member to get unlimited access to Medium using my referral
    link (I will receive a small commission at no extra cost to you): [Medium Membership](https://madison13.medium.com/membership)'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 请成为会员，通过我的推荐链接获得无限访问 Medium 的权限（您无需支付额外费用，我会收到少量佣金）：[Medium 会员](https://madison13.medium.com/membership)
- en: 'Subscribe to my newsletter to get more exclusive data-driven content with an
    environmentalist spin: [DataDrivenEnvironmentalist](https://datadrivenenvironmentalist.substack.com/?r=1kyrup&utm_campaign=pub-share-checklist)'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 订阅我的新闻通讯，获取更多带有环保主义视角的数据驱动内容：[DataDrivenEnvironmentalist](https://datadrivenenvironmentalist.substack.com/?r=1kyrup&utm_campaign=pub-share-checklist)
