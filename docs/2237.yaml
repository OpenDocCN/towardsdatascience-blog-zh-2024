- en: 'Introducing NumPy, Part 2: Indexing Arrays'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/introducing-numpy-part-2-indexing-arrays-5b381b90d1d0?source=collection_archive---------9-----------------------#2024-09-12](https://towardsdatascience.com/introducing-numpy-part-2-indexing-arrays-5b381b90d1d0?source=collection_archive---------9-----------------------#2024-09-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Quick Success Data Science
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Slicing and dicing like a pro
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@lee_vaughan?source=post_page---byline--5b381b90d1d0--------------------------------)[![Lee
    Vaughan](../Images/9f6b90bb76102f438ab0b9a4a62ffa3f.png)](https://medium.com/@lee_vaughan?source=post_page---byline--5b381b90d1d0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5b381b90d1d0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5b381b90d1d0--------------------------------)
    [Lee Vaughan](https://medium.com/@lee_vaughan?source=post_page---byline--5b381b90d1d0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5b381b90d1d0--------------------------------)
    ·13 min read·Sep 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bdcf0f1c936adb282f5ddbadc167be78.png)'
  prefs: []
  type: TYPE_IMG
- en: Indexing an array by DALL-E3
  prefs: []
  type: TYPE_NORMAL
- en: NumPy is Python’s foundational library for numerical calculations. With NumPy,
    the heavy lifting is handled by *arrays*, essentially tables of elements of the
    same data type. Arrays are optimized for performance, permitting faster mathematical
    and logical operations than traditional Python data types, like lists.
  prefs: []
  type: TYPE_NORMAL
- en: In [Part 1](https://medium.com/towards-data-science/introducing-numpy-part-1-understanding-arrays-3f6fecc97e3d),
    we covered how to create arrays, describe them, and access their attributes using
    dot notation. In this article, we’ll examine how to access the elements in arrays
    using *indexes* and *slices*, so you can extract the value of elements and change
    them using assignment statements. Array indexing uses square brackets `[]`, just
    like Python lists.
  prefs: []
  type: TYPE_NORMAL
- en: Array Dimensions and Axes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a refresher from Part 1, here is a graphical representation of a 1D, 2D,
    and 3D array, with the axes annotated. You’ll need to understand the axes’ directions
    to index properly.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2a4de0c5b7c92e955b4d2086bb4abb31.png)'
  prefs: []
  type: TYPE_IMG
- en: Graphical representation of 1D, 2D, and 3D arrays (from [Python Tools for Scientists](https://a.co/d/86EgobI))
    (This and several future links to my book are affiliate links)
  prefs: []
  type: TYPE_NORMAL
- en: Indexing and Slicing 1D Arrays
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
