- en: 5 Examples to Master PySpark Window Operations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/5-examples-to-master-pyspark-window-operations-26583066e227?source=collection_archive---------3-----------------------#2024-01-22](https://towardsdatascience.com/5-examples-to-master-pyspark-window-operations-26583066e227?source=collection_archive---------3-----------------------#2024-01-22)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A must-know tool for data analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://sonery.medium.com/?source=post_page---byline--26583066e227--------------------------------)[![Soner
    Yıldırım](../Images/c589572e9d1ee176cd4f5a0008173f1b.png)](https://sonery.medium.com/?source=post_page---byline--26583066e227--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--26583066e227--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--26583066e227--------------------------------)
    [Soner Yıldırım](https://sonery.medium.com/?source=post_page---byline--26583066e227--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--26583066e227--------------------------------)
    ·8 min read·Jan 22, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b555efeea498ae8a2fe5917442513e28.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Pierre Châtel-Innocenti](https://unsplash.com/@chatelp?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/white-and-beige-building-windows-F4VHOj76D0o?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  prefs: []
  type: TYPE_NORMAL
- en: All of the data analysis and manipulation tools I’ve worked with have window
    operations. Some are more flexible and capable than others but it is a must to
    be able to do calculations over a window.
  prefs: []
  type: TYPE_NORMAL
- en: What is a window in data analysis?
  prefs: []
  type: TYPE_NORMAL
- en: Window is a set of rows that are related in some ways. This relation can be
    of belonging to the same group or being in the n consecutive days. Once we generate
    the window with the required constraints, we can do calculations or aggregations
    over it.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will go over 5 detailed examples to have a comprehensive
    understanding of window operations with PySpark. We’ll learn to create windows
    with partitions, customize these windows, and how to do calculations over them.
  prefs: []
  type: TYPE_NORMAL
- en: PySpark is a Python API for Spark, which is an analytics engine used for large-scale
    data processing.
  prefs: []
  type: TYPE_NORMAL
- en: Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I prepared a sample dataset with mock data for this article, which you can download
    from my [datasets](https://github.com/SonerYldrm/datasets/tree/main) repository.
    The dataset we’ll use in this article is called “sample_sales_pyspark.csv”.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s start a spark session and create a DataFrame from this dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
