["```py\nimport pandas as pd\nfrom imblearn.over_sampling import SMOTE, ADASYN, RandomOverSampler\nfrom imblearn.under_sampling import TomekLinks, NearMiss, RandomUnderSampler\nfrom imblearn.combine import SMOTETomek, SMOTEENN\n\n# Create a DataFrame from the dataset\ndata = {\n    'Temperature': [1, 0, 1, 3, 2, 3, 1, 3, 4],\n    'Humidity': [0, 2, 1, 1, 3, 2, 3, 4, 4],\n    'Activity': ['A', 'A', 'B', 'B', 'B', 'C', 'C', 'C', 'C']\n}\ndf = pd.DataFrame(data)\n\n# Split the data into features (X) and target (y)\nX, y = df[['Temperature', 'Humidity']], df['Activity'].astype('category')\n\n# Initialize a resampling method\n# sampler = RandomOverSampler()       # Random OverSampler for oversampling\nsampler = SMOTE()                     # SMOTE for oversampling\n# sampler = ADASYN()                  # ADASYN for oversampling\n# sampler = RandomUnderSampler()      # Random UnderSampler for undersampling\n# sampler = TomekLinks()              # Tomek Links for undersampling\n# sampler = NearMiss(version=1)       # NearMiss-1 for undersampling\n# sampler = EditedNearestNeighbours() # ENN for undersampling\n# sampler = SMOTETomek()              # SMOTETomek for a combination of oversampling & undersampling\n# sampler = SMOTEENN()                # SMOTEENN for a combination of oversampling & undersampling\n\n# Apply the resampling method\nX_resampled, y_resampled = sampler.fit_resample(X, y)\n\n# Print the resampled dataset\nprint(\"Resampled dataset:\")\nprint(X_resampled)\nprint(y_resampled)\n```"]