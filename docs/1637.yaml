- en: A Comprehensive Guide to Collaborative AI Agents in Practice
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-comprehensive-guide-to-collaborative-ai-agents-in-practice-1f4048947d9c?source=collection_archive---------1-----------------------#2024-07-03](https://towardsdatascience.com/a-comprehensive-guide-to-collaborative-ai-agents-in-practice-1f4048947d9c?source=collection_archive---------1-----------------------#2024-07-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A look at the definition, and building a team of AI agents that refine your
    CV and Cover Letter for job applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@itshesamsheikh?source=post_page---byline--1f4048947d9c--------------------------------)[![Hesam
    Sheikh](../Images/b8d5f4f285eef77634e4c1d4321580ed.png)](https://medium.com/@itshesamsheikh?source=post_page---byline--1f4048947d9c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1f4048947d9c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1f4048947d9c--------------------------------)
    [Hesam Sheikh](https://medium.com/@itshesamsheikh?source=post_page---byline--1f4048947d9c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1f4048947d9c--------------------------------)
    ·14 min read·Jul 3, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/35962a52a51ba7ad8c5575b3cc424670.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by DALLE3.
  prefs: []
  type: TYPE_NORMAL
- en: Not a member? [Read for free!](https://hesamsheikh.substack.com/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Agentic AI is one of the hottest subjects of the AI community in 2024 and there
    is a good reason for that. Foundational Models are becoming more sophisticated
    in **reasoning** and **planning**. With these capabilities in place, we can leverage
    LLMs to divide a given task into smaller pieces, perform them step by step, and
    reflect on their results, essentially creating **AI Agents**.
  prefs: []
  type: TYPE_NORMAL
- en: If you’re passionate about AI, or you like playing with Language Models, or
    you’re working in Machine Learning, a comprehensive understanding of AI agents
    and how they look in action is necessary if you want to keep up with the latest
    AI achievements.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you’re in the job search process as I am, you know that writing a cover
    letter for each job you apply to or adjusting the CV to pinpoint job requirements
    is a tedious step. For my implementation of AI agents, **I will develop a team
    of AI agents** that collaborate to:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Extract** the key information out of a job description'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Modify** your CV and Cover Letter to address the job'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Evaluate** the final result from a recruiter''s point of view, and give you
    a score from 0 to 100'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/ea2ac88046bb8eba0f2d12d193d9f181.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 1\. We will create a team of AI agents to modify our CV and Cover Letter
    and give us a score from 0 to 100\. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will walk through what collaborative AI agents are, what
    makes agents different from LLMs, and go through a practical implementation to
    showcase how creating AI agents might be much simpler than you would expect.
  prefs: []
  type: TYPE_NORMAL
- en: · [AI Agent Made Simple](#d3a2)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [LLM-Powered AI Agents](#80e7)
  prefs: []
  type: TYPE_NORMAL
- en: · [Multi-Agent Collaboration](#3ee0)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [What Makes an Agent](#4bb1)
  prefs: []
  type: TYPE_NORMAL
- en: ∘ [What We Need With Multi-Agents](#3481)
  prefs: []
  type: TYPE_NORMAL
- en: '· [Code Implementation: Agents that Help You Apply For Jobs](#151a)'
  prefs: []
  type: TYPE_NORMAL
- en: AI Agent Made Simple
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: AI agent is a goal-oriented tool crafted to accomplish a specific set of tasks.
    While AI language models are created to generate responses for specific prompts,
    AI agents operate on a broader scale by addressing complex problems through decision-making
    and task execution. They reason upon a mission, and by using their available tools,
    execute smaller agendas to finish the task.
  prefs: []
  type: TYPE_NORMAL
- en: AI chatbots speak, AI agents act.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Whether in customer service, finance, or software development, AI agents are
    made for one thing: **automation**. The hope is that AI agents help individuals
    and organizations with their mundane routines, with lower costs to solving less
    creative agendas.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/bda227509f54f571072c7365aafda64e.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Fig 2\. The outline of how a model LLM-based agent is structured. (Source:
    [Wikimedia](https://commons.wikimedia.org/wiki/File:AI_Agent_Overview.png))'
  prefs: []
  type: TYPE_NORMAL
- en: LLM-Powered AI Agents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Even though AI Agents are very different from Large Language Models, **LLMs
    are the brains of our AI agents**. Agents need LLMs to do anything intelligently,
    reason, and plan their next steps. This means that which LLM you use, changes
    the behavior of the agent completely. This is why the rise of AI agents topic
    was made possible by the surge of Gen-AI.
  prefs: []
  type: TYPE_NORMAL
- en: 'N**ote**: The AI agents we hear about today have a somewhat different meaning
    than the traditional literature and textbooks. This can get confusing if you’re
    simply searching about AI agents, and you get diverse definitions of what they
    are. The AI agents we use today, and are the trending topic of the AI community,
    are LLM-based agents that we are discussing in this article.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e79d597472fc8e41d0d79a6076d7bc1e.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 3\. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'At their core, autonomous AI agents benefit from three components:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Planning:** This core function of an agent, allows it to break a goal into
    smaller steps and work on them one by one. Another aspect of their planning is
    to **self-reflect** on their actions and learn from them. The way an agent pulls
    off self-reflection very much depends on the implementation, but a general outline
    could be thought of as displayed in Figure 4.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Memory:** To learn from past mistakes, you must remember them. Memory is
    the component of storing, and later retrieving information by the agent, to refine
    its actions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Tool Use:** A key differentiating factor between a simple LLM and an AI agent,
    is their ability to use tools. Using tools can be as simple as calling an API,
    or using a Python function to read or write some files.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/c38dfaa0a4d9eb771176a7a9253b1d87.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 4\. Self-reflection is a finite loop between the agent thinking what to
    do, acting on it, and observing the results, potentially taking a new approach
    to the problem. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: Multi-Agent Collaboration
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: What is better than a single agent? **Many of them!**
  prefs: []
  type: TYPE_NORMAL
- en: Having one AI agent is one thing, but having multiple AI agents that collaborate
    with each other to chop up tasks and act on them is another story.
  prefs: []
  type: TYPE_NORMAL
- en: But why do we **NEED** multiple agents?
  prefs: []
  type: TYPE_NORMAL
- en: When breaking a goal down into smaller parts, you end up with sub-goals that
    require different sets of skills. That’s where you need multiple agents. A team
    of agents, with each one of them having a specific role and skillset, ensures
    that each sub-goal is tackled by its own agent.
  prefs: []
  type: TYPE_NORMAL
- en: You might even need to power each agent with a different LLM that is more sophisticated
    for the task to which that agent is assigned. An agent created for programming
    capabilities might need a completely different LLM than an agent who is supposed
    to write articles.
  prefs: []
  type: TYPE_NORMAL
- en: What Makes an Agent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'How you would define an agent very much depends on the implementation or the
    library you use. In general, an agent boils down to three main elements:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/752ddb9dae01e882f109b9c8cfd4179d.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 5\. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: '**Goal**: The specific objective the agent aims to accomplish. This shapes
    its decision-making framework. For example, “write easy-to-understand object-oriented
    Python code.”'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Role**: The function of an agent. Who is it? A debugger, data scientist,
    sales marketer, etc.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Backstory**: The context of the agent. Explains the goal, role, and what
    the agent is good at. An example of a backstory could be, “You are a senior Python
    programmer with a specialization in writing optimized, well-documented code and
    its test cases.”'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: What We Need With Multi-Agents
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The implementation details of multi-agent have some nuances to consider. Imagine
    a team of people working towards the same goal, a team of chefs in a restaurant
    kitchen as an example.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/20bea62de90014ecfecce3712040ea68.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by DALLE3.
  prefs: []
  type: TYPE_NORMAL
- en: You would need a head chef who leads the team. The team members need to communicate
    with each other. You need them to be able to send their finished work to the other
    chefs for the next step of the food preparation. This is just an example of how
    many things are needed to make multiple agents **collaborate toward a shared assignment.**
  prefs: []
  type: TYPE_NORMAL
- en: 'Generally, with multiple agents, you would need:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Sharing Information**: Agents need to pass their results to each other and
    share their findings. An agent’s finished work might be the input of another agent
    to start their task.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Collaboration**: Agents should be able to use each other’s help and delegate
    parts of their work if needed. This might not be a must in simple scenarios, but
    in complex processes, it is pretty necessary.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Manager Agent**: Controls the flow of tasks between the agents, keeping them
    in control.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Code Implementation: Agents that Help You Apply For Jobs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Now let’s create our team of agents. There are multiple libraries that enable
    you to develop AI agents, such as [LlamaIndex](https://www.llamaindex.ai/) or
    [LangChain](https://www.langchain.com/). I will use [CrewAI](https://www.crewai.com/)
    for its easy-to-use workflow and high level of abstraction. It’s free to use and
    while giving you adequate control over your agents, saves you from unnecessary
    complexity in simple projects.
  prefs: []
  type: TYPE_NORMAL
- en: 'I will create a team of agents to help me modify my CV and Cover Letter for
    a given job description to evaluate the final result and see how much I will have
    the chance of getting an interview. For this purpose, I will create **four** agents:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Job Crawler**: This agent will receive the URL of the job posting, crawl
    the webpage, and extract the key information about the job requirements, qualifications,
    etc.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**CV Modifier**: Based on the key information about the job, provided by Job
    Crawler, this agent reads my CV and enhances it to better fit the job description.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cover Letter Modifier:** This works the same as CV Modifier, but works on
    my cover letter instead.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Recruiter:** Acts as the job recruiter and analyzes my modified CV and cover
    letter. It will give me feedback and also a score in the range [0–100].'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/a68e4d8b098f059b07050c0b5c18fdbc.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 6\. Outline of the agent workflow. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'For the LLM, we will use `gpt-4-turbo` . However, using Ollama, you can run
    LLMs **100% locally** and **free**. I will not go into details in this article,
    but to know how you can run `LLama-3`, `Mistral`, `Phi-3`, and many more models
    locally on your machine, read this article:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/build-your-first-ai-agent-in-5-easy-steps-100-local-2fb771438a8f?source=post_page-----1f4048947d9c--------------------------------)
    [## 🚀 Build Your First AI Agent in 5 Easy Steps (100% local)'
  prefs: []
  type: TYPE_NORMAL
- en: Creating AI agents with Crewai and using Ollama to run them 100% locally in
    5 very easy steps!
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/build-your-first-ai-agent-in-5-easy-steps-100-local-2fb771438a8f?source=post_page-----1f4048947d9c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Next, I will load my `OPENAI_API_KEY` and initialize my `model`. This model
    is the backbone of our agents'' reasoning:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We will also need to define two **tools** that our agents need to use. Tools
    are what agents use to execute certain tasks. Writing custom tools for agents
    is as simple as a Python function. All you need to do is to wrap it with the langchain’s
    tool decorator. The tools we need for this project are one for getting the page
    content by a given URL and one for reading the `CV.pdf` and `Cover Letter.pdf`
    content.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Having my model and the needed tools ready, next is to define my agents. Agents
    in CrewAI need three main attributes, the **role**, the **goal**, and the **backstory**.
    For each agent, we will specify a set of needed tools. Agents also have the option
    to delegate part of their tasks to other agents, but since this project is not
    that complex, we set `allow_delegation` to False for all of our agents.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Now we need to list our tasks. A task is a specific job you want a particular
    agent to do. I will assign one task to each agent. I will explain the description
    of my task, along with specifically how I want the output of the task to be.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Notice, that some of these tasks depend on the output of another one. For example,
    I would need both the modified CV and cover letter to evaluate them. And I also
    won’t be able to modify my CV and cover letter, unless the *Job Crawler* agent
    has successfully extracted the job information off of the webpage.
  prefs: []
  type: TYPE_NORMAL
- en: You have to be aware though, that ultimately you’re extracting key job information
    from external website content. It would be the best practice to keep the website
    rights/copyrights in mind when using such tools for personal or commercial use.
  prefs: []
  type: TYPE_NORMAL
- en: This is taken care of by CrewAI automatically, by ensuring agents share the
    needed information with each other.
  prefs: []
  type: TYPE_NORMAL
- en: What remains is to create my crew of agents, and start them off!
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: This block of code takes the user input about the path of needed files and the
    webpage. Then I would create my crew, using the agents and the tasks I have defined
    earlier and I kick them off!
  prefs: []
  type: TYPE_NORMAL
- en: 'The result is a long output of all the thought processes and results of our
    agents. To keep it short, I will put a sample of the thought process of my `Cover
    Letter Modifier` agent:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: You could see the agent's reasons with itself, identifying what needs to be
    done and executing using the tools at hand.
  prefs: []
  type: TYPE_NORMAL
- en: After each of our agents has finished their assignments, we can see their output
    and how they have performed.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3cc0127d5dab84c8ba5f86a9c6972cee.png)'
  prefs: []
  type: TYPE_IMG
- en: Fig 7\. Template Cover Letter vs modified by the agent. (by Author)
  prefs: []
  type: TYPE_NORMAL
- en: You can see that the Cover Letter Modifier agent has successfully refined my
    cover letter to fit the job description, and even added some points that are emphasized
    in the job description. However, the CV Modifier agent’s output was a bit underwhelming,
    requiring some adjustments to its agent and task definitions.
  prefs: []
  type: TYPE_NORMAL
- en: The recruiter agent has also gone through my modified CV and cover letter and
    assigned a score of **92/100:**
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'The example use case of AI agents to modify CVs and cover letters is only to
    emphasize the scope of how we can use AI to automate repetitive tasks and holds
    as an educational example. If you want to use such tools in practice, it would
    be best to keep in mind some limitations:'
  prefs: []
  type: TYPE_NORMAL
- en: AI-generated CV or Cover Letter might be considered a **red flag** by the recruiter.
    The hiring managers could potentially employ AI detection tools to eliminate such
    candidate applications.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: AI tools such as ChatGPT still fall into the trap of **CV language**. Some of
    the writing styles and word choices of AI in CV are easily detectable. Words such
    as “delve” or “spearhead” might give off an AI-generated text. This writing style
    could make your CV sound inauthentic and less relatable.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[](https://pub.towardsai.net/why-does-chatgpt-use-delve-400621728787?source=post_page-----1f4048947d9c--------------------------------)
    [## Why does ChatGPT use “Delve” so much? Mystery Solved.'
  prefs: []
  type: TYPE_NORMAL
- en: ChatGPT overuses the word “Delve” in response to prompts. It has to do with
    the way ChatGPT was built.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: pub.towardsai.net](https://pub.towardsai.net/why-does-chatgpt-use-delve-400621728787?source=post_page-----1f4048947d9c--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: AI chatbots and LLMs suffer from **hallucinations**. In the context of this
    example, hallucination could mean putting experiences and skills in your cover
    letter and CV that you don’t actually possess but were inspired by the job description.
    Double-check for any unrealistic modifications to your CV/cover letter.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Holding a firm grip on what could be done with LLMs puts companies and experts
    in a superior position. One such fascinating capability is AI agents. In this
    article, we walked through what an AI agent is, how it is different from an LLM,
    and how we can implement them with a few lines of code to automate our repetitive
    tasks.
  prefs: []
  type: TYPE_NORMAL
- en: '**🌟 Join +1000 people learning about** Python, ML / MLOps / AI, Data Science,
    and LLM. [**follow me**](https://medium.com/@itshesamsheikh/subscribe)and check
    out my [**X/Twitter**](https://twitter.com/itsHesamSheikh), where I keep you updated
    Daily**.**'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading,
  prefs: []
  type: TYPE_NORMAL
- en: — Hesam
  prefs: []
  type: TYPE_NORMAL
