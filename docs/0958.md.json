["```py\nTable.ReplaceValue(#\"Renamed columns\", each [location], each if Text.Contains([location], \"H\") then \"1\" else if Text.Contains([location], \"A\") then \"-1\" else \"0\", Replacer.ReplaceText, {\"location\"})\n```", "```py\n(TableContents as binary) =>let\n  Source = Csv.Document(TableContents, [Delimiter = \",\", Columns = 34, QuoteStyle = QuoteStyle.None]),\n  PromoteHeaders = Table.PromoteHeaders(Source, [PromoteAllScalars = true])\nin\n  PromoteHeaders\n```", "```py\n(TourneyType as text) => let\n  Source = Lakehouse.Contents(null){[workspaceId = \"...\"]}[Data]{[lakehouseId = \"...\"]}[Data],\n  #\"Navigation 1\" = Source{[Id = \"Files\", ItemKind = \"Folder\"]}[Data],\n  #\"Filtered rows\" = Table.SelectRows(#\"Navigation 1\", each Text.Contains([Name], TourneyType)),\n  #\"Invoked custom function\" = Table.AddColumn(#\"Filtered rows\", \"Invoked custom function\", each LoadCSV([Content])),\n  #\"Removed columns\" = Table.RemoveColumns(#\"Invoked custom function\", {\"Content\", \"Name\", \"Extension\", \"Date accessed\", \"Date modified\", \"Date created\", \"Attributes\", \"Folder Path\", \"ItemKind\", \"IsLeaf\"}),\n  #\"Expanded Invoked custom function\" = Table.ExpandTableColumn(#\"Removed columns\", \"Invoked custom function\", {\"Season\", \"DayNum\", \"WTeamID\", \"WScore\", \"LTeamID\", \"LScore\", \"WLoc\", \"NumOT\", \"WFGM\", \"WFGA\", \"WFGM3\", \"WFGA3\", \"WFTM\", \"WFTA\", \"WOR\", \"WDR\", \"WAst\", \"WTO\", \"WStl\", \"WBlk\", \"WPF\", \"LFGM\", \"LFGA\", \"LFGM3\", \"LFGA3\", \"LFTM\", \"LFTA\", \"LOR\", \"LDR\", \"LAst\", \"LTO\", \"LStl\", \"LBlk\", \"LPF\"}, {\"Season\", \"DayNum\", \"WTeamID\", \"WScore\", \"LTeamID\", \"LScore\", \"WLoc\", \"NumOT\", \"WFGM\", \"WFGA\", \"WFGM3\", \"WFGA3\", \"WFTM\", \"WFTA\", \"WOR\", \"WDR\", \"WAst\", \"WTO\", \"WStl\", \"WBlk\", \"WPF\", \"LFGM\", \"LFGA\", \"LFGM3\", \"LFGA3\", \"LFTM\", \"LFTA\", \"LOR\", \"LDR\", \"LAst\", \"LTO\", \"LStl\", \"LBlk\", \"LPF\"}),\n  #\"Renamed columns\" = Table.RenameColumns(#\"Expanded Invoked custom function\", {{\"WLoc\", \"location\"}}),\n  Custom = Table.ReplaceValue(#\"Renamed columns\", each [location], each if Text.Contains([location], \"H\") then \"1\" else if Text.Contains([location], \"A\") then \"-1\" else \"0\", Replacer.ReplaceText, {\"location\"}),\n  #\"Change Types\" = Table.TransformColumnTypes(Custom, {{\"Season\", Int64.Type}, {\"DayNum\", Int64.Type}, {\"WTeamID\", Int64.Type}, {\"WScore\", Int64.Type}, {\"LTeamID\", Int64.Type}, {\"LScore\", Int64.Type}, {\"location\", Int64.Type}, {\"NumOT\", Int64.Type}, {\"WFGM\", Int64.Type}, {\"WFGA\", Int64.Type}, {\"WFGM3\", Int64.Type}, {\"WFGA3\", Int64.Type}, {\"WFTM\", Int64.Type}, {\"WFTA\", Int64.Type}, {\"WOR\", Int64.Type}, {\"WDR\", Int64.Type}, {\"WAst\", Int64.Type}, {\"WTO\", Int64.Type}, {\"WStl\", Int64.Type}, {\"WBlk\", Int64.Type}, {\"WPF\", Int64.Type}, {\"LFGM\", Int64.Type}, {\"LFGA\", Int64.Type}, {\"LFGM3\", Int64.Type}, {\"LFGA3\", Int64.Type}, {\"LFTM\", Int64.Type}, {\"LFTA\", Int64.Type}, {\"LOR\", Int64.Type}, {\"LDR\", Int64.Type}, {\"LAst\", Int64.Type}, {\"LTO\", Int64.Type}, {\"LStl\", Int64.Type}, {\"LBlk\", Int64.Type}, {\"LPF\", Int64.Type}}),\n  Winners = Table.TransformColumnNames(#\"Change Types\", each if Text.StartsWith(_, \"W\") then Text.Replace(_, \"W\", \"T1_\") else Text.Replace(_, \"L\", \"T2_\")),\n  #\"Rename L\" = Table.TransformColumnNames(#\"Change Types\", each if Text.StartsWith(_, \"W\") then Text.Replace(_, \"W\", \"T2_\") else Text.Replace(_, \"L\", \"T1_\")),\n  #\"Replaced Value L\" = Table.ReplaceValue(#\"Rename L\", each [location], each if [location] = 1 then -1 else if Text.Contains([location], -1) then 1 else [location], Replacer.ReplaceValue, {\"location\"}),\n  Losers = Table.TransformColumnTypes(#\"Replaced Value L\", {{\"location\", Int64.Type}}),\n  Combined = Table.Combine({Winners, Losers}),\n  PointDiff = Table.AddColumn(Combined, \"PointDiff\", each [T1_Score] - [T2_Score], Int64.Type)\nin\n  PointDiff\n```"]