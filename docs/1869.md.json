["```py\nalpha_ctrl <- 0.18 \nalpha_trt <- 0.157 \nsigma <- 30000 \nconv_7d_ctrl <- format_pct(pweibull(7, alpha_ctrl, sigma)) \nconv_7d_trt <- format_pct(pweibull(7, alpha_trt, sigma)) \nt <- seq(0, 7, 0.1) \nsurv_ctrl <- 1 - pweibull(t, alpha_ctrl, sigma) \nsurv_trt <- 1 - pweibull(t, alpha_trt, sigma) \nplot(t, surv_trt, type = \"line\", col = \"red\", ylab = \"S(t)\", xlab = \"t (days)\",\n  ylim = c(0.7, 1)) lines(t, surv_ctrl, col = \"black\") \nlegend(\"topright\", col = c(\"black\", \"red\"), \n  legend = c(\"Control\", \"Treatment\"), lty = 1, title = \"Variant\" )\n```", "```py\nn <- 2000 \ntest_duration <- 30 \ngen_surv_data <- function(m, alpha){ \n  set.seed(m) \n  tstart <- runif(n, 0, test_duration) \n  tconvert <- rweibull(n, alpha, sigma) \n  status <- as.integer(tstart + tconvert < test_duration) \n  tstatus <- ifelse(status == 0, test_duration - tstart, tconvert) \n  return(data.frame(tstatus=tstatus, status=status)) \n}\n```", "```py\nrun_simulation <- function(m, alpha1, alpha2){ \n  data_1 <- gen_surv_data(m, alpha1) \n  data_2 <- gen_surv_data(m+1, alpha2) \n  # T-test on conversions (the common procedure): \n  p1_hat <- mean(data_1$status) \n  p1_var <- p1_hat*(1-p1_hat)/length(data_1$status) \n  p2_hat <- mean(data_2$status) \n  p2_var <- p2_hat*(1-p2_hat)/length(data_2$status) \n  stat <- abs(p2_hat - p1_hat)/sqrt(p1_var + p2_var) \n  ans1 <- pnorm(stat, lower.tail = F)*2 \n  # T-test on 7 day conversion (estimated using a Kaplan-Meier curve): \n  data_1$variant <- \"control\" \n  data_2$variant <- \"treatment\" \n  surv_data <- rbind(data_1, data_2) \n  surv_model <- summary(survfit(Surv(tstatus, status)~variant, \n    data = surv_data), times = 7, extend = T) \n  p1_hat <- 1 - surv_model$surv[1] \n  p1_var <- surv_model$std.err[1]^2 \n  p2_hat <- 1 - surv_model$surv[2] \n  p2_var <- surv_model$std.err[2]^2 \n  stat <- abs(p2_hat - p1_hat)/sqrt(p1_var + p2_var) \n  ans2 <- pnorm(stat, lower.tail = F)*2 \n  # Peto & Peto modification of the Gehan-Wilcoxon test: \n  mgw_test <- survdiff(Surv(tstatus, status)~variant, data = surv_data, \n    rho = 1) \n  ans3 <- mgw_test$pvalue \n  return(data.frame(\n    `T-test conversions` = ans1, \n    `T-test KM 7 day conversion` = ans2, \n    `Modified Gehan-Wilcoxon test` = ans3, check.names = F)) \n}\n```", "```py\nalpha <- 0.05 \nM <- 500 \nres <- Reduce(\"rbind\", lapply(1:M, function(m) \n  run_simulation(m, alpha_ctrl, alpha_ctrl))) \nres <- data.frame(Statistic = names(res), \n  `False positive rate` = format_pct(sapply(res, function(x) mean(x<=alpha))), \n  check.names = F, row.names = NULL) \nknitr::kable(res, align = \"c\")\n```", "```py\nM <- 2000 \nres <- Reduce(\"rbind\", lapply(1:M, function(m) \n  run_simulation(m, alpha_ctrl, alpha_trt))) \nres <- data.frame(\n  Statistic = names(res), \n  Power = sapply(res, function(x) mean(x<=alpha)), \n  check.names = F, row.names = NULL) \nuplift_logrank <- format_pct((res[3,2] - res[1,2])/res[1,2]) \nuplift_km <- format_pct((res[2,2] - res[1,2])/res[1,2]) \nres$Power <- format_pct(res$Power) knitr::kable(res, align = \"c\")\n```"]