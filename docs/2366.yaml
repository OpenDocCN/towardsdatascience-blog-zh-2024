- en: 'GenAI with Python: Build Agents from Scratch (Complete Tutorial)'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/genai-with-python-build-agents-from-scratch-complete-tutorial-4fc1e084e2ec?source=collection_archive---------0-----------------------#2024-09-29](https://towardsdatascience.com/genai-with-python-build-agents-from-scratch-complete-tutorial-4fc1e084e2ec?source=collection_archive---------0-----------------------#2024-09-29)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: with Ollama, LangChain, LangGraph (No GPU, No APIKEY)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://maurodp.medium.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)[![Mauro
    Di Pietro](../Images/3586d9d3238d904a1e1fa39c77b59d3f.png)](https://maurodp.medium.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)
    [Mauro Di Pietro](https://maurodp.medium.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4fc1e084e2ec--------------------------------)
    ·15 min read·Sep 29, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a4b4f821b7e226c94d46a7574097b60f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Mathieu Stern](https://unsplash.com/@mathieustern?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: '*(All images are by the author unless otherwise noted)*'
  prefs: []
  type: TYPE_NORMAL
- en: Intro
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Prompt Engineering** is the practice of designing and refining prompts (text
    inputs) to enhance the behavior of Large Language Models (LLMs). The goal is to
    get the desired responses from the model by carefully crafting the instructions.
    The most used prompting techniques are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chain-of-Thought:** involves generating a step-by-step reasoning process
    to reach a conclusion. The model is pushed to “think out loud” by explicitly laying
    out the logical steps that lead to the final answer.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**ReAct** **(Reason+Act):** combines reasoning with action. The model not only
    thinks through a problem but also takes actions based on its reasoning. So it’s
    more interactive as the model alternates between reasoning steps and actions,
    refining its approach iteratively. Basically, it’s a loop of “thought”, “action”,
    “observation”.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Let’s make an example: imagine asking an AI to “find the best laptop under
    $1000”.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '- **Normal Answer**: “Lenovo Thinkpad”.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**- Chain-of-Thought Answer**: “I need to consider factors like performance,
    battery life, and…'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
