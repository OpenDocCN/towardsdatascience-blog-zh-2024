- en: Exploring cancer types with neo4j
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 探索癌症类型与 neo4j
- en: 原文：[https://towardsdatascience.com/exploring-cancer-types-with-neo4j-43acf161362f?source=collection_archive---------0-----------------------#2024-08-17](https://towardsdatascience.com/exploring-cancer-types-with-neo4j-43acf161362f?source=collection_archive---------0-----------------------#2024-08-17)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/exploring-cancer-types-with-neo4j-43acf161362f?source=collection_archive---------0-----------------------#2024-08-17](https://towardsdatascience.com/exploring-cancer-types-with-neo4j-43acf161362f?source=collection_archive---------0-----------------------#2024-08-17)
- en: How to identify and visualise clusters in knowledge graphs
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何在知识图谱中识别和可视化聚类
- en: '[](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)[![David
    Wells](../Images/711a4195d0c9d82a9d6a72d649ae190b.png)](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)
    [David Wells](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)[![David
    Wells](../Images/711a4195d0c9d82a9d6a72d649ae190b.png)](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)
    [David Wells](https://medium.com/@david.arthur.wells?source=post_page---byline--43acf161362f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)
    ·7 min read·Aug 17, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--43acf161362f--------------------------------)
    ·阅读时间：7分钟·2024年8月17日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: In this post we’ll identify and visualise different clusters of cancer types
    by analysing [disease ontology](https://disease-ontology.org/) as a knowledge
    graph. Specifically we’ll set up neo4j in a docker container, import the ontology,
    generate graph clusters and embeddings, before using dimension reduction to plot
    these clusters and derive some insights. Although we’re using `disease_ontology`
    as an example, the same steps can be used to explore any ontology or graph database.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在这篇文章中，我们将通过分析[疾病本体](https://disease-ontology.org/)作为知识图谱，识别和可视化不同的癌症类型聚类。具体来说，我们将在
    Docker 容器中设置 neo4j，导入本体，生成图聚类和嵌入，然后使用降维技术绘制这些聚类并提取一些见解。尽管我们以 `disease_ontology`
    为例，但相同的步骤也可以用来探索任何本体或图数据库。
- en: '![](../Images/a2f42430da71f0508ec76b117c2a73d8.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a2f42430da71f0508ec76b117c2a73d8.png)'
- en: Cancer types viewed as embeddings and coloured by cluster, image by author
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 癌症类型视为嵌入并按聚类上色，图像由作者提供
- en: Ontology set up
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 本体构建
- en: In a graph database, rather than storing data as rows (like a spreadsheet or
    relational database) data is stored as nodes and relationships between nodes.
    For example in the figure below we see that melanoma and carcinoma are SubCategories
    Of cell type cancer tumour (shown by the SCO relationship). With this kind of
    data we can clearly see that melanoma and carcinoma are related even though this
    is not explicitly stated in the data.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在图数据库中，数据不是以行（如电子表格或关系型数据库）存储，而是以节点及节点之间的关系存储。例如，在下面的图中，我们看到黑色素瘤和癌瘤是细胞类型癌肿的子类别（通过
    SCO 关系表示）。通过这种数据，我们可以清晰地看到黑色素瘤和癌瘤是相关的，尽管数据中并没有明确指出这一点。
- en: '![](../Images/4f62ff219ffa0ba6fef53f0e626a9949.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4f62ff219ffa0ba6fef53f0e626a9949.png)'
- en: Graph database example, image by author
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图数据库示例，图像由作者提供
- en: Ontologies are a formalised set of concepts and relationships between those
    concepts. They are much easier for computers to parse than free text and therefore
    easier to extract meaning from. Ontologies are widely used in biological sciences
    and you may find an ontology you’re interested in at [https://obofoundry.org/](https://obofoundry.org/).
    Here we’re focusing on the disease ontology which shows how different types of
    diseases relate to each other.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 本体是一个正式化的概念集合及其之间的关系。与自由文本相比，本体更容易被计算机解析，因此也更容易从中提取意义。本体在生物学科中广泛应用，你可以在[https://obofoundry.org/](https://obofoundry.org/)找到你感兴趣的本体。在这里，我们专注于疾病本体，展示了不同类型的疾病是如何相互关联的。
- en: Neo4j is a tool for managing, querying and analysing graph databases. To make
    it easier to set up we’ll use a docker container.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: Neo4j是一个用于管理、查询和分析图形数据库的工具。为了更方便地设置，我们将使用Docker容器。
- en: '[PRE0]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: In the above command the `-publish` flags set ports to let python query the
    database directly and let us access it through a browser. The `NEO4J_PLUGINS`
    argument specifies which plugins to install. Unfortunately, the windows docker
    image doesn’t seem to be able to handle the installation, so to follow along you’ll
    need to install neo4j desktop manually. Don’t worry though, the other steps should
    all still work for you.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 在上述命令中，`-publish`标志设置了端口，以便让Python直接查询数据库，并通过浏览器访问它。`NEO4J_PLUGINS`参数指定了要安装的插件。不幸的是，Windows的Docker镜像似乎无法处理安装，因此为了跟随教程，你需要手动安装neo4j桌面版。别担心，其他步骤应该仍然适用。
- en: While neo4j is running you can access your database by going to http://localhost:7474/
    in your browser, or you can use the python driver to connect as below. Note that
    we’re using the port we published with our docker command above and we’re authenticating
    with the username and password we also defined above.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 当neo4j正在运行时，你可以通过在浏览器中访问http://localhost:7474/来访问数据库，或者你也可以使用Python驱动程序按照下面的方式连接。请注意，我们使用的是上面docker命令发布的端口，并且我们使用的用户名和密码也是我们之前定义的。
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Once you have your neo4j database set up, it’s time to get some data. The neo4j
    plug-in n10s is built to import and handle ontologies; you can use it to embed
    your data into an existing ontology or to explore the ontology itself. With the
    cypher commands below we first set some configs to make the results cleaner, then
    we set up a uniqueness constraint, finally we actually import disease ontology.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你设置好了neo4j数据库，就可以开始获取数据了。neo4j插件n10s专为导入和处理本体论而构建；你可以使用它将数据嵌入到现有本体论中，或者探索本体论本身。通过下面的cypher命令，我们首先设置一些配置，以使结果更加清晰，然后我们设置唯一性约束，最后我们实际导入疾病本体论。
- en: '[PRE2]'
  id: totrans-20
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: To see how this can be done with the python driver, check out the full code
    here [https://github.com/DAWells/do_onto/blob/main/import_ontology.py](https://github.com/DAWells/do_onto/blob/main/import_ontology.py)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 要查看如何使用Python驱动程序完成此操作，请查看完整代码[https://github.com/DAWells/do_onto/blob/main/import_ontology.py](https://github.com/DAWells/do_onto/blob/main/import_ontology.py)
- en: Now that we’ve imported the ontology you can explore it by opening http://localhost:7474/
    in your web browser. This lets you explore a little of your ontology manually,
    but we’re interested in the bigger picture so lets do some analysis. Specifically
    we will do Louvain clustering and generate fast random projection embeddings.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经导入了本体论，你可以通过在网页浏览器中打开http://localhost:7474/来探索它。这让你可以手动浏览一些本体论内容，但我们更关心的是全局视角，所以让我们做一些分析。具体来说，我们将进行Louvain聚类并生成快速随机投影嵌入。
- en: Clusters and embeddings
  id: totrans-23
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 聚类和嵌入
- en: Louvain clustering is a clustering algorithm for networks like this. In short,
    it identifies sets of nodes that are more connected to each other than they are
    to the wider set of nodes; this set is then defined as a cluster. When applied
    to an ontology it is a fast way to identify a set of related concepts. Fast random
    projection on the other hand produces an embedding for each node, i.e. a numeric
    vector where more similar nodes have more similar vectors. With these tools we
    can identify which diseases are similar and quantify that similarity.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: Louvain聚类是一种适用于此类网络的聚类算法。简而言之，它识别出节点集合，其中的节点之间联系比与更广泛的节点集合的联系要更强；这些节点集合被定义为一个簇。当应用于本体论时，这是一个快速识别相关概念集的方法。另一方面，快速随机投影为每个节点生成一个嵌入，即一个数字向量，其中相似的节点具有更相似的向量。使用这些工具，我们可以识别哪些疾病是相似的，并量化这种相似性。
- en: To generate embeddings and clusters we have to “project” the parts of our graph
    that we are interested in. Because ontologies are typically very large, this subsetting
    is a simple way to speed up computation and avoid memory errors. In this example
    we are only interested in cancers and not any other type of disease. We do this
    with the cypher query below; we match the node with the label “cancer” and any
    node that is related to this by one or more SCO or SCO_RESTRICTION relationships.
    Because we want to include the relationships between cancer types we have a second
    MATCH query that returns the connected cancer nodes and their relationships.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了生成嵌入和簇，我们必须“投影”我们感兴趣的图谱部分。因为本体通常非常庞大，所以这种子集化是一种加速计算并避免内存错误的简单方法。在这个示例中，我们只对癌症感兴趣，而不关心其他类型的疾病。我们通过下面的cypher查询来实现这一点；我们匹配标签为“cancer”的节点，以及通过一个或多个SCO或SCO_RESTRICTION关系与其相关的任何节点。因为我们想包含癌症类型之间的关系，所以我们有一个第二个MATCH查询，它返回连接的癌症节点及其关系。
- en: '[PRE3]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Once we have the projection (which we have called “proj”) we can calculate the
    clusters and embeddings and write them back to the original graph. Finally by
    querying the graph we can get the new embeddings and clusters for each cancer
    type which we can export to a csv file.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦我们得到了投影（我们称之为“proj”），我们就可以计算簇和嵌入，并将它们写回原始图谱。最后，通过查询图谱，我们可以获取每种癌症类型的新嵌入和簇，并将它们导出到CSV文件。
- en: '[PRE4]'
  id: totrans-28
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: Results
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结果
- en: Let’s have a look at some of these clusters to see which type of cancers are
    grouped together. After we’ve loaded the exported data into a pandas dataframe
    in python we can inspect individual clusters.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们看看这些簇，看看哪些类型的癌症被归为一组。将导出的数据加载到Python中的pandas数据框后，我们可以检查单独的簇。
- en: Cluster 2168 is a set of pancreatic cancers.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 簇2168是一组胰腺癌。
- en: '[PRE5]'
  id: totrans-32
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Cluster 174 is a larger group of cancers but mostly carcinomas.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 簇174是一个较大的癌症群体，但大多是癌瘤。
- en: '[PRE6]'
  id: totrans-34
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: These are sensible groupings, based on either organ or cancer type, and will
    be useful for visualisation. The embeddings on the other hand are still too high
    dimensional to be visualised meaningfully. Fortunately, TSNE is a very useful
    method for dimension reduction. Here, we use TSNE to reduce the embedding from
    128 dimensions down to 2, while still keeping closely related nodes close together.
    We can verify that this has worked by plotting these two dimensions as a scatter
    plot and colouring by the Louvain clusters. If these two methods agree we should
    see nodes clustering by colour.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是合理的分组，基于器官或癌症类型，将对可视化非常有用。另一方面，嵌入仍然是过于高维，无法进行有意义的可视化。幸运的是，TSNE是一种非常有用的降维方法。在这里，我们使用TSNE将嵌入从128维降到2维，同时仍保持紧密相关的节点彼此靠近。我们可以通过绘制这两个维度的散点图，并按Louvain簇着色来验证这是否有效。如果这两种方法一致，我们应该会看到节点按颜色聚集。
- en: '[PRE7]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '![](../Images/0518921a1cc8badb01af191ef86d9618.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0518921a1cc8badb01af191ef86d9618.png)'
- en: TSNE projection of Cancer embeddings coloured by cluster, image by author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: TSNE癌症嵌入的投影，按簇着色，图像来源：作者
- en: Which is exactly what we see, similar types of cancer are grouped together and
    visible as clusters of a single colour. Note that some nodes of a single colour
    are very far apart, this is because we’re having to reuse some colours as there
    are 29 clusters and only 20 colours. This gives us a great overview of the structure
    of our knowledge graph, but we can also add our own data.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是我们所看到的，类似类型的癌症被归为一组，并以单一颜色的簇状形式呈现。请注意，某些相同颜色的节点相距较远，这是因为我们需要重新使用一些颜色，因为有29个簇而只有20种颜色。这为我们提供了知识图谱结构的良好概览，但我们也可以添加自己的数据。
- en: Below we plot the frequency of cancer type as node size and the mortality rate
    as the opacity ([Bray et al 2024](https://doi.org/10.3322/caac.21834)). I only
    had access to this data for a few of the cancer types so I’ve only plotted those
    nodes. Below we can see that liver cancer does not have an especially high incidence
    over all. However, incidence rates of liver cancer are much higher than other
    cancers within its cluster (shown in purple) like oropharynx, larynx, and nasopharynx.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 以下我们绘制了癌症类型的频率作为节点大小，死亡率作为透明度（[Bray et al 2024](https://doi.org/10.3322/caac.21834)）。我仅能访问到一些癌症类型的数据，因此只绘制了这些节点。下面我们可以看到，肝癌的总体发病率并不特别高。然而，在其簇（以紫色显示）内，肝癌的发病率明显高于其他癌症，如口咽癌、喉癌和鼻咽癌。
- en: '![](../Images/34f0f4f82189e41951de3914f13d783c.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/34f0f4f82189e41951de3914f13d783c.png)'
- en: Frequency and mortality of cancers coloured by cluster, image by author
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 按簇着色的癌症频率和死亡率，图像来源：作者
- en: Conclusions
  id: totrans-43
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Here we have used the disease ontology to group different cancers into clusters
    which gives us the context to compare these diseases. Hopefully this little project
    has shown you how to visually explore an ontology and add that information to
    your own data.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们使用疾病本体论将不同类型的癌症分组为若干簇，这为我们提供了比较这些疾病的背景。希望这个小项目能展示如何直观地探索本体论，并将这些信息添加到你自己的数据中。
- en: You can check out the full code for this project at [https://github.com/DAWells/do_onto](https://github.com/DAWells/do_onto).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以查看这个项目的完整代码，链接地址是[https://github.com/DAWells/do_onto](https://github.com/DAWells/do_onto)。
- en: References
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: 'Bray, F., Laversanne, M., Sung, H., Ferlay, J., Siegel, R. L., Soerjomataram,
    I., & Jemal, A. (2024). Global cancer statistics 2022: GLOBOCAN estimates of incidence
    and mortality worldwide for 36 cancers in 185 countries. CA: a cancer journal
    for clinicians, 74(3), 229–263.'
  id: totrans-47
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 'Bray, F., Laversanne, M., Sung, H., Ferlay, J., Siegel, R. L., Soerjomataram,
    I., & Jemal, A. (2024). 《2022年全球癌症统计：GLOBOCAN对185个国家36种癌症的发病率和死亡率估算》。CA: 临床癌症杂志，74(3)，229–263。'
