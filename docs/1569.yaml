- en: Manage Dev and Prod Using Terraform and Local yaml Files
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Terraform 和本地 yaml 文件管理开发和生产环境
- en: 原文：[https://towardsdatascience.com/manage-dev-and-prod-using-terraform-and-local-yaml-files-a0db7afb10a2?source=collection_archive---------4-----------------------#2024-06-24](https://towardsdatascience.com/manage-dev-and-prod-using-terraform-and-local-yaml-files-a0db7afb10a2?source=collection_archive---------4-----------------------#2024-06-24)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/manage-dev-and-prod-using-terraform-and-local-yaml-files-a0db7afb10a2?source=collection_archive---------4-----------------------#2024-06-24](https://towardsdatascience.com/manage-dev-and-prod-using-terraform-and-local-yaml-files-a0db7afb10a2?source=collection_archive---------4-----------------------#2024-06-24)
- en: Make your terraform spin in multiple projects using yaml
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用 yaml 文件让你的 terraform 在多个项目中运作
- en: '[](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)[![Daniel
    Low](../Images/60b8deeb913548bbba0ed22239196d93.png)](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)
    [Daniel Low](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)[![Daniel
    Low](../Images/60b8deeb913548bbba0ed22239196d93.png)](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)
    [Daniel Low](https://medium.com/@danlowgw?source=post_page---byline--a0db7afb10a2--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)
    ·3 min read·Jun 24, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--a0db7afb10a2--------------------------------)
    ·3分钟阅读·2024年6月24日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: In a corporate production setting, typically cloud projects are split into development
    (dev) and production (prod) to segregate the two environments. As an engineer,
    it is important to be able to do the necessary testing and development in (dev)
    and move them into (prod) once approved, in a quick and efficient manner.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 在企业生产环境中，通常会将云项目分为开发（dev）和生产（prod）环境，以隔离这两个环境。作为工程师，能够在（dev）环境中进行必要的测试和开发，并在批准后快速高效地将它们移到（prod）环境中，是非常重要的。
- en: '![](../Images/d804850b95a696cc600926446ef80166.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d804850b95a696cc600926446ef80166.png)'
- en: Photo by [Alvaro Reyes](https://unsplash.com/@alvarordesign?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Alvaro Reyes](https://unsplash.com/@alvarordesign?utm_source=medium&utm_medium=referral)
    通过 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: As expected, there are several solutions to do this, terragrunt is an immediate
    one that comes to mind. However, not everyone is familiar with terraform, much
    less terragrunt. How can I simplify this template to enable others in a team simply
    using terraform and yaml files? Here is my take on a simplified implementation.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 正如预期的那样，解决方案有很多，terragrunt 是我首先想到的一个。然而，并不是每个人都熟悉 terraform，更不用说 terragrunt
    了。我如何简化这个模板，让团队中的其他人只需使用 terraform 和 yaml 文件就能完成？以下是我对简化实现的看法。
- en: '**1\. Repository Structure**'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '**1\. 仓库结构**'
- en: As a reference for this article, here was how i structured my repository.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 作为本文的参考，以下是我如何构建我的仓库的。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '**2\. Create your terraform locals.tf**'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 创建你的 terraform locals.tf 文件**'
- en: The locals.tf file is the default way terraform interacts with locally stored
    files. Your locals.tf should point to the terraform workspace that you would like
    to work in, this in turn will call the correct config file.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: locals.tf 文件是 terraform 与本地存储文件交互的默认方式。你的 locals.tf 文件应指向你想要工作的 terraform 工作区，这样就能调用正确的配置文件。
- en: '[PRE1]'
  id: totrans-15
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Using a local files that can be committed via git is much preferred over maintaining
    several .tfvars individually across several developers. Please take care not to
    commit sensitive information in the yaml file.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 使用可以通过 git 提交的本地文件比在多个开发人员之间分别维护多个 .tfvars 文件更为推荐。请务必小心，不要在 yaml 文件中提交敏感信息。
- en: Also terraform does allow for other types of config files other than yaml, including
    json and text [see [link](https://developer.hashicorp.com/terraform/language/functions/yamldecode)].
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，terraform 确实允许使用其他类型的配置文件，而不仅仅是 yaml，包括 json 和文本文件 [查看 [link](https://developer.hashicorp.com/terraform/language/functions/yamldecode)]。
- en: '[PRE2]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: '**2\. Create configuration files for both dev and prod**'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 为开发和生产环境创建配置文件**'
- en: In the environment directory, create your config files. Be sure in your naming
    that the name is also the same one as your terraform workspace as we will be using
    the variable `${terraform.workspace}` to differentiate between the two files.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 在环境目录中，创建你的配置文件。请确保在命名时，文件名与Terraform工作区的名称一致，因为我们将使用变量`${terraform.workspace}`来区分这两个文件。
- en: '[PRE3]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '[PRE4]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**3\. Modules**'
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: '**3. 模块**'
- en: I use module blocks to separate resources used. There is no strict rule as to
    what goes in a module, but I typically group resources that are spun up for the
    same service together (e.g. An airflow job that writes to a SQL table, or a VM
    and its associated load balancers).
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用模块块来分隔所使用的资源。对于模块中应包含哪些内容没有严格的规则，但我通常会将为同一服务启动的资源组合在一起（例如，一个将数据写入SQL表的Airflow任务，或者一个虚拟机及其关联的负载均衡器）。
- en: The main thing here is that your modules point to a local.config in this case
    the yaml file that we created. The locals.tf should then take care of the rest.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的关键是你的模块指向本地的config，这里指的是我们创建的yaml文件。然后，locals.tf文件应处理其余的部分。
- en: '[PRE5]'
  id: totrans-26
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '**Sources**'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '**来源**'
- en: 'Terraform workspaces: [link](https://developer.hashicorp.com/terraform/language/state/workspaces)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Terraform 工作区： [链接](https://developer.hashicorp.com/terraform/language/state/workspaces)
- en: 'Terraform locals: [link](https://developer.hashicorp.com/terraform/language/values/locals)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Terraform 本地值： [链接](https://developer.hashicorp.com/terraform/language/values/locals)
