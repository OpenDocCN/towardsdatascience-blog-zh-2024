["```py\n(venv) âžœ  nucs git:(main) time NUMBA_CACHE_DIR=.numba/cache python -m nucs.examples.queens -n 12 --log_level=ERROR --processors=6\n{\n    'ALG_BC_NB': 262006,\n    'ALG_BC_WITH_SHAVING_NB': 0,\n    'ALG_SHAVING_NB': 0,\n    'ALG_SHAVING_CHANGE_NB': 0,\n    'ALG_SHAVING_NO_CHANGE_NB': 0,\n    'PROPAGATOR_ENTAILMENT_NB': 0,\n    'PROPAGATOR_FILTER_NB': 2269965,\n    'PROPAGATOR_FILTER_NO_CHANGE_NB': 990435,\n    'PROPAGATOR_INCONSISTENCY_NB': 116806,\n    'SOLVER_BACKTRACK_NB': 131000,\n    'SOLVER_CHOICE_NB': 131000,\n    'SOLVER_CHOICE_DEPTH': 10,\n    'SOLVER_SOLUTION_NB': 14200\n}\nNUMBA_CACHE_DIR=.numba/cache python -m nucs.examples.queens -n 12    6.65s user 0.53s system 422% cpu 1.699 total\n```", "```py\nclass MagicSequenceProblem(Problem):\n    def __init__(self, n: int):\n        super().__init__([(0, n)] * n)\n        for i in range(n):\n            self.add_propagator((list(range(n)) + [i], ALG_COUNT_EQ, [i]))\n        # redundant constraints\n        self.add_propagator((list(range(n)), ALG_AFFINE_EQ, [1] * n + [n]))\n        self.add_propagator((list(range(n)), ALG_AFFINE_EQ, list(range(n)) + [n]))\n```", "```py\ndef compute_domains_max_leq(domains: NDArray, parameters: NDArray) -> int:\n  x = domains[:-1]\n  y = domains[-1]\n  if np.max(x[:, MAX]) <= y[MIN]:\n      return PROP_ENTAILMENT\n  y[MIN] = max(y[MIN], np.max(x[:, MIN]))\n  if y[MIN] > y[MAX]:\n      return PROP_INCONSISTENCY\n  for i in range(len(x)):\n      x[i, MAX] = min(x[i, MAX], y[MAX])\n      if x[i, MAX] < x[i, MIN]:\n          return PROP_INCONSISTENCY\n  return PROP_CONSISTENCY\n```", "```py\nNUMBA_DISABLE_JIT=1 python -m nucs.examples.queens -n 12 --log_level=ERROR   179.89s user 0.31s system 99% cpu 3:00.57 total\n```", "```py\nNUMBA_CACHE_DIR=.numba/cache python -m nucs.examples.queens -n 12    3.03s user 0.06s system 99% cpu 3.095 total\n```", "```py\n{\n    'ALG_BC_NB': 262006,\n    'ALG_BC_WITH_SHAVING_NB': 0,\n    'ALG_SHAVING_NB': 0,\n    'ALG_SHAVING_CHANGE_NB': 0,\n    'ALG_SHAVING_NO_CHANGE_NB': 0,\n    'PROPAGATOR_ENTAILMENT_NB': 0,\n    'PROPAGATOR_FILTER_NB': 2269965,\n    'PROPAGATOR_FILTER_NO_CHANGE_NB': 990435,\n    'PROPAGATOR_INCONSISTENCY_NB': 116806,\n    'SOLVER_BACKTRACK_NB': 131000,\n    'SOLVER_CHOICE_NB': 131000,\n    'SOLVER_CHOICE_DEPTH': 10,\n    'SOLVER_SOLUTION_NB': 14200\n}\n```", "```py\nNUMBA_CACHE_DIR=.numba/cache python -m nucs.examples.golomb -n 10 --symmetry_breaking --log_level=INFO\n```", "```py\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.solver - Problem has 82 propagators\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.solver - Problem has 45 variables\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.backtrack_solver - BacktrackSolver uses variable heuristic 0\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.backtrack_solver - BacktrackSolver uses domain heuristic 0\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.backtrack_solver - BacktrackSolver uses consistency algorithm 2\n2024-11-12 17:27:45,110 - INFO - nucs.solvers.backtrack_solver - Choice points stack has a maximal height of 128\n2024-11-12 17:27:45,172 - INFO - nucs.solvers.backtrack_solver - Minimizing variable 8\n2024-11-12 17:27:45,644 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 80\n2024-11-12 17:27:45,677 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 75\n2024-11-12 17:27:45,677 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 73\n2024-11-12 17:27:45,678 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 72\n2024-11-12 17:27:45,679 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 70\n2024-11-12 17:27:45,682 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 68\n2024-11-12 17:27:45,687 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 66\n2024-11-12 17:27:45,693 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 62\n2024-11-12 17:27:45,717 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 60\n2024-11-12 17:27:45,977 - INFO - nucs.solvers.backtrack_solver - Found a (new) solution: 55\n{\n    'ALG_BC_NB': 22652,\n    'ALG_BC_WITH_SHAVING_NB': 0,\n    'ALG_SHAVING_NB': 0,\n    'ALG_SHAVING_CHANGE_NB': 0,\n    'ALG_SHAVING_NO_CHANGE_NB': 0,\n    'PROPAGATOR_ENTAILMENT_NB': 107911,\n    'PROPAGATOR_FILTER_NB': 2813035,\n    'PROPAGATOR_FILTER_NO_CHANGE_NB': 1745836,\n    'PROPAGATOR_INCONSISTENCY_NB': 11289,\n    'SOLVER_BACKTRACK_NB': 11288,\n    'SOLVER_CHOICE_NB': 11353,\n    'SOLVER_CHOICE_DEPTH': 9,\n    'SOLVER_SOLUTION_NB': 10\n}\n[ 1  6 10 23 26 34 41 53 55]\n```", "```py\n consistency_alg_golomb = register_consistency_algorithm(golomb_consistency_algorithm)\n    solver = BacktrackSolver(problem, consistency_alg_idx=consistency_alg_golomb)\n```"]