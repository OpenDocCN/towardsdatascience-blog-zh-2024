["```py\ndf = pd.read_csv('./fires.csv')\ndf = df[(df.confidence>70)&(df.type==0)]\n```", "```py\nproj = ccrs.PlateCarree()\nfig, ax = plt.subplots(subplot_kw=dict(projection=proj), figsize=(16, 9))\n\nshape.geometry.plot(ax=ax, color='black')\ngdf.geometry.plot(ax=ax, color='red', markersize=10)\n\nax.gridlines(draw_labels=True,linewidth=1, alpha=0.5, linestyle='--', color='black')\n```", "```py\nimport ee\nimport pandas as pd\n\nee.Authenticate()\nee.Initialize()\n\nuk = ee.FeatureCollection('FAO/GAUL/2015/level2').filter(ee.Filter.eq('ADM0_NAME', 'U.K. of Great Britain and Northern Ireland'))\nSBands = ['B2', 'B3','B4', 'B11','B12']\npoints = []\nfor i in range(len(df)):\n    points.append(ee.Geometry.Point([df.longitude.values[i], df.latitude.values[i]]))\n\nfor i in range(len(df)):\n    startDate = pd.to_datetime(df.acq_date.values[i])\n    endDate = startDate+datetime.timedelta(days=1)\n    S2 = ee.ImageCollection('COPERNICUS/S2_SR_HARMONIZED')\\\n                .filterDate(startDate.strftime('%Y-%m-%d'), endDate.strftime('%Y-%m-%d'))\\\n                .filterBounds(points[i].buffer(2500).bounds())\\\n                .select(SBands)\\\n                .filter(ee.Filter.lt('CLOUDY_PIXEL_PERCENTAGE', 50))\n    if S2.size().getInfo()!=0:\n        S2_list = S2.toList(S2.size())\n        for j in range(S2_list.size().getInfo()):\n            img = ee.Image(S2_list.get(j)).select(SBands)\n            img = img.reproject('EPSG:4326', scale=10, crsTransform=None)\n            roi = points[i].buffer(2500).bounds()\n            array = ee.data.computePixels({\n              'expression': img.clip(roi),\n              'fileFormat': 'NUMPY_NDARRAY'\n            })\n            np.save(join('./S2',f'{i}_{j}.npy'), array)\n            print(f'Index: {i}/{len(df)-1}\\tDate: {startDate}')\n```", "```py\nmin_x, min_y, max_x, max_y = polygon.bounds\npoints = []\nwhile len(points)<300:\n    random_point = Point(np.random.uniform(min_x, max_x), np.random.uniform(min_y, max_y))\n    if random_point.within(polygon):\n        points.append(ee.Geometry.Point(random_point.xy[0][0],random_point.xy[1][0]))\nprint('Done!')\n```"]