- en: 'RAGOps Guide: Building and Scaling Retrieval Augmented Generation Systems'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/ragops-guide-building-and-scaling-retrieval-augmented-generation-systems-3d26b3ebd627?source=collection_archive---------0-----------------------#2024-11-26](https://towardsdatascience.com/ragops-guide-building-and-scaling-retrieval-augmented-generation-systems-3d26b3ebd627?source=collection_archive---------0-----------------------#2024-11-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Learning Retrieval Augmented Generation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: The Architecture, Operational Layers, and Best Practices for Effective RAG Implementation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@abhinavkimothi?source=post_page---byline--3d26b3ebd627--------------------------------)[![Abhinav
    Kimothi](../Images/ed5548c99e1910e7dc35bfcac26cb314.png)](https://medium.com/@abhinavkimothi?source=post_page---byline--3d26b3ebd627--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3d26b3ebd627--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3d26b3ebd627--------------------------------)
    [Abhinav Kimothi](https://medium.com/@abhinavkimothi?source=post_page---byline--3d26b3ebd627--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3d26b3ebd627--------------------------------)
    ·22 min read·Nov 26, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a13dfca856a3787567c94690da52a668.png)'
  prefs: []
  type: TYPE_IMG
- en: 'RAG Operations (Source: Image Generated by Author using [Dall-E 3](https://openai.com/index/dall-e-3/))'
  prefs: []
  type: TYPE_NORMAL
- en: It may not come as a surprise that retrieval augmented generation (RAG) is among
    the most applied techniques in the world of generative AI and large language model-powered
    applications. In fact, according to a D[atabricks report](https://intelliarts.com/blog/retrieval-augmented-generation-language-models/#:~:text=As%20evidence%2C%20Databricks%20reports%20that,RAG%20seems%20more%20than%20beneficial.),
    more than 60% of LLM-powered applications use RAG in some form. Therefore, in
    the global LLM market, which is currently [valued at around $6 Billion and growing
    at almost 40% YoY](https://www.grandviewresearch.com/industry-analysis/large-language-model-llm-market-report),
    RAG undoubtedly becomes one of those crucial techniques to master.
  prefs: []
  type: TYPE_NORMAL
- en: Building a PoC RAG pipeline is not too challenging today. There are readily
    available examples of code leveraging frameworks like [LangChain](https://github.com/abhinav-kimothi/A-Simple-Guide-to-RAG)
    or [LlamaIndex](https://docs.llamaindex.ai/en/stable/optimizing/production_rag/)
    and no-code/low-code platforms like [RAGArch](https://www.llamaindex.ai/blog/ragarch-building-a-no-code-rag-pipeline-configuration-one-click-rag-code-generation-tool-powered-b6e8eeb70089?utm_source=chatgpt.com),
    [HelloRAG](https://hellorag.ai/), etc.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@abhinavkimothi/conversing-with-documents-unleashing-the-power-of-llms-and-langchain-397838127fd?source=post_page-----3d26b3ebd627--------------------------------)
    [## Conversing with Documents: Unleashing the Power of LLMs and LangChain'
  prefs: []
  type: TYPE_NORMAL
- en: Using LangChain to build a Streamlit app for a QnA with documents and links.
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@abhinavkimothi/conversing-with-documents-unleashing-the-power-of-llms-and-langchain-397838127fd?source=post_page-----3d26b3ebd627--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: A production-grade RAG system, on the other hand, is composed of several specialised
    layers…
  prefs: []
  type: TYPE_NORMAL
