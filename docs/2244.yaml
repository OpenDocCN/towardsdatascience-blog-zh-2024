- en: MIDI Files as Training Data
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MIDI文件作为训练数据
- en: 原文：[https://towardsdatascience.com/midi-files-as-training-data-b67852c8b291?source=collection_archive---------3-----------------------#2024-09-13](https://towardsdatascience.com/midi-files-as-training-data-b67852c8b291?source=collection_archive---------3-----------------------#2024-09-13)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/midi-files-as-training-data-b67852c8b291?source=collection_archive---------3-----------------------#2024-09-13](https://towardsdatascience.com/midi-files-as-training-data-b67852c8b291?source=collection_archive---------3-----------------------#2024-09-13)
- en: 'A fundamental difference: MIDI scores vs MIDI performances'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 一个根本的区别：MIDI乐谱与MIDI表演
- en: '[](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)[![Francesco
    Foscarin](../Images/f4d238b54771adc6d03c9a62f28d3152.png)](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)
    [Francesco Foscarin](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)[![Francesco
    Foscarin](../Images/f4d238b54771adc6d03c9a62f28d3152.png)](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)
    [Francesco Foscarin](https://medium.com/@foscarin.francesco?source=post_page---byline--b67852c8b291--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)
    ·10 min read·Sep 13, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b67852c8b291--------------------------------)
    ·10分钟阅读·2024年9月13日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/8cc863eae2ddaf0ad98de4390333a286.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8cc863eae2ddaf0ad98de4390333a286.png)'
- en: Before starting any deep learning project with MIDI files, make sure you know
    the **difference between MIDI scores and MIDI performances**!
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始任何MIDI文件的深度学习项目之前，确保你知道**MIDI乐谱与MIDI表演之间的区别**！
- en: This article is for people planning or beginning to work with MIDI files. This
    format is widely used in the music community, and it caught the attention of computer
    music researchers due to the availability of datasets.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本文适用于计划或刚开始使用MIDI文件的人。这个格式在音乐界被广泛使用，并且由于数据集的可用性，引起了计算机音乐研究人员的关注。
- en: However, different types of information can be encoded in MIDI files. In particular,
    there is a big difference between MIDI scores and MIDI performances. Not being
    aware of this results in **time wasted on a useless task** or an incorrect choice
    **of training data and approaches**.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，不同类型的信息可以编码在MIDI文件中。特别是，MIDI乐谱和MIDI表演之间有很大的区别。没有意识到这一点会导致**浪费时间在无用的任务上**或选择错误的**训练数据和方法**。
- en: I will provide a basic introduction to the two formats and give hands-on examples
    of how to start working with them in Python.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我将提供这两种格式的基本介绍，并给出如何在Python中开始使用它们的实用示例。
- en: '*What is MIDI?*'
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*什么是MIDI？*'
- en: MIDI was introduced as a real-time communication protocol between synthesizers.
    The main idea is to **send a message** every time a **note is pressed** (note
    on) on a MIDI keyboard and another message when the **note is released** (note
    off). Then the synthesizer on the receiving end will know what sound to produce.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI最初作为合成器之间的实时通信协议引入。其主要思想是每当在MIDI键盘上**按下音符**（note on）时发送一条消息，而在**释放音符**（note
    off）时发送另一条消息。然后接收端的合成器将知道生成何种声音。
- en: '*Welcome to MIDI files!*'
  id: totrans-13
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*欢迎来到MIDI文件！*'
- en: If we collect and save all these messages (making sure to add their time position)
    then we have a MIDI file that we can use to reproduce a piece. Other than note-on
    and note-off, many other kinds of messages exist, for example specifying pedal
    information or other controllers.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们收集并保存所有这些消息（确保添加它们的时间位置），那么我们就得到了一个MIDI文件，可以用来重现一段音乐。除了note-on和note-off，还有许多其他类型的消息，例如指定踏板信息或其他控制器。
- en: You can think of plotting this information with a*pianoroll*.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以考虑用*pianoroll*来绘制这些信息。
- en: Beware, this is not a MIDI file, but only a possible representation of its content!
    Some software (in this example [Reaper](https://www.reaper.fm/)) adds a small
    piano keyboard next to the pianoroll to make it easier to visually interpret.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，这不是MIDI文件，而只是其内容的一种可能表示！一些软件（例如[Reaper](https://www.reaper.fm/)）在钢琴滚动视图旁边添加了一个小型钢琴键盘，以便更容易地进行视觉解读。
- en: '![](../Images/8017dddfc17763d1f6f5b970e6dcf361.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8017dddfc17763d1f6f5b970e6dcf361.png)'
- en: '*How is a MIDI file created?*'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*MIDI文件是如何创建的？*'
- en: 'A MIDI file can be created mainly **in two ways**: 1) by playing on a MIDI
    instrument, 2) by manually writing into a sequencer (Reaper, Cubase, GarageBand,
    Logic) or a musical score editor (for example from MuseScore).'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI文件可以主要通过**两种方式**创建：1）通过MIDI乐器演奏，2）通过手动在音序器（如Reaper、Cubase、GarageBand、Logic）或乐谱编辑器（例如MuseScore）中编写。
- en: 'With each way of producing MIDI files comes also a different kind of file:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 每种生成MIDI文件的方式也会产生不同类型的文件：
- en: playing on a MIDI instrument → **MIDI performance**
  id: totrans-21
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在MIDI乐器上演奏→ **MIDI表演**
- en: manually writing the notes (sequencer or musical score) → **MIDI score**
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 手动编写音符（音序器或乐谱）→ **MIDI乐谱**
- en: We’ll now dive into each type, and then summarize their differences.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们将深入探讨每种类型，然后总结它们之间的区别。
- en: 'Before starting, a disclaimer: **I will not focus specifically on how the information
    is encoded, but on what information can be extracted from the file**. For example,
    when I say “ time is represented in seconds” it means that we can get seconds,
    even though the encoding itself is more complex.'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 在开始之前，免责声明：**我不会专门关注信息如何编码，而是关注可以从文件中提取哪些信息**。例如，当我说“时间以秒为单位表示”时，这意味着我们可以获得秒数，尽管编码本身更加复杂。
- en: MIDI performances
  id: totrans-25
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MIDI表演
- en: 'We can find 4 kinds of information in a MIDI performance:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在MIDI表演中找到四种信息：
- en: 'When the note start: note onset'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当音符开始时：音符起始
- en: 'When the note end: note offset (or note duration computed as offset -onset)'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当音符结束时：音符偏移（或音符持续时间计算为偏移 - 开始）
- en: 'Which note was played: note pitch'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 演奏了哪个音符：音符音高
- en: 'How “strong” was the key pressed: note velocity'
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键按下的“强度”如何：音符速度
- en: '**Note onset and offset (and duration)** are represented in seconds, corresponding
    to the seconds the notes were pressed and released by the person playing the MIDI
    instrument.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: '**音符起始和结束（以及持续时间）**以秒为单位表示，对应于演奏者按下和释放音符的秒数。'
- en: '**Note pitch** is encoded with an integer from 0 (lowest) to 127 (highest);
    note that more notes can be represented than those that can be played by a piano;
    the piano range corresponds to 21–108\.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**音符音高**通过一个整数编码，范围从0（最低）到127（最高）；请注意，比钢琴能演奏的音符范围更广；钢琴的音域对应21–108\。'
- en: '**Note velocity** is also encoded with an integer from 0 (silence) to 127 (maximum
    intensity).'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**音符速度**也通过一个整数进行编码，范围从0（静音）到127（最大强度）。'
- en: The vast majority of MIDI performances are piano performances because most MIDI
    instruments are MIDI keyboards. Other MIDI instruments (for example MIDI saxophones,
    MIDI drums, and MIDI sensors for guitar) exist, but they are not as common.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 绝大多数MIDI表演都是钢琴表演，因为大多数MIDI乐器是MIDI键盘。其他MIDI乐器（例如MIDI萨克斯风、MIDI鼓和MIDI吉他传感器）也存在，但并不那么常见。
- en: The biggest dataset of human MIDI performances (classical piano music) is the
    [Maestro dataset](https://magenta.tensorflow.org/datasets/maestro) by Google Magenta.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 最大的人类MIDI表演数据集（古典钢琴音乐）是由Google Magenta提供的[Maestro数据集](https://magenta.tensorflow.org/datasets/maestro)。
- en: The main property of MIDI performances
  id: totrans-36
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MIDI表演的主要特性
- en: A fundamental characteristic of MIDI performances is that **there are never
    notes with exactly the same onset or duration** (this is, in theory, possible
    but, in practice, extremely unlikely).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI表演的一个基本特性是**永远不会有完全相同起始或持续时间的音符**（理论上这是可能的，但在实践中极不可能）。
- en: Indeed, even if they really try, players won’t be able to press two (or more)
    notes exactly at the same time, since there is a limit to the precision humans
    can obtain. The same is true for note durations. Moreover, this is not even a
    priority for most musicians, since time deviation can help to produce a more expressive
    or groovy feeling. Finally, consecutive notes will have some silence in between
    or partially overlap.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，即使他们真的努力，演奏者也无法准确地同时按下两个（或更多）音符，因为人类的精确度是有限的。音符持续时间也同样如此。此外，这对大多数音乐家来说并不是优先考虑的，因为时间偏差有助于产生更具表现力或更具律动感的感觉。最后，连续的音符之间会有一些静默，或者部分重叠。
- en: '![](../Images/8683281fa2d944677d7994e066df482c.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8683281fa2d944677d7994e066df482c.png)'
- en: For this reason, MIDI performances are sometimes also called *unquantized MIDI*.
    Temporal positions are spread on a continuous time scale, and not quantized to
    discrete positions (for digital encoding reasons, it is technically a discrete
    scale, but extremely fine, thus we can consider it continuous).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，MIDI 演奏有时也被称为 *未量化 MIDI*。时间位置分布在一个连续的时间尺度上，而不是量化到离散的位置（由于数字编码的原因，技术上它是离散的尺度，但非常细腻，因此我们可以认为它是连续的）。
- en: Hands-on example
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践示例
- en: Let us look at a MIDI performance. We will use the [ASAP dataset](https://github.com/fosfrancesco/asap-dataset),
    available on GitHub.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看一个 MIDI 演奏。我们将使用 [ASAP 数据集](https://github.com/fosfrancesco/asap-dataset)，它托管在
    GitHub 上。
- en: In your favorite terminal (I’m using PowerShell on Windows), go to a convenient
    location and clone the repository.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 在你喜欢的终端（我在 Windows 上使用 PowerShell）中，去到一个方便的位置并克隆仓库。
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: We will also use the Python library [Partitura](https://github.com/CPJKU/partitura)
    to open the MIDI files, so you can install it in your Python environment.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还将使用 Python 库 [Partitura](https://github.com/CPJKU/partitura) 来打开 MIDI 文件，因此你可以在你的
    Python 环境中安装它。
- en: '[PRE1]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Now that everything is set, let’s open the MIDI file, and print the first 10
    notes. Since this is a MIDI performance, we will use the `load_midi_performance`
    function.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 现在一切已设置好，让我们打开 MIDI 文件，并打印前 10 个音符。由于这是一个 MIDI 演奏，我们将使用 `load_midi_performance`
    函数。
- en: '[PRE2]'
  id: totrans-48
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'The output of this Python program should look like this:'
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Python 程序的输出应该是这样的：
- en: '[PRE3]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: You can see that we have the onset and durations in seconds, pitch and velocity.
    Other fields are not so relevant for MIDI performances.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到，我们有音符的起始时间和时长（秒）、音高和力度。其他字段对于 MIDI 演奏来说不那么重要。
- en: 'Onsets and durations are also represented in *ticks*. This is closer to the
    actual way this information is encoded in a MIDI file: a very short temporal duration
    (= 1 tick) is chosen, and all temporal information is encoded as a multiple of
    this duration. When you deal with music performances, you can typically ignore
    this information and use directly the information in seconds.'
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 起始时间和时长也以 *ticks*（时隙）表示。这更接近 MIDI 文件中实际编码这种信息的方式：选择一个非常短的时间持续单位（= 1 tick），然后所有时间信息都作为该单位的倍数进行编码。当你处理音乐演奏时，通常可以忽略这些信息，直接使用秒数信息。
- en: You can verify that there are never two notes with exactly the same onset or
    the same duration!
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以验证，永远不会有两个音符的起始时间或时长完全相同！
- en: MIDI scores
  id: totrans-54
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MIDI 乐谱
- en: Midi scores use a **much richer set of MIDI messages** to encode information
    such as time signature, key signature, bar, and beat positions.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI 乐谱使用 **更丰富的 MIDI 消息集** 来编码信息，如时间签名、调性签名、小节和拍号位置。
- en: For this reason, **they resemble musical scores** (sheet music), even though
    **they still miss some vital information**, for example, pitch spelling, ties,
    dots, rests, beams, etc…
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，**它们类似于音乐乐谱**（乐谱纸），尽管 **它们仍然缺少一些重要信息**，例如音高拼写、连音符、附点、休止符、连线等……
- en: The temporal information is not encoded in seconds but in more musically abstract
    units, like quarter notes.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 时间信息不是以秒为单位编码的，而是以更具音乐抽象性的单位编码，如四分音符。
- en: The main property of MIDI scores
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: MIDI 乐谱的主要特性
- en: A fundamental characteristic of MIDI score is that **all note onsets are aligned
    to a quantized grid**, defined first by bar positions and then by recursive integer
    divisions (mainly by 2 and 3, but other divisions such as 5,7,11, etc…) are used
    for tuplets.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI 乐谱的一个基本特征是，**所有音符的起始时间都对齐到一个量化网格**，该网格首先由小节位置定义，然后通过递归的整数分割（主要是 2 和 3，但也有其他分割，如
    5、7、11 等）来定义小节内的附点音符。
- en: Hands-on example
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 实践示例
- en: We are now going to look at the score from Bach Prelude BWV 848 in C#, which
    is the score of the performance we loaded before. Partitura has a dedicated `load_score_midi`
    function.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在将查看巴赫前奏曲 BWV 848 C# 大调的乐谱，这是我们之前加载的演奏的乐谱。Partitura 有一个专门的 `load_score_midi`
    函数。
- en: '[PRE4]'
  id: totrans-62
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'The output of this Python program should look like this:'
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个 Python 程序的输出应该是这样的：
- en: '[PRE5]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: You can see that the onsets of the notes are all falling exactly on a grid.
    If we consider `onset_quarter` (the 3rd column) we can see that 16th notes fall
    every 0.25 quarters, as expected.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以看到音符的起始时间完全落在一个网格上。如果我们考虑 `onset_quarter`（第三列），我们可以看到 16 分音符每 0.25 四分之一音符出现一次，正如预期的那样。
- en: '![](../Images/ca2dffd6524f8a72dd58c8dc6c7d411b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ca2dffd6524f8a72dd58c8dc6c7d411b.png)'
- en: The duration is a bit more problematic. For example, in this score, a 16th note
    should have a `quarter_duration` of 0.25\. However, we can see from the Python
    output that the duration is actually 0.24791667\. What happened is that MuseScore,
    which was used to generate this MIDI file, shortened a bit each note. Why? Just
    to make the audio rendition of this MIDI file sound a bit better. And it does
    indeed, at the cost of causing many problems to the people using these files for
    Computer Music research. Similar problems also exist in widely used datasets,
    such as the Lakh MIDI Dataset.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 时值稍微有些问题。例如，在这段乐谱中，一个十六分音符的`quarter_duration`应该是0.25。但从Python输出中我们可以看到，时值实际上是0.24791667。发生了什么？使用来生成这个MIDI文件的MuseScore将每个音符的时值稍微缩短了一些。为什么？仅仅是为了让这个MIDI文件的音频演绎听起来更好。确实如此，代价是给那些用这些文件做计算机音乐研究的人带来了许多问题。类似的问题也存在于广泛使用的数据集中，比如Lakh
    MIDI数据集。
- en: MIDI scores vs MIDI performances
  id: totrans-68
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: MIDI乐谱与MIDI表演
- en: Given the differences between MIDI scores and MIDI performances we’ve seen,
    let me give you some generic guidelines that can help in correctly setting up
    your deep learning system.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们所看到的MIDI乐谱和MIDI表演之间的差异，下面我将给出一些通用的指导方针，以帮助正确设置您的深度学习系统。
- en: Prefer MIDI scores for music generation systems, since the quantized note positions
    can be represented with a pretty small vocabulary, and other simplifications are
    possible, like only considering monophonic melodies.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 对于音乐生成系统，更倾向使用MIDI乐谱，因为量化的音符位置可以用相当小的词汇表示，且其他简化也可能实现，比如只考虑单音旋律。
- en: Use MIDI performance for systems that target the way humans play and perceive
    music, for example, beat tracking systems, tempo estimators, and emotion recognition
    systems (focusing on expressive playing).
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 对于那些旨在模拟人类演奏和感知音乐的系统，使用MIDI表演数据，例如节拍跟踪系统、节奏估计系统和情感识别系统（专注于表现性演奏）。
- en: 'Use both kinds of data for tasks like score-following (input: performance,
    output: score) and expressive performance generation (input: score, output: performance).'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这两种数据类型来完成诸如音符跟踪（输入：表演，输出：乐谱）和表现性表演生成（输入：乐谱，输出：表演）等任务。
- en: Extra problems
  id: totrans-73
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 额外的问题
- en: I have presented the main differences between MIDI scores and MIDI performances.
    However, as often happens, **things may be more complex**.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 我已经介绍了MIDI乐谱与MIDI表演之间的主要差异。然而，正如常常发生的那样，**事情可能会更复杂**。
- en: For example, some datasets, like the AMAPS datasets, are originally MIDI scores,
    but the authors introduced time changes at every note, **to simulate the time
    deviation of real human players** (note that this only happens between notes at
    different time positions; all notes in a chord will still be perfectly simultaneous).
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，某些数据集（如AMAPS数据集）最初是MIDI乐谱，但作者在每个音符上引入了时间变化，**以模拟真实人类演奏者的时间偏差**（注意，这仅发生在不同时间位置的音符之间；和弦中的所有音符仍然是完全同时发生的）。
- en: Moreover, some MIDI exports, like the one from MuseScore, will also try to make
    the MIDI score more similar to a MIDI performance, again by changing tempo indication
    if the piece changes tempo, by inserting a very small silence between consecutive
    notes (we saw this in the example before), and by playing grace notes as a very
    short note slightly before the reference note onset.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，某些MIDI导出文件，如来自MuseScore的文件，也会通过更改节奏标记（如果作品改变了节奏）或在连续音符之间插入非常短的小停顿（我们在前面的例子中看到过）来尝试让MIDI乐谱更接近MIDI表演，并通过在参考音符起始之前稍微演奏一个非常短的音符来表现装饰音。
- en: Indeed, grace notes constitute a very annoying problem in MIDI scores. Their
    duration is unspecified in musical terms, we just generically know that they should
    be “short”. And their onset is in the score the same one of the reference note,
    but this would sound very weird if we listed to an audio rendition of the MIDI
    file. Should we then shorten the previous note, or the next note to make space
    for the grace note?
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 事实上，装饰音在MIDI乐谱中是一个非常令人头痛的问题。它们的时值在音乐术语中没有明确规定，我们只知道它们应该是“短”的。而它们的起始点与参考音符的起始点相同，但如果我们听MIDI文件的音频演绎时，会觉得非常奇怪。那么我们是应该缩短前一个音符，还是下一个音符，为装饰音腾出空间呢？
- en: Other embellishments are also problematic since there are no unique rules on
    how to play them, for example, how many notes should a trill contains? Should
    a mordent start from the actual note or the upper note?
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 其他装饰音也存在问题，因为关于如何演奏它们没有统一的规则。例如，颤音应该包含多少个音符？应该从实际音符还是上行音符开始演奏一个刺音？
- en: Conclusion
  id: totrans-79
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: MIDI files are great, because they explicitly provide information about the
    pitch, onset, and duration of every note. This means for example that, compared
    to audio files, models targeting MIDI data can be smaller and be trained with
    smaller datasets.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: MIDI 文件非常棒，因为它们明确提供了每个音符的音高、起始时间和持续时间等信息。这意味着，例如，与音频文件相比，针对 MIDI 数据的模型可以更小，并且可以使用更小的数据集进行训练。
- en: 'This comes at a cost: MIDI files, and symbolically encoded music in general,
    are complex formats to use since they encode so many kinds of information in many
    different ways.'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这也带来了一些代价：MIDI 文件，以及一般意义上符号编码的音乐格式，是非常复杂的，因为它们以多种不同的方式编码了许多种类的信息。
- en: To properly use MIDI data as training data, it is important to be aware of the
    kind of data that are encoded. I hope this article gave you a good starting point
    to learn more about this topic!
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 为了正确使用 MIDI 数据作为训练数据，了解编码的数据类型非常重要。希望这篇文章能为你提供一个很好的起点，让你进一步了解这个话题！
- en: '[All figures are from the author.]'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: '[所有图表均来自作者。]'
