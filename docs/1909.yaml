- en: A Simple Strategy to Improve LLM Query Generation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/a-simple-strategy-to-improve-llm-query-generation-3178a7426c6f?source=collection_archive---------3-----------------------#2024-08-06](https://towardsdatascience.com/a-simple-strategy-to-improve-llm-query-generation-3178a7426c6f?source=collection_archive---------3-----------------------#2024-08-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dynamic Few-Shot Prompting
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://harrisonfhoffman.medium.com/?source=post_page---byline--3178a7426c6f--------------------------------)[![Harrison
    Hoffman](../Images/ebd5a797314dc9ef3da4c55acc3f0254.png)](https://harrisonfhoffman.medium.com/?source=post_page---byline--3178a7426c6f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3178a7426c6f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3178a7426c6f--------------------------------)
    [Harrison Hoffman](https://harrisonfhoffman.medium.com/?source=post_page---byline--3178a7426c6f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3178a7426c6f--------------------------------)
    ·22 min read·Aug 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In March 2024, I wrote a [tutorial on Real Python](https://realpython.com/build-llm-rag-chatbot-with-langchain/)
    detailing the steps to build a retrieval-augmented generation (RAG) chatbot using
    [LangChain](https://www.langchain.com/). The chatbot, formally named the Hospital
    System Chatbot, uses [Neo4j](https://neo4j.com/) to retrieve data from a synthetic
    hospital system dataset with information about patients, patient reviews, hospital
    locations, visits, insurance payers, and physicians.
  prefs: []
  type: TYPE_NORMAL
- en: 'The Hospital System Chatbot [agent](https://python.langchain.com/v0.1/docs/modules/agents/)
    is hosted via FastAPI, and can be accessed through a [Streamlit](https://streamlit.io/)
    app — all packaged up with Docker Compose:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a5aff74d86d5a54adb5bdbaa1d5362b3.png)'
  prefs: []
  type: TYPE_IMG
- en: A demo of the Hospital System Chatbot. Image by Author.
  prefs: []
  type: TYPE_NORMAL
- en: All code is available on [GitHub](https://github.com/hfhoffman1144/langchain_neo4j_rag_app),
    and anyone can read about the project in detail on [Real Python](https://realpython.com/build-llm-rag-chatbot-with-langchain/).
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://github.com/hfhoffman1144/langchain_neo4j_rag_app?source=post_page-----3178a7426c6f--------------------------------)
    [## GitHub - hfhoffman1144/langchain_neo4j_rag_app: A knowledge graph RAG app
    using LangChain and…'
  prefs: []
  type: TYPE_NORMAL
- en: A knowledge graph RAG app using LangChain and Neo4j. - hfhoffman1144/langchain_neo4j_rag_app
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: github.com](https://github.com/hfhoffman1144/langchain_neo4j_rag_app?source=post_page-----3178a7426c6f--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Since writing the tutorial, I’ve maintained the project on GitHub to improve
    the Hospital System Chatbot’s capabilities and make it more production-ready.
    For instance, I’ve added unit tests, refactored code to correct for deprecated
    features, created deployments with GitHub actions, and most recently integrated
    dynamic few-shot prompting to improve Cypher query generation.
  prefs: []
  type: TYPE_NORMAL
