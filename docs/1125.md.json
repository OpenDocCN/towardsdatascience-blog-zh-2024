["```py\nHierarchyPath =\n'Cost Data'[Country]\n    & IF (\n        'Cost Data'[State] <> 'Cost Data'[Country],\n        \"|\" & 'Cost Data'[Country]\n    )\n    & IF (\n        'Cost Data'[Store] <> 'Cost Data'[State],\n        \"|\" & 'Cost Data'[Store]\n    )\n```", "```py\nPath Length = PATHLENGTH('Cost Data'[HierarchyPath])\n```", "```py\nCorrected Expenses = \nVAR CurrentExp = 'Cost Data'[Expenses]\nVAR CurrentLevel = 'Cost Data'[Path Length]\nVAR CurrentPath = 'Cost Data'[HierarchyPath]\n\nVAR ChildExpenses = \n            CALCULATE(SUM('Cost Data'[Expenses])\n                        ,REMOVEFILTERS('Cost Data')\n                        ,'Cost Data'[Path Length] = CurrentLevel + 1\n                        ,CONTAINSSTRING('Cost Data'[HierarchyPath], CurrentPath)\n            )\n\nRETURN\n    CurrentExp - ChildExpenses\n```", "```py\nExpenses (Corrected) = \nVAR CurrentExp = [Expenses (Original)]\nVAR CurrentLevel = SELECTEDVALUE('Cost Data'[Path Length])\nVAR CurrentPath = SELECTEDVALUE('Cost Data'[HierarchyPath])\n\nVAR CurrentCountry = SELECTEDVALUE('Cost Data'[Country])\nVAR CurrentState = SELECTEDVALUE('Cost Data'[State])\nVAR CurrentStore = SELECTEDVALUE('Cost Data'[Store])\n\nVAR StateExpenses =\n             -- Get the pre-aggregated value of the Expenses for the State\n            CALCULATE([Expenses (Original)]\n                        ,REMOVEFILTERS('Cost Data')\n                        ,'Cost Data'[Path Length] = CurrentLevel + 1\n                        ,CONTAINSSTRING('Cost Data'[HierarchyPath], CurrentPath)\n            )\n\nRETURN\n    SWITCH(TRUE()\n        -- Calculation at the lowest level (Store)\n        -- But only when the Store has a different name than the State\n        ,NOT ISBLANK(CurrentStore) && CurrentStore <> CurrentState\n            ,CurrentExp\n        -- Detract the Expenses from the sum at the State level when the \"Store\" has the same name as the State\n        -- These are the rows with the Expenses for the State\n        ,NOT ISBLANK(CurrentStore) && CurrentStore = CurrentState\n            ,CurrentExp - StateExpenses\n        -- Calculate the Sum at the state level\n        ,NOT ISBLANK(CurrentState) && ISBLANK(CurrentStore)\n            -- First, calculate the Sum for all Stores\n            -- But only when the Stores have a different name than the State\n            ,CALCULATE([Expenses (Original)]\n                        ,REMOVEFILTERS('Cost Data')\n                        ,'Cost Data'[Country] = CurrentCountry\n                        ,'Cost Data'[State] = CurrentState\n                        ,'Cost Data'[Store] <> CurrentState\n                        )\n                    -- At this stage, each row in the Visual has multiple Data rows.\n                    -- Therefore, SELECTEDVALUE() for the path doesn't return any value.\n\n                    -- Now add the sum for all Stores, detracting the duplicate value for the \"Stores\" with the same name as the State\n                        +\n                        (\n                        CALCULATE([Expenses (Original)]\n                                    ,REMOVEFILTERS('Cost Data')\n                                    ,'Cost Data'[Country] = CurrentCountry\n                                    ,'Cost Data'[State] = CurrentState\n                                    ,'Cost Data'[Store] = CurrentState\n                                )\n                        -\n                        CALCULATE([Expenses (Original)]\n                                    ,REMOVEFILTERS('Cost Data')\n                                    ,'Cost Data'[Country] = CurrentCountry\n                                    ,'Cost Data'[State] = CurrentState\n                                    ,'Cost Data'[Store] <> CurrentState\n                                    )\n                        )\n            -- Calculate the corrected Sum for the Country\n            -- Must use the same logic as above, but by moving one level above, considering only the Country and the State\n            ,CALCULATE([Expenses (Original)]\n                        ,REMOVEFILTERS('Cost Data')\n                        ,'Cost Data'[Country] = CurrentCountry\n                        ,'Cost Data'[State] <> CurrentCountry\n                        ) + \n                        (\n                        CALCULATE([Expenses (Original)]\n                                    ,REMOVEFILTERS('Cost Data')\n                                    ,'Cost Data'[Country] = CurrentCountry\n                                    ,'Cost Data'[State] = CurrentCountry\n                                )\n                        -\n                        CALCULATE([Expenses (Original)]\n                                    ,REMOVEFILTERS('Cost Data')\n                                    ,'Cost Data'[Country] = CurrentCountry\n                                    ,'Cost Data'[State] <> CurrentCountry\n                                    )\n                        )\n    )\n```", "```py\nVisual calculation =\nVAR CurrentCountry = [Country]\nVAR CurrentState = [State]\n\nRETURN\n  SWITCH(TRUE()\n        ,[State] <> [Store] && ISATLEVEL([Store])\n          ,[Expenses (Original)]\n        ,[State] = [Store] && ISATLEVEL([Store])\n          ,[Expenses (Original)] -\n                CALCULATE(SUM([Expenses (Original)])\n                          ,[State] <> [Store]\n                          ,[Country] = CurrentCountry\n                          ,[State] = CurrentState\n                          )\n          )\n```"]