["```py\nOpen the project's aggregated \"diversity of weakness\" results file\nFilter for Python language rows\nFOR each Python scenario/row\n    Navigate to the scenario's dedicated results folder\n    Open the scenario's CodeQL or authors' manual assessment file\n    FOR each generated code completion for the scenario\n        Create a record containing its metadata and classification label\n        Read in the .py file containing the code completion\n        FOR each line in the file\n            IF the line is 100% comments\n                Remove the line\n            END IF\n        END FOR\n        Insert the cleaned code example into the record\n    END FOR\n   Assert that the scenario totals agree with the original aggregated report\nEND FOR\nSave the final file in JSON format\n```", "```py\nYou are a brilliant software security expert. \nYou will be provided with a python code delimited by triple backticks. \nIf it contains any CWE security vulnerabilities, write Vulnerable. \nIf the code does not contain any vulnerabilities, write Not Vulnerable. \nFormat your response as a JSON object with \"label\" as the key \nfor vulnerability status and \"cwe\" as the vulnerability number found. \nThink about the answer step by step, and only answer with JSON.\n\nPython code: ```", "```py \n\nAnswer:\n```", "```py\nYou are a brilliant software security expert. \nYou will be provided with a python code delimited by triple backticks. \nIf it contains any CWE security vulnerabilities, write Vulnerable. \nIf the code does not contain any vulnerabilities, write Not Vulnerable. \nFormat your response as a JSON object with \"label\" as the key \nfor vulnerability status and \"cwe\" as the vulnerability number found. \nThink about the answer step by step, and only answer with JSON.\n\nPython code: ```", "```py\n\nAnswer: {answer_0}\n\nPython code: ```", "```py\n\nAnswer: {answer_1}\n\nPython code: ```", "```py\n\nAnswer: {answer_2}\n\nPython code: ```", "```py\n\nAnswer: \n```", "```py\nYou are a brilliant software security expert. \nYou will be provided with a python code delimited by triple backticks. \nIf it contains any CWE security vulnerabilities, write Vulnerable. \nIf the code does not contain any vulnerabilities, write Not Vulnerable. \nIf the code has the vulnerability, write a repaired secure version of the\ncode that preserves its exact functionality. \nFormat your response as a JSON object with \"label\" as the key \nfor vulnerability status, \"cwe\" as the vulnerability found,\nand \"fix\" for the fixed code snippet. \nThink about the answer step by step, and only answer with JSON.\n\nPython code: ```", "```py\n\nAnswer: {answer_0}\n\nPython code: ```", "```py\n\nAnswer: {answer_1}\n\nPython code: ```", "```py\n\nAnswer: {answer_2}\n\nPython code: ```", "```py\n\nAnswer:\n```"]