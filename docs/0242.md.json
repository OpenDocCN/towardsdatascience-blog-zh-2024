["```py\n+----------+--------+---------+-----------+-----------+\n| start_ip | end_ip | country |    city   |   owner   |\n+----------+--------+---------+-----------+-----------+\n| 1        | 2      | ca      | Toronto   | Telus     |\n| 3        | 4      | ca      | Quebec    | Rogers    |\n| 5        | 8      | ca      | Vancouver | Bell      |\n| 10       | 14     | ca      | Montreal  | Telus     |\n| 19       | 22     | ca      | Ottawa    | Rogers    |\n| 23       | 29     | ca      | Calgary   | Videotron |\n+----------+--------+---------+-----------+-----------+\n```", "```py\n+------------+--------------+\n| event_time | event_owner  |\n+------------+--------------+\n| 2024-01-01 | Telus        |\n| 2024-01-02 | Bell         |\n| 2024-01-03 | Rogers       |\n| 2024-01-04 | Videotron    |\n| 2024-01-05 | Telus        |\n| 2024-01-06 | Videotron    |\n| 2024-01-07 | Rogers       |\n| 2024-01-08 | Bell         |\n+------------+--------------+\n```", "```py\nSELECT\n  *\nFROM\n  events\n  JOIN geolocation\n  ON (event_owner = owner)\n```", "```py\n+----------+-------+---------+-----------+-----------+\n| start_ip | end_ip| country |   city    |   owner   |\n+----------+-------+---------+-----------+-----------+\n| 1        | 2     | ca      | Toronto   | Telus     |\n| 10       | 14    | ca      | Montreal  | Telus     |\n+----------+-------+---------+-----------+-----------+\n\n+------------+--------------+\n| event_time | event_owner  |\n+------------+--------------+\n| 2024-01-01 | Telus        |\n| 2024-01-05 | Telus        |\n+------------+--------------+\n```", "```py\n+------------+----------+\n| event_time | event_ip |\n+------------+----------+\n| 2024-01-01 |    6     |\n| 2024-01-02 |   14     |\n| 2024-01-03 |   18     |\n| 2024-01-04 |   27     |\n| 2024-01-05 |    9     |\n| 2024-01-06 |   23     |\n| 2024-01-07 |   15     |\n| 2024-01-08 |    1     |\n+------------+----------+\n```", "```py\nSELECT\n  *\nFROM\n  events\n  JOIN geolocation\n  ON (event_ip >= start_ip and event_ip <= end_ip)\n```", "```py\nSELECT\n  country,\n  city,\n  owner,\n  explode(sequence(start_ip, end_ip)) AS ip\nFROM\n  geolocation\n```", "```py\n+---------+---------+---------+-----------+\n| country |   city    |  owner    |   ip   |\n+---------+---------+---------+-----------+\n|   ca    | Toronto   |  Telus    |   1    |\n|   ca    | Toronto   |  Telus    |   2    |\n|   ca    | Quebec    |  Rogers   |   3    |\n|   ca    | Quebec    |  Rogers   |   4    |\n|   ca    | Vancouver |  Bell     |   5    |\n|   ca    | Vancouver |  Bell     |   6    |\n|   ca    | Vancouver |  Bell     |   7    |\n|   ca    | Vancouver |  Bell     |   8    |\n|   ca    | Montreal  |  Telus    |  10    |\n|   ca    | Montreal  |  Telus    |  11    |\n|   ca    | Montreal  |  Telus    |  12    |\n|   ca    | Montreal  |  Telus    |  13    |\n|   ca    | Montreal  |  Telus    |  14    |\n|   ca    | Ottawa    |  Rogers   |  19    |\n|   ca    | Ottawa    |  Rogers   |  20    |\n|   ca    | Ottawa    |  Rogers   |  21    |\n|   ca    | Ottawa    |  Rogers   |  22    |\n|   ca    | Calgary   | Videotron |  23    |\n|   ca    | Calgary   | Videotron |  24    |\n|   ca    | Calgary   | Videotron |  25    |\n|   ca    | Calgary   | Videotron |  26    |\n|   ca    | Calgary   | Videotron |  27    |\n|   ca    | Calgary   | Videotron |  28    |\n|   ca    | Calgary   | Videotron |  29    |\n+---------+---------+---------+-----------+\n```", "```py\n+---------------+-------------+-----------+\n| segment_start | segment_end | bucket_id |\n+---------------+-------------+-----------+\n|       1       |      5      |     0     |\n|       6       |     10      |     1     |\n|      11       |     15      |     2     |\n|      16       |     20      |     3     |\n|      21       |     25      |     4     |\n|      26       |     30      |     5     |\n+---------------+-------------+-----------+\n```", "```py\nSELECT\n  country,\n  city,\n  owner,\n  explode(sequence(start_ip / 5, end_ip / 5)) AS bucket_id\nFROM\n  geolocations\n```", "```py\n+----------+--------+---------+-----------+-----------+-----------+\n| start_ip | end_ip | country |    city   |   owner   | bucket_id |\n+----------+--------+---------+-----------+-----------+-----------+\n|    1     |    2   |   ca    | Toronto   |   Telus   |     0     |\n|    3     |    4   |   ca    | Quebec    |  Rogers   |     0     |\n|    5     |    8   |   ca    | Vancouver |   Bell    |     1     |\n|   10     |   14   |   ca    | Montreal  |   Telus   |     2     |\n|   19     |   22   |   ca    |  Ottawa   |  Rogers   |     3     |\n|   19     |   22   |   ca    |  Ottawa   |  Rogers   |     4     |\n|   23     |   29   |   ca    | Calgary   | Videotron |     4     |\n|   23     |   29   |   ca    | Calgary   | Videotron |     5     |\n+----------+--------+---------+-----------+-----------+-----------+\n```", "```py\nSELECT\n  *\nFROM\n  events\n  JOIN geolocation\n  ON (\n    event_ip / 5 = bucket_id\n    AND event_ip >= start_ip\n    AND event_ip <= end_ip\n  )\n```", "```py\nSELECT \n    approx_percentile(\n        end_ip - start_ip, \n        array(0.800, 0.900, 0.950, 0.990, 0.999, 0.9999),\n        10000)\nFROM\n    geolocation\n```", "```py\nWITH\n  b_geo AS (\n    SELECT\n      explode(\n        sequence(\n          CAST(start_ip / 256 AS INT), \n          CAST(end_ip / 256 AS INT))) AS bucket_id,\n      *\n    FROM\n      geolocation\n  ),\n  b_events AS (\n    SELECT\n      CAST(event_ip / 256 AS INT) AS bucket_id,\n      *\n    FROM\n      events\n  )\n\nSELECT\n  *\nFROM\n  b_events\n  JOIN b_geo\n  ON (\n    b_events.bucket_id = b_geo.bucket_id\n    AND b_events.event_ip >= b_geo.start_ip\n    AND b_events.event_ip <= b_geo.end_ip\n  );\n```"]