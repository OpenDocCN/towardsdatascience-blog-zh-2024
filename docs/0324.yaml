- en: Real-Time Anomaly Detection For Quality Control
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/real-time-anomaly-detection-for-quality-control-e6af28a3350d?source=collection_archive---------5-----------------------#2024-02-03](https://towardsdatascience.com/real-time-anomaly-detection-for-quality-control-e6af28a3350d?source=collection_archive---------5-----------------------#2024-02-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Insights after two years in the industry
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@anthonycvn?source=post_page---byline--e6af28a3350d--------------------------------)[![Anthony
    Cavin](../Images/60a13c72d1390b74864cd12bc959eae9.png)](https://medium.com/@anthonycvn?source=post_page---byline--e6af28a3350d--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e6af28a3350d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e6af28a3350d--------------------------------)
    [Anthony Cavin](https://medium.com/@anthonycvn?source=post_page---byline--e6af28a3350d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e6af28a3350d--------------------------------)
    ·10 min read·Feb 3, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/94997be408610283291b5d9da76f60e7.png)'
  prefs: []
  type: TYPE_IMG
- en: Example of an encoder and a graph in the latent space (image by author)
  prefs: []
  type: TYPE_NORMAL
- en: '**The scenario**: a high-speed production line is producing thousands of products.
    Two cameras are installed to continuously control the quality of each product.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The goal:** develop an algorithm that can check each product as fast as possible.'
  prefs: []
  type: TYPE_NORMAL
- en: '**The constraint:** you have an edge device with limited resources.'
  prefs: []
  type: TYPE_NORMAL
- en: In this blog post, we will *divide and conquer* the problem. First by extracting
    meaningful features out of the images and then by using anomaly detection models
    to detect outliers from those features.
  prefs: []
  type: TYPE_NORMAL
- en: The key idea is to learn a lower dimensional representation of the visual input
    and to use this representation to train a classifier that can distinguish between
    normal and anomalous inputs.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We will explore some interesting methods for feature extraction, including histograms
    of oriented gradients (HOG), wavelet edge detection, and convolutional neural
    networks (CNNs).
  prefs: []
  type: TYPE_NORMAL
- en: Finally, we will cover two libraries that I found particularly useful to benchmark
    and implement algorithms in streaming data–[PyOD](https://pyod.readthedocs.io/en/latest/)
    and [PySAD](https://pysad.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
