- en: 'Doping: A Technique to Test Outlier Detectors'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 掺假：测试异常值检测器的技术
- en: 原文：[https://towardsdatascience.com/doping-a-technique-to-test-outlier-detectors-3f6b847ab8d4?source=collection_archive---------2-----------------------#2024-07-09](https://towardsdatascience.com/doping-a-technique-to-test-outlier-detectors-3f6b847ab8d4?source=collection_archive---------2-----------------------#2024-07-09)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/doping-a-technique-to-test-outlier-detectors-3f6b847ab8d4?source=collection_archive---------2-----------------------#2024-07-09](https://towardsdatascience.com/doping-a-technique-to-test-outlier-detectors-3f6b847ab8d4?source=collection_archive---------2-----------------------#2024-07-09)
- en: Using well-crafted synthetic data to compare and evaluate outlier detectors
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用精心制作的合成数据比较和评估异常值检测器
- en: '[](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)[![W
    Brett Kennedy](../Images/b3ce55ffd028167326c117d47c64c467.png)](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)
    [W Brett Kennedy](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)[![W
    Brett Kennedy](../Images/b3ce55ffd028167326c117d47c64c467.png)](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)
    [W Brett Kennedy](https://medium.com/@wkennedy934?source=post_page---byline--3f6b847ab8d4--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)
    ·14 min read·Jul 9, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3f6b847ab8d4--------------------------------)
    ·14分钟阅读·2024年7月9日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: This article continues my series on outlier detection, following articles on
    [Counts Outlier Detector](https://medium.com/towards-data-science/counts-outlier-detector-interpretable-outlier-detection-ead0d469557a)
    and [Frequent Patterns Outlier Factor](https://medium.com/towards-data-science/interpretable-outlier-detection-frequent-patterns-outlier-factor-fpof-0d9cbf51b17a),
    and provides another excerpt from my book [Outlier Detection in Python](https://www.manning.com/books/outlier-detection-in-python).
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 本文是我关于异常值检测系列文章的一部分，之前发布过关于[计数异常值检测器](https://medium.com/towards-data-science/counts-outlier-detector-interpretable-outlier-detection-ead0d469557a)和[频繁模式异常值因子](https://medium.com/towards-data-science/interpretable-outlier-detection-frequent-patterns-outlier-factor-fpof-0d9cbf51b17a)的文章，并提供了我书籍[Python中的异常值检测](https://www.manning.com/books/outlier-detection-in-python)的另一个摘录。
- en: In this article, we look at the issue of testing and evaluating outlier detectors,
    a notoriously difficult problem, and present one solution, sometimes referred
    to as *doping.* Using doping, real data rows are modified (usually) randomly,
    but in such a way as to ensure they are likely an outlier in some regard and,
    as such, should be detected by an outlier detector. We’re then able to evaluate
    detectors by assessing how well they are able to detect the doped records.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 本文探讨了测试和评估异常值检测器的问题，这是一个众所周知的难题，并提出了一种解决方案，有时被称为*掺假*。通过掺假，真实数据行会被修改（通常是随机的），但修改的方式确保它们在某些方面很可能是异常值，因此应该被异常值检测器检测到。然后，我们可以通过评估检测器检测掺假记录的能力来评估它们的表现。
- en: In this article, we look specifically at tabular data, but the same idea may
    be applied to other modalities as well, including text, image, audio, network
    data, and so on.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 本文专门讨论表格数据，但同样的思路也可以应用于其他形式的数据，包括文本、图像、音频、网络数据等。
- en: Testing and Evaluating other Types of Models
  id: totrans-9
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 测试和评估其他类型的模型
- en: 'Likely, if you’re familiar with outlier detection, you’re also familiar, at
    least to some degree, with predictive models for regression and classification
    problems. With these types of problems, we have labelled data, and so it’s relatively
    simple to evaluate each option when tuning a model (selecting the best pre-processing,
    features, hyper-parameters, and so on); and it’s also relatively easy to estimate
    a model’s accuracy (how it will perform on unseen data): we simply use a train-validation-test
    split, or better, use cross validation. As the data is labelled, we can see directly
    how the model performs on a labelled test data.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你熟悉离群点检测，你可能也至少在某种程度上熟悉回归和分类问题的预测模型。对于这些问题，我们有标注数据，因此在调整模型时评估每个选项相对简单（选择最佳的预处理、特征、超参数等）；同时，估计模型的准确性（它在未见过的数据上的表现）也相对容易：我们只需使用训练-验证-测试拆分，或者更好地使用交叉验证。由于数据是标注的，我们可以直接看到模型在标注测试数据上的表现。
- en: But, with outlier detection, there is no labelled data and the problem is significantly
    more difficult; we have no objective way to determine if the records scored highest
    by the outlier detector are, in fact, the most statistically unusual within the
    dataset.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 但在离群点检测中，没有标注数据，问题也要困难得多；我们没有客观的方法来判断离群点检测器评分最高的记录是否确实是数据集中最具统计异常性的记录。
- en: 'With clustering, as another example, we also have no labels for the data, but
    it is at least possible to measure the quality of the clustering: we can determine
    how internally consistent the clusters are and how different the clusters are
    from each other. Using some distance metric (such as Manhattan or Euclidean distances),
    we can measure how close records within a cluster are to each other and how far
    apart clusters are from each other.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 以聚类为例，我们同样没有数据的标签，但至少可以衡量聚类的质量：我们可以确定聚类内部的一致性如何，以及聚类之间的差异有多大。通过使用某种距离度量（如曼哈顿距离或欧几里得距离），我们可以衡量一个聚类内的记录彼此之间的接近程度，以及不同聚类之间的远离程度。
- en: So, given a set of possible clusterings, it’s possible to define a sensible
    metric (such as the Silhouette score) and determine which is the preferred clustering,
    at least with respect to that metric. That is, much like prediction problems,
    we can calculate a score for each clustering, and select the clustering that appears
    to work best.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 所以，给定一组可能的聚类，能够定义一个合理的度量标准（如轮廓系数），并确定哪一个聚类是首选的，至少在这个度量标准下是这样。也就是说，就像预测问题一样，我们可以为每个聚类计算一个分数，并选择表现最好的聚类。
- en: With outlier detection, though, we have nothing analogous to this we can use.
    Any system that seeks to quantify how anomalous a record is, or that seeks to
    determine, given two records, which is the more anomalous of the two, is effectively
    an outlier detection algorithm in itself.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在离群点检测中，我们没有类似的东西可以使用。任何试图量化记录异常程度的系统，或是试图判断给定的两条记录中哪一条更为异常的系统，实际上都是一个离群点检测算法。
- en: For example, we could use entropy as our outlier detection method, and can then
    examine the entropy of the full dataset as well as the entropy of the dataset
    after removing any records identified as strong outliers. This is, in a sense,
    valid; entropy is a useful measure of the presence of outliers. But we cannot
    assume entropy is the definitive definition of outliers in this dataset; one of
    the fundamental qualities of outlier detection is that there is no definitive
    definition of outliers.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以使用熵作为离群点检测方法，然后检查完整数据集的熵，以及在移除任何被识别为强离群点的记录后，数据集的熵。从某种意义上说，这种做法是有效的；熵是衡量离群点存在的一种有用指标。但我们不能假设熵是该数据集中离群点的最终定义；离群点检测的一个基本特性是，没有离群点的最终定义。
- en: In general, if we have any way to try to evaluate the outliers detected by an
    outlier detection system (or, as in the previous example, the dataset with and
    without the identified outliers), this is effectively an outlier detection system
    in itself, and it becomes circular to use this to evaluate the outliers found.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 一般来说，如果我们有任何方式来尝试评估离群点检测系统检测到的离群点（或者，像前一个例子中一样，评估包含和不包含已识别离群点的数据集），这实际上就是一个离群点检测系统本身，使用它来评估已找到的离群点会变得循环无效。
- en: Consequently, it’s quite difficult to evaluate outlier detection systems and
    there’s effectively no good way to do so, at least using the real data that’s
    available.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，评估离群点检测系统相当困难，实际上没有一个很好的方法，至少使用现有的真实数据无法做到这一点。
- en: We can, though, create synthetic test data (in such a way that we can assume
    the synthetically-created data are predominantly outliers). Given this, we can
    determine the extent to which outlier detectors tend to score the synthetic records
    more highly than the real records.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 但是，我们仍然可以创建合成测试数据（以一种可以假定合成数据主要是异常值的方式）。有了这些数据，我们可以确定异常值检测器倾向于比真实记录给合成记录更高的分数的程度。
- en: There are a number of ways to create synthetic data we cover in the [book](https://www.manning.com/books/outlier-detection-in-python),
    but for this article, we focus on one method, doping.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 有许多方法可以创建合成数据，我们在[书籍](https://www.manning.com/books/outlier-detection-in-python)中介绍了这些方法，但在本文中，我们专注于一种方法，即掺毒。
- en: Doping Data Records
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 掺毒数据记录
- en: Doping data records refers to taking existing data records and modifying them
    slightly, typically changing the values in just one, or a small number, of cells
    per record.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '**掺毒数据记录**指的是对现有数据记录进行轻微修改，通常只改变每条记录中的一个或少数几个单元格的值。'
- en: 'If the data being examined is, for example, a table related to the financial
    performance of a company comprised of franchise locations, we may have a row for
    each franchise, and our goal may be to identify the most anomalous of these. Let’s
    say we have features including:'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果被检查的数据是例如与一个由特许经营店组成的公司财务表现相关的表格，我们可能会为每个特许经营店创建一行数据，我们的目标可能是识别出这些数据中最异常的记录。假设我们有以下特征：
- en: Age of the franchise
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 特许经营的年龄
- en: Number of years with the current owner
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当前所有者拥有的年数
- en: Number of sales last year
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去年销售数量
- en: Total dollar value of sales last year
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 去年总销售额的美元数
- en: As well as some number of other features.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 以及一些其他特征。
- en: 'A typical record may have values for these four features such as: 20 years
    old, 5 years with the current owner, 10,000 unique sales in the last year, for
    a total of $500,000 in sales in the last year.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 一条典型记录可能包含如下四个特征的值：20岁，5年与当前所有者的合作，去年10,000笔独特销售，总销售额为500,000美元。
- en: We could create a doped version of this record by adjusting a value to a rare
    value, for example, setting the age of the franchise to 100 years. This can be
    done, and will provide a quick smoke test of the detectors being tested — likely
    any detector will be able to identify this as anomalous (assuming a value is 100
    is rare), though we may be able to eliminate some detectors that are not able
    to detect this sort of modified record reliably.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以通过调整某个值为一个罕见的值来创建该记录的掺毒版本，例如，将特许经营的年龄设置为100年。这是可以做到的，并且可以对正在测试的检测器进行快速的烟雾测试——很可能任何检测器都会识别出这个值是异常的（假设100是一个罕见的值），虽然我们可能能够排除一些无法可靠检测到这种修改记录的检测器。
- en: We would not necessarily remove from consideration the type of outlier detector
    (e.g. kNN, Entropy, or Isolation Forest) itself, but the combination of type of
    outlier detector, pre-processing, hyperparameters, and other properties of the
    detector. We may find, for example, that kNN detectors with certain hyperparameters
    work well, while those with other hyperparameters do not (at least for the types
    of doped records we test with).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不一定会排除某种异常值检测器（例如kNN、Entropy或Isolation Forest）的使用，而是会排除异常值检测器的类型、预处理方法、超参数以及检测器的其他特性。例如，我们可能会发现，某些超参数下的kNN检测器表现良好，而其他超参数下的kNN检测器则表现不好（至少对于我们测试的掺毒记录来说是这样）。
- en: Usually, though, most testing will be done creating more subtle outliers. In
    this example, we could change the dollar value of total sales from 500,000 to
    100,000, which may still be a typical value, but the combination of 10,000 unique
    sales with $100,000 in total sales is likely unusual for this dataset. That is,
    much of the time with doping, we are creating records that have unusual combinations
    of values, though unusual single values are sometimes created as well.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，通常大部分测试都会创建更微妙的异常值。在这个例子中，我们可以将总销售额从500,000美元改为100,000美元，虽然100,000美元仍然可能是一个典型值，但10,000笔独特销售与100,000美元的总销售额的组合对于这个数据集来说可能是异常的。也就是说，在掺毒时，我们通常创建的是具有异常值组合的记录，尽管有时也会创建单个异常值。
- en: When changing a value in a record, it’s not known specifically how the row will
    become an outlier (assuming it does), but we can assume most tables have associations
    between the features. Changing the dollar value to 100,000 in this example, may
    (as well as creating an unusual combination of number of sales and dollar value
    of sales) quite likely create an unusual combination given the age of the franchise
    or the number of years with the current owner.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 在记录中更改一个值时，具体如何使该行成为离群值（假设它确实成为了离群值）并不明确，但我们可以假设大多数表格之间的特征是有联系的。在此示例中，将美元值改为100,000，可能（以及创造一个异常的销售数量和销售额组合）很可能会由于特许经营的年龄或当前拥有者的年限，创造出一个不寻常的组合。
- en: 'With some tables, however, there are no associations between the features,
    or there are only few and weak associations. This is rare, but can occur. With
    this type of data, there is no concept of unusual combinations of values, only
    unusual single values. Although rare, this is actually a simpler case to work
    with: it’s easier to detect outliers (we simply check for single unusual values),
    and it’s easier to evaluate the detectors (we simply check how well we are able
    to detect unusual single values). For the remainder of this article, though, we
    will assume there are some associations between the features and that most anomalies
    would be unusual combinations of values.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，对于某些表格来说，特征之间没有关联，或者仅有少数且较弱的关联。这种情况较为罕见，但确实可能发生。对于这种类型的数据，没有异常值组合的概念，只有异常单一值。尽管这种情况罕见，但实际上它是一个更简单的处理案例：检测离群值更容易（我们只需检查单一的异常值），评估检测器也更容易（我们只需检查我们是否能检测到异常单一值）。不过，本文的其余部分将假设特征之间存在某些关联，并且大多数异常情况将是值的异常组合。
- en: Working with Doped Data
  id: totrans-34
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 处理掺入数据
- en: Most outlier detectors (with a small number of exceptions) have separate training
    and prediction steps. In this way, most are similar to predictive models. During
    the training step, the training data is assessed and the normal patterns within
    the data (for example, the normal distances between records, the frequent item
    sets, the clusters, the linear relationships between features, etc.) are identified.
    Then, during the prediction step, a test set of data (which may be the same data
    used for training, or may be separate data) is compared against the patterns found
    during training, and each row is assigned an outlier score (or, in some cases,
    a binary label).
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 大多数离群值检测器（有少数例外）有独立的训练和预测步骤。因此，大多数离群值检测器与预测模型类似。在训练步骤中，评估训练数据并识别数据中的正常模式（例如，记录之间的正常距离、频繁项集、簇、特征之间的线性关系等）。然后，在预测步骤中，将测试数据集（可能与训练数据相同，也可能是不同的数据）与训练期间发现的模式进行比较，并为每一行分配一个离群值得分（或在某些情况下，一个二元标签）。
- en: 'Given this, there are two main ways we can work with doped data:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于此，我们可以通过两种主要方式处理掺入数据：
- en: '**Including doped records in the training data**'
  id: totrans-37
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**在训练数据中包含掺入记录**'
- en: 'We may include some small number of doped records in the training data and
    then use this data for testing as well. This tests our ability to detect outliers
    in the currently-available data. This is a common task in outlier detection: given
    a set of data, we often wish to find the outliers in this dataset (though may
    wish to find outliers in subsequent data as well — records that are anomalous
    relative to the norms for this training data).'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以在训练数据中包含少量的掺入记录，然后也使用这些数据进行测试。这可以测试我们在当前可用数据中检测离群值的能力。这是离群值检测中的常见任务：给定一组数据，我们通常希望找出数据集中的离群值（尽管也可能希望找出后续数据中的离群值——相对于该训练数据的规范来说是异常的记录）。
- en: Doing this, we can test with only a small number of doped records, as we do
    not wish to significantly affect the overall distributions of the data. We then
    check if we are able to identify these as outliers. One key test is to include
    both the original and the doped version of the doped records in the training data
    in order to determine if the detectors score the doped versions significantly
    higher than the original versions of the same records.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这样做，我们可以仅使用少量的掺入记录进行测试，因为我们不希望显著影响数据的整体分布。然后，我们检查是否能够将这些记录识别为离群值。一个关键的测试是，在训练数据中包含原始版本和掺入版本的掺入记录，以确定检测器是否将掺入版本的得分显著高于相同记录的原始版本。
- en: We also, though, wish do check that the doped records are generally scored among
    the highest (with the understanding that some original, unmodified records may
    legitimately be more anomalous than the doped records, and that some doped records
    may not be anomalous).
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们也希望检查掺杂记录是否普遍被评为最高（理解为一些原始未修改记录可能比掺杂记录更为异常，而且某些掺杂记录可能并不异常）。
- en: Given that we can test only with a small number of doped records, this process
    may be repeated many times.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 鉴于我们只能用少量掺杂记录进行测试，这个过程可能会重复多次。
- en: The doped data is used, however, only for evaluating the detectors in this way.
    When creating the final model(s) for production, we will train on only the original
    (real) data.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，掺杂数据仅用于以这种方式评估检测器。在为生产创建最终模型时，我们将仅使用原始（真实）数据进行训练。
- en: If we are able to reliably detect the doped records in the data, we can be reasonably
    confident that we are able to identify other outliers within the same data, at
    least outliers along the lines of the doped records (but not necessarily outliers
    that are substantially more subtle — hence we wish to include tests with reasonably
    subtle doped records).
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们能够可靠地检测到数据中的掺杂记录，我们可以合理地相信，我们能够识别出同一数据集中的其他异常值，至少是类似掺杂记录的异常值（但不一定是那些更加微妙的异常值——因此我们希望包括一些
    reasonably subtle 的掺杂记录进行测试）。
- en: '**2\. Including doped records only in the testing data**'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: '**2\. 仅在测试数据中包含掺杂记录**'
- en: It is also possible to train using only the real data (which we can assume is
    largely non-outliers) and then test with both the real and the doped data. This
    allows us to train on relatively clean data (some records in the real data will
    be outliers, but the majority will be typical, and there is no contamination due
    to doped records).
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 也可以仅使用真实数据进行训练（我们可以假设这些数据大多数不是异常值），然后同时使用真实数据和掺杂数据进行测试。这允许我们在相对干净的数据上进行训练（真实数据中的一些记录可能是异常值，但大多数是典型的，并且不会因为掺杂记录而受到污染）。
- en: It also allows us to test with the actual outlier detector(s) that may, potentially,
    be put in production (depending how well they perform with the doped data — both
    compared to the other detectors we test, and compared to our sense of how well
    a detector should perform at minimum).
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 它还允许我们使用可能会投入生产的实际异常值检测器进行测试（具体取决于它们在掺杂数据上的表现——无论是与我们测试的其他检测器相比，还是与我们对检测器最小表现的预期相比）。
- en: 'This tests our ability to detect outliers in future data. This is another common
    scenario with outlier detection: where we have one dataset that can be assumed
    to be reasonable clean (either free of outliers, or containing only a small, typical
    set of outliers, and without any extreme outliers) and we wish to compare future
    data to this.'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 这测试了我们在未来数据中检测异常值的能力。这是异常值检测中的另一个常见场景：我们有一个可以假定为相对干净的数据集（要么没有异常值，要么仅包含少量典型的异常值，并且没有极端异常值），我们希望将未来的数据与之进行比较。
- en: Training with real data only and testing with both real and doped, we may test
    with any volume of doped data we wish, as the doped data is used only for testing
    and not for training. This allows us to create a large, and consequently, more
    reliable test dataset.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 仅使用真实数据进行训练，并使用真实和掺杂数据进行测试时，我们可以根据需要测试任何量的掺杂数据，因为掺杂数据仅用于测试而非训练。这使得我们能够创建一个较大且因此更可靠的测试数据集。
- en: Algorithms to Create Doped Data
  id: totrans-49
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建掺杂数据的算法
- en: 'There are a number of ways to create doped data, including several covered
    in [Outlier Detection in Python](https://www.manning.com/books/outlier-detection-in-python),
    each with its own strengths and weaknesses. For simplicity, in this article we
    cover just one option, where the data is modified in a fairly random manner: where
    the cell(s) modified are selected randomly, and the new values that replace the
    original values are created randomly.'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 有多种方法可以创建掺杂数据，包括在[《Python中的异常值检测》](https://www.manning.com/books/outlier-detection-in-python)中介绍的几种方法，每种方法都有其优缺点。为了简化，在本文中我们只介绍一种方法，其中数据是以相当随机的方式进行修改的：修改的单元格是随机选择的，替代原始值的新值是随机创建的。
- en: Doing this, it is possible for some doped records to not be truly anomalous,
    but in most cases, assigning random values will upset one or more associations
    between the features. We can assume the doped records are largely anomalous, though,
    depending how they are created, possibly only slightly so.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这样做时，某些掺杂记录可能并不真正是异常的，但在大多数情况下，随机赋值会破坏特征之间的一个或多个关联。尽管如此，我们可以假设掺杂记录大多是异常的，尽管根据其创建方式，可能只是轻微异常。
- en: Example
  id: totrans-52
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 示例
- en: Here we go through an example, taking a real dataset, modifying it, and testing
    to see how well the modifications are detected.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们通过一个例子，使用真实的数据集，修改它并进行测试，以查看修改的检测效果。
- en: In this example, we use a dataset available on OpenML called abalone ([https://www.openml.org/search?type=data&sort=runs&id=42726&status=active](https://www.openml.org/search?type=data&sort=runs&id=42726&status=active),
    available under public license).
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们使用了一个在OpenML上可用的数据集，名为abalone（[https://www.openml.org/search?type=data&sort=runs&id=42726&status=active](https://www.openml.org/search?type=data&sort=runs&id=42726&status=active)，该数据集在公共许可证下可用）。
- en: Although other preprocessing may be done, for this example, we one-hot encode
    the categorical features and use RobustScaler to scale the numeric features.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管可以进行其他预处理，但在这个例子中，我们对分类特征进行独热编码，并使用RobustScaler对数值特征进行缩放。
- en: We test with three outlier detectors, Isolation Forest, LOF, and ECOD, all available
    in the popular [PyOD](https://github.com/yzhao062/pyod) library (which must be
    pip installed to execute).
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们使用了三种离群点检测器进行测试：Isolation Forest、LOF 和 ECOD，这些检测器都可以在流行的[PyOD](https://github.com/yzhao062/pyod)库中找到（必须先通过pip安装才能执行）。
- en: We also use an Isolation Forest to clean the data (remove any strong outliers)
    before any training or testing. This step is not necessary, but is often useful
    with outlier detection.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还使用Isolation Forest来清理数据（去除任何强烈的离群点），以便在进行任何训练或测试之前进行处理。这个步骤并非必须，但在离群点检测中通常是有用的。
- en: This is an example of the second of the two approaches described above, where
    we train on the original data and test with both the original and doped data.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这是上述两种方法中的第二种方法的例子，我们在原始数据上进行训练，并用原始数据和掺假数据进行测试。
- en: '[PRE0]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/592ffaafb6f576b9d48038f97e15cbc7.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/592ffaafb6f576b9d48038f97e15cbc7.png)'
- en: Here, to create the doped records, we copy the full set of original records,
    so will have an equal number of doped as original records. For each doped record,
    we select one feature randomly to modify. If the original value is below the median,
    we create a random value above the median; if the original is below the median,
    we create a random value above.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，为了创建掺假记录，我们复制了完整的原始记录集，因此掺假记录与原始记录的数量相等。对于每个掺假记录，我们随机选择一个特征进行修改。如果原始值低于中位数，我们创建一个高于中位数的随机值；如果原始值高于中位数，我们创建一个低于中位数的随机值。
- en: In this example, we see that IF does score the doped records higher, but not
    significantly so. LOF does an excellent job distinguishing the doped records,
    at least for this form of doping. ECOD is a detector that detects only unusually
    small or unusually large single values and does not test for unusual combinations.
    As the doping used in this example does not create extreme values, only unusual
    combinations, ECOD is unable to distinguish the doped from the original records.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个例子中，我们看到，虽然IF确实对掺假记录的评分较高，但差异并不显著。LOF在区分掺假记录方面表现出色，至少对于这种掺假方式来说是这样。ECOD是一个仅检测异常小值或异常大值的检测器，它不测试异常组合。由于这个例子中的掺假并没有创建极端值，只是一些不寻常的组合，因此ECOD无法区分掺假记录和原始记录。
- en: This example uses boxplots to compare the detectors, but normally we would use
    an objective score, very often the AUROC (Area Under a Receiver Operator Curve)
    score to evaluate each detector. We would also typically test many combinations
    of model type, pre-processing, and parameters.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子使用箱形图来比较检测器，但通常我们会使用一个客观评分，通常是AUROC（接收者操作特征曲线下面积）得分来评估每个检测器。我们通常还会测试多种模型类型、预处理方法和参数组合。
- en: Alternative Doping Methods
  id: totrans-64
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 替代性掺假方法
- en: 'The above method will tend to create doped records that violate the normal
    associations between features, but other doping techniques may be used to make
    this more likely. For example, considering first categorical columns, we may select
    a new value such that both:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 上述方法往往会创建违反特征之间正常关联的掺假记录，但可以使用其他掺假技术来增加这种情况的可能性。例如，首先考虑分类列，我们可以选择一个新的值，使得同时满足以下条件：
- en: The new value is different from the original value
  id: totrans-66
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新值与原始值不同
- en: The new value is different from the value that would be predicted from the other
    values in the row. To achieve this, we can create a predictive model that predicts
    the current value of this column, for example a Random Forest Classifier.
  id: totrans-67
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新值与根据行中其他值预测的值不同。为实现这一点，我们可以创建一个预测模型，预测该列当前的值，例如使用随机森林分类器。
- en: 'With numeric data, we can achieve the equivalent by dividing each numeric feature
    into four quartiles (or some number of quantiles, but at least three). For each
    new value in a numeric feature, we then select a value such that both:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 对于数值数据，我们可以通过将每个数值特征划分为四个四分位数（或者若干个分位数，但至少是三个）来实现等效效果。对于数值特征中的每个新值，我们接着选择一个值，使得：
- en: The new value is in a different quartile than the original
  id: totrans-69
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新值与原值处于不同的四分位数
- en: The new value is in a different quartile than what would be predicted given
    the other values in the row.
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 新值与根据行中其他值预测的值处于不同的四分位数
- en: For example, if the original value is in Q1 and the predicted value is in Q2,
    then we can select a value randomly in either Q3 or Q4\. The new value will, then,
    most likely go against the normal relationships among the features.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，如果原值在Q1，而预测值在Q2，那么我们可以随机选择Q3或Q4中的值。这样，新值很可能会违反特征之间的正常关系。
- en: Creating a suite of test datasets
  id: totrans-72
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建测试数据集套件
- en: There is no definitive way to say how anomalous a record is once doped. However,
    we can assume that on average the more features modified, and the more they are
    modified, the more anomalous the doped records will be. We can take advantage
    of this to create not a single test suite, but multiple test suites, which allows
    us to evaluate the outlier detectors much more accurately.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦数据被篡改，就没有明确的方法来衡量记录的异常程度。然而，我们可以假设，平均而言，修改的特征越多，修改的程度越大，篡改后的记录就会越异常。我们可以利用这一点来创建多个测试集，而不是单一的测试集，这样可以更准确地评估异常值检测器的表现。
- en: For example, we can create a set of doped records that are very obvious (multiple
    features are modified in each record, each to a value significantly different
    from the original value), a set of doped records that are very subtle (only a
    single feature is modified, not significantly from the original value), and many
    levels of difficulty in between. This can help differentiate the detectors well.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，我们可以创建一组非常明显的篡改记录（每条记录中修改了多个特征，每个特征的值与原值有显著差异），一组非常微妙的篡改记录（仅修改了一个特征，且与原值没有显著差异），以及介于两者之间的多个难度等级。这有助于很好地区分不同的检测器。
- en: So, we can create a suite of test sets, where each test set has a (roughly estimated)
    level of difficulty based on the number of features modified and the degree they’re
    modified. We can also have different sets that modify different features, given
    that outliers in some features may be more relevant, or may be easier or more
    difficult to detect.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 因此，我们可以创建一个测试集套件，其中每个测试集的（大致估算的）难度基于修改的特征数量和修改的程度。我们还可以有不同的集，其中修改了不同的特征，因为某些特征中的异常值可能更相关，或者更容易或更难被检测到。
- en: It is, though, important that any doping performed represents the type of outliers
    that would be of interest if they did appear in real data. Ideally, the set of
    doped records also covers well the range of what you would be interested in detecting.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，重要的是，任何进行的篡改都应该代表在实际数据中可能出现的异常值类型。理想情况下，篡改后的记录集还应很好地覆盖你希望检测到的异常值范围。
- en: If these conditions are met, and multiple test sets are created, this is very
    powerful for selecting the best-performing detectors and estimating their performance
    on future data. We cannot predict how many outliers will be detected or what levels
    of false positives and false negatives you will see — these depend greatly on
    the data you will encounter, which in an outlier detection context is very difficult
    to predict. But, we can have a decent sense of the types of outliers you are likely
    to detect and to not.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 如果这些条件得到满足，并且创建了多个测试集，这对于选择表现最佳的检测器并评估它们在未来数据上的表现非常有效。我们无法预测将检测到多少异常值，也无法预测会出现多少假阳性和假阴性——这些很大程度上取决于你所遇到的数据，而在异常值检测中，这是非常难以预测的。但是，我们可以大致了解你可能会检测到哪些类型的异常值，以及哪些类型的异常值可能无法检测到。
- en: Possibly more importantly, we are also well situated to create an effective
    ensemble of outlier detectors. In outlier detection, ensembles are typically necessary
    for most projects. Given that some detectors will catch some types of outliers
    and miss others, while other detectors will catch and miss other types, we can
    usually only reliably catch the range of outliers we’re interested in using multiple
    detectors.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 可能更重要的是，我们还能够有效地创建一个异常值检测器的集成。在异常值检测中，集成通常对于大多数项目都是必要的。因为一些检测器能捕捉到某些类型的异常值，但会遗漏其他类型，而其他检测器则能够捕捉并遗漏其他类型的异常值，所以我们通常只能通过使用多个检测器，可靠地捕捉到我们感兴趣的异常值范围。
- en: Creating ensembles is a large and involved area in itself, and is different
    than ensembling with predictive models. But, for this article, we can indicate
    that having an understanding of what types of outliers each detector is able to
    detect gives us a sense of which detectors are redundant and which can detect
    outliers most others are not able to.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 创建集成模型本身是一个庞大且复杂的领域，且与预测模型的集成不同。但对于本文，我们可以指出，了解每种检测器能够检测哪些类型的异常值，可以帮助我们判断哪些检测器是冗余的，哪些能够检测出大多数其他检测器无法识别的异常值。
- en: Conclusions
  id: totrans-80
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: It is difficult to assess how well any given outlier detector detects outliers
    in the current data, and even harder to asses how well it may do on future (unseen)
    data. It is also very difficult, given two or more outlier detectors, to assess
    which would do better, again on both the current and on future data.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 很难评估任何给定的异常值检测器在当前数据中识别异常值的效果，更难评估它在未来（未见过的）数据上的表现。对于两个或更多的异常值检测器，也很难评估哪个在当前和未来数据上表现更好。
- en: There are, though, a number of ways we can estimate these using synthetic data.
    In this article, we went over, at least quickly (skipping a lot of the nuances,
    but covering the main ideas), one approach based on doping real records and evaluating
    how well we’re able to score these more highly than the original data. Although
    not perfect, these methods can be invaluable and there is very often no other
    practical alternative with outlier detection.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，我们有多种方法可以使用合成数据来估计这些值。在本文中，我们至少快速地概述了一种基于对真实记录进行掺杂并评估我们如何能够将这些记录的得分提高到超过原始数据的程度的方法（跳过了许多细节，但涵盖了主要思想）。虽然这些方法并不完美，但它们非常有价值，而且在进行异常值检测时，往往没有其他实用的替代方案。
- en: All images are from the author.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 所有图片均来自作者。
