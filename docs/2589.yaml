- en: Build and Deploy a Multi-File, Multi-Format RAG App to the Web
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/build-and-deploy-a-multi-file-multi-format-rag-app-to-the-web-910b7ac5eb6d?source=collection_archive---------2-----------------------#2024-10-24](https://towardsdatascience.com/build-and-deploy-a-multi-file-multi-format-rag-app-to-the-web-910b7ac5eb6d?source=collection_archive---------2-----------------------#2024-10-24)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/73c107381cbd02c4aa7182ffb023d1ed.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by AI (Dalle-3)
  prefs: []
  type: TYPE_NORMAL
- en: DEVELOPING THE APP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Part 1 — Developing the code using Python, Gradio, GROQ & LlamaIndex
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@thomas_reid?source=post_page---byline--910b7ac5eb6d--------------------------------)[![Thomas
    Reid](../Images/c1b4e5f577272633ba07e5dbfd21c02d.png)](https://medium.com/@thomas_reid?source=post_page---byline--910b7ac5eb6d--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--910b7ac5eb6d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--910b7ac5eb6d--------------------------------)
    [Thomas Reid](https://medium.com/@thomas_reid?source=post_page---byline--910b7ac5eb6d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--910b7ac5eb6d--------------------------------)
    ·11 min read·Oct 24, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: This is the first of a two-part series of articles. In this part (Part 1) I’ll
    show you how to develop a useful Web app that can upload and read many different
    types of file e.g. PDF, TXT, DOCX etc … We’ll then use AI and RAG to analyse the
    files and answer questions on them.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: In part 2, I’ll show you how you can use Hugging Face Spaces to deploy your
    app to the web so the rest of the world can marvel at your greatness.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**PS. If you want a sneak peek at the deployed app on Hugging Face Spaces,
    click on this** [**link**](https://huggingface.co/spaces/taupirho/gradio_multi_file_rag)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Undoubtedly, one of the largest growth areas to come out of AI and large Language
    Models is the field of Retrieval Augmented Generation (RAG). RAG is a fine-tuning
    method, where you provide an LLM with specific information it didn’t have access
    to in its training data.
  prefs: []
  type: TYPE_NORMAL
- en: If you’ve never heard of RAG before, don’t worry, it’s not that complicated.
    A typical RAG pipeline entails reading in one or more (usually PDF format) documents,
    but they can be CSV, TXT, or whatever. Splitting these document(s) into smaller
    chunks of text, encoding each token (kinda like an…
  prefs: []
  type: TYPE_NORMAL
