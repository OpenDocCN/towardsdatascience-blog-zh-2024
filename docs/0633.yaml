- en: How to cross validate your panel data in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 如何在Python中对面板数据进行交叉验证
- en: 原文：[https://towardsdatascience.com/how-to-cross-validate-your-panel-data-in-python-9ad981ddd043?source=collection_archive---------5-----------------------#2024-03-08](https://towardsdatascience.com/how-to-cross-validate-your-panel-data-in-python-9ad981ddd043?source=collection_archive---------5-----------------------#2024-03-08)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-to-cross-validate-your-panel-data-in-python-9ad981ddd043?source=collection_archive---------5-----------------------#2024-03-08](https://towardsdatascience.com/how-to-cross-validate-your-panel-data-in-python-9ad981ddd043?source=collection_archive---------5-----------------------#2024-03-08)
- en: '![](../Images/9ba98d4b8300f30aeec7177892adf319.png)'
  id: totrans-2
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9ba98d4b8300f30aeec7177892adf319.png)'
- en: 'Salinas de Janubio, Lanzarote, Canary Islands, Spain. Credit: [imag3s 4 u](https://www.instagram.com/imag3s_4_u/)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: 西班牙加那利群岛兰萨罗特岛的Salinas de Janubio。图片来源：[imag3s 4 u](https://www.instagram.com/imag3s_4_u/)
- en: An introduction to panel data cross validation using PanelSplit
  id: totrans-4
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用PanelSplit进行面板数据交叉验证简介
- en: '[](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)[![Eric
    Frey](../Images/1907ab08a5b30729b4bf71d65e3bb7c4.png)](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)
    [Eric Frey](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)'
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)[![Eric
    Frey](../Images/1907ab08a5b30729b4bf71d65e3bb7c4.png)](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)
    [Eric Frey](https://medium.com/@eric.frey?source=post_page---byline--9ad981ddd043--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)
    ·6 min read·Mar 8, 2024
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--9ad981ddd043--------------------------------)
    ·6分钟阅读·2024年3月8日
- en: --
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Motivation:** As someone who works with panel data, I often need to perform
    cross validation. This involves training up to a certain point in time, testing
    on a subset of observations, training up to a further point in time, testing on
    a different subset of observations, and iteratively continuing this process on
    a panel data set. Sound familiar? This can be really frustrating to implement
    manually. To make things easier, I’ve created a package called [PanelSplit](https://github.com/4Freye/panelsplit)
    that can help when working with panel data.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: '**动机：** 作为一名处理面板数据的人员，我经常需要进行交叉验证。这涉及到在某个时间点之前进行训练，在一部分观察数据上进行测试，然后在更远的时间点继续训练，再在不同的观察数据子集上进行测试，并在面板数据集上反复进行这种过程。听起来很熟悉吧？手动实现这个过程可能会非常令人沮丧。为了简化这一过程，我创建了一个名为[PanelSplit](https://github.com/4Freye/panelsplit)的包，它能在处理面板数据时提供帮助。'
- en: This article shows how you can use PanelSplit when working with panel data;
    from feature engineering, to hyper-parameter tuning, to generating predictions,
    PanelSplit is here to help!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 本文展示了如何在处理面板数据时使用PanelSplit；从特征工程到超参数调优，再到生成预测，PanelSplit都可以为您提供帮助！
- en: '**What is panel data?**'
  id: totrans-10
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**什么是面板数据？**'
- en: By **panel data**, I mean data where there are multiple entities over time.
    These entities could be countries, people, organizations, or any other unit of
    analysis. Multiple observations are recorded over time for these multiple entities.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 我所说的**面板数据**是指存在多个实体随时间变化的数据。这些实体可以是国家、个人、组织或任何其他分析单元。对这些多个实体在不同时间点进行了多次观察记录。
- en: What is cross validation?
  id: totrans-12
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是交叉验证？
- en: Say we want to get estimates of how good our predictions are when we use a model.
    How can we do this? The standard approach is **cross validation**, which involves
    splitting the data up into successive folds, each with its unique training and
    testing set. The visualization below shows what this looks like for time series
    data.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 假设我们想要估计在使用模型时预测的准确性。我们该如何进行？标准方法是**交叉验证**，它涉及将数据分割成连续的多个折叠，每个折叠都有其独特的训练集和测试集。下方的可视化展示了时间序列数据的交叉验证过程。
- en: '![](../Images/17f39de9360687fc291f49de080a28d0.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/17f39de9360687fc291f49de080a28d0.png)'
- en: An example of time series cross validation.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 时间序列交叉验证的示例。
- en: While there is already a scikit-learn function to do time series cross validation
    called [**TimeSeriesSplit**](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html),
    it doesn’t work with panel data. Rather than being a single time series for one
    entity, panel data has multiple entities and we need a tool that allows us to
    work with multiple entities.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然已经有一个名为 [**TimeSeriesSplit**](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html)
    的 scikit-learn 函数可以用于时间序列交叉验证，但它不适用于面板数据。与单一实体的时间序列不同，面板数据包含多个实体，我们需要一个工具来处理多个实体。
- en: This is where PanelSplit comes in. **PanelSplit** is a package that allows us
    to generalize TimeSeriesSplit to panel data. It also offers functionality for
    transforming, predicting, and much more, but in this introductory article I’ll
    cover the just basics.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是 PanelSplit 的作用所在。**PanelSplit** 是一个允许我们将 TimeSeriesSplit 扩展到面板数据的包。它还提供了转换、预测等功能，但在本文中，我将只介绍基本内容。
- en: Performing cross validation with PanelSplit
  id: totrans-18
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 PanelSplit 执行交叉验证
- en: Now that we’ve introduced what panel data is and what cross validation looks
    like in this setting, let’s see how to do cross validation using PanelSplit.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经介绍了什么是面板数据，以及在这种环境下交叉验证的样子，让我们看看如何使用 PanelSplit 执行交叉验证。
- en: 'First, let’s generate some example data to work with:'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，让我们生成一些示例数据进行操作：
- en: '[PRE0]'
  id: totrans-21
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '![](../Images/ae47ac32ee235a6dc360a5ba0a5095db.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ae47ac32ee235a6dc360a5ba0a5095db.png)'
- en: The generated panel data. There are 3 countries observed from 2001–2004.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 生成的面板数据。观察的国家有 3 个，时间范围是 2001–2004 年。
- en: After generating our panel data set, we can now apply PanelSplit.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 生成面板数据集后，我们现在可以应用 PanelSplit。
- en: Initializing PanelSplit
  id: totrans-25
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 初始化 PanelSplit
- en: When we initialize PanelSplit, we define the cross validation approach that
    we are going to use.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 当我们初始化 PanelSplit 时，需要定义我们将使用的交叉验证方法。
- en: The **periods** argument takes the time series. In this case the series is the
    year column.
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**periods** 参数接受时间序列。在这种情况下，序列是年份列。'
- en: '**n_splits**, **gap**, and **test_size** are all arguments used by [TimeSeriesSplit](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html)
    to split up the time series.'
  id: totrans-28
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**n_splits**、**gap** 和 **test_size** 是 [TimeSeriesSplit](https://scikit-learn.org/stable/modules/generated/sklearn.model_selection.TimeSeriesSplit.html)
    用来拆分时间序列的参数。'
- en: By specifying **plot=True**, a visualization is produced describing the train
    and test sets within each split.
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 通过指定 **plot=True**，可以生成一张可视化图，描述每次拆分中的训练集和测试集。
- en: '[PRE1]'
  id: totrans-30
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: '![](../Images/46ac5e7af26beffef69e4b1ba42715cc.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/46ac5e7af26beffef69e4b1ba42715cc.png)'
- en: The output of initializing PanelSplit when plot = True. Based on the arguments
    we provided, there are 3 splits, there is no gap between train and test sets,
    and the test size is one period for each split.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 初始化 PanelSplit 时的输出（当 plot=True）。根据我们提供的参数，拆分次数为 3 次，训练集和测试集之间没有间隔，每次拆分的测试集大小为一个周期。
- en: Understanding how PanelSplit works
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 理解 PanelSplit 的工作原理
- en: To get a better idea of what the splits look like, let’s use the **split()**
    function to return the different train and test sets for each split.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地了解拆分的情况，让我们使用 **split()** 函数返回每次拆分中的不同训练集和测试集。
- en: '[PRE2]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: The splits object contains the 3 splits of the cross validation procedure. Within
    each split, there is a list, which consists of the train indices (the first item)
    and test indices (the second item). The indices are True and False values, indicating
    whether or not a row is in a particular train/test set for a particular split.
    These indices can be used to filter for different subsets of the data, as shown
    in the figure below.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '`splits` 对象包含了交叉验证过程中的 3 次拆分。在每次拆分中，有一个列表，其中包含训练集索引（第一个项）和测试集索引（第二个项）。这些索引是布尔值，表示某一行是否属于某个特定拆分的训练集/测试集。可以利用这些索引对数据进行过滤，选择不同的数据子集，如下图所示。'
- en: '![](../Images/dcb54e616816b5223fcf3737cbc5acbc.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dcb54e616816b5223fcf3737cbc5acbc.png)'
- en: Demonstration of the different train and test sets within each split.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 演示每次拆分中的不同训练集和测试集。
- en: Hyper-parameter tuning
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 超参数调整
- en: Now that we’ve created an instance of PanelSplit, let’s do some **hyper-parameter
    tuning**!
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 现在我们已经创建了 PanelSplit 的实例，让我们进行一些 **超参数调整**！
- en: Here we do a basic hyper-parameter search with a Ridge model, specifying the
    cv argument for **GridSearchCV** to be panel_split. During GridSearchCV’s fit
    procedure it calls panel_split’s split() function, returing the indices for each
    train and test for each split. It uses these indices to filter the data that are
    provided as the X and y arguments in the fit() function.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们进行一个基本的超参数搜索，使用Ridge模型，并指定**GridSearchCV**的cv参数为panel_split。在GridSearchCV的拟合过程中，它调用panel_split的split()函数，返回每个训练集和测试集的索引。它使用这些索引来过滤提供给fit()函数的X和y数据。
- en: '[PRE3]'
  id: totrans-42
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: '![](../Images/a442388e0853686faa7ca8edac110bd3.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a442388e0853686faa7ca8edac110bd3.png)'
- en: In this search, the optimal alpha for the Ridge model is .5.
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 在这次搜索中，Ridge模型的最佳alpha值为0.5。
- en: Hooray! We’ve found the optimal set of hyper-parameters. Now we can use these
    to predict.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 太棒了！我们已经找到了最佳的超参数组合。现在我们可以使用这些参数进行预测。
- en: '*Note: In a real setting we’d differentiate between the test set used for hyper-parameter
    tuning and the test set used for evaluating performance, but for this example
    let’s keep the validation set and the test set the same.*'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：在实际应用中，我们会区分用于超参数调整的测试集和用于评估性能的测试集，但在这个示例中我们将验证集和测试集保持一致。*'
- en: Generating predictions with cross_val_fit_predict
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用cross_val_fit_predict生成预测
- en: Generating predictions is really easy with PanelSplit.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 使用PanelSplit生成预测非常简单。
- en: Using **cross_val_fit_predict**, we specify that we want to use our best Ridge
    model, our X and y, and PanelSplit will fit on each training set and predict on
    each test set, for each split.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 使用**cross_val_fit_predict**，我们指定要使用我们最好的Ridge模型、我们的X和y，PanelSplit将在每个训练集上进行拟合，并在每个测试集上进行预测，每个分割都是如此。
- en: '[PRE4]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: The predictions as well as the fitted models are returned. If we want to include
    the identifiers for the predictions, we can generate labels using **gen_test_labels**
    and then create a new Pandas Series in our predictions_df DataFrame.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 预测结果以及拟合模型会返回。如果我们想要在预测中包含标识符，可以使用**gen_test_labels**生成标签，然后在我们的predictions_df
    DataFrame中创建一个新的Pandas Series。
- en: '[PRE5]'
  id: totrans-52
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: '![](../Images/966f0a4c82ab4dfa922575405633e5cb.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/966f0a4c82ab4dfa922575405633e5cb.png)'
- en: The DataFrame of predictions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 预测的DataFrame。
- en: What else can PanelSplit do?
  id: totrans-55
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PanelSplit还能做什么？
- en: 'This is just a basic demo, but PanelSplit can do so much more! For example:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个基础演示，但PanelSplit可以做更多的事情！例如：
- en: With **cross_val_fit_transform** we can fit on training sets and transform on
    test sets. If we have missing features that need imputation this is really helpful.
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用**cross_val_fit_transform**，我们可以在训练集上进行拟合，在测试集上进行转换。如果我们有需要插补的缺失特征，这非常有用。
- en: What if we want to scale the data and each split needs its own ‘snapshot’ of
    the data in order to keep the scaling transformations separate? We can use **gen_snapshots**
    to do this! Or use a scikit-learn pipeline as the estimator in cross_val_fit_predict
    :)
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们想要对数据进行缩放，并且每个分割需要它自己独立的“快照”以保持缩放变换的独立性怎么办？我们可以使用**gen_snapshots**来实现这一点！或者在cross_val_fit_predict中使用scikit-learn管道作为估算器
    :)
- en: What if we are missing a time period? By using the **unique periods** argumentwith
    the **drop_splits** argument upon initialization, PanelSplit can handle this and
    drops splits where there aren’t any observations.
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果我们缺少某个时间段怎么办？通过在初始化时使用**unique periods**参数和**drop_splits**参数，PanelSplit可以处理这个问题，并在没有观测值的地方丢弃分割。
- en: If you’re looking to see some more examples and want to try PanelSplit out for
    yourself, check out the [Jupyter notebook](https://github.com/4Freye/panelsplit/blob/main/examples/An%20introduction%20to%20PanelSplit.ipynb)
    I created where I cover some additional capabilities.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 如果您想查看更多示例并亲自尝试PanelSplit，可以查看我创建的[Jupyter notebook](https://github.com/4Freye/panelsplit/blob/main/examples/An%20introduction%20to%20PanelSplit.ipynb)，其中我介绍了一些额外的功能。
- en: This is the first package I have written, so I learned a lot working on this
    project. Thank you for reading, and I hope PanelSplit helps you in your next panel
    data project!
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我写的第一个包，所以在这个项目中我学到了很多东西。感谢您的阅读，希望PanelSplit能在您的下一个面板数据项目中提供帮助！
- en: '*Note: Unless otherwise noted, all images are by the author.*'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意：除非另有说明，所有图片均由作者提供。*'
