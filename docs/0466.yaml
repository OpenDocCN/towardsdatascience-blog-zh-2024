- en: An Introduction to Air Travel Network Optimization Using Mixed Integer Programming
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 《利用混合整数规划优化航空旅行网络简介》
- en: 原文：[https://towardsdatascience.com/introduction-0dd288ba9738?source=collection_archive---------7-----------------------#2024-02-18](https://towardsdatascience.com/introduction-0dd288ba9738?source=collection_archive---------7-----------------------#2024-02-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/introduction-0dd288ba9738?source=collection_archive---------7-----------------------#2024-02-18](https://towardsdatascience.com/introduction-0dd288ba9738?source=collection_archive---------7-----------------------#2024-02-18)
- en: How to design an algorithm to route passenger demand across a network in the
    most cost-effective manner
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 如何设计一种算法，以最具成本效益的方式在网络中安排乘客需求
- en: '[](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)[![Rohan
    Nanda](../Images/a1cc23be56f19fe6c75094e9859ffdc0.png)](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)
    [Rohan Nanda](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)[![Rohan
    Nanda](../Images/a1cc23be56f19fe6c75094e9859ffdc0.png)](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)
    [Rohan Nanda](https://medium.com/@rohan2465?source=post_page---byline--0dd288ba9738--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)
    ·8 min read·Feb 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--0dd288ba9738--------------------------------)
    ·阅读时长8分钟·2024年2月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '**Introduction:**'
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**简介：**'
- en: This is a take on the Vehicle Routing Problem problem, but adapted to the air
    transport networks, namely the **Origin Destination-to-Leg** problem.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个关于车辆路径问题的变种，但它被调整为适应航空运输网络，即**起始地到目的地**问题。
- en: '![](../Images/3d4a0648185fb304f0805b133a61619d.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d4a0648185fb304f0805b133a61619d.png)'
- en: Photo by [NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由[NASA](https://unsplash.com/@nasa?utm_source=medium&utm_medium=referral)提供，来源：[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'A little background first: Airlines are constantly faced with the question
    of how to address demand between city-pairs — do they open a direct connection,
    or provide connecting itineraries so that the demand is channeled through one
    or more hubs? The latter is of course preferable from a passenger perspective,
    but is more costly for the airline and therefore riskier — what if the flight
    is not filled? Operating a route is very expensive. In other words, we are trying
    to do this*:'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 首先一点背景：航空公司常常面临如何解决城市间需求的问题——是开设直飞航班，还是提供中转航程，使得需求通过一个或多个枢纽进行疏导？从乘客的角度来看，后者当然更可取，但对航空公司来说，这样做成本更高，因此风险也更大——如果航班没有满员怎么办？运营一条航线非常昂贵。换句话说，我们正在尝试做这个*：
- en: '![](../Images/cf268b098a59afa69e2695a8d576a259.png)'
  id: totrans-11
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cf268b098a59afa69e2695a8d576a259.png)'
- en: 'Figure 1: Schema of the problem we are trying to solve. On the Left we have
    the Origin-Destination (OD) demand, while the Right we have the Legs (with associated
    traffic routing), which can be thought of as the market response to demand.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 图1：我们试图解决的问题的示意图。左侧是起始地-目的地（OD）需求，而右侧是航程（带有相关的流量路由），可以看作是市场对需求的响应。
- en: '**Graph theory enthusiasts will recognize this as a special case of the Graph
    Sparsification problem, which has seen considerable attention lately.*'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: '**图论爱好者会将其视为图稀疏化问题的一个特殊案例，最近这个问题受到了相当多的关注。*'
- en: The industry typically addresses this using so-called itinerary choice models,
    which are simply probabilistic models to determine which routings passengers will
    prefer on the basis of number of connections, route length, flight times etc…
    While this works well when the network shape is already fixed, deciding which
    routes to open is more complicated. This is because there are a number of routes
    which are only viable if they can capture enough connecting traffic from other
    sources — this in turn only occurs if there are no direct routes to serve said
    traffic. In other words, the status of each route is dependent on the status of
    neighboring routes, turning this into a combinatorial problem.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 该行业通常使用所谓的行程选择模型来解决这个问题，这些模型仅仅是概率模型，用于根据连接数、路线长度、飞行时间等因素来确定乘客偏好的路线……当网络形态已经固定时，这种方法效果很好，但决定开通哪些路线就更加复杂了。这是因为有一些路线只有在能够吸引来自其他来源的足够连接流量时才是可行的——而这一点只有在没有直接路线能够服务该流量时才能发生。换句话说，每条路线的状态取决于其邻近路线的状态，从而将问题转化为一个组合优化问题。
- en: 'This is precisely the kind of problem that Mixed Integer Programs (MIP) are
    designed for! Specifically, we will formulate a problem to reflect the following
    behaviors: **Network Flow Conservation** and **Edge Activation Costs to enforce
    sparsification.**'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 这正是混合整数规划（MIP）设计用来解决的问题！具体来说，我们将提出一个问题，反映以下行为：**网络流量守恒**和**边激活成本以强制稀疏化。**
- en: 'Toy Problem:'
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 简单问题：
- en: 'For the rest of this article, I will use a toy example as illustration. To
    completely describe the problem, we need the following inputs:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文的其余部分，我将使用一个简单的示例进行说明。为了完全描述这个问题，我们需要以下输入：
- en: '**Input Graph:**'
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**输入图：**'
- en: 'A dense Origin-Destination bidirectional graph ***G = (V, E)***, with ***n***
    vertices ***V*** and ***m*** edges ***E***. Each edge has as attribute the Origin-Destination
    demand (***O****)* and the distance between each city-pair (***Distance***). Typically,
    the demand follows a pareto distribution, where a few edges have high demand and
    the rest have low demand*:'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 一个密集的起点-终点双向图 ***G = (V, E)***，其中 ***n*** 是顶点 ***V*** 的数量，***m*** 是边 ***E***
    的数量。每条边都有起点-终点需求（***O****）* 和每对城市间的距离（***Distance***）作为属性。通常，需求遵循帕累托分布，即少数边具有高需求，而其余边具有低需求*：
- en: '![](../Images/3e5fb688745397298df9ada053a9162d.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3e5fb688745397298df9ada053a9162d.png)'
- en: 'Figure 2: Input Demand Graph (L) and Distribution of demand by edges (R)'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 图 2：输入需求图（左）和按边分布的需求（右）
- en: '**Graph generated by randomly instantiating the coordinates of the nodes and
    their population. Using the so-called gravity model for transport, a realistic
    demand profile can then be obtained. For more information, see* [*link*](https://www.princeton.edu/~alaink/Orf467F12/The%20Gravity%20Model.pdf)'
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过随机实例化节点的坐标及其人口生成的图。使用所谓的引力模型进行运输，可以获得一个现实的需求曲线。更多信息，请参见* [*链接*](https://www.princeton.edu/~alaink/Orf467F12/The%20Gravity%20Model.pdf)**'
- en: 'Cost Assumptions:'
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 成本假设：
- en: 'Depending on the edge distance and typical vehicle type that would be assigned,
    each edge would have the following cost properties:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 根据边的距离和将分配的典型车辆类型，每条边将具有以下成本属性：
- en: Cost of per passenger, ***Costₚₐₓ***, where pax is short-hand for passenger.
    In practice, it is the cost-per-seat that should be considered, rather than cost-per-pax,
    since not every vehicle is necessarily filled completely. However, this would
    require discrete modelling of each vehicle (and an associated integer variable),
    which would explode the size of the problem.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每位乘客的成本，***Costₚₐₓ***，其中 pax 是乘客的缩写。实际上，应该考虑的是每座位的成本，而不是每乘客的成本，因为并不是每辆车都一定是满员的。然而，这将需要对每辆车进行离散建模（并且需要一个相关的整数变量），这会导致问题规模急剧增大。
- en: Minimum cost of operating a route, ***Costₘᵢₙ***. Think of this as the edge
    activation cost.
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 操作一条路线的最小成本，***Costₘᵢₙ***。可以将其视为边激活成本。
- en: Bear in mind that both ***Costₚₐₓ*** and ***Costₘᵢₙ*** are *m × 1* vectors (one
    per edge), and both costs scale linearly with distance.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，***Costₚₐₓ*** 和 ***Costₘᵢₙ*** 都是 *m × 1* 向量（每条边一个），且两者的成本都与距离成线性比例关系。
- en: With this, we have everything we need to design our MIP. As you might have guessed,
    the idea is to minimize the cost function of the system while respecting the network
    flow constraint.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些，我们就具备了设计 MIP 所需的所有条件。如你所猜测的那样，目标是最小化系统的成本函数，同时遵守网络流量约束。
- en: '**Network Flow Conservation**'
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**网络流量守恒**'
- en: 'This is a well-known condition, which states that the inflow and outflow of
    each vertex must be balanced, unless it is a source or sink:'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个著名的条件，表明每个顶点的流入和流出必须平衡，除非它是源点或汇点：
- en: '![](../Images/63ec1ba87684aa282018a23597606351.png)'
  id: totrans-31
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/63ec1ba87684aa282018a23597606351.png)'
- en: 'Here ***(i, j, k)*** are vertex indices. I’m personally not a big fan of this
    type of notation, and prefer the equivalent expression using the concept of the
    edge-incidence matrix from graph theory. This is usually denoted by the *n × m*
    matrix ***B***, where each row entry is zero except at the incidence vertices
    for the corresponding edge, which are 1 & -1 to represent the source & sink:'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这里的 ***(i, j, k)*** 是顶点索引。个人而言，我并不太喜欢这种表示方法，更喜欢使用图论中的边关联矩阵概念来表达等效的公式。通常，边关联矩阵用
    *n × m* 的矩阵 ***B*** 来表示，其中每一行的条目除对应边的关联顶点外，其它均为零，关联顶点的值为 1 和 -1，分别表示源点和汇点：
- en: '![](../Images/8c249021959fb3327d6546c6377046ed.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8c249021959fb3327d6546c6377046ed.png)'
- en: 'If we initialize an *m × m* variable matrix (let’s call it ***R*** for Itinerary
    Routing — see Figure 1) to represent the flow routing for each demand edge in
    ***G***, we can equivalently formulate the above condition by:'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们初始化一个 *m × m* 的变量矩阵（我们称之为 ***R***，表示行程路线——见图 1）来表示 ***G*** 中每个需求边的流量路线，我们可以等价地通过以下方式来表达上述条件：
- en: '![](../Images/96b8bde9106bcd387e70bd0b647420d2.png)'
  id: totrans-35
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96b8bde9106bcd387e70bd0b647420d2.png)'
- en: Where ***diag(O)*** is an *m × m* matrix with each diagonal entry corresponding
    to the demand from edge *i*. If you multiply out any row *i* of the RHS, it immediately
    becomes obvious why any ***R*** that satisfies this equation is valid from a flow
    conservation perspective.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，***diag(O)*** 是一个 *m × m* 矩阵，其每个对角线元素对应于边 *i* 的需求。如果你展开右侧任意一行 *i*，立刻就能明白为什么任何满足这个方程的
    ***R*** 从流量守恒的角度来看是有效的。
- en: 'Note however that both the ***B*** and ***R*** are directional. In the context
    of our cost function, we don’t really care whether some flows are negative — we
    just want the absolute, total number of passengers flowing along the edge *i*
    in order to quantify the cost of carrying them. To represent this, we can define
    the *m × 1* leg vector ***L***:'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 但是需要注意的是，***B*** 和 ***R*** 都是有方向的。在我们的成本函数的背景下，我们并不关心某些流量是否为负值——我们只关心边 *i* 上流动的乘客的绝对总数，以便量化运输它们的费用。为了表示这一点，我们可以定义
    *m × 1* 的腿向量 ***L***：
- en: '![](../Images/e2ed1cb38f8206debefc2c59c136b385.png)'
  id: totrans-38
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e2ed1cb38f8206debefc2c59c136b385.png)'
- en: With these definitions, we have a function mapping ***O → L*** that is compatible
    with the network flow conservation principle*.* From hereon, ***L*** represents
    the total passenger volume on each edge.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这些定义，我们得到了一个与网络流量守恒原理兼容的函数映射 ***O → L***。从此以后，***L*** 代表每条边上的总乘客流量。
- en: Edge Activation
  id: totrans-40
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 边激活
- en: 'This is the heart of the problem! Consider that if ***Costₘᵢₙ=0***, the solution
    would be trivial, with ***L*** mapping to ***O*** on a one-to-one basis. This
    is because any alternative routing would necessarily cover a longer distance than
    the direct route, so that the cheapest option would always be the latter. However,
    in the presence of ***Costₘᵢₙ,*** there is a trade-off between the ***△Cost***
    incurred by longer distance travelled vs. ***△Cost*** incurred through edge-activation.
    In other words, we need the cost profile for each edge to be:'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是问题的核心！考虑到如果 ***费用ₘᵢₙ=0***，解决方案将是显而易见的，***L*** 将与 ***O*** 一一对应映射。因为任何替代路线都必然比直线路程更长，所以最便宜的选择总是后者。然而，在存在
    ***费用ₘᵢₙ*** 的情况下，存在一个权衡，即长途旅行带来的 ***△费用*** 与通过激活边所带来的 ***△费用***。换句话说，我们需要每条边的费用配置文件为：
- en: '![](../Images/09c27a4ca94509f72262b762fa8997a8.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/09c27a4ca94509f72262b762fa8997a8.png)'
- en: 'Figure 3: Illustration of the cost function with edge activation costs'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 图 3：带有边激活费用的成本函数示意图
- en: 'There are 3 parts to this function:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数有 3 部分：
- en: If the number of passengers is zero, no costs are incurred (***Cost*** ***=***
    0***)***
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果乘客数量为零，则不产生任何费用（***费用*** ***=*** 0***）***
- en: If the number of passengers is between 0 and the threshold, a fixed cost is
    incurred (***Cost*** ***=*** ***Cₘᵢₙ)***, no matter the number of passengers.
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果乘客数量在 0 和阈值之间，无论乘客数量是多少，都会产生固定费用（***费用*** ***=*** ***Cₘᵢₙ***）。
- en: If the number of passengers exceeds the threshold, costs scale linearly with
    ​according to the cost per pax ***(Cost = Cₚₐₓ.L)***
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 如果乘客数量超过阈值，费用将根据每位乘客的成本线性增长（***费用 = Cₚₐₓ.L***）
- en: 'If it were not for the zero-point discontinuity, this would have been a pretty
    simple problem to solve. Instead, we have a non-convex, combinatorial problem
    because there is a sudden shift in behavior depending on whether the number of
    passengers along an edge is zero or not. In this situation, we need an activation
    (binary) variable to tell the algorithm which condition to follow. Using the big-M
    approach, we can formulate this as follows:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 如果不是因为零点不连续性，这将是一个相当简单的问题可以解决。然而，实际上我们遇到了一个非凸组合优化问题，因为在某些边上，乘客数量是零与否会导致行为的突然变化。在这种情况下，我们需要一个激活（即二进制）变量来告诉算法应遵循哪种条件。使用大M法，我们可以将其表述如下：
- en: '![](../Images/1df0f9bed7e9cc9a9655e4eefc993f69.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1df0f9bed7e9cc9a9655e4eefc993f69.png)'
- en: 'Where the *m × 1* vector of binary variables ***z***(i.e. ***z ∈ [0,1]***)
    indicates if a route is open or not, and a very large scalar variable ***M***.
    If you’re not familiar with the big-M method, you can read up on it [here](https://en.wikipedia.org/wiki/Big_M_method).
    In this context, it simply enforces the following conditions:'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 其中，*m × 1* 的二进制变量***z***（即***z ∈ [0,1]***）表示某条路线是否开放，以及一个非常大的标量变量***M***。如果你不熟悉大M法，可以在[这里](https://en.wikipedia.org/wiki/Big_M_method)了解。在这个上下文中，它仅仅是强制执行以下条件：
- en: '***Lᵢ = 0*** *→* ***zᵢ=0***'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Lᵢ = 0*** *→* ***zᵢ=0***'
- en: '***Lᵢ >0*** *→* ***zᵢ=1***'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***Lᵢ >0*** *→* ***zᵢ=1***'
- en: 'Ideally, we would have liked to simply multiply the cost function by this activation
    variable to tell it which cost behavior to follow. However, this would make the
    constraint non-linear and very complicated to solve. Instead, we can use Big-M
    again, this time to linearize the problem while getting the same effect:'
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 理想情况下，我们希望通过简单地将成本函数与这个激活变量相乘来指示应遵循哪种成本行为。然而，这样会使约束变为非线性，解起来非常复杂。相反，我们可以再次使用大M法，这次将问题线性化，同时达到相同的效果：
- en: '![](../Images/5bd96d3186cb461140043fef13a5bf59.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5bd96d3186cb461140043fef13a5bf59.png)'
- en: 'Combining the cost minimization objective with the ≥ inequalities, we basically
    end up with a minmax problem where:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 将成本最小化目标与≥不等式结合，我们基本上得到了一个minmax问题，其中：
- en: '***zᵢ=0 → Costᵢ = minmax(0, -M) = 0***.'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***zᵢ=0 → Costᵢ = minmax(0, -M) = 0***。'
- en: '***zᵢ=1 → Costᵢ = minmax(Cₘᵢₙ, CₚₐₓL)***.'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '***zᵢ=1 → Costᵢ = minmax(Cₘᵢₙ, CₚₐₓL)***。'
- en: 'And there we have it! The complete formulation of the problem is shown:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 就是这样！问题的完整公式如下：
- en: '![](../Images/44218b9e33a6678bd3f9ceacb602009c.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44218b9e33a6678bd3f9ceacb602009c.png)'
- en: We now only have to plug in some numbers to see the magic happen.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 我们现在只需要输入一些数字，就能看到这个“魔法”的发生。
- en: Sensitivity to minimum threshold
  id: totrans-61
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 对最小阈值的敏感性
- en: 'It should be clear from the description that the minimum threshold is the main
    input of interest here, because it defines the degree of sparsification. It’s
    interesting to see the impact using progressively higher thresholds:'
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 从描述中应该可以清楚看出，最小阈值是这里的主要关注点，因为它定义了稀疏化的程度。看到逐渐提高阈值的影响非常有趣：
- en: '![](../Images/5ebbc530cc607635549d02f84209dcfe.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ebbc530cc607635549d02f84209dcfe.png)'
- en: 'Figure 4: From Left to Right, applying Low, Mid and High Thresholds for edge
    costs'
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 图4：从左到右，应用低、中和高阈值对边缘成本的影响
- en: 'Notice how, no matter the threshold, the graph remains connected — this is
    a result of the network flow conservation principle, to ensure all demand is satisfied.
    Another neat way to visualize it is to look at the demand distribution along edges:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，无论阈值如何，图形始终保持连接——这是网络流量守恒原理的结果，确保所有需求都能得到满足。另一种形象化的方法是观察沿边的需求分布：
- en: '![](../Images/8e4d531731f90fb0d94727f43873349b.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8e4d531731f90fb0d94727f43873349b.png)'
- en: 'Figure 5: Low, Mid and High Thresholds on the Input Cost function vs. Output
    Traffic Distribution'
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 图5：输入成本函数与输出流量分布的低、中和高阈值
- en: Here we see how the higher the threshold, the higher the level of consolidation
    (fewer routes with higher volume of traffic), and a correspondingly high number
    of routes with no traffic.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我们可以看到阈值越高，整合的程度越高（更少的路线有更大的交通流量），同时对应有更多的没有流量的路线。
- en: Conclusion
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: This was a simple introduction to what is in reality a very complex problem
    (there is far more nuance to airline networks than just minimum threshold costs).
    Still, it demonstrates one of the core behaviors of real networks, while giving
    a basic introduction to some key concepts for formulating MIPs. The codes for
    this are on my [Github](https://github.com/rn306/OD-to-LEG), feel free to give
    it a try.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这只是一个简单的介绍，实际上这是一个非常复杂的问题（航空公司网络的复杂性远不止最低阈值成本）。尽管如此，它展示了真实网络的核心行为之一，同时为制定整数线性规划（MIPs）问题提供了一些关键概念的基本介绍。相关代码可以在我的[Github](https://github.com/rn306/OD-to-LEG)上找到，欢迎尝试。
- en: If you actually try to run it, you’ll soon notice that solve time scales exponentially
    with the number of vertices in the graph. This is especially the case if you solve
    it with cvxpy — a common (but rudimentary) open source python library for simple
    optimization problems. That said, even the sophisticated commercial solvers soon
    run into their limits. This is the unescapable truth of combinatorial problems;
    they scale poorly, and are often impractical beyond a certain problem size.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你尝试运行它，你很快就会注意到，求解时间会随着图中顶点数量的增加而呈指数级增长。特别是当你使用cvxpy——一个常见的（但基础的）开源Python库用于简单优化问题时，情况尤为明显。尽管如此，即便是复杂的商业求解器也很快会遇到它们的极限。这是组合优化问题的不可避免的真相；它们扩展性差，且在问题规模超出一定范围后往往不再实用。
- en: In the next article, I will introduce a way to try to abstract away some of
    the complexity by using Graph Neural Networks as surrogate models.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一篇文章中，我将介绍一种方法，通过使用图神经网络作为代理模型，尝试抽象化一些复杂性。
- en: '*All images unless otherwise stated are by me, the author.*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有说明，否则所有图片均由我，作者本人提供。*'
