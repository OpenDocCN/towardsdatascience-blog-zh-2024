- en: Data Validation with Pandera in Python
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pandera 进行 Python 数据验证
- en: 原文：[https://towardsdatascience.com/data-validation-with-pandera-in-python-f07b0f845040?source=collection_archive---------0-----------------------#2024-11-18](https://towardsdatascience.com/data-validation-with-pandera-in-python-f07b0f845040?source=collection_archive---------0-----------------------#2024-11-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/data-validation-with-pandera-in-python-f07b0f845040?source=collection_archive---------0-----------------------#2024-11-18](https://towardsdatascience.com/data-validation-with-pandera-in-python-f07b0f845040?source=collection_archive---------0-----------------------#2024-11-18)
- en: Validating your Dataframes for Production ML Pipelines
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证你的数据框以用于生产机器学习管道
- en: '[](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)[![Gabriel
    Furnieles](../Images/710c939d8114ea8a4db16fd9f2c71f8a.png)](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)
    [Gabriel Furnieles](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)[![Gabriel
    Furnieles](../Images/710c939d8114ea8a4db16fd9f2c71f8a.png)](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)
    [Gabriel Furnieles](https://gabrielfurnieles.medium.com/?source=post_page---byline--f07b0f845040--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)
    ·9 min read·Nov 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--f07b0f845040--------------------------------)
    ·9分钟阅读·2024年11月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/53c2470e3fd017ad184018a7824bc84c.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/53c2470e3fd017ad184018a7824bc84c.png)'
- en: Image generated with [NightCafe](https://creator.nightcafe.studio/).
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图像由 [NightCafe](https://creator.nightcafe.studio/) 生成。
- en: Data validation is a crucial step for production applications. You need to ensure
    the data you are ingesting is compatible with your pipeline and that unexpected
    values aren’t present. Moreover, validating the data is a security measure that
    prevents any corrupted or inaccurate information from being further processed,
    raising a flag on the first steps.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 数据验证是生产应用中至关重要的一步。你需要确保你获取的数据与管道兼容，并且没有意外的值出现。此外，验证数据是一种安全措施，可以防止任何损坏或不准确的信息被进一步处理，并在初步步骤中及时发出警告。
- en: Python already counts with a great OS project for this task called [Pydantic](https://docs.pydantic.dev/latest/).
    However, when dealing with large dataframe-like objects such as in Machine Learning,
    [Pandera](https://pandera.readthedocs.io/en/stable/index.html) is a much faster
    and scalable way of validating data (check [this article](https://www.union.ai/blog-post/pandera-0-17-adds-support-for-pydantic-v2)
    with public notebooks).
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Python 已经有一个很棒的开源项目来处理这个任务，叫做 [Pydantic](https://docs.pydantic.dev/latest/)。然而，当处理像机器学习中那样的大型数据框对象时，[Pandera](https://pandera.readthedocs.io/en/stable/index.html)
    是一种更快、更可扩展的验证数据方式（请查看[这篇文章](https://www.union.ai/blog-post/pandera-0-17-adds-support-for-pydantic-v2)和公开的笔记本）。
- en: '![](../Images/eb2c0f75b2f743dedaa7a6fe7b1a33b6.png)'
  id: totrans-10
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/eb2c0f75b2f743dedaa7a6fe7b1a33b6.png)'
- en: Performance comparison between pandera and row-wise validation with Pydantic
    for different-sized pandas.DataFrame objects. Image from [source](https://www.union.ai/blog-post/pandera-0-17-adds-support-for-pydantic-v2#:~:text=%22records%22))-,Benchmarking%20Pandera%E2%80%99s%20row%2Dwise%20validation%20with%20Pydantic,-Because%20Pandera%20validates).
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: Pandera 和 Pydantic 的逐行验证性能比较，适用于不同大小的 pandas.DataFrame 对象。图片来源于 [source](https://www.union.ai/blog-post/pandera-0-17-adds-support-for-pydantic-v2#:~:text=%22records%22))-,Benchmarking%20Pandera%E2%80%99s%20row%2Dwise%20validation%20with%20Pydantic,-Because%20Pandera%20validates)。
- en: In addition, Pandera offers support for a great variety of dataframe libraries
    like `pandas`, `polars`, `dask`, `modin`, and `pyspark.pandas`. For more information
    on these refer to [Pandera’s docs📄](https://pandera.readthedocs.io/en/stable/index.html).
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，Pandera 提供对多种数据框库的支持，如 `pandas`、`polars`、`dask`、`modin` 和 `pyspark.pandas`。有关更多信息，请参考
    [Pandera 文档📄](https://pandera.readthedocs.io/en/stable/index.html)。
- en: '**Disclaimer.** Pandera is an open-source project licensed under the MIT License.
    I have no affiliation with the Pandera team or Union.ai. This post has no commercial
    interest.'
  id: totrans-13
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**免责声明。** Pandera是一个开源项目，采用MIT许可证。我与Pandera团队或Union.ai没有任何关系。此帖子没有商业目的。'
- en: Validating data with Pandera
  id: totrans-14
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用Pandera验证数据
- en: 'Pandera has two ways of defining validators: **Schemas** and **Models**. I
    will focus on the second one because of its similarity with Pydantic models and
    the cleanness of the code.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Pandera有两种定义验证器的方式：**Schemas**和**Models**。我将专注于第二种方式，因为它与Pydantic模型相似，并且代码更简洁。
- en: 'To define a Pandera model create a child class that inherits from DataframeModel
    and start declaring the columns and dtypes that the dataframe must have:'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 要定义Pandera模型，创建一个继承自DataframeModel的子类，并开始声明数据框必须具有的列和数据类型：
- en: '[PRE0]'
  id: totrans-17
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Note that to define the user’s creation timestamp I used Pandas native date
    type instead of others like `datetime.datetime`. Pandera only supports built-in
    Python, NumPy, and Pandas data types. You can also create [custom data types](https://pandera.readthedocs.io/en/stable/dtypes.html#logical-data-types),
    but this is an advanced topic and rarely necessary in most cases.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 请注意，为了定义用户创建时间戳，我使用了Pandas原生的日期类型，而不是像`datetime.datetime`这样的其他类型。Pandera仅支持内建的Python、NumPy和Pandas数据类型。你也可以创建[自定义数据类型](https://pandera.readthedocs.io/en/stable/dtypes.html#logical-data-types)，但这是一个高级话题，在大多数情况下不常用。
- en: Validating column properties
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 验证列属性
- en: 'With Pandera, you can also validate other column properties in addition to
    the type of data:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Pandera，除了验证数据类型外，你还可以验证其他列属性：
- en: '[PRE2]'
  id: totrans-22
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Here I am using pandera’s Field just like pydantics’.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，我像使用pydantic一样使用Pandera的Field。
- en: First, I am specifying that the `id` column must not contain duplicated values
    and these have to be greater or equal to 0.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 首先，我指定`id`列不得包含重复值，并且这些值必须大于或等于0。
- en: In `username` and `email` I’m checking using regex expressions if strings are
    valid. User names must only contain alphanumeric characters and underscore, while
    emails can also contain dashes and dots but always follow the pattern “smth@smth.smth”.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在`username`和`email`中，我使用正则表达式检查字符串是否有效。用户名只能包含字母数字字符和下划线，而电子邮件地址还可以包含短横线和点，但必须始终遵循“smth@smth.smth”的模式。
- en: '`membership` can only take a value from the list. A better approach is using
    a StrEnum to define the valid values instead of hardcoding them.'
  id: totrans-26
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`membership`只能取列表中的值。更好的方法是使用StrEnum来定义有效值，而不是硬编码它们。'
- en: 'Finally, `creation_date` must be in nanosecond units and UTC timezone. This
    line can be cleaner using Annotated from typing library `creation_date: Annotated[pd.DatetimeTZDtype,
    "ns", "UTC"]`'
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '最后，`creation_date`必须以纳秒为单位，并使用UTC时区。这行代码可以更简洁，使用`typing`库中的Annotated：`creation_date:
    Annotated[pd.DatetimeTZDtype, "ns", "UTC"]`。'
- en: Check out [the docs](https://pandera.readthedocs.io/en/stable/reference/generated/pandera.api.dataframe.model_components.Field.html#pandera.api.dataframe.model_components.Field)
    to read all Field options😋
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 查看[文档](https://pandera.readthedocs.io/en/stable/reference/generated/pandera.api.dataframe.model_components.Field.html#pandera.api.dataframe.model_components.Field)，阅读所有Field选项😋
- en: Custom Validations
  id: totrans-29
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 自定义验证
- en: Sometimes it is necessary to add your own custom validations. Pandera allows
    you to inject [column/index checks](https://pandera.readthedocs.io/en/stable/dataframe_models.html#dataframe-checks:~:text=as%20class%20methods.-,Column/Index%20checks,-%C2%B6)
    (custom checks of single columns) and [dataframe checks](https://pandera.readthedocs.io/en/stable/dataframe_models.html#dataframe-checks:~:text=1%3A%20%3CCheck%20check_means%3E-,DataFrame%20Checks,-%C2%B6)
    (checks between several columns).
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 有时需要添加自定义验证。Pandera允许你注入[列/索引检查](https://pandera.readthedocs.io/en/stable/dataframe_models.html#dataframe-checks:~:text=as%20class%20methods.-,Column/Index%20checks,-%C2%B6)（单列的自定义检查）和[数据框检查](https://pandera.readthedocs.io/en/stable/dataframe_models.html#dataframe-checks:~:text=1%3A%20%3CCheck%20check_means%3E-,DataFrame%20Checks,-%C2%B6)（多个列之间的检查）。
- en: '[PRE3]'
  id: totrans-31
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Keep in mind that you are working with entire column objects (`Series`) so that
    operations in checks should be vectorized for better performance.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 请记住，你正在处理整个列对象（`Series`），因此检查中的操作应向量化以提高性能。
- en: Other Configurations
  id: totrans-33
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 其他配置
- en: '**Aliases** When column names can’t be declared as Python variables due to
    the language syntax, Pandera allows setting an alias for the column validator
    to match the dataframe.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**别名** 当列名由于语言语法无法声明为Python变量时，Pandera允许为列验证器设置别名，以匹配数据框。'
- en: '[PRE4]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: '**Strict and Coerce** When the `strict` option is set to true, it forces the
    validated dataframe to only contain the columns defined in the Pandera DataFrameModel.
    On the other hand, when the `coerce` option is activated, Pandera will try to
    cast the column data to match the model’s dtype.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: '**严格和强制** 当`strict`选项设置为true时，它会强制验证的数据框仅包含在Pandera DataFrameModel中定义的列。另一方面，当启用`coerce`选项时，Pandera会尝试将列数据强制转换为与模型的数据类型匹配。'
- en: '[PRE5]'
  id: totrans-37
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: The coerce option can be set at the Field level too using `pa.Field(..., coerce=True)`
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '`coerce`选项也可以在字段级别使用，方法是`pa.Field(..., coerce=True)`'
- en: '**Lazy validation** By default, pandera raises an error whenever a validation
    check isn’t passed. This can be annoying because it only displays the first validation
    error encountered, and prevents the rest of the data from being checked.'
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: '**懒惰验证** 默认情况下，当验证检查未通过时，Pandera会抛出错误。这可能会令人烦恼，因为它只显示遇到的第一个验证错误，并阻止其余数据的检查。'
- en: In some cases, it is better to let the whole dataframe validate and collect
    all errors in one run, rather than fixing them one by one and waiting for the
    validation to run again. The first is what lazy validation does.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在某些情况下，最好让整个数据框架进行验证，并在一次运行中收集所有错误，而不是一个个修复它们并等待验证再次运行。前者是懒惰验证所做的。
- en: '[PRE6]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: An ML Production Pipeline with Data Validation
  id: totrans-42
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 带有数据验证的机器学习生产管道
- en: '![](../Images/c9b4dfd55516a8c114ec37de0fc9ae03.png)'
  id: totrans-43
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9b4dfd55516a8c114ec37de0fc9ae03.png)'
- en: Image generated with [NightCafe](https://creator.nightcafe.studio/).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 使用[NightCafe](https://creator.nightcafe.studio/)生成的图像。
- en: Because the majority of ML Pipelines are trained in Python with tabular data
    encoded into dataframe structures, **Pandera** is a great and powerful tool to
    validate their Inputs and Outputs.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 因为大多数机器学习管道是在Python中使用表格数据编码成数据框架结构进行训练的，所以**Pandera**是一个验证其输入和输出的强大工具。
- en: '[PRE7]'
  id: totrans-46
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: We want to avoid the model raising an error due to invalid data. That would
    mean that we’ve done all the work of loading the model into memory and processing
    the raw data for nothing, wasting resources and preventing the rest of the data
    points from being evaluated.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 我们希望避免模型因无效数据而抛出错误。那样意味着我们已经做了将模型加载到内存中和处理原始数据的所有工作，但结果是白费力气，浪费资源，还阻止了其余数据点的评估。
- en: Similarly, if the model’s output has an incorrect structure our postprocessing
    pipeline (uploading results to DB, returning results by RESTful API, etc.) will
    fail.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 同样，如果模型的输出结构不正确，我们的后处理管道（将结果上传到数据库，通过RESTful API返回结果等）将会失败。
- en: After defining the validation models using Pandera, we can leverage its [decorators
    for pipeline integration](https://pandera.readthedocs.io/en/stable/decorators.html#:~:text=Auto%20color%20theme-,Decorators%20for%20Pipeline%20Integration,-%C2%B6)
    to perform I/O validation.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用Pandera定义验证模型后，我们可以利用其[用于管道集成的装饰器](https://pandera.readthedocs.io/en/stable/decorators.html#:~:text=Auto%20color%20theme-,Decorators%20for%20Pipeline%20Integration,-%C2%B6)来执行输入/输出验证。
- en: '[PRE8]'
  id: totrans-50
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: '[PRE9]'
  id: totrans-51
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Because we are generating an intermediate dataframe object `df_transform` in
    the ML Pipeline, it is a good practice to validate it too to prevent errors. The
    *predict* method input is not validated as it is already done by *transform_data*.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 因为我们在机器学习管道中生成了一个中间数据框对象`df_transform`，所以最好也对它进行验证以防止错误。*predict*方法的输入不需要验证，因为它已经在*transform_data*中完成了。
- en: Handling invalid rows
  id: totrans-53
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 处理无效行
- en: We don’t want our pipeline to break just because some data points have incorrect
    data. In case of a validation error, the strategy should be to set aside the problematic
    data points and continue running the pipeline with the rest of the data. The pipeline
    cannot stop!🔥
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 我们不希望我们的管道因为某些数据点包含不正确的数据而中断。如果发生验证错误，策略应该是将有问题的数据点单独处理，并继续使用其余数据运行管道。管道不能停止！🔥
- en: 'Pandera models have the option to automatically remove all invalid rows:'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: Pandera模型有自动移除所有无效行的选项：
- en: '[PRE10]'
  id: totrans-56
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: However, dropping all invalid rows without logging them can be dangerous. You
    need to know why those data points were invalid so that later you can communicate
    to the client or to the data engineer what was the cause of the error.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，丢弃所有无效行而不记录它们可能是危险的。你需要知道为什么这些数据点无效，以便稍后可以向客户或数据工程师沟通错误的原因。
- en: 'That is why instead of using pandera decorators I rather create my own validation
    helper functions:'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么我不使用Pandera装饰器，而是创建我自己的验证辅助函数：
- en: '[PRE11]'
  id: totrans-59
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Output forcing some errors and removing column `id`:'
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 输出强制某些错误并移除列`id`：
- en: '[PRE12]'
  id: totrans-61
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: In case of an unresolvable error that involves an entire column, the pipeline
    cannot continue.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 如果发生无法解决的错误且涉及整个列，则管道无法继续。
- en: Testing
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 测试
- en: Last but not least, Pandera models and schemas also incorporate a method for
    generating sample data according to their definition. You will need to install
    `[hypothesis](https://hypothesis.readthedocs.io/en/latest/)` library to use it.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 最后但同样重要的是，Pandera 模型和模式还包括根据定义生成示例数据的方法。你需要安装 `[hypothesis](https://hypothesis.readthedocs.io/en/latest/)`
    库才能使用它。
- en: However, after testing it with some examples I do not recommend it. As soon
    as you start adding a few constraints, it takes too long to generate the synthetic
    data and most of the time it isn’t varied (the generated data do not cover the
    entire restriction space and repeats itself) The best alternative I found is to
    add data generators for each model you want to test — after all, there aren’t
    so many data frames to validate in a pipeline either — .
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，在用一些示例测试后，我不推荐使用它。一旦你开始添加一些约束，生成合成数据的速度就会变得很慢，而且大多数时候生成的数据缺乏多样性（生成的数据无法覆盖整个限制空间，并且会重复）。我找到的最佳替代方法是为你想要测试的每个模型添加数据生成器——毕竟，在管道中需要验证的数据框架也不多——。
- en: '[PRE13]'
  id: totrans-66
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Conclusion
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Data validation is vital for every data processing pipeline and especially in
    Machine Learning. Pandera simplifies a lot of this work by providing a flexible,
    and efficient model-based approach to validating data in dataframes.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 数据验证对于每个数据处理管道都至关重要，尤其是在机器学习中。Pandera 通过提供一种灵活且高效的基于模型的方法来简化数据框架中的数据验证工作。
- en: With Pandera, you can define model classes that enforce column types, ranges,
    and even complex conditional constraints. This makes it easy to catch data quality
    issues early in the pipeline, ensuring that the data conforms to expected standards
    before it reaches the next steps.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Pandera，你可以定义强制列类型、范围，甚至复杂条件约束的模型类。这样可以在数据管道的早期阶段轻松发现数据质量问题，确保数据在到达下一步之前符合预期标准。
- en: By integrating Pandera into an ML pipeline, you can create robust data checks
    that help prevent errors and improve the reliability of model outputs.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将 Pandera 集成到机器学习管道中，你可以创建强大的数据检查，帮助防止错误并提高模型输出的可靠性。
- en: 'Final pandera.DataFrameModel used in the tests:'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 最终在测试中使用的 pandera.DataFrameModel：
- en: '[PRE14]'
  id: totrans-72
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: '*Hi, I’m Gabriel Furnieles, a Mathematical Engineer specializing in Artificial
    Intelligence, Data Pipelines, and MLOps. I hope you enjoyed the article and found
    it helpful, if so, please consider following me* [*Gabriel Furnieles*](https://medium.com/u/e77c10fd9715?source=post_page---user_mention--f07b0f845040--------------------------------),
    *and subscribing to my newsletter so stories will be sent directly to you 👇*'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: '*嗨，我是 Gabriel Furnieles，一名专注于人工智能、数据管道和 MLOps 的数学工程师。我希望你喜欢这篇文章并觉得它有帮助，如果是这样，请考虑关注我*
    [*Gabriel Furnieles*](https://medium.com/u/e77c10fd9715?source=post_page---user_mention--f07b0f845040--------------------------------)，*并订阅我的通讯，这样故事就会直接发送到你那里
    👇*'
- en: '[](https://medium.com/@gabrielfurnieles?source=post_page-----f07b0f845040--------------------------------)
    [## Gabriel Furnieles - Medium'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@gabrielfurnieles?source=post_page-----f07b0f845040--------------------------------)
    [## Gabriel Furnieles - Medium'
- en: Read writing from Gabriel Furnieles on Medium. Mathematical engineer specializing
    in AI and ML. I write casually on…
  id: totrans-75
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在 Medium 上阅读 Gabriel Furnieles 的文章。他是专注于 AI 和机器学习的数学工程师。我偶尔在这里写作……
- en: medium.com](https://medium.com/@gabrielfurnieles?source=post_page-----f07b0f845040--------------------------------)
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: medium.com](https://medium.com/@gabrielfurnieles?source=post_page-----f07b0f845040--------------------------------)
