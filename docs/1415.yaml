- en: My 30-Day Map Challenge 2023
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/my-30-day-map-challenge-2023-20a700d970e1?source=collection_archive---------5-----------------------#2024-06-06](https://towardsdatascience.com/my-30-day-map-challenge-2023-20a700d970e1?source=collection_archive---------5-----------------------#2024-06-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An overview of selected map topics and algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://bryanvallejo16.medium.com/?source=post_page---byline--20a700d970e1--------------------------------)[![Bryan
    R. Vallejo](../Images/fd92974f57c72875cc133a2c959d64ca.png)](https://bryanvallejo16.medium.com/?source=post_page---byline--20a700d970e1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--20a700d970e1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--20a700d970e1--------------------------------)
    [Bryan R. Vallejo](https://bryanvallejo16.medium.com/?source=post_page---byline--20a700d970e1--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--20a700d970e1--------------------------------)
    ·9 min read·Jun 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/67f08588cd8f947487c5687955b3c485.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Collage of selected self-authored maps.
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As many of you know, the 30-Day Map Challenge is a social media event where
    people passionate about maps create a topic-based design for 30 days in November.
    You can find more information about it on the [official website.](https://30daymapchallenge.com/)
    Just a few people handle creating a map that is fully presentable for every topic
    and they publish every day in social media. On the other hand, some people select
    their favorite topics and publish only those days. I am part of the second group
    of people.
  prefs: []
  type: TYPE_NORMAL
- en: In this story, I want to describe an overview of the map design process I went
    through. I selected my favorite topics and spiced them up using an algorithm.
    I believe it is important to create maps that can show “something else” in addition
    to the data itself and the best way is with an algorithm outcome. Maps should
    give a clear visual message at first glance and if possible more detailed information
    for experimented map-readers.
  prefs: []
  type: TYPE_NORMAL
- en: Let’s look at the maps.
  prefs: []
  type: TYPE_NORMAL
- en: Data
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '**Open Street Map data.** Licensed under [Open Data Commons Open Database License
    (ODbl)](https://opendatacommons.org/licenses/odbl/) or attribution license. Users
    are free to copy, distribute, transmit and adapt the data as long as it is attributed
    to the author like © [OpenStreetMap](https://www.openstreetmap.org/copyright)
    contributors.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Kontur population dataset**. Kontur Population is available under [Creative
    Commons Attribution International (CC BY) license](https://data.humdata.org/faqs/licenses).
    You can use it for any purpose, even commercially.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**OpenCell ID**. The database of OpenCell ID is licensed under a [Creative
    Commons Attribution-ShareAlike 4.0 International License](https://creativecommons.org/licenses/by-sa/4.0/).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**MODIS NASA DAAC.** The collections comply with NASA’s Data and [Information
    policy](https://modaps.modaps.eosdis.nasa.gov/services/faq/LAADS_Data-Use_Citation_Policies.pdf),
    which promotes the full and open sharing of all data with the research and applications
    communities, private industry, academia, and the general public (the term data
    includes observation data, images, metadata, products, and documentation).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Tartu Open Data.** Under the license [Creative Commons Attribution-ShareAlike
    3.0 Unported (CC-BY-SA 3.0)](https://creativecommons.org/licenses/by-sa/3.0/)
    we are free to share, copy, redistribute, adapt, remix, or build upon even for
    commercial purposes.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**SEO BirdLife data.** The dataset has a private license for use to GIS4 Wildlife
    and their representative. Mainly, the products of visualization can be shared
    publicly but no codes, algorithms, data, or derivation of data.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**IUCN Red List.** The [data](https://www.iucnredlist.org/resources/spatial-data-download)
    are made freely available for **non-commercial use**, to help inform conservation
    planning and other non-commercial decision-making processes (see [Terms and Conditions
    of Use](https://www.iucnredlist.org/terms/terms-of-use)).'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Points
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The point map of proximity represents the closeness measured by the distance
    between every OpenStreetMap (OSM) building and the OSM Fire Stations. Every point
    is the centroid of every building. Then, I attributed the Euclidean distance using
    the [**Nearest Neighbor**](https://scikit-learn.org/stable/modules/generated/sklearn.neighbors.BallTree.html)
    **algorithm.** This algorithm saved a lot of time in terms of computation. A nice
    visual effect was added to the point map using the closeness (distance) as a point
    size (smallest and red means farther away building). Check this tutorial.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/nearest-neighbor-analysis-for-large-datasets-in-helsinki-79ebc7288c91?source=post_page-----20a700d970e1--------------------------------)
    [## Nearest Neighbor Analysis for Large Datasets in Helsinki Region'
  prefs: []
  type: TYPE_NORMAL
- en: 'BallTree function for efficient distance analysis: Bus stops and restaurants'
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/nearest-neighbor-analysis-for-large-datasets-in-helsinki-79ebc7288c91?source=post_page-----20a700d970e1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: The map was done with QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/05e6cda465968a946e56fb64e0e4a818.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Points.
  prefs: []
  type: TYPE_NORMAL
- en: Lines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The line map shows the accumulated travel distance between OSM Residential Buildings
    and the Central Railway Station. As I had over ~19K residential buildings I needed
    to build also exactly 19070 routes. Thankfully, I had available a 16-core supercomputer
    at my work at Aalto University (Finland) where I parallelized the process. The
    routes were created using the **Shortest Path (Dijkstra’s Algorithm)** implemented
    in the OSMnx Python library. The map has a nice visual effect in the line width
    where the shortest paths to the city center are thinner (in white) than the longer
    paths (in red).
  prefs: []
  type: TYPE_NORMAL
- en: The map was done with QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/da0463369b0f0f34f8665b65960c9225.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Lines
  prefs: []
  type: TYPE_NORMAL
- en: '**Polygons**'
  prefs: []
  type: TYPE_NORMAL
- en: The polygon map was done with **Isochrones**from the Central Railway Station
    in Helsinki. The generation of the 2-minute Isochrones was challenging because
    the Valhalla API was breaking frequently. But after some tests, it finally worked.
    I did it using the **routingpy** Python library.
  prefs: []
  type: TYPE_NORMAL
- en: The visual effect of this map was to remove the polygons that were over the
    sea. Fortunately, I managed to clip the Isochrones delimited by land with an accurate
    layer of the sea. I don’t recommend being that picky because that clip took me
    a lot of time.
  prefs: []
  type: TYPE_NORMAL
- en: I changed this map from the [original post](https://x.com/BryanRVallejo/status/1720342295281803428)
    because it is best to keep the natural limit of the Isochrones.
  prefs: []
  type: TYPE_NORMAL
- en: The map was done with QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/040967501671451cbfa2a734ee8a3078.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Polygons
  prefs: []
  type: TYPE_NORMAL
- en: Navigation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The navigation map shows two routes between two long-distance points in Morocco.
    The Origin and Destination were suggested by a student who needed some support.
    I wanted to understand how two paths vary if one is weighted by distance and the
    second by time. So, the shortest and the fastest. The paths were created with
    the **Shortest Path (Dijkstra’s Algorithm)** using the OSMnx Python library.
  prefs: []
  type: TYPE_NORMAL
- en: I added the road network behind the map and gave it a 3D turn. The code is available
    online.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/dijkstras-algorithm-weighted-by-travel-time-in-osm-networks-792aa92e03af?source=post_page-----20a700d970e1--------------------------------)
    [## Dijkstra’s algorithm weighted by travel time in OSM networks'
  prefs: []
  type: TYPE_NORMAL
- en: Finding the fastest and shortest path with the OSMNX 1.6
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/dijkstras-algorithm-weighted-by-travel-time-in-osm-networks-792aa92e03af?source=post_page-----20a700d970e1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This map was done in KeplerGl.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d7686888010c6f0c29de9d3e246018a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Navigation.
  prefs: []
  type: TYPE_NORMAL
- en: Hexagons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This hexagon map was done using the [Kontur population data](https://data.humdata.org/dataset/kontur-population-spain).
    The subset of population aggregated per country at 400m gives a clear overview
    of the population density. The challenge in this map was to add the Canary Islands
    to the side of the map. Thankfully, QGIS can add frames with different locations,
    so I included all the islands.
  prefs: []
  type: TYPE_NORMAL
- en: If you are willing to go aggregations in hexagons like this example you can
    use the [H3-pandas Python library](https://h3-pandas.readthedocs.io/en/latest/).
  prefs: []
  type: TYPE_NORMAL
- en: Map done in QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ca68c767924a095d1eb0ca64ce35a61f.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Hexagons
  prefs: []
  type: TYPE_NORMAL
- en: '**North America**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This map was done at the global level using the [H3-pandas Python library](https://h3-pandas.readthedocs.io/en/latest/).
    The data aggregated in H3 resolution 6 was the OpenCellID that contains cellular
    antennas worldwide. Then, I just framed the North America. The challenge in this
    map was to read the global data. Thankfully, the process could be done using the
    [Dask Python library](https://docs.dask.org/en/stable/).
  prefs: []
  type: TYPE_NORMAL
- en: You can find the code you need to handle Cellular Antenna data online.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/mobile-network-operators-coverage-in-ecuador-9fdd78d3b4fb?source=post_page-----20a700d970e1--------------------------------)
    [## Mobile Network Operators'' Coverage in Ecuador'
  prefs: []
  type: TYPE_NORMAL
- en: Geovisualization of Cellular Antenna’s development of 2G, 3G, and 4G
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/mobile-network-operators-coverage-in-ecuador-9fdd78d3b4fb?source=post_page-----20a700d970e1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Map done in QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b34b5a42ce85f90af80cebaa7c456f90.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. North America.
  prefs: []
  type: TYPE_NORMAL
- en: South America
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Every time that South America is mentioned I think of the warm water of the
    coastline of Ecuador. I wanted to show how attractive the Sea Surface Temperature
    (SST) can be colored. I used the MODIS OB DAAC data catalog at the global level
    for November 2022 in this map. Then, I framed the South America using QGIS. The
    challenge in this map was to find a proper color palette.
  prefs: []
  type: TYPE_NORMAL
- en: 'If you want to work independently with SST. Find code access here:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/monitoring-sea-surface-temperature-at-the-global-level-with-gee-1d7349c7da6?source=post_page-----20a700d970e1--------------------------------)
    [## Monitoring Sea Surface Temperature at the global level with GEE'
  prefs: []
  type: TYPE_NORMAL
- en: How to create a Streamlit app for ocean monitoring with Python
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/monitoring-sea-surface-temperature-at-the-global-level-with-gee-1d7349c7da6?source=post_page-----20a700d970e1--------------------------------)
    ![](../Images/0898e81f1aed8660ba1d701045a9ffcc.png)
  prefs: []
  type: TYPE_NORMAL
- en: Image by the Author. South America.
  prefs: []
  type: TYPE_NORMAL
- en: Europe
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Making this map was an enjoyable process. I got a dataset from May 2022 of GPS
    locations of bike-sharing data from Tartu, Estonia. Then, I transformed the high-quality
    GPS data into traces (LineString) using the Python library Movingpandas which
    made it handy. I added the distance and colored the traces; it has an amazing
    visualization of how people use the bike for short and long distances.
  prefs: []
  type: TYPE_NORMAL
- en: Tartu is the European Capital of Culture 2024\. Generally, it is considered
    a 15-minute city because you can bike or walk everywhere. Visitors will be fascinated
    by how mobility has been done easily in this city and this map reflects how bike-sharing
    is well distributed all around the city.
  prefs: []
  type: TYPE_NORMAL
- en: Take a look at Python code showing how to use Movingpandas.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/bike-sharing-system-movements-to-the-metallica-concert-in-tartu-estonia-1af8361bc6f?source=post_page-----20a700d970e1--------------------------------)
    [## Bike-sharing system movements to the Metallica concert in Tartu, Estonia'
  prefs: []
  type: TYPE_NORMAL
- en: GPS tracking visualization with Movingpandas and KeplerGl — Tutorial
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/bike-sharing-system-movements-to-the-metallica-concert-in-tartu-estonia-1af8361bc6f?source=post_page-----20a700d970e1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This map was done in QGIS
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/95eb8001208127c1069946bee604a803.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Europe.
  prefs: []
  type: TYPE_NORMAL
- en: Flow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This map was part of the visualization project next to [GIS4 Wildlife](https://www.gis4-wildlife.com/)
    and [SEO BirdLife](https://www.gis4-wildlife.com/seobirdlife-migra-geovisualization).
    The challenge in this map was to fit all the bird migration data (GPS) into a
    spatial-temporal visualization. This project has been crafted using private code
    and algorithms but happily, I can share the final visualization. Indeed, KeplegGl
    is the best tool for spatial-temporal visualization.
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://www.gis4-wildlife.com/?source=post_page-----20a700d970e1--------------------------------)
    [## GIS4 Wildlife Movement Analytics'
  prefs: []
  type: TYPE_NORMAL
- en: The implementation of the Wildlife Tracker in the "Galapagos Marine Reserve"
    brings geospatial solutions to the…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: www.gis4-wildlife.com](https://www.gis4-wildlife.com/?source=post_page-----20a700d970e1--------------------------------)
    ![](../Images/851a8bbd3bae765d16ddcb308767d3cc.png)
  prefs: []
  type: TYPE_NORMAL
- en: Image by the Author. Flow.
  prefs: []
  type: TYPE_NORMAL
- en: 3D
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Same as before, I used the **Valhalla API** for the Isochrone generation. The
    challenge here was to add the proper values for the 3D elevation. I needed to
    include the distance backward so the very small Isochrone has a taller view than
    the large Isochrone. Tricky, but worked nicely for a 3D map.
  prefs: []
  type: TYPE_NORMAL
- en: This map was done using KeplerGl.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0c259cac77a0dbe1e839f4cc266016a0.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. 3D
  prefs: []
  type: TYPE_NORMAL
- en: Antarctica
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The first thing that came to my mind when listening to Antarctica is the marine
    mammals that live there. Penguins as well of course. Fortunately, I found a layer
    with the distribution of those species I had in mind and I understood that they
    are considered threatened species. The IUCN provides the distribution layer of
    marine-terrestrial mammals and it is located in Antarctica. The challenge in this
    visualization was the projection and the overlay. Thankfully, QGIS did the work
    so well using the *Antarctic Polar Stereographic.*
  prefs: []
  type: TYPE_NORMAL
- en: This map was done in QGIS. This map is removed from this selection for data
    license regulations. But, you can check the map directly on Twitter.
  prefs: []
  type: TYPE_NORMAL
- en: 👇🦭
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: ''
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[Distribution of Marine-terrestrial mammals in Antarctica](https://x.com/BryanRVallejo/status/1728315080255631463)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Dots
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The Galapagos Islands have inspired me to understand movement ecology and geospatial
    technologies because of their marine biology richness. The fishery and the shark
    population are certainly a topic worldwide so when I listened “dots” came to my
    mind the fishery data from *Global Fishing Watch.* This map shows the fishing
    intensity in the *Galapagos Marine Protected Area* for 1 semester Sep 2021 to
    Feb 2022\. The index is called *Apparent Fishing Effort* and gives wonderful insights
    into marine spatial planning.
  prefs: []
  type: TYPE_NORMAL
- en: The challenge in this map was the point size and the additive overlay. This
    combination shows the fishing intensity in size and brightness. Nicely, we can
    see how the fishing vessels avoid crossing the limit of the Galapagos Marine Protected
    Area meanwhile the fishing inside is more local and small fishery. You can read
    more about *Global Fishing Map* data and how fishery affects the marine megafauna
    in this pristine archipelago.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/unveiling-fishing-activity-risk-to-marine-megafauna-with-geospatial-technologies-48505e44d5e1?source=post_page-----20a700d970e1--------------------------------)
    [## Unveiling fishing activity risk to marine megafauna with geospatial technologies'
  prefs: []
  type: TYPE_NORMAL
- en: Whale sharks endangered by Chinese fishing vessels — Galapagos Islands
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/unveiling-fishing-activity-risk-to-marine-megafauna-with-geospatial-technologies-48505e44d5e1?source=post_page-----20a700d970e1--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: This map was done in QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b33bf12e3f812e61fe87fda18d9b2268.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Dots
  prefs: []
  type: TYPE_NORMAL
- en: Experimental
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Handling datasets, products, or intermediate layers during the map creation
    can be exhaustive. I have spent long hours finding the best combination of colors
    and sizes to transmit the idea correctly. Once, I wanted to represent the proximity
    to Libraries from a walking network. I found a very attractive palette for the
    map but clearly, it did not transmit the message.
  prefs: []
  type: TYPE_NORMAL
- en: At this moment I realized that not every map that “looks nice” is well done
    so I call it an experimental visualization.
  prefs: []
  type: TYPE_NORMAL
- en: This experiment was done in QGIS.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/33abcc1bf1ab12d5afcc2a920e452ea2.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by the Author. Experimental.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to know more about my maps and my coding tutorials. Feel free to
    reach me.
  prefs: []
  type: TYPE_NORMAL
- en: 💼 [Bryan R Vallejo LinkedIn](https://www.linkedin.com/in/bryanrvallejo/)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
