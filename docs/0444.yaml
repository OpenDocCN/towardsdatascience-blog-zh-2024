- en: Optimization of Neural Networks with Linear Solvers
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/optimization-of-neural-networks-with-linear-solvers-daa72aacef9f?source=collection_archive---------9-----------------------#2024-02-16](https://towardsdatascience.com/optimization-of-neural-networks-with-linear-solvers-daa72aacef9f?source=collection_archive---------9-----------------------#2024-02-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**How to optimize nonlinear neural networks in more than one dimension using
    linear solvers.**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@mit.forster?source=post_page---byline--daa72aacef9f--------------------------------)[![Tim
    Forster](../Images/0159a256b7fa28c674a1d5e1489e0df6.png)](https://medium.com/@mit.forster?source=post_page---byline--daa72aacef9f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--daa72aacef9f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--daa72aacef9f--------------------------------)
    [Tim Forster](https://medium.com/@mit.forster?source=post_page---byline--daa72aacef9f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--daa72aacef9f--------------------------------)
    Â·19 min readÂ·Feb 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1de53e567b4626496fd6ab2518a96147.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Sam Moghadam Khamseh](https://unsplash.com/@sammoghadamkhamseh?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Note: If you donâ€™t have a medium subscription, you can read the article [for
    free here](/optimization-of-neural-networks-with-linear-solvers-daa72aacef9f?sk=e1606dd1752718218d353eae62c10caa)
    (if you have a subscription, please continue reading here, thanks! ðŸ¥°)'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Recently, I stumbled over a problem that required me to create a model which
    takes more than one input feature and predicts a continuous output.
  prefs: []
  type: TYPE_NORMAL
- en: Then, I needed to get the best possible output from that model, which in my
    case was the lowest possible numerical value. So, in other words, I needed to
    solve an optimization problem.
  prefs: []
  type: TYPE_NORMAL
- en: The issue was (and I only realized it at that stage) that the environment I
    was working in did not allow me to use nonlinear things or sophisticated frameworksâ€”â€Šso
    no neural networks, no nonlinear solvers, nothing...
  prefs: []
  type: TYPE_NORMAL
- en: But, the model I created worked well (considering the low number of data points
    I trained it on), and I did not want to delete all my codes and start from scratch
    with a linear model.
  prefs: []
  type: TYPE_NORMAL
- en: So, after a cup of coffee â˜•, I decided to use this nonlinear model I already
    trained to generate a number of small linear ones. Then I could use a linear solver
    to solve the optimization problem.
  prefs: []
  type: TYPE_NORMAL
