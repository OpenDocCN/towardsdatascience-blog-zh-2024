["```py\n#packages for data manipulation\nimport pandas as pd\nfrom datetime import datetime\n\n#packages for modeling\nfrom sklearn.ensemble import IsolationForest\n\n#packages for data visualization\nimport matplotlib.pyplot as plt\n```", "```py\n#import sales data\nsales = pd.read_excel(\"Data/Sales Data.xlsx\")\n\n#subset to date and sales\nrevenue = sales[['Order Date', 'Sales']]\nrevenue.head()\n```", "```py\n#format the order date to datetime month and year\nrevenue['Order Date'] = pd.to_datetime(revenue['Order Date'],format='%Y-%m').dt.to_period('M')\n\n#sum sales by month and year\nrevenue = revenue.groupby(revenue['Order Date']).sum()\n\n#set date as index\nrevenue.index = revenue.index.strftime('%m-%Y')\n```", "```py\n#set the fig size\nplt.figure(figsize=(8, 5))\n\n#create the line chart\nplt.plot(revenue['Order Date'],\n         revenue['Sales'])\n\n#add labels and a title\nplt.xlabel('Moth')\nplt.ylabel('Total Sales')\nplt.title('Monthly Sales')\n\n#rotate x-axis labels by 45 degrees for better visibility\nplt.xticks(rotation = 90)\n\n#display the chart\nplt.show()\n```", "```py\n#set isolation forest model and fit to the sales\nmodel = IsolationForest(n_estimators = 100, max_samples = 'auto', contamination = float(0.1), max_features = 1.0)\nmodel.fit(revenue[['Sales']])\n```", "```py\n#add anomaly scores and prediction\nrevenue['scores'] = model.decision_function(revenue[['Sales']])\nrevenue['anomaly'] = model.predict(revenue[['Sales']])\n```"]