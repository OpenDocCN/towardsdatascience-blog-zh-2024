["```py\nÎ” % = (Synthetic - Shopify) / Shopify\n```", "```py\n#-- 0\\. libs\npacman::p_load(data.table, stringr, digest)\n\n#-- 1.1 load data; the csv files are what we get as a \n# full export from Shopify\nxs1_dt <- fread(file = \"shopify_raw/orders_export_1.csv\")\nxs2_dt <- fread(file = \"shopify_raw/orders_export_2.csv\")\nxs3_dt <- fread(file = \"shopify_raw/orders_export_3.csv\")\n\n#-- 1.2 check all columns, limit them to essential (for this analysis) \n# and bind into one data.table\nxs1_dt |> colnames()\n# there are 79 columns in full export, so we select a subset, \n# relevant for this analysis\nsel_cols <- c(\n\"Name\", \"Email\", \"Paid at\", \"Fulfillment Status\", \"Accepts Marketing\", \n\"Currency\", \"Subtotal\", \n\"Lineitem quantity\", \"Lineitem name\", \"Lineitem price\", \"Lineitem sku\", \n\"Discount Amount\", \"Billing Province\", \"Billing Country\")\n```", "```py\nxs_dt <- data.table::rbindlist(\n  l = list(xs1_dt, xs2_dt, xs3_dt), \n  use.names = T, fill = T, idcol = T) %>% .[, ..sel_cols]\n```", "```py\n#-- 2\\. data prep\n#-- 2.1 replace spaces in column names, for easier handling\nsel_cols_new <- sel_cols |> \n  stringr::str_replace(pattern = \" \", replacement = \"_\")\n\nsetnames(xs_dt, old = sel_cols, new = sel_cols_new)\n```", "```py\nxs_dt[, `:=` (Transaction_id = stringr::str_remove(Name, pattern = \"#\") |> \n              as.integer())]\n```", "```py\nnew_cols <- c(\"Email_hash\", \"e_number\")\nxs_dt[, (new_cols) := .(digest::digest(Email, algo = \"md5\"),\n                        digest::digest2int(Email, seed = 0L)), .I]\n```", "```py\n#-- 2.3 change Accepts_Marketing to logical column\nxs_dt[, `:=` (Accepts_Marketing_lgcl = fcase(\n    Accepts_Marketing == \"yes\", TRUE, \n    Accepts_Marketing == \"no\", FALSE, \n    default = NA))]\n```", "```py\nxs_dt[Transaction_id == 31023, .SD, .SDcols = c(\n  \"Transaction_id\", \"Paid_at\", \"Currency\", \"Subtotal\", \"Discount_Amount\", \n  \"Lineitem_quantity\", \"Lineitem_price\", \"Billing_Country\")]\n```", "```py\ntrans_sel_cols <- c(\n  \"Transaction_id\", \"Email_hash\", \"e_number\", \"Paid_at\", \"Subtotal\", \n  \"Currency\", \"Billing_Province\", \"Billing_Country\",\n  \"Fulfillment_Status\", \"Accepts_Marketing_lgcl\")\nxst_dt <- xs_dt[!is.na(Paid_at), ..trans_sel_cols]\n```", "```py\n#-- full dataset\nxst_dt |> fwrite(file = \"data/transactions_a.csv\")\n#-- a 5% sample\nxst_5pct_dt <- xst_dt[sample(.N, .N * .05)]\nxst_5pct_dt |> fwrite(file = \"data/transactions_a_5pct.csv\")\n```", "```py\n#-- 3.3 save Rds file\nlist(xs_dt = xs_dt, xst_dt = xst_dt, xst_5pct_dt = xst_5pct_dt) |> \n  saveRDS(file = \"data/xs_lst.Rds\")\n```", "```py\nUSE ROLE ACCOUNTADMIN;\nCREATE OR REPLACE ROLE data_engineer;\nCREATE OR REPLACE DATABASE syndata_db;\nCREATE OR REPLACE WAREHOUSE syndata_wh WITH\n  WAREHOUSE_SIZE = 'MEDIUM'\n  WAREHOUSE_TYPE = 'SNOWPARK-OPTIMIZED';\n\nGRANT OWNERSHIP ON DATABASE syndata_db TO ROLE data_engineer;\nGRANT USAGE ON WAREHOUSE syndata_wh TO ROLE data_engineer;\nGRANT ROLE data_engineer TO USER \"PIOTR\";\nUSE ROLE data_engineer;\n```", "```py\nCREATE SCHEMA syndata_db.experimental;\n\nCREATE STAGE syn_upload \n DIRECTORY = ( ENABLE = true ) \n COMMENT = 'import files';\n```", "```py\n-- generate synthetic\n-- small file, 5% records\ncall snowflake.data_privacy.generate_synthetic_data({\n    'datasets':[\n    {\n        'input_table':  'syndata_db.experimental.transactions_a_5pct',\n        'output_table': 'syndata_db.experimental.transactions_a_5pct_synth'    \n    }\n    ],\n    'replace_output_tables':TRUE\n});\n```", "```py\n-- large file, all records\ncall snowflake.data_privacy.generate_synthetic_data({\n    'datasets':[\n    {\n        'input_table':  'syndata_db.experimental.transactions_a',\n        'output_table': 'syndata_db.experimental.transactions_a_synth'    \n    }\n    ],\n    'replace_output_tables':TRUE\n});\n```", "```py\n-- export files to unload stage\nCREATE STAGE syn_unload \n DIRECTORY = ( ENABLE = true ) \n COMMENT = 'export files';\n\nCREATE OR REPLACE FILE FORMAT my_csv_unload_format\n  TYPE = 'CSV'\n  FIELD_DELIMITER = ','\n  FIELD_OPTIONALLY_ENCLOSED_BY = '\"';\n```", "```py\nCOPY INTO @syn_unload/transactions_a_5pct_synth \nFROM syndata_db.experimental.transactions_a_5pct_synth\nFILE_FORMAT = my_csv_unload_format\nHEADER = TRUE;\n\nCOPY INTO @syn_unload/transactions_a_synth \nFROM syndata_db.experimental.transactions_a_synth\nFILE_FORMAT = my_csv_unload_format\nHEADER = TRUE;\n```"]