- en: Complex List Comprehensions Can Be Readable!
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 复杂的列表推导式也可以是可读的！
- en: 原文：[https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18](https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18](https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18)
- en: PYTHON PROGRAMMING
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: PYTHON 编程
- en: Even quite complicated Python comprehensions can be more readable than the corresponding
    for loops.
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 即使是相当复杂的 Python 推导式，也比对应的 `for` 循环更具可读性。
- en: '[](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    ·17 min read·Apr 18, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    ·阅读时间 17 分钟·2024年4月18日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/7e7f71626f0daf1413ad70503c215a1c.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e7f71626f0daf1413ad70503c215a1c.png)'
- en: Python comprehensions allow for powerful computations in loops — even nested
    ones. Photo by [Önder Örtel](https://unsplash.com/@onderortel?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: Python 推导式允许在循环中进行强大的计算——即使是嵌套的计算。图片来源：[Önder Örtel](https://unsplash.com/@onderortel?utm_source=medium&utm_medium=referral)
    via [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Python comprehensions — including list, dictionary and set comprehensions as
    well as generator expressions — constitute a powerful Python syntactic sugar.
    You can read about them in the following articles:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: Python 推导式——包括列表、字典和集合推导式，以及生成器表达式——构成了强大的 Python 语法糖。你可以在以下文章中阅读相关内容：
- en: '[](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [## A Guide to Python Comprehensions'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [## Python 推导式指南'
- en: Learn the intricacies of list comprehensions (listcomps), set comprehensions
    (setcomps), dictionary comprehensions…
  id: totrans-11
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习列表推导式（listcomps）、集合推导式（setcomps）、字典推导式的细节…
- en: towardsdatascience.com](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
    [## Building Comprehension Pipelines in Python
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
    [## 在 Python 中构建推导管道
- en: Comprehension pipelines are a Python-specific idea for building pipelines
  id: totrans-13
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 推导管道是 Python 特有的一种构建管道的方式
- en: towardsdatascience.com](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: towardsdatascience.com](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
- en: 'Python comprehensions have two great advantages when compared to the corresponding
    `for` loops: they are faster and they can be much more readable.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: Python 推导式相比于对应的 `for` 循环有两个显著的优势：它们更快，且更具可读性。
- en: 'Note the phrase “*can be much more readable*.” Indeed, they aren’t always more
    readable. This begs the following question: When are they?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 注意短语“*可以更具可读性*。”确实，它们并不总是更具可读性。这引出了以下问题：它们在什么情况下可读性更高？
