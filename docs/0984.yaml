- en: Complex List Comprehensions Can Be Readable!
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18](https://towardsdatascience.com/complex-list-comprehensions-can-be-readable-b6c657622910?source=collection_archive---------4-----------------------#2024-04-18)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Even quite complicated Python comprehensions can be more readable than the corresponding
    for loops.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--b6c657622910--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b6c657622910--------------------------------)
    ·17 min read·Apr 18, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7e7f71626f0daf1413ad70503c215a1c.png)'
  prefs: []
  type: TYPE_IMG
- en: Python comprehensions allow for powerful computations in loops — even nested
    ones. Photo by [Önder Örtel](https://unsplash.com/@onderortel?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: 'Python comprehensions — including list, dictionary and set comprehensions as
    well as generator expressions — constitute a powerful Python syntactic sugar.
    You can read about them in the following articles:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [## A Guide to Python Comprehensions'
  prefs: []
  type: TYPE_NORMAL
- en: Learn the intricacies of list comprehensions (listcomps), set comprehensions
    (setcomps), dictionary comprehensions…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/a-guide-to-python-comprehensions-4d16af68c97e?source=post_page-----b6c657622910--------------------------------)
    [](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
    [## Building Comprehension Pipelines in Python
  prefs: []
  type: TYPE_NORMAL
- en: Comprehension pipelines are a Python-specific idea for building pipelines
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/building-comprehension-pipelines-in-python-ec68dce53d03?source=post_page-----b6c657622910--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: 'Python comprehensions have two great advantages when compared to the corresponding
    `for` loops: they are faster and they can be much more readable.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Note the phrase “*can be much more readable*.” Indeed, they aren’t always more
    readable. This begs the following question: When are they?'
  prefs: []
  type: TYPE_NORMAL
