["```py\nProfit = 90x + 75y\nObjective: maximize Profit subject to:\n3x+2y≤66\n9x+4y≤180\n2x+10y≤200\n\nBounds:\n2≤x≤8\n10≤y≤40\n```", "```py\nimport highspy\nimport numpy as np\n\n#initiate the model\nh = highspy.Highs()\n\n#define decision variables\nx = h.addVariable(lb = 2, ub = 8, name = “x”)\ny = h.addVariable(lb = 10, ub = 40, name = “y”)\n\n#h.setOptionValue(\"solver\", \"ipm\")\n\n#define constraints\nh.addConstr(3*x + 2*y<=66) #c0\nh.addConstr(9*x + 4*y<=180) #c1\nh.addConstr(2*x + 10*y<=200) #c2\n\n#objective\nh.maximize(90*x + 75*y)\n```", "```py\nsolution = h.getSolution()\nbasis = h.getBasis()\ninfo = h.getInfo()\n\nmodel_status = h.getModelStatus()\nprint(\"Model status = \", h.modelStatusToString(model_status))\nprint()\n\n#Get solution objective value, and optimal values for x and y\nprint(\"Optimal objective = \", info.objective_function_value)\nprint (\"Optimal value of x:\", solution.col_value[0])\nprint (\"Optimal value of y:\", solution.col_value[1])\n\n#get model run characteristics\nprint('Iteration count = ', info.simplex_iteration_count)\nprint('Primal solution status = ', h.solutionStatusToString(info.primal_solution_status))\nprint('Dual solution status = ', h.solutionStatusToString(info.dual_solution_status))\nprint('Basis validity = ', h.basisValidityToString(info.basis_validity))\n```"]