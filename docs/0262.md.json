["```py\n[tool.poetry]\nname = \"new_package\"\nversion = \"0.1.0\"\ndescription = \"What this package is gonna do\"\nauthors = [\n    \"Stephanie Kirmer <stephanie@stephaniekirmer.com>\",\n]\n\npackages = [{ include = \"new_package\"}]\ninclude = [{ path = \"tests\", format = \"sdist\" }]\n\n[build-system]\nrequires = [\"poetry-core>=1.0.0\"]\nbuild-backend = \"poetry.core.masonry.api\"\n\n# Requirements\n[tool.poetry.dependencies]\npython = \">=3.9, <4.0\"\n```", "```py\nfe = FeatureEngineering(input=json_object)\nprocessed_features = fe.feature_eng()\n```", "```py\nps = PredictionStage(features=processed_features)\npredictions = ps.predict(\n    feature_file=\"feature_set.json\",\n    model_file=\"classifier\",\n)\n```", "```py\ndef lambda_handler(json_object, _context):\n\n  fe = FeatureEngineering(input=json_object)\n  processed_features = fe.feature_eng()\n\n  ps = PredictionStage(features=processed_features)\n  predictions = ps.predict(\n      feature_file=\"feature_set.json\",\n      model_file=\"classifier\",\n  )\n\n  return predictions.to_dict(\"records\")\n```", "```py\nFROM public.ecr.aws/lambda/python:3.9\n\nARG YOUR_ENV\nENV NLTK_DATA=/tmp\nENV HF_HOME=/tmp \n```", "```py\nENV YOUR_ENV=${YOUR_ENV} \\\n  POETRY_VERSION=1.7.1\nENV SKIP_HACK=true\n\nRUN pip install \"poetry==$POETRY_VERSION\" \n```", "```py\nWORKDIR ${LAMBDA_TASK_ROOT}\n\nCOPY /poetry.lock ${LAMBDA_TASK_ROOT}\nCOPY /pyproject.toml ${LAMBDA_TASK_ROOT}\nCOPY /new_package/lambda_dir/lambda_function.py ${LAMBDA_TASK_ROOT}\nCOPY /new_package/preprocessing ${LAMBDA_TASK_ROOT}/new_package/preprocessing\nCOPY /new_package/tools ${LAMBDA_TASK_ROOT}/new_package/tools\nCOPY /new_package/modeling/feature_set.json ${LAMBDA_TASK_ROOT}/new_package\nCOPY /data/models/classifier ${LAMBDA_TASK_ROOT}/new_package\n```", "```py\nRUN poetry config virtualenvs.create false\nRUN poetry install --no-dev\n\nCMD [ \"lambda_function.lambda_handler\" ]\n```", "```py\ncurl -d @lambda_cases.json http://localhost:9000/2015-03-31/functions/function/invocations\n```", "```py\ndocker build . --platform=linux/arm64 -t accountnumber.dkr.ecr.us-east-1.amazonaws.com/your_lambda_project:latest\n```", "```py\ndocker push accountnumber.dkr.ecr.us-east-1.amazonaws.com/your_lambda_project:latest\n```"]