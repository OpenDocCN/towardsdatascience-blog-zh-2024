- en: Comprehensive Guide to Datasets and Dataloaders in PyTorch
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: PyTorch中的数据集和数据加载器完整指南
- en: 原文：[https://towardsdatascience.com/comprehensive-guide-to-datasets-and-dataloaders-in-pytorch-4d20f973d5d5?source=collection_archive---------6-----------------------#2024-06-15](https://towardsdatascience.com/comprehensive-guide-to-datasets-and-dataloaders-in-pytorch-4d20f973d5d5?source=collection_archive---------6-----------------------#2024-06-15)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/comprehensive-guide-to-datasets-and-dataloaders-in-pytorch-4d20f973d5d5?source=collection_archive---------6-----------------------#2024-06-15](https://towardsdatascience.com/comprehensive-guide-to-datasets-and-dataloaders-in-pytorch-4d20f973d5d5?source=collection_archive---------6-----------------------#2024-06-15)
- en: The full guide to creating custom datasets and dataloaders for different models
    in PyTorch
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 完整指南：如何为PyTorch中的不同模型创建自定义数据集和数据加载器
- en: '[](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)[![Ryan
    D''Cunha](../Images/7a39859e2b5e5b09ef2c60aaf6bb75ac.png)](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)
    [Ryan D''Cunha](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)[![Ryan
    D''Cunha](../Images/7a39859e2b5e5b09ef2c60aaf6bb75ac.png)](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)
    [Ryan D''Cunha](https://medium.com/@rtdcunha?source=post_page---byline--4d20f973d5d5--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)
    ·5 min read·Jun 15, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4d20f973d5d5--------------------------------)
    ·阅读时间：5分钟·2024年6月15日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/6e4efac0de583f1e865e0158db53f194.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e4efac0de583f1e865e0158db53f194.png)'
- en: 'Source: GPT4o Generated'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：GPT4o 生成
- en: Before you can build a machine learning model, you need to load your data into
    a dataset. Luckily, PyTorch has many commands to help with this entire process
    (if you are not familiar with PyTorch I recommend refreshing on the basics [here](https://medium.com/@rtdcunha/a-beginners-guide-to-pytorch-6bc600ca4b8d)).
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在构建机器学习模型之前，您需要将数据加载到数据集中。幸运的是，PyTorch提供了许多命令来帮助完成整个过程（如果你不熟悉PyTorch，建议先复习基础知识[这里](https://medium.com/@rtdcunha/a-beginners-guide-to-pytorch-6bc600ca4b8d)）。
- en: PyTorch has good documentation to help with this process, but I have not found
    any comprehensive documentation or tutorials towards custom datasets. I’m first
    going to start with creating basic premade datasets and then work my way up to
    creating datasets from scratch for different models!
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch提供了丰富的文档来帮助完成这个过程，但我没有找到任何关于自定义数据集的全面文档或教程。首先，我将从创建基本的现成数据集开始，然后逐步学习如何为不同的模型从头开始创建数据集！
- en: What is a Dataset and Dataloader?
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 什么是数据集和数据加载器？
- en: Before we dive into code for different use cases, let’s understand the difference
    between the two terms. Generally, you first create your dataset and then create
    a dataloader. A **dataset** contains the features and labels from each data point
    that will be fed into the model. A **dataloader** is a custom PyTorch iterable
    that makes it easy to load data with added features.
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 在我们深入探讨不同使用案例的代码之前，首先让我们理解这两个术语之间的区别。通常，你首先创建数据集，然后创建数据加载器。**数据集**包含将输入模型的每个数据点的特征和标签。**数据加载器**是一个自定义的PyTorch可迭代对象，它使得加载数据并附加额外功能变得更加容易。
- en: '[PRE0]'
  id: totrans-12
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: The most common arguments in the dataloader are *batch_size*, *shuffle* (usually
    only for the training data), *num_workers* (to multi-process loading the data),
    and *pin_memory* (to put the fetched data Tensors in pinned memory and enable
    faster data transfer to CUDA-enabled GPUs).
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 数据加载器中最常见的参数有*batch_size*、*shuffle*（通常仅用于训练数据）、*num_workers*（用于多进程加载数据）和*pin_memory*（将获取的数据张量放入固定内存中，从而加快数据传输到支持CUDA的GPU的速度）。
- en: It is recommended to set pin_memory = True instead of specifying num_workers
    due to multiprocessing complications with CUDA.
  id: totrans-14
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 建议设置pin_memory = True，而不是指定num_workers，因为CUDA的多进程处理会引发一些复杂问题。
- en: Loading a Premade Dataset
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 加载现成数据集
- en: In the case that your dataset is downloaded from online or locally, it will
    be extremely simple to create the dataset. I think PyTorch has good [documentation](https://pytorch.org/tutorials/beginner/basics/data_tutorial.html)
    on this, so I will be brief.
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你的数据集是从在线或本地下载的，创建数据集将非常简单。我认为 PyTorch 在这方面有很好的[文档](https://pytorch.org/tutorials/beginner/basics/data_tutorial.html)，所以我会简要介绍。
- en: 'If you know the dataset is either from PyTorch or PyTorch-compatible, simply
    call the necessary imports and the dataset of choice:'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你知道数据集来自 PyTorch 或 PyTorch 兼容的来源，只需调用必要的导入和选择的数据集：
- en: '[PRE1]'
  id: totrans-18
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: Each dataset will have unique arguments to pass into it (found [here](https://pytorch.org/vision/main/datasets.html)).
    In general, it will be the path the dataset is stored at, a boolean indicating
    if it needs to be downloaded or not (conveniently called download), whether it
    is training or testing, and if transforms need to be applied.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 每个数据集都会有独特的参数需要传入（可以在[这里](https://pytorch.org/vision/main/datasets.html)找到）。通常，它们包括数据集存储路径、一个布尔值表示是否需要下载（通常称为
    download）、是否用于训练或测试，以及是否需要应用转换。
- en: Transforms
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 转换
- en: I dropped in that transforms can be applied to a dataset at the end of the last
    section, but what actually is a transform?
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 我在上一节末尾提到过转换可以应用到数据集上，但什么是转换呢？
- en: A **transform** is a method of manipulating data for preprocessing an image.
    There are many different facets to transforms. The most common transform, *ToTensor()*,
    will convert the dataset to tensors (needed to input into any model). Other transforms
    built into PyTorch (*torchvision.transforms*) include flipping, rotating, cropping,
    normalizing, and shifting images. These are typically used so the model can generalize
    better and doesn’t overfit to the training data. Data augmentations can also be
    used to artificially increase the size of the dataset if needed.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: '**transform** 是一种操作数据以进行图像预处理的方法。转换有很多不同的方面。最常见的转换 *ToTensor()* 会将数据集转换为张量（这是输入到任何模型所需要的）。PyTorch
    内置的其他转换（*torchvision.transforms*）包括翻转、旋转、裁剪、归一化和图像平移。这些通常用于使模型能够更好地泛化，避免在训练数据上过拟合。如果需要，数据增强还可以用来人为地增加数据集的大小。'
- en: Beware most torchvision transforms only accept Pillow image or tensor formats
    (not numpy). To convert, simply use
  id: totrans-23
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 注意，大多数 torchvision 转换只接受 Pillow 图像或张量格式（不支持 numpy）。要进行转换，只需使用
- en: 'To convert from numpy, either create a torch tensor or use the following:'
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 要从 numpy 转换，可以创建一个 torch 张量，或者使用以下方法：
- en: '[PRE2]'
  id: totrans-25
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'Transforms can be applied simultaneously using *torchvision.transforms.compose*.
    You can combine as many transforms as needed for the dataset. An example is shown
    below:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 可以使用 *torchvision.transforms.compose* 同时应用多个转换。你可以根据数据集的需求组合尽可能多的转换。下面是一个示例：
- en: '[PRE3]'
  id: totrans-27
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Be sure to pass the saved transform as an argument into the dataset for it to
    be applied in the dataloader.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 确保将已保存的转换作为参数传递给数据集，这样它才能在数据加载器中应用。
- en: Creating a Custom Dataset
  id: totrans-29
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建自定义数据集
- en: In most cases of developing your own model, you will need a custom dataset.
    A common use case would be transfer learning to apply your own dataset on a pretrained
    model.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 在大多数开发自己模型的情况下，你需要一个自定义数据集。一个常见的用例是迁移学习，将自己的数据集应用于预训练模型。
- en: 'There are 3 required parts to a PyTorch dataset class: **initialization**,
    **length**, and **retrieving an element**.'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: PyTorch 数据集类有三个必需的部分：**初始化**、**长度**和**获取元素**。
- en: '**__init__**: To initialize the dataset, pass in the raw and labeled data.
    The best practice is to pass in the raw image data and labeled data separately.'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: '**__init__**: 初始化数据集时，传入原始数据和标签数据。最佳实践是分别传入原始图像数据和标签数据。'
- en: '**__len__**: Return the length of the dataset. Before creating the dataset,
    the raw and labeled data should be checked to be the same size.'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: '**__len__**: 返回数据集的长度。在创建数据集之前，应该检查原始数据和标签数据是否大小相同。'
- en: '**__getitem__**: This is where all the data handling occurs to return a given
    index (idx) of the raw and labeled data. If any transforms need to be applied,
    the data must be converted to a tensor and transformed. If the initialization
    contained a path to the dataset, the path must be opened and data accessed/preprocessed
    before it can be returned.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '**__getitem__**: 在这里，所有数据处理都会发生，返回给定索引（idx）的原始数据和标签数据。如果需要应用任何转换，数据必须先转换为张量并进行转换。如果初始化时包含了数据集的路径，必须打开路径并在返回之前访问/预处理数据。'
- en: 'Example dataset for a semantic segmentation model:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 语义分割模型的示例数据集：
- en: '[PRE4]'
  id: totrans-36
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: It is important to look at the input of the first layer of the model (especially
    for a pretrained model), to make sure the shape of the data matches the input
    shape. If not, you may need to adjust the dimensions. This is common if the input
    image is a greyscale n x n array, but the model requires a channel dimension (1
    x 256 x 256).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 检查模型第一层的输入非常重要（特别是对于预训练模型），以确保数据的形状与输入形状匹配。如果不匹配，可能需要调整维度。如果输入图像是灰度的 n x n 数组，而模型需要一个通道维度（1
    x 256 x 256），这种情况很常见。
- en: After the dataset and dataloader are applied, the format of the data should
    be NCHW (batch size, channel size, height, width). Reformatting can be done in
    the __getitem__ method before outputting to the model.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 在应用数据集和数据加载器后，数据的格式应该是 NCHW（批次大小，通道大小，高度，宽度）。可以在 `__getitem__` 方法中进行重新格式化，然后再输入模型。
- en: Splitting the Dataset
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 拆分数据集
- en: While creating the dataset, you may want to split into a training, testing,
    and validation dataset. This can be done using a built-in PyTorch function and
    specifying the sizes. Make sure the dataset splits add up to the total length
    of the dataset.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 在创建数据集时，你可能希望将其拆分为训练集、测试集和验证集。可以使用 PyTorch 内置的函数并指定大小来完成此操作。确保数据集的拆分总和等于数据集的总长度。
- en: '[PRE5]'
  id: totrans-41
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Data Labels
  id: totrans-42
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据标签
- en: 'There can be different data labels depending on the model: classification,
    object detection, or segmentation. A model classification label will contain a
    class label if it is multiclass or a binary number if it is binary. An object
    detection model will contain a bounding box of coordinates as the label. A semantic
    segmentation model will contain a binary mask matching the size of the raw image
    data. An instance segmentation contains all mask data in the raw image data.'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 根据模型的不同，数据标签可能有所不同：分类、目标检测或分割。分类模型的标签如果是多分类，会包含类标签；如果是二分类，则是二进制数。目标检测模型的标签将包含一个坐标框。语义分割模型的标签将包含与原始图像数据大小匹配的二进制掩码。实例分割则包含原始图像数据中的所有掩码数据。
- en: Creating a dataset is a foundational aspect of model development. By having
    a faulty dataset, there will be many errors downstream in training or evaluating
    the model. The most common errors to watch out for are shape or type mismatches.
    By following this and referring to PyTorch docs, you should have a working dataset!
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据集是模型开发的基础。数据集存在问题时，会导致训练或评估模型时出现许多错误。最常见的错误是形状或类型不匹配。通过遵循这些指导并参考 PyTorch
    文档，你应该能够创建一个有效的数据集！
- en: References
  id: totrans-45
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参考文献
- en: '[## Datasets & DataLoaders - PyTorch Tutorials 2.3.0+cu121 documentation'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: '[## 数据集与 DataLoader - PyTorch 教程 2.3.0+cu121 文档](https://pytorch.org/tutorials/beginner/basics/data_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)'
- en: Learn the Basics || Quickstart || Tensors || Datasets & DataLoaders || Transforms
    || Build Model || Autograd ||…
  id: totrans-47
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 学习基础知识 || 快速入门 || 张量 || 数据集与 DataLoader || 转换 || 构建模型 || 自动求导 ||…
- en: pytorch.org](https://pytorch.org/tutorials/beginner/basics/data_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)
    [](https://pytorch.org/tutorials/beginner/data_loading_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)
    [## Writing Custom Datasets, DataLoaders and Transforms - PyTorch Tutorials 2.3.0+cu121
    documentation
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: pytorch.org](https://pytorch.org/tutorials/beginner/basics/data_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)
    [](https://pytorch.org/tutorials/beginner/data_loading_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)
    [## 编写自定义数据集、DataLoader 和转换 - PyTorch 教程 2.3.0+cu121 文档
- en: 'Author: Sasank Chilamkurthy A lot of effort in solving any machine learning
    problem goes into preparing the data…'
  id: totrans-49
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 作者：Sasank Chilamkurthy 在解决任何机器学习问题时，大量工作都集中在数据准备上…
- en: pytorch.org](https://pytorch.org/tutorials/beginner/data_loading_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)  [##
    Transforming and augmenting images - Torchvision 0.18 documentation
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: pytorch.org](https://pytorch.org/tutorials/beginner/data_loading_tutorial.html?source=post_page-----4d20f973d5d5--------------------------------)  [##
    转换和增强图像 - Torchvision 0.18 文档
- en: Torchvision supports common computer vision transformations in the torchvision.transforms
    and torchvision.transforms.v2…
  id: totrans-51
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: Torchvision 支持在 torchvision.transforms 和 torchvision.transforms.v2 中常见的计算机视觉转换…
- en: pytorch.org](https://pytorch.org/vision/stable/transforms.html?source=post_page-----4d20f973d5d5--------------------------------)  [##
    Compose - Torchvision main documentation
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: pytorch.org](https://pytorch.org/vision/stable/transforms.html?source=post_page-----4d20f973d5d5--------------------------------)  [##
    组合 - Torchvision 主要文档
- en: Run PyTorch locally or get started quickly with one of the supported cloud platforms
  id: totrans-53
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 在本地运行 PyTorch 或快速开始使用支持的云平台之一
- en: pytorch.org](https://pytorch.org/vision/main/generated/torchvision.transforms.Compose.html?source=post_page-----4d20f973d5d5--------------------------------)
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: '[pytorch.org](https://pytorch.org/vision/main/generated/torchvision.transforms.Compose.html?source=post_page-----4d20f973d5d5--------------------------------)'
