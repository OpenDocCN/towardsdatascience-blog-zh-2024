["```py\nimport panel as pn\n\npn.extension(design=\"material\")\n\nslider = pn.widgets.IntSlider(name=\"Select a value\", value=10, start=0, end=100)\npn.Column(\n    \"# Hello Panel + Quarto!\",\n    pn.rx(\"You selected: {}\").format(slider),\n).servable()\n```", "```py\nimport io\nimport panel as pn\nimport pandas as pd\nimport hvplot.pandas\n\npn.extension(template='fast')\n\npn.state.template.title = 'hvPlot Explorer'\n\nupload = pn.widgets.FileInput(name='Upload file', height=50)\nselect = pn.widgets.Select(options={\n    'Penguins': 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/penguins.csv',\n    'Diamonds': 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/diamonds.csv',\n    'Titanic': 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/titanic.csv',\n    'MPG': 'https://raw.githubusercontent.com/mwaskom/seaborn-data/master/mpg.csv'\n})\n\ndef add_data(event):\n    b = io.BytesIO()\n    upload.save(b)\n    b.seek(0)\n    name = '.'.join(upload.filename.split('.')[:-1])\n    select.options[name] = b\n    select.param.trigger('options')\n    select.value = b\n\nupload.param.watch(add_data, 'filename')\n\ndef explore(csv):\n    df = pd.read_csv(csv)\n    explorer = hvplot.explorer(df)\n    def plot_code(**kwargs):\n        code = f'```", "```py'\n        return pn.pane.Markdown(code, sizing_mode='stretch_width')\n    return pn.Column(\n        explorer,\n        '**Code**:',\n        pn.bind(plot_code, **explorer.param.objects())\n    )\n\nwidgets = pn.Column(\n    \"Select an existing dataset or upload one of your own CSV files and start exploring your data.\",\n    pn.Row(\n        select,\n        upload,\n    )\n).servable()  \n\noutput = pn.panel(pn.bind(explore, select)).servable()\n\npn.Column(widgets, output)\n```", "```py\nimport hvplot.pandas\nimport numpy as np\nimport pandas as pd\nimport panel as pn\n\nPRIMARY_COLOR = \"#0072B5\"\nSECONDARY_COLOR = \"#B54300\"\nCSV_FILE = (\n    \"https://raw.githubusercontent.com/holoviz/panel/main/examples/assets/occupancy.csv\"\n)\n\npn.extension(design=\"material\", sizing_mode=\"stretch_width\")\n\n@pn.cache\ndef get_data():\n  return pd.read_csv(CSV_FILE, parse_dates=[\"date\"], index_col=\"date\")\n\ndata = get_data()\n\ndata.tail()\n\ndef transform_data(variable, window, sigma):\n    \"\"\"Calculates the rolling average and identifies outliers\"\"\"\n    avg = data[variable].rolling(window=window).mean()\n    residual = data[variable] - avg\n    std = residual.rolling(window=window).std()\n    outliers = np.abs(residual) > std * sigma\n    return avg, avg[outliers]\n\ndef get_plot(variable=\"Temperature\", window=30, sigma=10):\n    \"\"\"Plots the rolling average and the outliers\"\"\"\n    avg, highlight = transform_data(variable, window, sigma)\n    return avg.hvplot(\n        height=300, legend=False, color=PRIMARY_COLOR\n    ) * highlight.hvplot.scatter(color=SECONDARY_COLOR, padding=0.1, legend=False)\n\nget_plot(variable='Temperature', window=20, sigma=10)\n\nvariable_widget = pn.widgets.Select(name=\"variable\", value=\"Temperature\", options=list(data.columns))\nwindow_widget = pn.widgets.IntSlider(name=\"window\", value=30, start=1, end=60)\nsigma_widget = pn.widgets.IntSlider(name=\"sigma\", value=10, start=0, end=20)\n\nbound_plot = pn.bind(\n    get_plot, variable=variable_widget, window=window_widget, sigma=sigma_widget\n)\n\nwidgets = pn.Column(variable_widget, window_widget, sigma_widget, sizing_mode=\"fixed\", width=300)\npn.Column(widgets, bound_plot)\n\npn.template.MaterialTemplate(\n    site=\"Panel\",\n    title=\"Getting Started App\",\n    sidebar=[variable_widget, window_widget, sigma_widget],\n    main=[bound_plot],\n).servable();\n```", "```py\npanel serve simple_app.py --dev\n```", "```py\npanel convert simple_app.py --to pyodide-worker --out docs\n```", "```py\napp/\n|- index.html\n|- index.js\n```", "```py\n1\\. <a href=\"https://petoulemonde.github.io/article_dynamic_webpages/simple_app_pyodide/simple_app.html\">Simple app</a>\n<br/>\n2\\. <a href=\"https://petoulemonde.github.io/article_dynamic_webpages/big_app_pyodide/big_app.html\">Big app</a>\n<br/>\n3\\. <a href=\"https://petoulemonde.github.io/article_dynamic_webpages/material_dashboard_pyodide/material_dashboard.html\">Material dashboard</a>\n```", "```py\npn.template.MaterialTemplate(\n  site=\"Panel\",\n  title=\"Getting Started App\",\n  sidebar=[\n    pn.pane.HTML('<a href=\"127.0.0.1:8000/docs/big_app_pyodide/big_app.html\">Big app</a>'), # New line !\n    variable_widget,\n    window_widget,\n    sigma_widget],\n  main=[bound_plot],\n).servable();\n```"]