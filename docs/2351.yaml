- en: 'Dummy Regressor, Explained: A Visual Guide with Code Examples for Beginners'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/dummy-regressor-explained-a-visual-guide-with-code-examples-for-beginners-4007c3d16629?source=collection_archive---------11-----------------------#2024-09-26](https://towardsdatascience.com/dummy-regressor-explained-a-visual-guide-with-code-examples-for-beginners-4007c3d16629?source=collection_archive---------11-----------------------#2024-09-26)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: REGRESSION ALGORITHM
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Naively choosing the best number for all of your prediction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--4007c3d16629--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--4007c3d16629--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4007c3d16629--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4007c3d16629--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--4007c3d16629--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4007c3d16629--------------------------------)
    ¬∑7 min read¬∑Sep 26, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: There are a lot of times when my students come to me saying that they want to
    try the most sophisticated model out there for their machine learning tasks, and
    sometimes, I jokingly said, ‚ÄúHave you tried the *best ever model* first?‚Äù Especially
    in regression case (where we don‚Äôt have that ‚Äú100% accuracy‚Äù goal), some machine
    learning models seemingly get a good low error score but when you compare it with
    the dummy model, it‚Äôs actually‚Ä¶ not that great.
  prefs: []
  type: TYPE_NORMAL
- en: So, here‚Äôs dummy regressor. [Just like in classifier](/dummy-classifier-explained-a-visual-guide-with-code-examples-for-beginners-009ff95fc86e),
    the regression task also has its baseline model ‚Äî the first model you have to
    try to get the rough idea of how much better your machine learning could be.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a26c1218b6656b6c7a27afad643df65f.png)'
  prefs: []
  type: TYPE_IMG
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  prefs: []
  type: TYPE_NORMAL
- en: Definition
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: A dummy regressor is a simple machine learning model that predicts numerical
    values using basic rules, without actually learning from the input data. Like
    [its classification counterpart](/dummy-classifier-explained-a-visual-guide-with-code-examples-for-beginners-009ff95fc86e),
    it serves as a baseline for comparing the performance of more complex regression
    models. The dummy regressor helps us understand if our models are actually learning
    useful patterns or just making naive predictions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fb0de27cedea46784a68d59a04efe209.png)'
  prefs: []
  type: TYPE_IMG
- en: Dummy Regressor is the simplest machine learning model imaginable.
  prefs: []
  type: TYPE_NORMAL
- en: üìä Dataset & Libraries
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Throughout this article, we‚Äôll use this simple artificial golf dataset as an
    example. This dataset predicts the number of golfers visiting our golf course.
    It includes features like outlook, temperature, humidity, and wind, with the target
    variable being the number of golfers.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6b391a1419ca551296c6405cfc93b4c9.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Columns: ‚ÄòOutlook‚Äô, ‚ÄòTemperature‚Äô (in Fahrenheit), ‚ÄòHumidity‚Äô (in %), ‚ÄòWind‚Äô
    (Yes/No) and ‚ÄòNumber of Players‚Äô (numerical, target feature)'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: Evaluating Regression Result
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before getting into the dummy regressor itself, let‚Äôs recap the method to evaluate
    the regression result. While in classification case, it is very intuitive to check
    the accuracy of the model (just check the ratio of the matching values), in regression,
    it is a bit different.
  prefs: []
  type: TYPE_NORMAL
- en: RMSE (root mean squared error) is like a **score for regression models**. It
    tells us how far off our predictions are from the actual values. Just as we want
    high accuracy in classification to get more right answers, **we want a low RMSE**
    in regression to be closer to the true values.
  prefs: []
  type: TYPE_NORMAL
- en: People like using RMSE because **its value is in the same type** as what we‚Äôre
    trying to guess.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/89a57cc0f48f0bd3d7d523be535fc9bd.png)'
  prefs: []
  type: TYPE_IMG
- en: Having RMSE = 3 can be interpreted that the actual value is within ¬±3 range
    from the prediction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: With that in mind, let‚Äôs get into the algorithm.
  prefs: []
  type: TYPE_NORMAL
- en: Main Mechanism
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Dummy Regressor makes predictions based on simple rules, such as always returning
    the **mean or median** of the target values in the training data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/39b0253d963d586062170f055900981d.png)'
  prefs: []
  type: TYPE_IMG
- en: For our golf dataset, a dummy regressor might always predict ‚Äú40.5‚Äù for number
    of players as that is the median of the training label.
  prefs: []
  type: TYPE_NORMAL
- en: Training Steps
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'It‚Äôs a bit of a lie saying that there‚Äôs any training process in dummy regressor
    but anyway, here‚Äôs a general outline:'
  prefs: []
  type: TYPE_NORMAL
- en: 1\. Select Strategy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Choose one of the following strategies:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Mean**: Always predicts the mean of the training target values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Median**: Always predicts the median of the training target values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Constant**: Always predicts a constant value provided by the user.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/672b8a6fa897d96a46e726c4019d4983.png)'
  prefs: []
  type: TYPE_IMG
- en: Depends on the strategy, Dummy Regressor makes different numerical prediction.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 2\. Calculate the Metric
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Calculate either mean or median, depending on your strategy.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b7175d6ed9dd85ce474d5ced46169f34.png)'
  prefs: []
  type: TYPE_IMG
- en: The algorithm is simply calculating the median of the training data‚Äî in this
    case we get 40.5.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 3\. Apply Strategy to Test Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Use the chosen strategy to **generate a list of predicted numerical labels**
    for your test data.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a76c34d4df043dad4fa5b8979674f65a.png)'
  prefs: []
  type: TYPE_IMG
- en: If we choose the ‚Äúmedian‚Äù strategy, the calculated median (40.5) will simply
    be the prediction for everything.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Evaluate the Model
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '![](../Images/33152fd5f7de890cce4d0e70511619fa.png)'
  prefs: []
  type: TYPE_IMG
- en: Dummy regressor with this strategy gives error value of 13.28 as the baseline
    for future models.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Key Parameters
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'There‚Äôs only one main key parameter in dummy regressor, which is:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Strategy**: This determines how the regressor makes predictions. Common options
    include:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '- **mean**: Provides an average baseline, commonly used for general scenarios.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- **median**: More robust against outliers, good for skewed target distributions.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- **constant**: Useful when domain knowledge suggests a specific constant prediction.'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Constant**: When using the ‚Äòconstant‚Äô strategy, this parameter specifies
    which class to always predict.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/5c33e7107ab363c5c632e09294b96ff4.png)'
  prefs: []
  type: TYPE_IMG
- en: Regardless of the strategy used, the result are all equally bad but for sure
    our next regression model should have RMSE value lower than 12.
  prefs: []
  type: TYPE_NORMAL
- en: Pros and Cons
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As a lazy predictor, dummy regressor for sure have their strengths and limitations.
  prefs: []
  type: TYPE_NORMAL
- en: '**Pros:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Easy Benchmark**: Quickly shows the minimum performance other models should
    beat.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Fast**: Takes no time to set up and run.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cons:**'
  prefs: []
  type: TYPE_NORMAL
- en: '**Doesn‚Äôt Learn**: Just uses simple rules, so it‚Äôs often outperformed by real
    models.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Ignores Features**: Doesn‚Äôt consider any input data when making predictions.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Final Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Using dummy regressor should be the first step whenever we have a regression
    task. They provide a standard base line, so that we are sure that a more complex
    model actually gives better result rather than random prediction. As you learn
    more advanced technique, never forget to compare your models against these simple
    baselines ‚Äî these naive prediction might be what you first need!
  prefs: []
  type: TYPE_NORMAL
- en: üåü Dummy Regressor Code Summarized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: Further Reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For a detailed explanation of the [DummyRegressor](https://scikit-learn.org/stable/modules/generated/sklearn.dummy.DummyRegressor.html)
    and its implementation in scikit-learn, readers can refer to the official documentation,
    which provides comprehensive information on its usage and parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Technical Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article uses Python 3.7 and scikit-learn 1.5\. While the concepts discussed
    are generally applicable, specific code implementations may vary slightly with
    different versions.
  prefs: []
  type: TYPE_NORMAL
- en: About the Illustrations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôéùôöùôö ùô¢ùô§ùôßùôö ùôçùôöùôúùôßùôöùô®ùô®ùôûùô§ùô£ ùòºùô°ùôúùô§ùôßùôûùô©ùôùùô¢ùô® ùôùùôöùôßùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----4007c3d16629--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Regression Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----4007c3d16629--------------------------------)5
    stories![A cartoon doll with pigtails and a pink hat. This ‚Äúdummy‚Äù doll, with
    its basic design and heart-adorned shirt, visually represents the concept of a
    dummy regressor in machine. Just as this toy-like figure is a simplified, static
    representation of a person, a dummy regressor is a basic models serve as baselines
    for more sophisticated analyses.](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôîùô§ùô™ ùô¢ùôûùôúùôùùô© ùôñùô°ùô®ùô§ ùô°ùôûùô†ùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----4007c3d16629--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Classification Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----4007c3d16629--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)'
  prefs: []
  type: TYPE_NORMAL
