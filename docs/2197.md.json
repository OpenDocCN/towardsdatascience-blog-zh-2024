["```py\n**********************************;\n**********************************;\n/* Set the random seed for reproducibility */\ndata _null_;\n   call streaminit(1234);\nrun;\n\n/* Number of simulations */\n%let num_simulations = 100000;\n\n/* Number of civilizations to generate */\n%let num_civilizations = 2364;\n\n/* Galactic radius and height in light years */\n%let galactic_radius = 50000;\n%let galactic_height = 1300;\n\n/* Earth's position (assumed to be at 3/4 of the galactic radius) */\n%let earth_position_x = &galactic_radius * 3 / 4;\n%let earth_position_y = 0;\n%let earth_position_z = 0;\n\n/* Create a dataset to store civilization positions */\ndata civilization_positions;\n    length Civilization $10.;\n    input Civilization $ Position_X Position_Y Position_Z;\n    datalines;\nEarth    &earth_position_x  &earth_position_y  &earth_position_z\n;\nrun;\n\n/* Generate random positions for other civilizations */\ndata civilization_positions;\n    set civilization_positions;\n    do i = 1 to &num_civilizations;\n        Position_X = rand(\"Uniform\") * &galactic_radius;\n        Position_Y = rand(\"Uniform\") * 2 * &galactic_height - &galactic_height;\n        Position_Z = rand(\"Uniform\") * 2 * &galactic_height - &galactic_height;\n        Civilization = \"Civilization \" || strip(put(i, 8.));\n        output;\n    end;\n    drop i;\nrun;\n\n/* Calculate the distance between civilizations and Earth */\ndata civilization_distances;\n    set civilization_positions;\n    Distance = sqrt((Position_X - &earth_position_x)**2 + (Position_Y - &earth_position_y)**2 + (Position_Z - &earth_position_z)**2);\nrun;\n\n/* Calculate the minimum distance to Earth for each civilization */\nproc sql;\n    create table civilization_min_distance as\n    select Civilization, Distance as Min_Distance\n    from civilization_distances\n    order by Distance;\nquit;\n\n/* Calculate the probability of encountering civilizations based on distance */\ndata probability_encounter;\n    set civilization_min_distance;\n    Probability = 1 / (1 + Min_Distance);\nrun;\n\n/* Calculate the average probability for each distance band */\nproc sql;\n    create table average_probability as\n    select case\n                when Min_Distance <= 1000 then 'Close'\n                when Min_Distance > 1000 and Min_Distance <= 3000 then 'Medium'\n                when Min_Distance > 3000 then 'Far'\n            end as Distance_Band,\n            avg(Probability) as Average_Probability\n    from probability_encounter\n    group by case\n                when Min_Distance <= 1000 then 'Close'\n                when Min_Distance > 1000 and Min_Distance <= 3000 then 'Medium'\n                when Min_Distance > 3000 then 'Far'\n            end;\nquit;\n\n/* Print the result */\nproc print data=average_probability;\nrun;\n\n/* Select the closest civilization to Earth and its associated probability */\nproc sql;\n    create table closest_civilization as\n    select Civilization, Min_Distance, Probability\n    from probability_encounter\n    where Min_Distance = (select min(Min_Distance) from probability_encounter);\nquit;\n\n/* Print the result */\nproc print data=closest_civilization;\nrun;\n\n/*Bayesian analysis for probability of encountering aliens in the past or future*/\n\n/* Set seed for reproducibility */\n%let num_iterations = 100;\n\n/* Create Bayesian analysis dataset */\ndata bayesian_analysis;\n    call streaminit(123);\n\n    /* Define variables for posterior probabilities */\n    array posterior_past[&num_iterations];\n    array posterior_future[&num_iterations];\n\n    do i = 1 to &num_iterations;\n        /* Sample prior probabilities and likelihoods for past encounters */\n        prior_past = rand(\"Uniform\", 0.0001, 0.01); /* P(Past encounter) */\n        likelihood_past_encounter = rand(\"Uniform\", 0.001, 0.1); /* P(No contact | Past encounter) */\n        likelihood_no_encounter_past = rand(\"Uniform\", 0.8, 0.99); /* P(No contact | No encounter) */\n\n        /* Calculate posterior probability for past encounter using Bayes' Theorem */\n        numerator_past = prior_past * likelihood_past_encounter;\n        denominator_past = numerator_past + (1 - prior_past) * likelihood_no_encounter_past;\n        posterior_past[i] = numerator_past / denominator_past;\n\n        /* Sample prior probabilities and likelihoods for future encounters */\n        prior_future = rand(\"Uniform\", 0.001, 0.05); /* P(Future encounter) */\n        likelihood_future_encounter = rand(\"Uniform\", 0.01, 0.1); /* P(No contact | Future encounter) */\n        likelihood_no_encounter_future = rand(\"Uniform\", 0.8, 0.99); /* P(No contact | No encounter) */\n\n        /* Calculate posterior probability for future encounter using Bayes' Theorem */\n        numerator_future = prior_future * likelihood_future_encounter;\n        denominator_future = numerator_future + (1 - prior_future) * likelihood_no_encounter_future;\n        posterior_future[i] = numerator_future / denominator_future;\n    end;\n\n    /* Output the results */\n    do i = 1 to &num_iterations;\n        posterior_past_value = posterior_past[i];\n        posterior_future_value = posterior_future[i];\n        output;\n    end;\n    keep posterior_past_value posterior_future_value;\nrun;\n\n/* Summary statistics for the posterior probabilities */\nproc means data=bayesian_analysis mean std min max;\n    var posterior_past_value posterior_future_value;\nrun;\n\n/* Distribution histograms for the posterior probabilities */\nproc sgplot data=bayesian_analysis;\n    histogram posterior_past_value / transparency=0.5 fillattrs=(color=blue) binwidth=0.00001;\n    title \"Distribution of Posterior Probabilities for Past Encounters\";\nrun;\n\nproc sgplot data=bayesian_analysis;\n    histogram posterior_future_value / transparency=0.5 fillattrs=(color=green) binwidth=0.0001;\n    title \"Distribution of Posterior Probabilities for Future Encounters\";\nrun;\n```"]