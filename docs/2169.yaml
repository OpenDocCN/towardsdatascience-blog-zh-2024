- en: Image Segmentation With K-Means Clustering
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用K均值聚类进行图像分割
- en: 原文：[https://towardsdatascience.com/image-segmentation-with-k-means-clustering-1bc53601f033?source=collection_archive---------6-----------------------#2024-09-05](https://towardsdatascience.com/image-segmentation-with-k-means-clustering-1bc53601f033?source=collection_archive---------6-----------------------#2024-09-05)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/image-segmentation-with-k-means-clustering-1bc53601f033?source=collection_archive---------6-----------------------#2024-09-05](https://towardsdatascience.com/image-segmentation-with-k-means-clustering-1bc53601f033?source=collection_archive---------6-----------------------#2024-09-05)
- en: An introduction with Python
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Python实现简介
- en: '[](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)[![James
    Wilkins](../Images/fcdad070781b6e1d2cc2c293194a6f1a.png)](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)
    [James Wilkins](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)[![James
    Wilkins](../Images/fcdad070781b6e1d2cc2c293194a6f1a.png)](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)
    [James Wilkins](https://medium.com/@jdhwilkins?source=post_page---byline--1bc53601f033--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)
    ·11 min read·Sep 5, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--1bc53601f033--------------------------------)
    ·阅读时长11分钟·2024年9月5日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: You can view the notebook for this project [here](https://github.com/jdhwilkins/Image-Segmentation-K-Means)
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 你可以在[这里](https://github.com/jdhwilkins/Image-Segmentation-K-Means)查看此项目的笔记本。
- en: '![](../Images/06a3c0074647c18c31c798504f13f78a.png)![](../Images/ffa682f3b09fa9fed5f3e97c0a26246e.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/06a3c0074647c18c31c798504f13f78a.png)![](../Images/ffa682f3b09fa9fed5f3e97c0a26246e.png)'
- en: 'LEFT: Original Photograph, RIGHT: Segmented image (5 colours/segments)'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 左侧：原始照片，右侧：分割图像（5种颜色/区域）
- en: Looking at the images above, we see an example of an image posterization filter
    that gives images a cartoon-like appearance, but behind the scenes, this filter
    is actually using a machine learning algorithm known as ***clustering***.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 从上面的图像来看，我们看到一个图像后期处理的例子，这个滤镜让图像呈现卡通风格的外观，但在背后，这个滤镜实际上是使用了一个被称为***聚类***的机器学习算法。
- en: Before exploring into how this process works and seeing how we can implement
    it in Python, let’s take a look at why we might want to do this in the first place.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入探讨这一过程如何工作以及如何在Python中实现之前，让我们先看看为什么我们一开始会想要进行图像分割。
- en: Image Segmentation
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 图像分割
- en: In a normal photograph, a pixel can take one of roughly 16.7 million different
    colours. In this processed image, however, there are only 5 different colours.
    We’ve split all of the pixels into 5 different groups, segmenting the image into
    these different colour-regions.
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 在普通的照片中，一个像素可以呈现大约1670万种不同的颜色。然而，在这张处理过的图像中，只有5种不同的颜色。我们将所有像素分成了5个不同的组，将图像分割成这些不同的颜色区域。
- en: We’ve also cut down on the amount of noise and variation within the image. So,
    if this were to be used in some other machine learning application, we’ve just
    massively reduced the amount of data that needs to be processed, especially if
    this were applied to a whole library of images.
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 我们还减少了图像中的噪声和变化量。因此，如果将其用于其他机器学习应用中，我们已经大大减少了需要处理的数据量，特别是如果将其应用于大量图像库时。
- en: Even though we’ve simplified this image, we’ve still retained most of the important
    structural data. We are still able to identify shapes and forms, shadows and…
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管我们已经简化了这张图像，但我们仍然保留了大部分重要的结构性数据。我们依然能够识别形状、形式、阴影等信息。
