- en: Building a Random Forest by Hand in Python
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/building-a-random-forest-by-hand-in-python-187ac0620875?source=collection_archive---------4-----------------------#2024-01-30](https://towardsdatascience.com/building-a-random-forest-by-hand-in-python-187ac0620875?source=collection_archive---------4-----------------------#2024-01-30)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A deep dive on a powerful and popular algorithm
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://mgsosna.medium.com/?source=post_page---byline--187ac0620875--------------------------------)[![Matt
    Sosna](../Images/c3175c0dc62b795a8d0fa57532fb669b.png)](https://mgsosna.medium.com/?source=post_page---byline--187ac0620875--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--187ac0620875--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--187ac0620875--------------------------------)
    [Matt Sosna](https://mgsosna.medium.com/?source=post_page---byline--187ac0620875--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--187ac0620875--------------------------------)
    ·17 min read·Jan 30, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/3e3e1bb4d0ea0375209a319ae9478702.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [FlyD](https://unsplash.com/@flyd2069?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: From [drug discovery](https://www.sciencedirect.com/science/article/abs/pii/S0957417416306819)
    to [species classification](https://www.mdpi.com/2072-4292/4/9/2661), [credit
    scoring](https://journals.sagepub.com/doi/abs/10.1177/2278533718765531) to [cybersecurity](https://www.sciencedirect.com/science/article/pii/S1877050916311127)
    and more, the random forest is a popular and powerful algorithm for modeling our
    complex world. Its versatility and predictive prowess would seem to require cutting-edge
    complexity, but if we dig into what a random forest actually is, we see **a shockingly
    simple set of repeating steps.**
  prefs: []
  type: TYPE_NORMAL
- en: 'I find that the best way to learn something is to play with it. So to gain
    an intuition on how random forests work, let’s build one by hand in Python, starting
    with a decision tree and expanding to the full forest. We’ll see first-hand how
    flexible and interpretable this algorithm is for both classification and regression.
    And while this project may sound complicated, there are really only a few core
    concepts we’ll need to learn: 1) how to iteratively partition data, and 2) how
    to quantify how well data is partitioned.'
  prefs: []
  type: TYPE_NORMAL
- en: Background
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Decision tree inference
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A decision tree is a supervised learning algorithm that identifies **a branching
    set of binary rules that map features to labels** in a dataset. Unlike algorithms
    like logistic regression where the output is an equation, the decision tree algorithm
    is [nonparametric](https://machinelearningmastery.com/parametric-and-nonparametric-machine-learning-algorithms/)…
  prefs: []
  type: TYPE_NORMAL
