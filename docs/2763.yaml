- en: Can You Tell Free Python Art from Multi-Million Dollar Pieces?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/can-you-tell-free-python-art-from-multi-million-dollar-pieces-c292ec0747db?source=collection_archive---------6-----------------------#2024-11-13](https://towardsdatascience.com/can-you-tell-free-python-art-from-multi-million-dollar-pieces-c292ec0747db?source=collection_archive---------6-----------------------#2024-11-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Follow along for a Python generative art tutorial, inspired by Piet Mondrian
    and Josef Albers. From Code to Canvas, Part I.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@gordunanna?source=post_page---byline--c292ec0747db--------------------------------)[![Anna
    Gordun Peiro](../Images/874ec5096d61e6345104026a4cf602e9.png)](https://medium.com/@gordunanna?source=post_page---byline--c292ec0747db--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--c292ec0747db--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--c292ec0747db--------------------------------)
    [Anna Gordun Peiro](https://medium.com/@gordunanna?source=post_page---byline--c292ec0747db--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--c292ec0747db--------------------------------)
    ¬∑6 min read¬∑Nov 13, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e5c8f2acf35495527ed7830b88b6d0a9.png)'
  prefs: []
  type: TYPE_IMG
- en: Which are the three real pieces? Image created by Author from [Ioana Cristiana‚Äôs](https://unsplash.com/es/@yoyoqua)
    photo. Piet Mondrian‚Äôs works are Public Domain. An artwork falls into the **public
    domain 70 years** after the death of the artist.
  prefs: []
  type: TYPE_NORMAL
- en: One of these pieces has been generated by Python and the rest are Piet Mondrian
    originals. Which one is the odd one out? I‚Äôll give you the answer a few paragraphs
    down but first I need to tell you why I am using Python for art generation and
    not a fancy Gen-AI tool.
  prefs: []
  type: TYPE_NORMAL
- en: As a creative art enthusiast born with zero artistic skills, I saw the launch
    of DALL-E and others as the opportunity to cover my entire flat in ‚Äúmy‚Äù masterpieces
    without needing to master a brush.
  prefs: []
  type: TYPE_NORMAL
- en: That wasn't the case and my walls remain a blank canvas. I didn‚Äôt manage to
    create anything display-worthy, but most importantly ‚Äî DALL-E killed the vibe.
  prefs: []
  type: TYPE_NORMAL
- en: Why?
  prefs: []
  type: TYPE_NORMAL
- en: Because most of the magic in art comes from feeling our way through the creative
    process. It‚Äôs a journey ‚Äî not just an outcome. AI art felt too dictated, too random,
    and too cold for me.
  prefs: []
  type: TYPE_NORMAL
- en: 'So that got me thinking: is there a sweet middle spot? Is there a way to have
    random but controlled generative art and still get that dopamine/pride moment
    of a finished piece? And needless to say, without actual artistic skills?'
  prefs: []
  type: TYPE_NORMAL
- en: In this article I will show you how I created two museum-worthy art pieces,
    and we will uncover which is the Mondrian impostor.
  prefs: []
  type: TYPE_NORMAL
- en: How to create Piet Mondrian fakes
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For my first Generative Art piece, I‚Äôve taken inspiration from Piet Mondrian,
    a pioneer of abstract art. His work is presented as an abstract arrangement of
    lines, colours and shapes.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is a little sample of some of his most iconic pieces:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/dd87d7b154512660e181305b8079d5ec.png)'
  prefs: []
  type: TYPE_IMG
- en: Image created by Author. Piet Mondrian‚Äôs work is Public Domain.
  prefs: []
  type: TYPE_NORMAL
- en: Do you know which one is the impostor already?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'If you‚Äôre interested in giving it a try, you just have to install the ‚Äú[mondrian-maker](https://pypi.org/project/mondrian-maker/#description)‚Äù
    Python package to paint new pieces like this:'
  prefs: []
  type: TYPE_NORMAL
- en: The mondrian-maker package was created by Andrew Bowen and is published under
    a GNU General Public License.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b546b73a88ce231dfb4c4c3d66240222.png)'
  prefs: []
  type: TYPE_IMG
- en: Composition generated by Author
  prefs: []
  type: TYPE_NORMAL
- en: Part of the fun is that a new piece will be generated every time you call make_mondrian().
    Not all of them will be ‚Äúpainting-worthy‚Äù so I generated 100 and chose my favourites.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'And the answer to the Python or original game? The impostor is the **third
    one from the left**üòâ. The rest of the pieces are (from left to right): *Composition
    No. I with Red and Blue (1938)*; *Composition with Red, Yellow and Blue (1942)*;
    *Composition No.10 (1939)*'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/540fdff222e4e84711eed0e0899e6e73.png)'
  prefs: []
  type: TYPE_IMG
- en: Puzzle solution!. Image generated by Author. Piet Mondrian‚Äôs work is Public
    Domain
  prefs: []
  type: TYPE_NORMAL
- en: Did you guess right? Let me know in the comments!
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Keep reading if you want to know how to recreate another thousand-dollar art
    piece:'
  prefs: []
  type: TYPE_NORMAL
- en: Josef Albers ‚Äî Homage to the Square
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'While Mondrian‚Äôs work really caught my attention, I wanted to start from scratch
    and make something of my own. That‚Äôs why I turned to Josef Albers‚Äô *Homage to
    the Square* series. I am drawn to the way he played with perspective and colour,
    plus there‚Äôs something about the ‚Äúsimple‚Äù look that felt like the right place
    to dive in. Judge by yourself:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Now, before we start drawing squares, there are two key secrets for Python
    generative art that you should know:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Reproducibility:** We want our art to be random but also to be able to generate
    the exact painting again. By using *numpy.random.seed()* we can make sure that
    random numbers remain the same across different runs.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '**Colour theory:** Artists usecombinations of colours to generate visually
    appealing colour palettes. The coding secret for this is to use [*MetBrewer*](https://github.com/BlakeRMills/MetBrewer),
    a Python library that contains 56 beautiful palettes inspired by works at the
    Metropolitan Museum of Art in New York.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '![](../Images/496a58fb224ac8df7d72207c266c8f0e.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot from [MetBrewer](https://github.com/BlakeRMills/MetBrewer) (Creative
    Commons License)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: üé®Now we are ready to start painting!üé®
  prefs: []
  type: TYPE_NORMAL
- en: 'Spoiler alert: the next blocks of code reveal how to create an Homage to the
    Square lookalike painting, skip them if you prefer to try it yourself first.'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '1- I first build a function that generates the following:'
  prefs: []
  type: TYPE_NORMAL
- en: The 4 edges of a square (x0,x1,y0,y1)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A random colour for each square
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 2- I then plotted each square coordinate with Plotly
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: And here‚Äôs the final result!
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e01969a8020f49d9b21c4baf14d2ca89.png)'
  prefs: []
  type: TYPE_IMG
- en: 'I call this one: icream on a sunny day. Image by Author'
  prefs: []
  type: TYPE_NORMAL
- en: 'Let me tell you why I truly enjoyed designing this art piece ‚Äî and why I hope
    that you do too:'
  prefs: []
  type: TYPE_NORMAL
- en: 'First, I had to crack the code on the square dimensions, making sure they matched
    the original piece‚Äôs perspective. Then came the fun (and slightly obsessive) part:
    playing with colour palettes waiting for that magical ‚Äúaha‚Äù moment when everything
    just clicked.'
  prefs: []
  type: TYPE_NORMAL
- en: I didn‚Äôt stop there. I generated over 100 paintings with different seed constants,
    basically becoming my own art curator and finding ‚Äúthe one‚Äù.
  prefs: []
  type: TYPE_NORMAL
- en: The best part? I got to skip hours of painting frustration only to end up with
    something ‚Äúokayish.‚Äù And, I wasn‚Äôt let down by an overhyped Gen-AI tool. Instead,
    I let my imagination run and came out with a piece I‚Äôd proudly hang on my wall
    ‚Äî or even buy.
  prefs: []
  type: TYPE_NORMAL
- en: 'In my opinion, art looks elevated and more expensive with a frame on:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b8c25fa2dd9f102d561aca3ca58d48e8.png)'
  prefs: []
  type: TYPE_IMG
- en: Framed painting, fyi I used levelframes.com to generate it. Picture by Author
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1d74d070fbb88b16045bd0fbe047330a.png)'
  prefs: []
  type: TYPE_IMG
- en: Picture generated by Author
  prefs: []
  type: TYPE_NORMAL
- en: 'This is the first article of a new series: **From Code to Canvas.** I‚Äôm open
    to suggestions on Art pieces you‚Äôd like to code-recreate so feel free to leave
    a comment! And don‚Äôt forget to follow ‚Äî your empty walls will thank you.'
  prefs: []
  type: TYPE_NORMAL
- en: '*All images in this article are by the author except for Piet Mondrain‚Äôs works
    which are Public Domain.*'
  prefs: []
  type: TYPE_NORMAL
