["```py\nclass ZeroShot(dspy.Module):\n    \"\"\"\n    Provide answer to question\n    \"\"\"\n    def __init__(self):\n        super().__init__()\n        self.prog = dspy.Predict(\"question -> answer\")\n\n    def forward(self, question):\n        return self.prog(question=\"In the game of bridge, \" + question)\n```", "```py\ngemini = dspy.Google(\"models/gemini-1.0-pro\",\n                         api_key=api_key,\n                         temperature=temperature)\ndspy.settings.configure(lm=gemini, max_tokens=1024)\n```", "```py\nmodule = ZeroShot()\nresponse = module(\"What is Stayman?\")\nprint(response)\n```", "```py\nPrediction(\n    answer='Question: In the game of bridge, What is Stayman?\\nAnswer: A conventional bid of 2â™£ by responder after a 1NT opening bid, asking opener to bid a four-card major suit if he has one, or to pass if he does not.'\n)\n```", "```py\ngpt35 = dspy.OpenAI(model=\"gpt-3.5-turbo\",\n                        api_key=api_key,\n                        temperature=temperature)\ndspy.settings.configure(lm=gpt35, max_tokens=1024)\n```", "```py\nclass Terms(dspy.Signature):\n    \"\"\"\n    List of extracted entities\n    \"\"\"\n    prompt = dspy.InputField()\n    terms = dspy.OutputField(format=list)\n\nclass FindTerms(dspy.Module):\n    \"\"\"\n    Extract bridge terms from a question\n    \"\"\"\n    def __init__(self):\n        super().__init__()\n        self.entity_extractor = dspy.Predict(Terms)\n\n    def forward(self, question):\n        max_num_terms = max(1, len(question.split())//4)\n        instruction = f\"Identify up to {max_num_terms} terms in the following question that are jargon in the card game bridge.\"\n        prediction = self.entity_extractor(\n            prompt=f\"{instruction}\\n{question}\"\n        )\n        return prediction.terms\n```", "```py\nmodule = FindTerms()\nresponse = module(\"Playing Stayman and Transfers, what do you bid with 5-4 in the majors?\")\nprint(response)\n```", "```py\n['Stayman', 'Transfers']\n```", "```py\nfrom chromadb.utils import embedding_functions\ndefault_ef = embedding_functions.DefaultEmbeddingFunction()\nbidding_rag = ChromadbRM(CHROMA_COLLECTION_NAME, CHROMADB_DIR, default_ef, k=3)\n```", "```py\nclass AdvisorSignature(dspy.Signature):\n    definitions = dspy.InputField(format=str)  # function to call on input to make it a string\n    bidding_system = dspy.InputField(format=str) # function to call on input to make it a string\n    question = dspy.InputField()\n    answer = dspy.OutputField()\n\nclass BridgeBiddingAdvisor(dspy.Module):\n    \"\"\"\n    Functions as the orchestrator. All questions are sent to this module.\n    \"\"\"\n    def __init__(self):\n        super().__init__()\n        self.find_terms = FindTerms()\n        self.definitions = Definitions()\n        self.prog = dspy.ChainOfThought(AdvisorSignature, n=3)\n\n    def forward(self, question):\n        terms = self.find_terms(question)\n        definitions = [self.definitions(term) for term in terms]\n        bidding_system = bidding_rag(question)\n        prediction = self.prog(definitions=definitions,\n                               bidding_system=bidding_system,\n                               question=\"In the game of bridge, \" + question,\n                               max_tokens=-1024)\n        return prediction.answer\n```", "```py\ntraindata = json.load(open(\"trainingdata.json\", \"r\"))['examples']\ntrainset = [dspy.Example(question=e['question'], answer=e['answer']) for e in traindata]\n\n# train\nteleprompter = teleprompt.LabeledFewShot()\noptimized_advisor = teleprompter.compile(student=BridgeBiddingAdvisor(), trainset=trainset)\n\n# use optimized advisor just like the original orchestrator\nresponse = optimized_advisor(\"What is Stayman?\")\nprint(response)\n```", "```py\na: Playing Stayman and Transfers, what do you bid with 5-4 in the majors?\nb: ['Stayman', 'Transfers']\nc: ['Stayman convention | Stayman is a bidding convention in the card game contract bridge. It is used by a partnership to find a 4-4 or 5-3 trump fit in a major suit after making a one notrump (1NT) opening bid and it has been adapted for use after a 2NT opening, a 1NT overcall, and many other natural notrump bids.', \"Jacoby transfer | The Jacoby transfer, or simply transfers, in the card game contract bridge, is a convention initiated by responder following partner's notrump opening bid that forces opener to rebid in the suit ranked just above that bid by responder. For example, a response in diamonds forces a rebid in hearts and a response in hearts forces a rebid in spades. Transfers are used to show a weak hand with a long major suit, and to ensure that opener declare the hand if the final contract is in the suit transferred to, preventing the opponents from seeing the cards of the stronger hand.\"]\nd: ['stayman ( possibly a weak ... 1602', '( scrambling for a two -  ... 1601', '( i ) two hearts is weak  ... 1596']\nTwo spades.\n```", "```py\na: Playing Stayman and Transfers, what do you bid with 5-4 in the majors?\nb: ['Stayman', 'Transfers']\nc: ['Stayman convention | Stayman is a bidding convention in the card game contract bridge. It is used by a partnership to find a 4-4 or 5-3 trump fit in a major suit after making a one notrump (1NT) opening bid and it has been adapted for use after a 2NT opening, a 1NT overcall, and many other natural notrump bids.', \"Jacoby transfer | The Jacoby transfer, or simply transfers, in the card game contract bridge, is a convention initiated by responder following partner's notrump opening bid that forces opener to rebid in the suit ranked just above that bid by responder. For example, a response in diamonds forces a rebid in hearts and a response in hearts forces a rebid in spades. Transfers are used to show a weak hand with a long major suit, and to ensure that opener declare the hand if the final contract is in the suit transferred to, preventing the opponents from seeing the cards of the stronger hand.\"]\nd: ['stayman ( possibly a weak ... 1602', '( scrambling for a two -  ... 1601', '( i ) two hearts is weak  ... 1596']\nAfter a 1NT opening, Smolen allows responder to show 5-4 in the majors with game-forcing values.\n```"]