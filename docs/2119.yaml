- en: 'The Power of Pandas Plots: Backends'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/the-power-of-pandas-plots-backends-6a08d52071d2?source=collection_archive---------9-----------------------#2024-08-30](https://towardsdatascience.com/the-power-of-pandas-plots-backends-6a08d52071d2?source=collection_archive---------9-----------------------#2024-08-30)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Create interactive graphics from Pandas effortlessly
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@petoulemonde?source=post_page---byline--6a08d52071d2--------------------------------)[![Pierre-Etienne
    Toulemonde](../Images/95fdda47e79e3c194fc96ef29f3a2188.png)](https://medium.com/@petoulemonde?source=post_page---byline--6a08d52071d2--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--6a08d52071d2--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--6a08d52071d2--------------------------------)
    [Pierre-Etienne Toulemonde](https://medium.com/@petoulemonde?source=post_page---byline--6a08d52071d2--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--6a08d52071d2--------------------------------)
    ·5 min read·Aug 30, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d5b796700b79a971847f9d847e9373d9.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Lukas Blazek](https://unsplash.com/@goumbik?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Index
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Context
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Backends
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 2.1\. Matplotlib
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2.2\. Plotly
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 2.3\. Hvplot
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: Discussion
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: A word before you go
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 1\. **Context**
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Python has a multitude of visualization packages, the three best known of which
    are: [Matplotlib](https://matplotlib.org/) (and seaborn), [Plotly](https://plotly.com/),
    and [Hvplot](https://hvplot.holoviz.org/). Each of these 3 packages has its strengths,
    but requires an entry cost to pay to learn how to use this package, sometimes
    quite substantial.'
  prefs: []
  type: TYPE_NORMAL
- en: The idea for this article came to me when I discovered the [Mind Map of Pandas
    Methods](https://blog.dailydoseofds.com/p/interactive-mind-map-of-all-pandas)
    offered by the [Daily Dose of Data science newsletter](https://blog.dailydoseofds.com/)
    (a newsletter that I highly recommend). I was then discovering the Hvplot visualization
    package at the same time. I thought the idea of switching from one visualisation
    backend to another as easily as with Hvplot was brilliant ([here](https://hvplot.holoviz.org/user_guide/Plotting_with_Plotly.html)
    is an example to switch from Hvplot to Plotly from Hvplot). Seeing that we could
    do it with pandas too, I found the idea too interesting not to share it.
  prefs: []
  type: TYPE_NORMAL
- en: Pandas is at the heart of data science in Python, and we all know how to use
    it. But Matplotlib integrated into Pandas is aging, and is being overtaken both
    in ease of use and in presentation by other packages. The power of the Pandas
    visualization backend allows you to take advantage of the latest visualization
    packages for data exploration and result rendering, without having to invest time
    in learning these packages, which are nevertheless super powerful!
  prefs: []
  type: TYPE_NORMAL
- en: '**2\. Backends**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Pandas was built on 2 packages, Numpy and Matplotlib. This explains why we use
    Matplotlib scripts to generate graphs, and therefore the generated graphs are
    matplotlib graphs.
  prefs: []
  type: TYPE_NORMAL
- en: Since its creation, Pandas has evolved and offers the user the possibility to
    modify the visualization backend used by Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: 'The 6 available backends that I found during my research are:'
  prefs: []
  type: TYPE_NORMAL
- en: Plotnine (ggplot2)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Plotly
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Altair
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Holoviews
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Hvplot
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Pandas_bokeh
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Matplotlib (default backend)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'There are several methods available to change a backend::'
  prefs: []
  type: TYPE_NORMAL
- en: '2 global methods :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '1 local method :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Note: Changing the backend requires Pandas >= 0.25, and sometimes requires
    specific dependencies to be important, such as with Hvplot below.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are 2 examples:'
  prefs: []
  type: TYPE_NORMAL
- en: 'with Plotly :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'with Hvplot :'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '**2.1\. Matplotlib**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Matplotlib](https://matplotlib.org/) is the default visualization backend
    of Pandas. In other words, if you don’t specify a backend, Matplotlib will be
    used. It is an efficient package to quickly visualize your data to explore it
    or extract results, but it is aging and is being caught up in both ease of use
    and rendering power by other packages.'
  prefs: []
  type: TYPE_NORMAL
- en: The advantage of Matplotlib is that since Pandas has been built on Matplotlib
    since its creation, the integration of Matplotlib into pandas is perfect, all
    matplotlib functions can be used in Pandas.
  prefs: []
  type: TYPE_NORMAL
- en: 'As a reminder, here are the 11 Matplotlib display methods integrated into Pandas
    :'
  prefs: []
  type: TYPE_NORMAL
- en: “area” for area plots,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “bar” for vertical bar charts,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “barh” for horizontal bar charts,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “box” for box plots,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “hexbin” for hexbin plots,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “hist” for histograms,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “kde” for kernel density estimate charts,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “density” an alias for “kde”,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “line” for line graphs,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “pie” for pie charts,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: “scatter” for scatter plots.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**2.2\. Plotly**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Plotly](https://plotly.com/) is a visualization package developed by the company
    Plotly. The company has developed the framework Plotly.js, to allow interactive
    visualization of data within Python. The company Plotly also offers the Python
    dashboarding package [Dash](https://dash.plotly.com/).'
  prefs: []
  type: TYPE_NORMAL
- en: 'To use Plotly from Pandas, simply import *Plotly express* and change the backend:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Pandas returns an object with the same type than Plotly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: The advantage is that you can directly integrate a graphic created in Pandas
    into the Plotly universe, especially Dash!
  prefs: []
  type: TYPE_NORMAL
- en: One limitation is that Plotly’s integration with Pandas is not yet perfect as
    detailed on the Plotly website ([details on the Plotly website](https://plotly.com/python/pandas-backend/)).
  prefs: []
  type: TYPE_NORMAL
- en: '**2.3\. Hvplot**'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[Hvplot](https://hvplot.holoviz.org/) is an interactive visualization package
    based on bokeh.'
  prefs: []
  type: TYPE_NORMAL
- en: It is an exciting package, which I discovered some time ago and which continues
    to fascinate me, as much for Hvplot which integrates the notion of backend as
    in Pandas as for the [Holoviz suite](https://holoviz.org/) and related packages
    like [Panel](https://panel.holoviz.org/) to create dynamic client-side websites.
  prefs: []
  type: TYPE_NORMAL
- en: 'Without even the notion of Pandas backend, Hvplot doesn’t require over-learning
    to start being used, just replace *.plot()* of Pandas with *.hvplot()*:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: 'Using the Hvplot backend is done in the same way as for the Plotly backend,
    you just need to import a dependency of the Hvplot package:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Like Plotly, charts generated from Pandas with the hvplot backend are of type
    Hvplot :'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: Hvplot is part of the extremely powerful Holoviz suite with many other associated
    tools to push data analysis very far, i.e. tools like [Panel](https://panel.holoviz.org/),
    [geoviews](https://geoviews.org/), [datashader](https://datashader.org/) and others.
    This type of concordance allows to create graphs from pandas and still be able
    to take advantage of the Holoviz suite.
  prefs: []
  type: TYPE_NORMAL
- en: '**3\. Conclusion**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Pandas backends are an extremely efficient solution to discover and take advantage
    of the latest Python visualization packages without having to invest time: in
    18 characters including spaces, it is possible to locally transform a standard
    matplotlib graph into an interactive Plotly graph, and therefore to take advantage
    of all the benefits of this type of visualization.'
  prefs: []
  type: TYPE_NORMAL
- en: 'However, this solution has certain limitations: it is not suited to highly
    advanced visualisation objectives that require a great deal of customisation such
    as advanced visualization in data journalism, because the integration of packages
    in Pandas is not yet perfect. In addition, this solution only covers visualization
    packages built on-top of Pandas, and excludes other visualization solutions such
    as D3.js.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Hvplot is currently my favorite package for visualization: it is extremely
    easy to get started with at first, works with all the major data manipulation
    packages (Polars, Dask, Xray, …) and is part of a continuum of applications that
    allows you to go from graphs to dynamic full client-side websites.'
  prefs: []
  type: TYPE_NORMAL
- en: '**4\. A word before you go**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: During my research, I didn’t find as much documentation as I expected. I think
    the concept is great, so I expected a lot of articles. So feel free to tell me
    in the comments if you find this solution really useful, or if it’s just a cool
    thing with no real use.
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading!
  prefs: []
  type: TYPE_NORMAL
