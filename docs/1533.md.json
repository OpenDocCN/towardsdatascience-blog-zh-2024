["```py\nKAFKA_ADVERTISED_LISTENERS: PLAINTEXT://kafka:19092,PLAINTEXT_HOST://localhost:9092\n```", "```py\nenv.add_jars(\n  f\"file://{current_dir}/flink-connector-jdbc-3.1.2â€“1.18.jar\",\n  f\"file://{current_dir}/postgresql-42.7.3.jar\"\n)\n```", "```py\nKAFKA_HOST = \"kafka:19092\"\nPOSTGRES_HOST = \"postgres:5432\"\n```", "```py\nKAFKA_HOST = \"localhost:9092\"\nPOSTGRES_HOST = \"localhost:5432\"\n```", "```py\ndocker-compose up\n```", "```py\ndocker-compose exec kafka kafka-topics \\\n -- create - topic sensors \\\n -- bootstrap-server localhost:9092 \\\n -- partitions 1 \\\n -- replication-factor 1\n\ndocker-compose exec kafka kafka-topics \\\n -- create - topic alerts \\\n -- bootstrap-server localhost:9092 \\\n -- partitions 1 \\\n -- replication-factor 1\n```", "```py\ndocker-compose exec kafka kafka-topics \\\n -- bootstrap-server localhost:9092 \\\n -- list\n```", "```py\npsql -h localhost -U flinkuser -d flinkdb\n```", "```py\nCREATE TABLE raw_sensors_data (\nmessage_id VARCHAR(255) PRIMARY KEY,\nsensor_id INT NOT NULL,\nmessage TEXT NOT NULL,\ntimestamp TIMESTAMPTZ NOT NULL\n);\n```", "```py\nflinkdb=# \\d raw_sensors_data\n```", "```py\npip install kafka-python\n```", "```py\npython pyflink/usr_jobs/kafka_producer.py\n```", "```py\ndocker-compose exec flink-jobmanager flink run \\\n  -py /opt/flink/usr_jobs/postgres_sink.py\n```", "```py\ndocker-compose exec kafka kafka-console-consumer \\\n  -- bootstrap-server localhost:9092 \\\n  -- topic alerts \\\n  -- from-beginning\n```", "```py\nSELECT\n  *,\n  (message::json->>'temperature')::numeric as temperature\nFROM raw_sensors_data\nLIMIT 10;\n```"]