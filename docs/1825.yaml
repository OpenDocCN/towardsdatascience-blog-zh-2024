- en: 'I found a hidden gem in Matplotlibâ€™s library: Packed Bubble Charts in Python'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/i-found-a-hidden-gem-in-matplotlibs-library-packed-bubble-charts-in-python-d0f5d892beb7?source=collection_archive---------0-----------------------#2024-07-28](https://towardsdatascience.com/i-found-a-hidden-gem-in-matplotlibs-library-packed-bubble-charts-in-python-d0f5d892beb7?source=collection_archive---------0-----------------------#2024-07-28)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Ever wished to design those beautiful Tableau based packed bubble charts? Follow
    along for a tutorial on the *Matplotlib* solution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@gordunanna?source=post_page---byline--d0f5d892beb7--------------------------------)[![Anna
    Gordun Peiro](../Images/874ec5096d61e6345104026a4cf602e9.png)](https://medium.com/@gordunanna?source=post_page---byline--d0f5d892beb7--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d0f5d892beb7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d0f5d892beb7--------------------------------)
    [Anna Gordun Peiro](https://medium.com/@gordunanna?source=post_page---byline--d0f5d892beb7--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d0f5d892beb7--------------------------------)
    Â·7 min readÂ·Jul 28, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/29a20958991f74913d6a2bd0c40f86c8.png)'
  prefs: []
  type: TYPE_IMG
- en: Bubble chart illustrating womenâ€™s participation share at the 2020 Summer Olympics
  prefs: []
  type: TYPE_NORMAL
- en: What are packed bubble charts?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Packed bubble charts are used to display data in a cluster of circles. Each
    entry is displayed as an individual circle and two main variables can be used:
    size of the bubbles and colour.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some of my favourite packed bubble charts:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Ukraine grain exports**: Colour used to display country income group and
    bubble size as tonnes of grain.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Essential and Frontline Workers:** Colour used to define group of workers,
    bubble size as number of workers and clusters for industry sectors'
  prefs: []
  type: TYPE_NORMAL
- en: 'While these examples havenâ€™t been done with Python, would it be possible to
    build a simpler packed bubble chart only using Matplotlib? Letâ€™s see how:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Python code for Bubble charts**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Last week, I randomly came across an example on the miscellaneous section of
    Matplotlibâ€™s documentation [[Link]](https://matplotlib.org/stable/gallery/misc/packed_bubbles.html)
    .
  prefs: []
  type: TYPE_NORMAL
- en: Is this a hidden gem in the Matplotlibâ€™s misc. documentation section?
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: 'Here is the example that came with the code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d4ab8f8f5daac342b3c45420bf05cc3c.png)'
  prefs: []
  type: TYPE_IMG
- en: Bubble chart tutorial example
  prefs: []
  type: TYPE_NORMAL
- en: '**How does it work?**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Surprisingly frictionless to use, here is how to create your first bubble chart
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: 1- Add your own data or use the one provided in the example. You need one variable
    for bubble size, another one for the labels and colours.
  prefs: []
  type: TYPE_NORMAL
- en: 2- Copy&paste&run all functions in the code provided
  prefs: []
  type: TYPE_NORMAL
- en: 3- Create your bubble distribution by calling *BubbleChart* with bubble size
    as variable
  prefs: []
  type: TYPE_NORMAL
- en: 4- Collapse all bubbles so they are tangents to each other but without crashing
  prefs: []
  type: TYPE_NORMAL
- en: 5- Create chart and add colours, labels and title.
  prefs: []
  type: TYPE_NORMAL
- en: '**Important:**'
  prefs: []
  type: TYPE_NORMAL
- en: Aspect has to be kept as *equal,* or your bubbles wonâ€™t be perfect circles.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '*relim*() and *autoscale_view*() have to be kept as well, since you canâ€™t choose
    where in the grid your bubbles will appear'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'I agree that it doesnâ€™t look the best, especially after seeing those beautiful
    examples that we saw earlier.So Iâ€™ve spent a couple of days turning it into something
    better and here is how:'
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Chart customisation:**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For my chart, I am using an Olympic Historical Dataset from Olympedia.org which
    Joseph Cheng shared in [Kaggle](https://www.kaggle.com/datasets/josephcheng123456/olympic-historical-dataset-from-olympediaorg)
    with a public domain license.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c0195a7a8a47069b4f3689148040561c.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot of dataset
  prefs: []
  type: TYPE_NORMAL
- en: It contains event to Athlete level Olympic Games Results from Athens 1896 to
    Beijing 2022\. After an EDA (Exploratory Data Analysis) I transformed it into
    a dataset that details the number of female athletes in each sport/event per year.
    My bubble chart idea is to show which sports have a 50/50 female to male ratio
    athletes and how it has evolved during time.
  prefs: []
  type: TYPE_NORMAL
- en: 'My plotting data is composed of two different datasets, one for each year:
    **2020** and **1996**. For each dataset Iâ€™ve computed the total sum of athletes
    that participated to each event *(athlete_sum)* and how much that sum represents
    compared to the number of total athletes (male + female) *(difference)*. See a
    screenshot of the data below:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e8fbc2fc66be383a150729ea13db5cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Screen shot of plotting dataset
  prefs: []
  type: TYPE_NORMAL
- en: 'This is my approach to visualise it:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Size proportion.** Using radius of bubbles to compare number athletes per
    sport. Bigger bubbles will represent highly competitive events, such as Athletics'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Multi variable interpretation**. Making use of colours to represent female
    representation. Light green bubbles will represent events with a 50/50 split,
    such as Hockey.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Here is my starting point (using the code and approach from above):'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa4d2fdc067970e969d7087a77fbb1a8.png)'
  prefs: []
  type: TYPE_IMG
- en: First result
  prefs: []
  type: TYPE_NORMAL
- en: 'Some easy fixes: increasing figure size and changing labels to empty if the
    size isnâ€™t over 250 to avoid having words outside bubbles.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/bab961d1ad7748271c92f5c0cd8b1f9e.png)'
  prefs: []
  type: TYPE_IMG
- en: Second result
  prefs: []
  type: TYPE_NORMAL
- en: Well, now at least itâ€™s readable. But, why is *Athletics* pinkand *Boxing* blue*?*
    Letâ€™s add a legend to illustrate the relationship between colours and female representation.
  prefs: []
  type: TYPE_NORMAL
- en: Because itâ€™s not your regular barplot chart, *plt.legend()* doesnâ€™t do the trick
    here.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Using matplotlib Annotation Bbox we can create rectangles (or circles) to show
    meaning behind each colour. We can also do the same thing to show a bubble scale.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: Iâ€™ve also added a subtitle and a text description under the chart just by using
    *plt.text()*
  prefs: []
  type: TYPE_NORMAL
- en: 'And ta-da:'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/29a20958991f74913d6a2bd0c40f86c8.png)'
  prefs: []
  type: TYPE_IMG
- en: Final visualisation
  prefs: []
  type: TYPE_NORMAL
- en: 'Straightforward and user friendly interpretations of the graph:'
  prefs: []
  type: TYPE_NORMAL
- en: Majority of bubbles are light green â†’ green means 50% females â†’ majority of
    Olympic competitions have an even 50/50 female to male split *(yayðŸ™Œ)*
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Only one sport (Baseball), in dark green colour, has no female participation.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 3 sports have only female participation but the number of athletes is fairly
    low.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: The biggest sports in terms of athlete number (Swimming, Athletics and Gymnastics)
    are very close to having a 50/50 split
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Bonus visualisation.
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '![](../Images/c12088d38b9bbcd9ff40ad9d5b85fb60.png)'
  prefs: []
  type: TYPE_IMG
- en: Comparison between 2020 and 1996 female participation share
  prefs: []
  type: TYPE_NORMAL
- en: 'Here I am using packed bubble charts to illustrate an additional variable:
    **time**. The chart to the left represents the Olympic gamesâ€™ participation in
    **2020** and the one to the right the games in **1996**. Putting them side to
    side brings on some interesting insights:'
  prefs: []
  type: TYPE_NORMAL
- en: Way more bubbles on the left compared to the right â†’ More sports in 2020 Olympics
    compared to the 1996 Olympics
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Barely any light green bubbles in 1996 Olympics â†’ Female participation in 1996
    was much lower than in 2020 and very far from a 50/50 split
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Boxing had a 0% female participation in 1996 ( dark green) and a 30% female
    participation in 2020 (blue).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Visualising and comparing two datasets can be complex, especially when there
    are three variables that have to be compared at the same time. However, packed
    bubble charts will captivate your audience, not only with their visual appeal
    but also with their ease of use and intuitive understanding.
  prefs: []
  type: TYPE_NORMAL
- en: Iâ€™ve also collected a few other customisation options that I havenâ€™t used, check
    them out below.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '**Other customisations**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Increase bubble_spacing for a more relaxed view (2 vs 0.1)
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/9a27dfc8b1cac685e7b0e5d0582612d7.png)'
  prefs: []
  type: TYPE_IMG
- en: effect of bubble spacing
  prefs: []
  type: TYPE_NORMAL
- en: Itâ€™s also possible to obtain a horizontal view only by updating def_init. The
    modification calculates the new x coordinates for each bubble computed with their
    and past bubbles radius and bubble spacing. Y coordinates are set to 0.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e0ffdb119dabefcb86a1cf0a2a441ea7.png)'
  prefs: []
  type: TYPE_IMG
- en: Horizontal customisation
  prefs: []
  type: TYPE_NORMAL
- en: Potential improvementsâœ¨
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Iâ€™d love to see something similar done in Plotly since this graph is screaming
    for some interactivity (especially for the bubbles that are too small to have
    a label) and maybe a slider to change years and update the graph automatically.
  prefs: []
  type: TYPE_NORMAL
- en: Final points
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: The matplotlibâ€™s little gem solution for packed bubble charts will save you
    hours of circle drawing and has great potential of becoming a powerful alternative
    to Tableau. In this article, we have explored how to create them, customise them
    and add legends. By the end of it, we have obtained a final visualisation with
    visual appeal, ease of reading and that allows you to tell a story and captivate
    your audience.
  prefs: []
  type: TYPE_NORMAL
- en: Iâ€™ve also given you a little flavour of gender equality at the Olympic games
    and how fast it has improved in the past 20 years.
  prefs: []
  type: TYPE_NORMAL
- en: Fyi, Paris 2024 will be the first time in history where we will see an equal
    number of female/male participants
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Happy coding and Olympic watching!
  prefs: []
  type: TYPE_NORMAL
- en: '*All images in this article are by the author*'
  prefs: []
  type: TYPE_NORMAL
