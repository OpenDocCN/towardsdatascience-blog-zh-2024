["```py\n## Line Plot ##\n\nimport plotly.graph_objects as go\n\ntime = [1990, 1994, 1998, 2002, 2006, 2010, 2014, 2018]\nnumbers = [48411, 68626, 44676, 42571, 52609, 49499, 53772, 47371]\nlabels = ['Italy', 'USA', 'France', 'Japan / South Korea', 'Germany', \n'South Africa', 'Brazil', 'Russia']\n\nfig = go.Figure()\n\n# Line plot\nfig.add_trace(go.Scatter(x=time, y=numbers, mode='lines+markers',\n                         marker=dict(color='black',size=10), line=dict(width=2.5)))\n\n# Scatter plot\nfor i in range(len(time)):\n    fig.add_trace(go.Scatter(x=[time[i]], y=[numbers[i]],\n                             mode='markers', name=labels[i]))\n\n# Layout settings\nfig.update_layout(title='Average number of attendees per game in 1990-2018',\n                  xaxis=dict(tickvals=time),\n                  yaxis=dict(range=[35000, 70000]),\n                  showlegend=True,\n                  legend=dict(x=0.5, y=-0.2),\n                  plot_bgcolor='white')\n\nfig.show()\n```", "```py\n## Pie Chart ##\n\nimport plotly.express as px\n\n# Data\nlabel_list = ['Brazil', 'Germany', 'Italy', 'Argentina', 'Uruguay', 'France', 'England', 'Spain']\nfreq = [5, 4, 4, 3, 2, 2, 1, 1]\n\n# Customize colors\ncolors = ['darkorchid', 'royalblue', 'lightsteelblue', 'silver', 'sandybrown', 'lightcoral', 'seagreen', 'salmon']\n\n# Building chart\nfig = px.pie(values=freq, names=label_list, title='Countries with the most FIFA World Cup titles',\n             color_discrete_map=dict(zip(label_list, colors)),\n             labels={'label': 'Country', 'value': 'Frequency'},\n             hole=0.3)\n\nfig.update_traces(textposition='inside', textinfo='percent+label')\nfig.show()\n```", "```py\n## Bar Chart ##\n\nimport plotly.graph_objects as go\n\nlabels = ['Estádio do Maracanã', 'Camp Nou', 'Estadio Azteca',\n          'Wembley Stadium', 'Rose Bowl', 'Estadio Santiago Bernabéu',\n          'Estadio Centenario', 'Lusail Stadium']\ncapacity = [200, 121, 115, 99, 94, 90, 90, 89]\n\nfig = go.Figure()\n\n# Horizontal bar chart\nfig.add_trace(go.Bar(y=labels, x=capacity, orientation='h', marker_color='blue'))\n\n# Layout settings\nfig.update_layout(title='Top-8 stadiums on capacity (in thousands)',\n                  yaxis=dict(title='Stadiums'),\n                  xaxis=dict(title='Capacity'),\n                  showlegend=False,\n                  plot_bgcolor='white')\n\nfig.show()\n```", "```py\n## Choropleth Map ##\n\nimport polars as pl\nimport plotly.express as px\n\ndf = pl.read_csv('data_football.csv')\ndf.head(5)\nfig = px.choropleth(df, locations='team_code', color='count', \n                    hover_name='team_name', projection='natural earth',\n                    title='Geography of the FIFA World Cups',\n                    color_continuous_scale='Reds')\nfig.show()\n```", "```py\nimport polars as pl\nimport plotly.express as px\nimport plotly.graph_objects as go\nimport dash\nfrom dash import dcc\nfrom dash import html\n\nexternal_stylesheets = ['https://codepen.io/chriddyp/pen/bWLwgP.css']\n\napp = dash.Dash(__name__, external_stylesheets=external_stylesheets)\n\nheader = html.H2(children=\"FIFA World Cup Analysis\")\n\n## Line plot with scatters ##\n\n# Data\ntime = [1990, 1994, 1998, 2002, 2006, 2010, 2014, 2018]\nnumbers = [48411, 68626, 44676, 42571, 52609, 49499, 53772, 47371]\nlabels = ['Italy', 'USA', 'France', 'Japan / South Korea', 'Germany', 'South Africa', 'Brazil', 'Russia']\n\n# Building chart\nchart1 = go.Figure()\n\nchart1.add_trace(go.Scatter(x=time, y=numbers, mode='lines+markers',\n                         marker=dict(color='black',size=10), line=dict(width=2.5)))\n\nfor i in range(len(time)):\n    chart1.add_trace(go.Scatter(x=[time[i]], y=[numbers[i]],\n                             mode='markers', name=labels[i]))\n\n# Layout settings\nchart1.update_layout(title='Average number of attendees per game in 1990-2018',\n                  xaxis=dict(tickvals=time),\n                  yaxis=dict(range=[35000, 70000]),\n                  showlegend=True,\n                  plot_bgcolor='white')\n\nplot1 = dcc.Graph(\n        id='plot1',\n        figure=chart1,\n        className=\"six columns\"\n    )\n\n## Pie chart ##\n\n# Data\nlabel_list = ['Brazil', 'Germany', 'Italy', 'Argentina', 'Uruguay', 'France', 'England', 'Spain']\nfreq = [5, 4, 4, 3, 2, 2, 1, 1]\n\n# Customize colors\ncolors = ['darkorchid', 'royalblue', 'lightsteelblue', 'silver', 'sandybrown', 'lightcoral', 'seagreen', 'salmon']\n\n# Building chart\nchart2 = px.pie(values=freq, names=label_list, title='Countries with the most FIFA World Cup titles',\n             color_discrete_map=dict(zip(label_list, colors)),\n             labels={'label': 'Country', 'value': 'Frequency'},\n             hole=0.3)\n\nchart2.update_traces(textposition='inside', textinfo='percent+label')\n\nplot2 = dcc.Graph(\n        id='plot2',\n        figure=chart2,\n        className=\"six columns\"\n    )\n\n## Horizontal bar chart ##\n\nlabels = ['Estádio do Maracanã', 'Camp Nou', 'Estadio Azteca',\n          'Wembley Stadium', 'Rose Bowl', 'Estadio Santiago Bernabéu',\n          'Estadio Centenario', 'Lusail Stadium']\ncapacity = [200, 121, 115, 99, 94, 90, 90, 89]\n\n# Building chart\nchart3 = go.Figure()\n\nchart3.add_trace(go.Bar(y=labels, x=capacity, orientation='h', marker_color='blue'))\n\n# Layout settings\nchart3.update_layout(title='Top-8 stadiums on capacity (in thousands)',\n                  yaxis=dict(title='Stadiums'),\n                  xaxis=dict(title='Capacity'),\n                  showlegend=False,\n                  plot_bgcolor='white')\n\nplot3 = dcc.Graph(\n        id='plot3',\n        figure=chart3,\n        className=\"six columns\"\n    )\n\n## Chropleth map ##\n\n# Data\ndf = pl.read_csv('data_football.csv')\n\n# Building chart\nchart4 = px.choropleth(df, locations='team_code', color='count', \n                    hover_name='team_name', projection='natural earth',\n                    title='Geography of the FIFA World Cups',\n                    color_continuous_scale='Reds')\n\nplot4 = dcc.Graph(\n        id='plot4',\n        figure=chart4,\n        className=\"six columns\"\n    )\n\nrow1 = html.Div(children=[plot1, plot2],)\nrow2 = html.Div(children=[plot3, plot4])\nlayout = html.Div(children=[header, row1, row2], style={\"text-align\": \"center\"})\n\napp.layout = layout\n\nif __name__ == \"__main__\":\n    app.run_server(debug=False)\n```"]