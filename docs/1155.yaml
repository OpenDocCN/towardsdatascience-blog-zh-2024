- en: 'System Design: Quadtrees & GeoHash'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/system-design-quadtrees-geohash-5b896b975262?source=collection_archive---------1-----------------------#2024-05-08](https://towardsdatascience.com/system-design-quadtrees-geohash-5b896b975262?source=collection_archive---------1-----------------------#2024-05-08)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Efficient geodata management for optimized search in real-world applications
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@slavahead?source=post_page---byline--5b896b975262--------------------------------)[![Vyacheslav
    Efimov](../Images/441e600862b2b93564c6cd81abb0092d.png)](https://medium.com/@slavahead?source=post_page---byline--5b896b975262--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5b896b975262--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5b896b975262--------------------------------)
    [Vyacheslav Efimov](https://medium.com/@slavahead?source=post_page---byline--5b896b975262--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5b896b975262--------------------------------)
    ·6 min read·May 8, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4953d153e80e31607f6d049670119d1b.png)'
  prefs: []
  type: TYPE_IMG
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Google Maps and Uber are only some examples of the most popular applications
    working with geographical data. Storing information about millions of places in
    the world obliges them to efficiently store and operate on geographical positions,
    including distance calculation and search of the nearest neighbours.
  prefs: []
  type: TYPE_NORMAL
- en: All modern geographical applications use 2D locations of objects represented
    by longitude and latitude. While it might seem naive to store the geodata in the
    form of coordinate pairs, there are some pitfalls in this approach.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will discuss the underlying issues of the naive approach
    and talk about another modern format used to accelerate data manipulation in large
    systems.
  prefs: []
  type: TYPE_NORMAL
- en: Note. In this article, we will represent the world as a large flat 2D rectangle
    instead of a 3D ellipsoid. Longitude and latitude will be represented by X and
    Y coordinates respectively. This simplification will make the explanation process
    easier without omitting the main details.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Problem
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Let us imagine a database storing 2D coordinates of all application objects.
    A user logs in to the…
  prefs: []
  type: TYPE_NORMAL
