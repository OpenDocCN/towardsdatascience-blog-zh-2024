- en: 'Visualisation 101: Choosing the Best Visualisation Type'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/visualisation-101-choosing-the-best-visualisation-type-3a10838b150d?source=collection_archive---------0-----------------------#2024-01-12](https://towardsdatascience.com/visualisation-101-choosing-the-best-visualisation-type-3a10838b150d?source=collection_archive---------0-----------------------#2024-01-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Comprehensive guide for different visualisation use cases
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://miptgirl.medium.com/?source=post_page---byline--3a10838b150d--------------------------------)[![Mariya
    Mansurova](../Images/b1dd377b0a1887db900cc5108bca8ea8.png)](https://miptgirl.medium.com/?source=post_page---byline--3a10838b150d--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3a10838b150d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3a10838b150d--------------------------------)
    [Mariya Mansurova](https://miptgirl.medium.com/?source=post_page---byline--3a10838b150d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3a10838b150d--------------------------------)
    ·16 min read·Jan 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/faf6d89696dd0f596ffa5a5ab4b2ced9.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by DALL-E 3
  prefs: []
  type: TYPE_NORMAL
- en: I believe that the primary goal of analysts is to help their product teams make
    the right decisions based on data. It means that the main result of analysts’
    work is not just getting some numbers or dashboards but influencing reasonable
    data-driven decisions. So, presenting the results of our research is a critical
    part of analysts’ day-to-day work.
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever experienced not noticing some obvious anomaly until you create
    a graph? You are not alone. Almost nobody can extract insights from dry tables
    of numbers. That’s why we need visualisations to unveil the insights in the data.
    Serving as a bridge between data and product teams, a data analyst needs to excel
    in visualisation.
  prefs: []
  type: TYPE_NORMAL
- en: That’s why I would like to discuss data visualisations and start with the framework
    to choose the most suitable chart type for your use case.
  prefs: []
  type: TYPE_NORMAL
- en: Why do we need visualisations?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It might be tempting to look at data just using summary statistics. You can
    compare datasets by mean values and variance and not look at data at all. However,
    it might lead to misinterpretations of your data and wrong decisions.
  prefs: []
  type: TYPE_NORMAL
- en: 'One of the most famous examples is [Anscombe’s quartet](https://en.wikipedia.org/wiki/Anscombe%27s_quartet).
    It was created by statistician Francis Anscombe, and it consists of 4 data sets
    with almost equal descriptive statistics: means, variances and correlations. But
    when we look at the data, we can see how different the datasets are.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/93b7d87c94d12f2a4c9e101b4dc437ae.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: You can find more mind-blowing examples (even a dinosaur) with the same descriptive
    statistics [here](https://www.research.autodesk.com/publications/same-stats-different-graphs/).
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: This example clearly shows how outliers can skew your summary statistics and
    why we need to visualise our data.
  prefs: []
  type: TYPE_NORMAL
- en: Besides outliers, visualisations are also a better way to present the results
    of your research. Graphs are more easily comprehensible and have the ability to
    consolidate a substantial amount of data. So, it’s an essential domain for analysts
    to pay attention to.
  prefs: []
  type: TYPE_NORMAL
- en: Context is a starting point
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we start to think about visualisation for our task, we need to define its
    primary goal or the context for the visualisation.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are two significant use cases for creating charts: exploratory and explanatory
    analytics.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Exploratory visualisations** are your “private talk” with data when trying
    to find insights and understand the internal structure. For such visualisations,
    you might pay less attention to design and details, i.e., omit titles or not use
    consistent colour schemes across charts, since these visualisations are only for
    your eyes.'
  prefs: []
  type: TYPE_NORMAL
- en: I usually start with a bunch of quick chart prototypes. However, even in this
    case, you still need to think about the most suitable chart type. Proper visualisation
    can help you find insights, while the wrong one can hide the clues. So, choose
    wisely.
  prefs: []
  type: TYPE_NORMAL
- en: '**Explanatory visualisations** are intended to convey information to your audience.
    In this case, you need to focus more on details and the context to achieve your
    goal.'
  prefs: []
  type: TYPE_NORMAL
- en: 'When I am working on explanatory visualisations, I usually think about the
    following questions to define my goal crystal-clearly:'
  prefs: []
  type: TYPE_NORMAL
- en: Who is my audience? What context do they have? What information do I need to
    explain to them? What are they interested in?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What do I want to achieve? What concerns my audience might have? What information
    can I show them to achieve my goal?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Am I showing the whole picture? Do I need to look at the question from the other
    point of view to give all the information for the audience to make an informed
    decision?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Also, your decisions on visualisation might depend on the medium, whether you
    will make a live presentation or just send it in Slack or via e-mail. Here are
    a couple of examples:'
  prefs: []
  type: TYPE_NORMAL
- en: In the case of a live presentation, you can have fewer comments on charts since
    you can talk about all the needed context, while in an e-mail, it’s better to
    provide all the details.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: A table with many numbers won’t work for live presentations since the slide
    with so much information might distract the audience from your speech. At the
    same time, it’s absolutely okay for written communication when the audience can
    go through all the numbers at their own pace.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: So, when choosing a chart type, we shouldn’t think about visualisations in isolation.
    We need to consider our primary goal and audience. Please keep it in mind.
  prefs: []
  type: TYPE_NORMAL
- en: The perception of visualisation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'How many different types of charts do you know? I bet you can name quite a
    few of them: linear charts, bar charts, Sankey diagrams, heat maps, box plots,
    bubble charts, etc. But have you ever thought about visualisations more granularly:
    what are the building blocks, and how are they perceived by your readers?'
  prefs: []
  type: TYPE_NORMAL
- en: 'William S. Cleveland and Robert McGill investigated this question in [their
    article](https://doi.org/10.2307/2288400) *“Graphical Perception: Theory, Experimentation,
    and Application to the Development of Graphical Methods”* in *the Journal of American
    Statistical Association, September 1984*. This article focuses on visual perception
    — the ability to decode information presented in a chart. The authors identified
    a set of building blocks for visualisations — visual encodings — for example,
    position, length, area or colour saturation. No surprise, different visual encodings
    have different levels of difficulty for people to interpret.'
  prefs: []
  type: TYPE_NORMAL
- en: The authors tried to hypothesise and test these hypotheses via experiments on
    how accurately people can extract information from the graph depending on the
    elements used. Their goal was to test how valid people’s judgements are.
  prefs: []
  type: TYPE_NORMAL
- en: 'They used previous psychological research and experiments to rank different
    visualisation building blocks from the most accurate to the least. Here’s the
    list:'
  prefs: []
  type: TYPE_NORMAL
- en: position — for example, scatter plot;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: length — for example, bar chart;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: direction or slope — for example, line chart;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: angle— for example, pie chart;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: area — for example, bubble chart;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: volume — 3D chart;
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: colour hue and saturation — for example, heat map.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I’ve highlighted only the most common elements from the article for analytical
    day-to-day tasks.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: As we discussed earlier, the primary goal of visualisation is to convey information,
    and we need to focus on our audience and how they perceive the message. So, we
    are interested in people’s correct understanding. That’s why I usually try to
    use visual encodings from the top of the list since they are easier for people
    to interpret.
  prefs: []
  type: TYPE_NORMAL
- en: Tools for visualisations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: We will see many chart examples below, so let’s quickly discuss the tools I
    use for it.
  prefs: []
  type: TYPE_NORMAL
- en: 'There are lots of options for visualisation:'
  prefs: []
  type: TYPE_NORMAL
- en: Excel or Google Sheet,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: BI tools like Tableau or Superset,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Libraries in Python or R.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: In most cases, I prefer using the Plotly library for Python since it allows
    you to create nicely-looking interactive charts easily. In rare cases, I use Matplotlib
    or Seaborn. For example, I prefer Matplotlib for histograms (as you will see below)
    because, by default, it gives me exactly what I need, while this is not the case
    with Plotly.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s jump to the practice and discuss use cases and how to choose the
    best visualisations to address them.
  prefs: []
  type: TYPE_NORMAL
- en: What chart type to use?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: You might often be stuck thinking about what chart to use in your use case since
    so many of them exist.
  prefs: []
  type: TYPE_NORMAL
- en: There are valuable tools, such as a pretty handy [Chart Chooser](https://www.storytellingwithdata.com/blog/2013/04/chart-chooser)
    described in the “Storytelling with Data” blog. It can help you to get some ideas
    of what to start with.
  prefs: []
  type: TYPE_NORMAL
- en: 'Stephen Few proposed the other approach I find pretty helpful. He has [an article](https://www.perceptualedge.com/articles/ie/the_right_graph.pdf),
    *“Eenie, Meenie, Minie, Moe: Selecting the Right Graph for Your Message”.* In
    this article, he identifies the seven common use cases for data visualisations
    and proposes visualisation types to address them.'
  prefs: []
  type: TYPE_NORMAL
- en: 'Here is the list of these use cases:'
  prefs: []
  type: TYPE_NORMAL
- en: Time series
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Nominal comparison
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Deviation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Ranking
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Part-to-whole
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Frequency distribution
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Correlation
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: We will go through all of them and discuss some examples of visualisations for
    each case. I don’t entirely agree with the author’s proposals regarding visualisation
    types, and I will share my view on it.
  prefs: []
  type: TYPE_NORMAL
- en: Graph examples below are based on synthetic data unless it’s explicitly mentioned.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Time series
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** It is the most common use case for visualisation. We
    want to look at changes in one or several metrics over time quite often.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: The most straightforward option (especially if you have several metrics) is
    to use a line chart. It highlights the trend and gives the audience a complete
    overview of the data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, I used a line chart to show how the number of sessions on each
    platform changes over time. We can see that iOS is the fastest-growing segment,
    while the others are pretty stagnant.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/aa98b641f2b188f6240cb6274e091a1f.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: Using a line plot (not a scatter plot) is essential because the line plot emphasises
    trends via slopes.
  prefs: []
  type: TYPE_NORMAL
- en: You can get such a graph quite effortlessly using Plotly. We have a dataset
    like this with a monthly number of sessions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7849b0668d2791d14ab9f648f83f40cb.png)'
  prefs: []
  type: TYPE_IMG
- en: Then, we can use [Plotly Express](https://plotly.com/python/plotly-express/)
    to create a line chart, passing data, title and overriding labels.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: We won’t discuss in detail design and how to tweak it in Plotly here since it’s
    a pretty huge topic that deserves a separate article.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: We usually put time on an x-axis for line charts and use equal periods between
    data points.
  prefs: []
  type: TYPE_NORMAL
- en: There’s a common misunderstanding that we must make the y-axis zero-based (it
    must include 0). However, it’s not true for line charts. In some cases, such an
    approach might even hinder the insights in your data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, compare the two charts below. On the first chart, the number of
    sessions looks pretty stable, while on the second one, the drop-off in the middle
    of December is quite apparent. However, it’s exactly the same dataset, and only
    y-ranges differ.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/02964e548df194cb1810651ab5f5ffd6.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/710b27d49b56227b831718ba3f62d0e5.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: Your options for time series data are not limited to line charts. Sometimes,
    a bar chart can be a better option, for example, if you have few data points and
    want to emphasise individual values rather than trends.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/318dadb71f086863f5bc9185d8a01977.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: Creating a bar chart in Plotly is also pretty straightforward.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: Nominal comparison
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** It’s the case when you want to compare one or several
    metrics across segments.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: If you have a couple of data points, you can use just numbers in text instead
    of a chart. I like this approach since it’s concise and uncluttered.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/f4e5c5311721a35300d3bb82697e39da.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: In many cases, bar charts will be handy to compare the metrics. Even though
    vertical bar charts are usually more common, horizontal ones will be a better
    option when you have long names for segments.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we can compare the annual [GMVs](https://en.wikipedia.org/wiki/Gross_merchandise_volume)
    (Gross Merchandise Value) per customer for different regions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/c1e2ede25d2ed4f1fd71d29951894206.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: To make a bar chart horizontal, you just need to pass `orientation = "h"`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Important note: always use zero-based axes for bar charts. Otherwise, you might
    mislead your audience.'
  prefs: []
  type: TYPE_NORMAL
- en: When there are too many numbers for a bar chart, I prefer a heat map. In this
    case, we use colour saturation to encode the numbers, which is not very accurate,
    so we also keep the labels. For example, let’s add another dimension to our average
    GMV view.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/26148de8ea2c456ef8ae61dd8b17c46c.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: No surprise, you can create a heat map in Plotly as well.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: Deviation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** It’s the case when we want to highlight the differences
    between values and baseline (for example, benchmark or forecast).'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: For the case of comparing metrics for different segments, the best way to convey
    this idea using visualisations is the combination of bar charts and baseline.
  prefs: []
  type: TYPE_NORMAL
- en: We did such a visualisation in [one of my previous articles](/topics-per-class-using-bertopic-252314f2640)
    in our research on topic modelling for hotel reviews. I compared the share of
    customer reviews mentioning the particular topic for each hotel chain and baseline
    (average rate across all the comments). I’ve also highlighted segments that are
    significantly different with colour.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa3f6b0d3e7f9708719889738a4036cf.png)'
  prefs: []
  type: TYPE_IMG
- en: Also, we often have a task to show deviation from the prediction. We can use
    line plots comparing dynamics for the forecast and the factual data. I prefer
    to show the forecast as a dotted line to emphasise that it’s not so solid as fact.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/42e322bba5cc3a7b0cee358211f89e6e.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: This case of a line chart is a bit more complicated than the ones we discussed
    above. So, instead of Plotly Express, we will need to use Plotly Graphical Objects
    to customise the chart.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: Ranking
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** This task is similar to the Nominal comparison. We
    also want to compare metrics across the several segments, but we would like to
    accentuate the ranking — the order of the segments. For example, it could be the
    top 3 regions with the highest average annual GMV or the top 3 marketing campaigns
    with the highest ROI.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: No surprise, we can use bar charts similar to the nominal comparison. The only
    vital nuance to keep in mind is ordering the segments on your chart by the metric
    you’re interested in. For example, we can visualise the top 3 regions by annual
    Gross Merchandise Value.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/59721b2e2d60436c0e10e04ed32a8b44.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: Part-to-whole
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is use case?** The goal is to understand what is the split of total
    by some subdivisions. You might want to do it for one segment or for several at
    the same time to compare their structures.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: The most straightforward solution would be to use a bar chart to show the share
    of each category or subdivision. It’s worth ordering your categories in descending
    order to make visualisation easier to interpret.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2aa176d558d69f49612ae1d902e3614e.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: The above approach works both for one or several segments. However, sometimes,
    it’s easier to compare the structure using a stacked bar chart. For example, we
    can look at the share of customers by age in different regions.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4b23e76f7f867d30cccc2a90ae13a78f.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: Pie charts are often used in such cases. But I wouldn’t recommend you do it.
    As we know from visual perception research, comparing angles or areas is more
    challenging than just lengths. So, bar charts would be preferable.
  prefs: []
  type: TYPE_NORMAL
- en: Also, we might have a task to look at the structure over time. The ideal option
    would be an area chart. It will show you both split across subdivisions and trends
    via slopes (that’s why it’s a better option than just a bar chart with months
    as categories).
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2ef065b93344d940094b48a7b3bf8136.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: To create an area chart, you can use `px.area` function in Plotly.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: Frequency distribution
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** I usually start with such visualisation when working
    with new data. The goal is to understand how value is distributed:'
  prefs: []
  type: TYPE_NORMAL
- en: Is it normally distributed?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Is it unimodal?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Do we have any outliers in our data?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: The first choice for frequency distributions is histograms (vertical bar charts
    usually without margins between categories). I typically prefer normed histograms
    since they are easier to interpret than absolute values.
  prefs: []
  type: TYPE_NORMAL
- en: If you want to see frequency distributions for several metrics, you can draw
    several histograms simultaneously. In this case, it’s crucial to use normed histograms.
    Otherwise, you won’t be able to compare distributions if the number of objects
    differs in groups.
  prefs: []
  type: TYPE_NORMAL
- en: For example, we can visualise the distributions of annual GMVs for customers
    from the United Kingdom and Switzerland.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0fbd61f59c7343229795a290c32abe5f.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: For this visualisation, I used `matplotlib`. I prefer `matplotlib` to Plotly
    for histograms because I like their default design.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: If you want to compare distributions across many categories, reading many histograms
    on the same graph would be challenging. So, I would recommend you use box plots.
    They show less information (only medians, quartiles and outliers) and require
    some education for the audience. However, in the case of many categories, it might
    be your best option.
  prefs: []
  type: TYPE_NORMAL
- en: For example, let’s look at the distributions of the time spent on site by region.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4ab7391a49fe4a02582674ba2fbf24b6.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: If you don’t remember how to read a box plot, here’s a scheme that gives some
    clues.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a071357468998d488e54ce3dc08bea0c.png)'
  prefs: []
  type: TYPE_IMG
- en: Image from Wikipedia ([source](https://en.wikipedia.org/wiki/Box_plot#/media/File:Boxplot_vs_PDF.svg))
    | [CC BY-SA 2.5](https://creativecommons.org/licenses/by-sa/2.5) license
  prefs: []
  type: TYPE_NORMAL
- en: 'So, let’s go through all the building blocks of the box plot visualisation:'
  prefs: []
  type: TYPE_NORMAL
- en: the box on the visualisation shows IQR (interquartile range) — 25% and 75% percentiles,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: the line in the middle of the box specifies the median (50% percentile),
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: whiskers equal to 1.5 * IQR or to the min/max value in the dataset if they are
    less extreme,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: if you have any numbers more extreme than 1.5 * IQR (outliers), they will be
    depicted as points on the graph.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Here is the code to generate a box plot in Plotly. I used Graphical Objects
    instead of Plotly Express to eliminate outliers from the visualisation. It comes
    in handy when you have extreme outliers or too many of them in your dataset.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: Correlation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**What is a use case?** The goal is to understand the relation between two
    numeric datasets, whether one value increases with the other one or not.'
  prefs: []
  type: TYPE_NORMAL
- en: '**Chart recommendations**'
  prefs: []
  type: TYPE_NORMAL
- en: A scatter plot is the best solution to show a correlation between the values.
    You might also want to add a trend line to highlight the relation between metrics.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4e0b0b503f99fd92cbd6fc0ed2d3d3e0.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: 'If you have many data points, you might face a problem with a scatter plot:
    it’s impossible to see the data structure with too many points because they overlay
    each other. In this case, reducing opacity might help you to reveal the relation.'
  prefs: []
  type: TYPE_NORMAL
- en: For example, compare the two graphs below. The second one gives a better understanding
    of the data distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/d1f908492ade2f11eca77b2c68344f90.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: We will use Plotly Graphical objects for this graph since it’s pretty custom.
    To create such a graph, we need to specify two traces — one for the scatter plot
    and one for the regression line.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: It’s essential to put the regression line as the second trace because otherwise,
    it would be overlayed by a scatter plot.
  prefs: []
  type: TYPE_NORMAL
- en: Also, it might be insightful to show frequency distributions for both variables.
    It doesn’t sound effortless, but you can easily do this using a joint plot from
    `seaborn` library. Here’s a code for it.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/0b0bcf300335cf194d0c9183b08cb9f6.png)'
  prefs: []
  type: TYPE_IMG
- en: Visualisation by author
  prefs: []
  type: TYPE_NORMAL
- en: We’ve covered all the use cases for data visualisations.
  prefs: []
  type: TYPE_NORMAL
- en: Is it all the visualisation types I need to know?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: I must confess that from time to time, I face tasks when the above suggestions
    are not enough, and I need some other graphs.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here are some examples:'
  prefs: []
  type: TYPE_NORMAL
- en: Sankey diagrams or sunburst charts for customer journey maps,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Choropleth for data when you need to show geographical data,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Word clouds to give a very high-level view of texts,
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Sparklines if you want to see trends for multiple lines.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: For inspiration, I usually use the galleries of popular visualisation libraries,
    for example, [Plotly](https://plotly.com/python/) or [seaborn](https://seaborn.pydata.org/examples/index.html).
  prefs: []
  type: TYPE_NORMAL
- en: Also, you can always ask ChatGPT about the possible options to present your
    data. It provides quite a reasonable guidance.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/27f4572ef9a091c84f60623f35775bea.png)'
  prefs: []
  type: TYPE_IMG
- en: Screenshot by author
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'In this article, we’ve discussed the basics of data visualisations:'
  prefs: []
  type: TYPE_NORMAL
- en: Why do we need to visualise data?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What questions should you ask yourself before you start working on visualisation?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the basic building blocks, and which ones are the easiest for the audience
    to perceive?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: What are the common use cases for data visualisation, and what chart types you
    can use to address them?
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: I hope the provided framework will help you not to be stuck by a variety of
    options and create better visualisations for your audience.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you a lot for reading this article. If you have any follow-up questions
    or comments, please leave them in the comments section.
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
