- en: Seamless Parsing of Nested JSON and Schema Evolution in Delta Live Tables Without
    Restarting Pipelines
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05](https://towardsdatascience.com/seamless-parsing-of-nested-json-and-schema-evolution-in-dlt-without-restarting-pipelines-51d390937ab1?source=collection_archive---------5-----------------------#2024-10-05)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Based on a customer case study, an advanced tutorial on using Delta Live Tables
    to process JSON schema evolution without requiring to restart
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[![Irfan
    Elahi](../Images/f31feb75a9fc8f58d82de12c3d372b83.png)](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    [Irfan Elahi](https://medium.com/@elahi_irfan?source=post_page---byline--51d390937ab1--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--51d390937ab1--------------------------------)
    ·15 min read·Oct 5, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/1b6f46531a4eddd4e3d01f650d342ab6.png)'
  prefs: []
  type: TYPE_IMG
- en: Generated via DALL-E
  prefs: []
  type: TYPE_NORMAL
- en: '***Disclaimer:*** *I am a solutions architect at Databricks. The views and
    opinions expressed in this article are my own and do not necessarily reflect those
    of Databricks.*'
  prefs: []
  type: TYPE_NORMAL
- en: Schema evolution is a common phenomenon in the world of data engineering. When
    extracting data from sources and loading it into a destination, changes in the
    source schema are inevitable. This challenge is amplified when dealing with source
    systems that include JSON payloads, such as JSON-type columns in PostgreSQL. The
    likelihood of schema changes within these JSON payloads is high — new fields can
    be added at any time, often deeply nested at various levels. These frequent changes
    significantly increase the complexity of building robust data pipelines that parse
    such schema changes and evolve the schema seamlessly.
  prefs: []
  type: TYPE_NORMAL
- en: The Databricks Intelligence Platform, powered by the Delta Lake format, offers
    robust support for schema evolution, ensuring flexibility and resilience when
    dealing with changes in data structure. Delta Lake can…
  prefs: []
  type: TYPE_NORMAL
