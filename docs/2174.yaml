- en: 'Scaling Numerical Data, Explained: A Visual Guide with Code Examples for Beginners'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/scaling-numerical-data-explained-a-visual-guide-with-code-examples-for-beginners-11676cdb45cb?source=collection_archive---------3-----------------------#2024-09-06](https://towardsdatascience.com/scaling-numerical-data-explained-a-visual-guide-with-code-examples-for-beginners-11676cdb45cb?source=collection_archive---------3-----------------------#2024-09-06)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: DATA PREPROCESSING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Transforming adult-sized data for child-like models
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--11676cdb45cb--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--11676cdb45cb--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--11676cdb45cb--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--11676cdb45cb--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--11676cdb45cb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--11676cdb45cb--------------------------------)
    ¬∑10 min read¬∑Sep 6, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/11d768248f250e248ee7df254169f857.png)'
  prefs: []
  type: TYPE_IMG
- en: '`‚õ≥Ô∏è More [DATA PREPROCESSING](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4),
    explained: ¬∑ [Missing Value Imputation](/missing-value-imputation-explained-a-visual-guide-with-code-examples-for-beginners-93e0726284eb)
    ¬∑ [Categorical Encoding](/encoding-categorical-data-explained-a-visual-guide-with-code-example-for-beginners-b169ac4193ae)
    ‚ñ∂ [Data Scaling](/scaling-numerical-data-explained-a-visual-guide-with-code-examples-for-beginners-11676cdb45cb)
    ¬∑ [Discretization](/discretization-explained-a-visual-guide-with-code-examples-for-beginners-f056af9102fa?gi=c1bf25229f86)
    ¬∑ [Oversampling & Undersampling](/oversampling-and-undersampling-explained-a-visual-guide-with-mini-2d-dataset-1155577d3091)
    ¬∑ [Data Leakage in Preprocessing](/data-leakage-in-preprocessing-explained-a-visual-guide-with-code-examples-33cbf07507b7)`'
  prefs: []
  type: TYPE_NORMAL
- en: Numerical features in raw datasets are like adults in a world built for grown-ups.
    Some tower like skyscrapers (think billion-dollar revenues), while others are
    barely visible (like 0.001 probabilities). But our machine learning models? They‚Äôre
    children, struggling to make sense of this adult world.
  prefs: []
  type: TYPE_NORMAL
- en: Data scaling (including what some call ‚Äúnormalization) is the process of transforming
    these adult-sized numbers into child-friendly proportions. It‚Äôs about creating
    a level playing field where every feature, big or small, can be understood and
    valued appropriately.
  prefs: []
  type: TYPE_NORMAL
- en: We‚Äôre gonna see five distinct scaling techniques, all demonstrated on one little
    dataset (complete with some visuals, of course). From the gentle touch of normalization
    to the mathematical acrobatics of Box-Cox transformation, you‚Äôll see why picking
    the right scaling method can be the secret sauce in your machine learning recipe.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2ddf33dc5b98736388d0deedc869049c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  prefs: []
  type: TYPE_NORMAL
- en: Understanding Which Data Needs Transformation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Before we get into the specifics of scaling techniques, it‚Äôs good to understand
    which types of data benefit from scaling and which don‚Äôt:'
  prefs: []
  type: TYPE_NORMAL
- en: 'Data That Usually Doesn‚Äôt Need Scaling:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Categorical variables**: These should typically be encoded rather than scaled.
    This includes both nominal and ordinal categorical data.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Binary variables**: Features that can only take two values (0 and 1, or True
    and False) generally don‚Äôt need scaling.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Count data**: Integer counts often make sense as they are and scaling may
    make them harder to understand. Treat them as categorical instead. There are some
    exceptions, especially with very wide ranges of counts.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Cyclical features**: Data with a cyclical nature (like days of the week or
    months of the year) often benefit more from cyclical encoding rather than standard
    scaling techniques.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'Data That Usually Needs Scaling:'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '**Continuous numerical features with wide ranges**: Features that can take
    on a wide range of values often benefit from scaling to prevent them from dominating
    other features in the model.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Features measured in different units**: When your dataset includes features
    measured in different units (e.g., meters, kilograms, years), scaling helps to
    put them on a comparable scale.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Features with significantly different magnitudes**: If some features have
    values in thousands while others are between 0 and 1, scaling can help balance
    their influence on the model.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Percentage or ratio features**: While these are already on a fixed scale
    (typically 0‚Äì100 or 0‚Äì1), scaling might still be beneficial, especially when used
    alongside features with much larger ranges.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Bounded continuous features**: Features with a known minimum and maximum
    often benefit from scaling, especially if their range is significantly different
    from other features in the dataset.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Skewed distributions**: Features with highly skewed distributions often benefit
    from certain types of scaling or transformation to make them more normally distributed
    and improve model performance.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '![](../Images/f0fa3a06aec3fa8af30392f73dda42b7.png)'
  prefs: []
  type: TYPE_IMG
- en: Why Scale Your Data?
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Now, you might be wondering, ‚ÄúWhy bother scaling at all? Can‚Äôt we just let
    the data be?‚Äù Well, actually, many machine learning algorithms perform their best
    when all features are on a similar scale. Here‚Äôs why scaling is needed:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Equal Feature Importance**: Unscaled features can accidentally dominate the
    model. For instance, wind speed (0‚Äì50 km/h) might overshadow temperature (10‚Äì35¬∞C)
    simply because of its larger scale, not because it‚Äôs more important.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Faster Convergence**: Many optimization algorithms used in machine learning
    converge faster when features are on a similar scale.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Improved Algorithm Performance**: Some algorithms, like K-Nearest Neighbors
    and Neural Networks, explicitly require scaled data to perform well.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Interpretability**: Scaled coefficients in linear models are easier to interpret
    and compare.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '**Avoiding Numerical Instability**: Very large or very small values can lead
    to numerical instability in some algorithms.'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Now that we understand which and why numerical data need scaling, let‚Äôs take
    a look at our dataset and see how we can scale its numerical variables using five
    different scaling methods. It‚Äôs not just about scaling ‚Äî it‚Äôs about scaling right.
  prefs: []
  type: TYPE_NORMAL
- en: The Dataset
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before we get into the scaling techniques, let‚Äôs see our dataset. We‚Äôll be working
    with data from this fictional golf club.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5e96c302215c84c4798615bad7921f4d.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This dataset is perfect for our scaling tasks because it contains features with
    different units, scales, and distributions.
  prefs: []
  type: TYPE_NORMAL
- en: Let‚Äôs get into all the scaling methods now.
  prefs: []
  type: TYPE_NORMAL
- en: 'Method 1: Min-Max Scaling'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Min Max Scaling transforms all values to a fixed range, typically between 0
    and 1, by subtracting the minimum value and dividing by the range.
  prefs: []
  type: TYPE_NORMAL
- en: '**üìä Common Data Types:** Features with a wide range of values, where a specific
    range is desired.'
  prefs: []
  type: TYPE_NORMAL
- en: '**üéØ Goals:'
  prefs: []
  type: TYPE_NORMAL
- en: -** Constrain features to a specific range (e.g., 0 to 1).
  prefs: []
  type: TYPE_NORMAL
- en: '- Preserve the original relationships between data points.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Ensure interpretability of scaled values.'
  prefs: []
  type: TYPE_NORMAL
- en: '**In Our Case**: We apply this to Temperature because temperature has a natural
    minimum and maximum in our golfing context. It preserves the relative differences
    between temperatures, making 0 the coldest day, 1 the hottest, and 0.5 an average
    temperature day.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fad5d15d6556b6a9e643d17f120a26b1.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 2: Standard Scaling'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Standard Scaling centers data around a mean of 0 and scales it to a standard
    deviation of 1, achieved by subtracting the mean and dividing by the standard
    deviation.
  prefs: []
  type: TYPE_NORMAL
- en: '**üìä Common Data Types:** Features with varying scales and distributions.'
  prefs: []
  type: TYPE_NORMAL
- en: '**üéØ Goals:'
  prefs: []
  type: TYPE_NORMAL
- en: -** Standardize features to have a mean of 0 and a standard deviation of 1.
  prefs: []
  type: TYPE_NORMAL
- en: '- Ensure features with different scales contribute equally to a model.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Prepare data for algorithms sensitive to feature scales (e.g., SVM, KNN).'
  prefs: []
  type: TYPE_NORMAL
- en: '**In Our Case**: We use this for Wind Speed because wind speed often follows
    a roughly normal distribution. It allows us to easily identify exceptionally calm
    or windy days by how many standard deviations they are from the mean.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b67bd03daa7ef7034df660e5e515df8a.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 3: Robust Scaling'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Robust Scaling centers data around the median and scales using the interquartile
    range (IQR)
  prefs: []
  type: TYPE_NORMAL
- en: '**üìä Common Data Types:** Features with outliers or noisy data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**üéØ Goals:'
  prefs: []
  type: TYPE_NORMAL
- en: -** Handle outliers effectively without being overly influenced by them.
  prefs: []
  type: TYPE_NORMAL
- en: '- Maintain the relative order of data points.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Achieve a stable scaling in the presence of noisy data.'
  prefs: []
  type: TYPE_NORMAL
- en: '**In Our Case**: We apply this to Humidity because humidity readings can have
    outliers due to extreme weather conditions or measurement errors. This scaling
    ensures our measurements are less sensitive to these outliers.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/ce5023d35409e401bb082f05ebdfc842.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: So far, we‚Äôve looked at a few ways to scale data using. Now, let‚Äôs explore a
    different approach ‚Äî using transformations to achieve scaling, starting with the
    common technique of log transformation.
  prefs: []
  type: TYPE_NORMAL
- en: 'Method 4: Log Transformation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: It applies a logarithmic function to the data, compressing the scale of very
    large values.
  prefs: []
  type: TYPE_NORMAL
- en: '**üìä Common Data Types:**'
  prefs: []
  type: TYPE_NORMAL
- en: '- Right-skewed data (long tail).'
  prefs: []
  type: TYPE_NORMAL
- en: '- Count data.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Data with multiplicative relationships.'
  prefs: []
  type: TYPE_NORMAL
- en: '**üéØ Goals:'
  prefs: []
  type: TYPE_NORMAL
- en: -** Address right-skewness and normalize the distribution.
  prefs: []
  type: TYPE_NORMAL
- en: '- Stabilize variance across the feature‚Äôs range.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Improve model performance for data with these characteristics.'
  prefs: []
  type: TYPE_NORMAL
- en: '**In Our Case**: We use this for Golfers Count because count data often follows
    a right-skewed distribution. It makes the difference between 10 and 20 golfers
    more significant than between 100 and 110, aligning with the real-world impact
    of these differences.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6cac8419d171cbef009335be8e434ee6.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Method 5: Box-Cox Transformation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: This is a family of power transformations (that includes log transformation
    as a special case) that aims to normalize the distribution of data by applying
    a power transformation with a parameter lambda (Œª), which is optimized to achieve
    the desired normality.
  prefs: []
  type: TYPE_NORMAL
- en: '**Common Data Types:** Features needing normalization to approximate a normal
    distribution.'
  prefs: []
  type: TYPE_NORMAL
- en: '**üéØ Goals:'
  prefs: []
  type: TYPE_NORMAL
- en: -** Normalize the distribution of a feature.
  prefs: []
  type: TYPE_NORMAL
- en: '- Improve the performance of models that assume normally distributed data.'
  prefs: []
  type: TYPE_NORMAL
- en: '- Stabilize variance and potentially enhance linearity.'
  prefs: []
  type: TYPE_NORMAL
- en: '**In Our Case**: We apply this to Green Speed because it might have a complex
    distribution not easily normalized by simpler methods. It allows the data to guide
    us to the most appropriate transformation, potentially improving its relationships
    with other variables.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a112a896cbf3d1119a03d826f46171f9.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: After performing transformation, it is also common to further scale it so it
    follows a certain distribution (like normal). We can do this to both of the transformed
    columns we had.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66bddcf5264947c43f5448f04800efd2.png)'
  prefs: []
  type: TYPE_IMG
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '**Conclusion: The Power of Scaling**'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: So, there you have it. Five different scaling techniques, all applied to our
    golf course dataset. Now, all numerical features are transformed and ready for
    machine learning models.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9caaaf8d9a77227f5a54e1ab5045dd14.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Here‚Äôs a quick recap of each method and its application:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Min-Max Scaling**: Applied to Temperature, normalizing values to a 0‚Äì1 range
    for better model interpretability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Standard Scaling**: Used for Wind Speed, standardizing the distribution to
    reduce the impact of extreme values.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Robust Scaling**: Applied to Humidity to handle potential outliers and reduce
    their effect on model performance.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Log Transformation**: Used for Golfers Count to normalize right-skewed count
    data and improve model stability.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**Box-Cox Transformation**: Applied to Green Speed to make the distribution
    more normal-like, which is often required by machine learning algorithms.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Each scaling method serves a specific purpose and is chosen based on the nature
    of the data and the requirements of the machine learning algorithm. By applying
    these techniques, we‚Äôve prepared our numerical features for use in various machine
    learning models, potentially improving their performance and reliability.
  prefs: []
  type: TYPE_NORMAL
- en: üåü Scaling Numerical Data, Code Summarized
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: ‚ö†Ô∏è Clarifying ‚ÄúScaling,‚Äù ‚ÄúNormalization,‚Äù and ‚ÄúTransformation‚Äù
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'As these terms are often used inconsistently in data science, let me clarify
    the distinctions:'
  prefs: []
  type: TYPE_NORMAL
- en: '**Scaling**: This is a broader term that refers to changing the range of values.
    It includes techniques like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '- Min-Max scaling (scales to a fixed range, often 0‚Äì1)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Standard scaling (scales to mean 0 and standard deviation 1)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Normalization**: In a strict statistical sense, this typically refers to
    adjusting values measured on different scales to a common scale, often to make
    features have the properties of a normal distribution. Techniques include:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '- Z-score normalization (same as standard scaling)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Log normalization'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Box-Cox transformation'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '**Transformation**: This is the broadest term, referring to any mathematical
    operation applied to change the values or distribution of a dataset. It includes
    both scaling and normalization, as well as other operations like:'
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: '- Power transformations (e.g., square root, cube root)'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Logarithmic transformations'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: '- Exponential transformations'
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
- en: 'But, in practice:'
  prefs: []
  type: TYPE_NORMAL
- en: '- Some people use ‚Äúnormalization‚Äù specifically to mean scaling to a [0,1] interval
    (Min-Max scaling).'
  prefs: []
  type: TYPE_NORMAL
- en: '- Others use ‚Äúnormalization‚Äù and ‚Äúscaling‚Äù almost interchangeably.'
  prefs: []
  type: TYPE_NORMAL
- en: '- ‚ÄúTransformation‚Äù is sometimes used interchangeably with both ‚Äúscaling‚Äù and
    ‚Äúnormalization,‚Äù but it‚Äôs actually a more general term.'
  prefs: []
  type: TYPE_NORMAL
- en: Given this overlap and inconsistent usage, for a beginner-focused article, I
    decided to use ‚ÄúScaling‚Äù for simplicity. It‚Äôs better to focus on what each technique
    does rather than getting caught up in the terminology debate.
  prefs: []
  type: TYPE_NORMAL
- en: Further Reading
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For a detailed explanation of the [MinMaxScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.MinMaxScaler.html),
    [StandardScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.StandardScaler.html),
    [RobustScaler](https://scikit-learn.org/stable/modules/generated/sklearn.preprocessing.RobustScaler.html)
    and its implementation in scikit-learn, readers can refer to the official documentation
    [1], which provides comprehensive information on its usage and parameters.
  prefs: []
  type: TYPE_NORMAL
- en: Technical Environment
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: This article uses Python 3.7 and scikit-learn 1.5\. While the concepts discussed
    are generally applicable, specific code implementations may vary slightly with
    different versions.
  prefs: []
  type: TYPE_NORMAL
- en: About the Illustrations
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/fa7f5bc5b142e80d43d51d383a8b78d9.png)'
  prefs: []
  type: TYPE_IMG
- en: For a concise visual summary, check out [the companion Instagram post](https://www.instagram.com/p/C_kb6TQSrgY/).
  prefs: []
  type: TYPE_NORMAL
- en: Reference
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] F. Pedregosa et al., [Scikit-learn: Machine Learning in Python](https://www.jmlr.org/papers/volume12/pedregosa11a/pedregosa11a.pdf),
    Journal of Machine Learning Research, vol. 12, pp. 2825‚Äì2830, 2011.'
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôéùôöùôö ùô¢ùô§ùôßùôö ùòøùôñùô©ùôñ ùôãùôßùôöùô•ùôßùô§ùôòùôöùô®ùô®ùôûùô£ùôú ùô¢ùôöùô©ùôùùô§ùôôùô® ùôùùôöùôßùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----11676cdb45cb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Data Preprocessing
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/data-preprocessing-17a2c49b44e4?source=post_page-----11676cdb45cb--------------------------------)6
    stories![](../Images/f7ead0fb9a8dc2823d7a43d67a1c6932.png)![Cartoon illustration
    of two figures embracing, with letters ‚ÄòA‚Äô, ‚ÄòB‚Äô, ‚ÄòC‚Äô and numbers ‚Äò1‚Äô, ‚Äò2‚Äô, ‚Äò3‚Äô
    floating around them. A pink heart hovers above, symbolizing affection. The background
    is a pixelated pattern of blue and green squares, representing data or encoding.
    This image metaphorically depicts the concept of encoding categorical data, where
    categories (ABC) are transformed into numerical representations (123).](../Images/72bb3a287a9ca4c5e7a3871e234bcc4b.png)![A
    cartoon illustration representing data scaling in machine learning. A tall woman
    (representing a numerical feature with a large range) is shown shrinking into
    a child (representing the same feature after scaling to a smaller range). A red
    arrow indicates the shrinking process, and yellow sparkles around the child signify
    the positive impact of scaling.](../Images/d261b2c52a3cafe266d1962d4dbabdbd.png)'
  prefs: []
  type: TYPE_NORMAL
- en: 'ùôîùô§ùô™ ùô¢ùôûùôúùôùùô© ùôñùô°ùô®ùô§ ùô°ùôûùô†ùôö:'
  prefs: []
  type: TYPE_NORMAL
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_IMG
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----11676cdb45cb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Classification Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----11676cdb45cb--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  prefs: []
  type: TYPE_NORMAL
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----11676cdb45cb--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Regression Algorithms
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[View list](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----11676cdb45cb--------------------------------)5
    stories![A cartoon doll with pigtails and a pink hat. This ‚Äúdummy‚Äù doll, with
    its basic design and heart-adorned shirt, visually represents the concept of a
    dummy regressor in machine. Just as this toy-like figure is a simplified, static
    representation of a person, a dummy regressor is a basic models serve as baselines
    for more sophisticated analyses.](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
  prefs: []
  type: TYPE_NORMAL
