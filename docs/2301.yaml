- en: 'Paper Walkthrough: U-Net'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/paper-walkthrough-u-net-98877a2cd33c?source=collection_archive---------4-----------------------#2024-09-20](https://towardsdatascience.com/paper-walkthrough-u-net-98877a2cd33c?source=collection_archive---------4-----------------------#2024-09-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: A PyTorch implementation on one of the most popular semantic segmentation models.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@muhammad_ardi?source=post_page---byline--98877a2cd33c--------------------------------)[![Muhammad
    Ardi](../Images/b59b3752bc33df0166eea834bbdb122f.png)](https://medium.com/@muhammad_ardi?source=post_page---byline--98877a2cd33c--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--98877a2cd33c--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--98877a2cd33c--------------------------------)
    [Muhammad Ardi](https://medium.com/@muhammad_ardi?source=post_page---byline--98877a2cd33c--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--98877a2cd33c--------------------------------)
    ·17 min read·Sep 20, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/06bbe4f7c0d872ec44ff4e48bf766d4a.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Caleb Jones](https://unsplash.com/@gcalebjones?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction to U-Net
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: When we talk about image segmentation, we should not forget about U-Net, a neural
    network architecture that was first proposed by Ronneberger et al. [1] back in
    2015\. This model was initially intended to perform segmentation tasks on medical
    images. Later on, other researchers found that this architecture could actually
    be used for general semantic segmentation tasks as well. Furthermore, it is also
    possible to utilize the model for other things like super resolution (i.e., upscaling
    low resolution image into a higher one) and diffusion (i.e., generating images
    from noises). In this article, I would like to show you how to implement U-Net
    from scratch using PyTorch. You can see the entire U-Net architecture in Figure
    1\. By looking at this structure, I think it is pretty straightforward how this
    network got its name.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/0930b3566dcb829f91b1a8772ef74630.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1\. The U-Net architecture [1].
  prefs: []
  type: TYPE_NORMAL
- en: There are several key components in the architecture. First, there is a Contracting
    Path, which is also known as the Encoder. This component is responsible for gradually
    shrinking the spatial dimension…
  prefs: []
  type: TYPE_NORMAL
