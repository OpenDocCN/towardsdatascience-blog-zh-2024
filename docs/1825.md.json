["```py\n#ADD YOUR DATA HERE\nbrowser_market_share = {\n    'browsers': ['firefox', 'chrome', 'safari', 'edge', 'ie', 'opera'],\n    'market_share': [8.61, 69.55, 8.36, 4.12, 2.76, 2.43],\n    'color': ['#5A69AF', '#579E65', '#F9C784', '#FC944A', '#F24C00', '#00B825']\n}\n#STEP 3\nbubble_chart = BubbleChart(area=browser_market_share['market_share'],\n                           bubble_spacing=0.1)\n#STEP 4\nbubble_chart.collapse()\n\n#STEP 5\n\nfig, ax = plt.subplots(subplot_kw=dict(aspect=\"equal\"))\nbubble_chart.plot(\n    ax, browser_market_share['browsers'], browser_market_share['color'])\nax.axis(\"off\")\nax.relim()\nax.autoscale_view()\nax.set_title('Browser market share')\n\nplt.show()\n```", "```py\nfig, ax = plt.subplots(figsize=(12,8),subplot_kw=dict(aspect=\"equal\"))\n\n#Labels edited directly in dataset \n```", "```py\nimport matplotlib.pyplot as plt\nfrom matplotlib.offsetbox import (AnnotationBbox, DrawingArea,\n                                  TextArea,HPacker)\nfrom matplotlib.patches import Circle,Rectangle\n\n# This is an example for one section of the legend\n\n# Define where the annotation (legend) will be\nxy = [50, 128]\n\n# Create your colored rectangle or circle\nda = DrawingArea(20, 20, 0, 0)\np = Rectangle((10 ,10),10,10,color=\"#fc8d62ff\")\nda.add_artist(p)\n\n# Add text \n\ntext = TextArea(\"20%\", textprops=dict(color=\"#fc8d62ff\", size=14,fontweight='bold'))\n\n# Combine rectangle and text\nvbox = HPacker(children=[da, text], align=\"top\", pad=0, sep=3)\n\n# Annotate both in a box (change alpha if you want to see the box)\nab = AnnotationBbox(vbox, xy,\n                    xybox=(1.005, xy[1]),\n                    xycoords='data',\n                    boxcoords=(\"axes fraction\", \"data\"),\n                    box_alignment=(0.2, 0.5),\n                    bboxprops=dict(alpha=0)\n                    )\n#Add to your bubble chart\nax.add_artist(ab)\n```", "```py\nbubble_chart = BubbleChart(area=browser_market_share['market_share'],\n                           bubble_spacing=2)\n```", "```py\n def __init__(self, area, bubble_spacing=0):\n        area = np.asarray(area)\n        r = np.sqrt(area / np.pi)\n\n        self.bubble_spacing = bubble_spacing\n        self.bubbles = np.ones((len(area), 4))\n        self.bubbles[:, 2] = r\n        self.bubbles[:, 3] = area\n\n        # UPDATE: Position the bubbles in a horizontal row, touching each other\n        self.bubbles[:, 0] = np.cumsum(r * 2 + self.bubble_spacing) - r - self.bubble_spacing / 2\n        self.bubbles[:, 1] = 0 \n```"]