["```py\nmkdir prod\nmkdir staging\n```", "```py\n#staging/backend.tf\nterraform {\n  backend \"gcs\" {\n    bucket = \"dataform-staging-terraform-state\"\n    prefix = \"terraform/state\"\n  }\n```", "```py\n#staging/providers.tf\nterraform {\n  required_providers {\n    google = {\n      source  = \"hashicorp/google\"\n      version = \">=5.14.0\"\n    }\n    google-beta = {\n      source  = \"hashicorp/google-beta\"\n      version = \">=5.14.0\"\n    }\n  }\n\n  required_version = \">= 1.7.3\"\n}\n\nprovider \"google\" {\n  project = var.project_id\n}\n```", "```py\n#staging/variables.tf\nvariable \"project_id\" {\n  type        = string\n  description = \"Name of the GCP Project.\"\n}\n\nvariable \"region\" {\n  type        = string\n  description = \"The google cloud region to use\"\n  default     = \"europe-west2\"\n}\n\nvariable \"project_number\" {\n  type        = string\n  description = \"Number of the GCP Project.\"\n}\n\nvariable \"location\" {\n  type        = string\n  description = \"The google cloud location in which to create resources\"\n  default     = \"EU\"\n}\n\nvariable \"dataform_staging_service_account\" {\n  type        = string\n  description = \"Email of the service account Dataform uses to execute queries in staging env\"\n}\n\nvariable \"dataform_prod_service_account\" {\n  type        = string\n  description = \"Email of the service account Dataform uses to execute queries in production\"\n}\n\nvariable \"dataform_github_token\" {\n  description = \"Dataform GitHub Token\"\n  type        = string\n  sensitive   = true\n}\n```", "```py\n#staging/staging.auto.tfvars\nproject_id                       = \"{staging-project-id}\"\nregion                           = \"{staging-project--region}\"\nproject_number                   = \"{staging-project-number}\"\ndataform_staging_service_account = \"dataform-staging\"\ndataform_prod_service_account    = \"{dataform-prod-service-account-email}\"\ndataform_github_token            = \"dataform_github_token\"\n```", "```py\n#staging/secrets.tf\nresource \"google_secret_manager_secret\" \"dataform_github_token\" {\n  project = var.project_id\n  secret_id = var.dataform_github_token\n  replication {\n    user_managed {\n      replicas {\n        location = var.region\n      }\n    }\n  }\n}\n```", "```py\n#staging/data.tf\ndata \"google_secret_manager_secret_version\" \"dataform_github_token\" {\n  project = var.project_id\n  secret  = var.dataform_github_token\n\n  depends_on = [\n    google_secret_manager_secret.dataform_github_token\n  ]\n}\n```", "```py\n#staging/service_accounts.tf\nresource \"google_service_account\" \"dataform_staging\" {\n  account_id   = var.dataform_staging_service_account\n  display_name = \"Dataform Service Account\"\n  project      = var.project_id\n}\n```", "```py\n#staging/iam.tf\nresource \"google_project_iam_member\" \"dataform_staging_roles\" {\n  for_each = toset([\n    \"roles/bigquery.dataEditor\",\n    \"roles/bigquery.dataViewer\",\n    \"roles/bigquery.user\",\n    \"roles/bigquery.dataOwner\",\n  ])\n\n  project = var.project_id\n  role    = each.value\n  member  = \"serviceAccount:${google_service_account.dataform_staging.email}\"\n\n  depends_on = [\n    google_service_account.dataform_staging\n  ]\n}\n```", "```py\n#staging/dataform.tf\nresource \"google_dataform_repository\" \"dataform_demo\" {\n  provider        = google-beta\n  name            = \"dataform_demo\"\n  project         = var.project_id\n  region          = var.region\n  service_account = \"${var.dataform_staging_service_account}@${var.project_id}.iam.gserviceaccount.com\"\n\n  git_remote_settings {\n    url                                 = \"https://github.com/kbakande/terraforming-dataform\"\n    default_branch                      = \"main\"\n    authentication_token_secret_version = data.google_secret_manager_secret_version.dataform_github_token.id\n  }\n\n  workspace_compilation_overrides {\n    default_database = var.project_id\n  }\n\n}\n\nresource \"google_dataform_repository_release_config\" \"prod_release\" {\n  provider   = google-beta\n  project    = var.project_id\n  region     = var.region\n  repository = google_dataform_repository.dataform_demo.name\n\n  name          = \"prod\"\n  git_commitish = \"main\"\n  cron_schedule = \"30 6 * * *\"\n\n  code_compilation_config {\n    default_database = var.project_id\n    default_location = var.location\n    default_schema   = \"dataform\"\n    assertion_schema = \"dataform_assertions\"\n  }\n\n  depends_on = [\n    google_dataform_repository.dataform_demo\n  ]\n}\n\nresource \"google_dataform_repository_workflow_config\" \"prod_schedule\" {\n  provider = google-beta\n  project  = var.project_id\n  region   = var.region\n\n  name           = \"prod_daily_schedule\"\n  repository     = google_dataform_repository.dataform_demo.name\n  release_config = google_dataform_repository_release_config.prod_release.id\n  cron_schedule  = \"45 6 * * *\"\n\n  invocation_config {\n    included_tags                            = []\n    transitive_dependencies_included         = false\n    transitive_dependents_included           = false\n    fully_refresh_incremental_tables_enabled = false\n\n    service_account = var.dataform_prod_service_account\n  }\n\n  depends_on = [\n    google_dataform_repository.dataform_demo\n  ]\n}\n```", "```py\n#staging/iam.tf\nresource \"google_project_iam_member\" \"dataform_staging_roles\" {\n  for_each = toset([\n    \"roles/bigquery.dataEditor\",\n    \"roles/bigquery.dataViewer\",\n    \"roles/bigquery.user\",\n    \"roles/bigquery.dataOwner\",\n  ])\n\n  project = var.project_id\n  role    = each.value\n  member  = \"serviceAccount:${google_service_account.dataform_staging.email}\"\n\n  depends_on = [\n    google_service_account.dataform_staging\n  ]\n}\n\nresource \"google_service_account_iam_binding\" \"custom_service_account_token_creator\" {\n  service_account_id = \"projects/${var.project_id}/serviceAccounts/${var.dataform_staging_service_account}@${var.project_id}.iam.gserviceaccount.com\"\n\n  role = \"roles/iam.serviceAccountTokenCreator\"\n\n  members = [\n    \"serviceAccount:@gcp-sa-dataform.iam.gserviceaccount.com\">service-${var.project_number}@gcp-sa-dataform.iam.gserviceaccount.com\"\n  ]\n  depends_on = [\n    module.service-accounts\n  ]\n}\n\nresource \"google_secret_manager_secret_iam_binding\" \"github_secret_accessor\" {\n  secret_id = google_secret_manager_secret.dataform_github_token.secret_id\n\n  role = \"roles/secretmanager.secretAccessor\"\n\n  members = [\n    \"serviceAccount:@gcp-sa-dataform.iam.gserviceaccount.com\">service-${var.project_number}@gcp-sa-dataform.iam.gserviceaccount.com\"\n  ]\n\n  depends_on = [\n    google_secret_manager_secret.dataform_github_token,\n    module.service-accounts,\n  ]\n}\n```"]