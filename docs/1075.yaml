- en: Transform Data with Hyperbolic Sine
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用双曲正弦转换数据
- en: 原文：[https://towardsdatascience.com/transform-data-with-hyperbolic-sine-e39e9275b6ba?source=collection_archive---------3-----------------------#2024-04-29](https://towardsdatascience.com/transform-data-with-hyperbolic-sine-e39e9275b6ba?source=collection_archive---------3-----------------------#2024-04-29)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/transform-data-with-hyperbolic-sine-e39e9275b6ba?source=collection_archive---------3-----------------------#2024-04-29](https://towardsdatascience.com/transform-data-with-hyperbolic-sine-e39e9275b6ba?source=collection_archive---------3-----------------------#2024-04-29)
- en: '*Why handling negative values should be a cinch*'
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '*为什么处理负值应该是轻松的事*'
- en: '[](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)[![David
    Kyle](../Images/536175491ed7f89d03a4e528a986bf8a.png)](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)
    [David Kyle](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)[![David
    Kyle](../Images/536175491ed7f89d03a4e528a986bf8a.png)](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)
    [David Kyle](https://medium.com/@david.kyle_13073?source=post_page---byline--e39e9275b6ba--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)
    ·8 min read·Apr 29, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e39e9275b6ba--------------------------------)
    ·阅读时间：8分钟·2024年4月29日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/f9953f39cfbd1e188cffa967e1745689.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f9953f39cfbd1e188cffa967e1745689.png)'
- en: Photo by [Osman Rana](https://unsplash.com/@osmanrana?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Osman Rana](https://unsplash.com/@osmanrana?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Many models are sensitive to outliers, such as [linear regression](https://medium.com/swlh/how-outliers-can-pose-a-problem-in-linear-regression-1431c50a8e0),
    [k-nearest neighbor](/k-nearest-neighbors-knn-algorithm-23832490e3f4), and [ARIMA](/limitations-of-arima-dealing-with-outliers-30cc0c6ddf33).
    Machine learning algorithms suffer from over-fitting and may not generalize well
    in the presence of outliers.¹ However, the right transformation can shrink these
    extreme values and improve your model’s performance.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 许多模型对异常值非常敏感，例如 [线性回归](https://medium.com/swlh/how-outliers-can-pose-a-problem-in-linear-regression-1431c50a8e0)、[k近邻算法](/k-nearest-neighbors-knn-algorithm-23832490e3f4)
    和 [ARIMA](/limitations-of-arima-dealing-with-outliers-30cc0c6ddf33)。机器学习算法在异常值的存在下容易过拟合，可能无法很好地推广。¹
    然而，适当的转换可以缩小这些极端值，从而提高模型的性能。
- en: 'Transformations for data with negative values include:'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 处理负值数据的转换包括：
- en: '**Shifted Log**'
  id: totrans-10
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**平移对数**'
- en: '**Shifted Box-Cox**'
  id: totrans-11
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**平移Box-Cox**'
- en: '**Inverse Hyperbolic Sine**'
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**逆双曲正弦**'
- en: '**Sinh-arcsinh**'
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**双曲正弦-逆双曲正弦**'
- en: Log and Box-Cox are effective tools when working with positive data, but inverse
    hyperbolic sine (arcsinh) is much more effective on negative values.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 对数和Box-Cox是处理正值数据时的有效工具，但逆双曲正弦（arcsinh）在处理负值时要有效得多。
- en: Sinh-arcsinh is even more powerful. It has two parameters that can adjust the
    *skew* and *kurtosis* of your data to make it close to normal. These parameters
    can be derived using gradient descent. See an implementation in python at the
    end of this post.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦-逆双曲正弦更为强大。它有两个参数可以调整数据的*偏度*和*峰度*，使其更接近正态分布。这些参数可以通过梯度下降法推导出来。请参见本文末尾的Python实现。
- en: Shifted Log
  id: totrans-16
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 平移对数
- en: The log transformation can be adapted to handle negative values with a shifting
    term *α*.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 对数转换可以通过添加平移项*α*来适应负值的处理。
- en: '![](../Images/99c6c190ddd6505638f2678eb47efe0b.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/99c6c190ddd6505638f2678eb47efe0b.png)'
- en: Throughout the article, I use log to mean natural log.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 在整篇文章中，我使用“log”表示自然对数。
- en: Visually, this is moving the log’s vertical asymptote from 0 to *α.*
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 从视觉上看，这是将对数的垂直渐近线从0移动到*α*。
- en: '![](../Images/b23b4614a839d9a61ce842cc05f28bee.png)'
  id: totrans-21
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b23b4614a839d9a61ce842cc05f28bee.png)'
- en: Plot of shifted log transformation with offset of *-5, made with* [*Desmos*](https://www.desmos.com/calculator)
    *available under* [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/).
    Equation text added to image.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 这是平移后的对数变换图，偏移值为*-5*，使用[*Desmos*](https://www.desmos.com/calculator)制作，遵循[CC
    BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)协议。图中添加了方程式文本。
- en: Forecasting Stock Prices
  id: totrans-23
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 股票价格预测
- en: Imagine you are a building a model to predict the stock market. Hosenzade and
    Haratizadeh tackle this problem with a convolutional neural network using a large
    set of feature variables that I have pulled from [UCI Irvine Machine Learning
    Repository](https://archive.ics.uci.edu/)². Below is distribution of the change
    of volume feature — an important technical indicator for stock market forecasts.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你正在构建一个预测股市的模型。Hosenzade和Haratizadeh通过卷积神经网络解决这个问题，使用了我从[UCI欧文机器学习库](https://archive.ics.uci.edu/)²提取的大量特征变量。下面是成交量变化特征的分布——这是股市预测中的一个重要技术指标。
- en: '![](../Images/cb8996afed994306181c18ac2606825b.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb8996afed994306181c18ac2606825b.png)'
- en: made with Matplotlib
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 使用Matplotlib制作
- en: The [quantile-quantile (QQ) plot](/significance-of-q-q-plots-6f0c6e31c626) reveals
    heavy right and left tails. The goal of our transformation will be to bring the
    tails closer to normal (the red line) so that it has no outliers.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: '[分位数-分位数（QQ）图](/significance-of-q-q-plots-6f0c6e31c626)显示了右尾和左尾的重尾现象。我们变换的目标是将尾部拉近正态分布（红线），使其不再有离群值。'
- en: Using a shift value of -250, I get this log distribution.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 使用-250的平移值，我得到了这个对数分布。
- en: '![](../Images/9762e83d81f0bcc42223528b8d72e848.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/9762e83d81f0bcc42223528b8d72e848.png)'
- en: The right tail looks a little better, but the left tail still shows deviation
    from the red line. Log works by applying a concave function to the data which
    skews the data left by compressing the high values and stretching out the low
    values.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 右尾看起来稍微好一些，但左尾仍然偏离红线。对数变换通过对数据应用一个凹函数，压缩高值并拉伸低值，从而使数据左偏。
- en: '**The log transformation only makes the right tail lighter.**'
  id: totrans-31
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**对数变换仅使右尾变轻。**'
- en: While this works well for positively skewed data, it is less effective for data
    with negative outliers.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然这种方法对正偏态数据有效，但对于带有负离群值的数据效果较差。
- en: '![](../Images/c022841ba714b40e16e78b07f5e0bfae.png)'
  id: totrans-33
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c022841ba714b40e16e78b07f5e0bfae.png)'
- en: '*made with* [*Desmos*](https://www.desmos.com/calculator) *available under*
    [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/). Text and arrows
    added to image.'
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: '*使用* [*Desmos*](https://www.desmos.com/calculator) *制作，遵循[CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)协议。图中添加了文本和箭头。*'
- en: In the stock data, skewness is not the issue. The extreme values are on both
    left and right sides. The *kurtosis* is high, meaning that both tails are heavy.
    A simple concave function is not equipped for this situation.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在股票数据中，偏态不是问题。极值出现在左右两侧。*峰度*较高，意味着两侧的尾部都较重。一个简单的凹函数无法应对这种情况。
- en: '![](../Images/dd5ccbccc9db1cd0fcfc02d79bddc6b8.png)'
  id: totrans-36
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dd5ccbccc9db1cd0fcfc02d79bddc6b8.png)'
- en: Shifted Box-Cox
  id: totrans-37
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 移动的Box-Cox变换
- en: Box-Cox is a generalized version of log, which can also be shifted to include
    negative values, written as
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: Box-Cox是对数变换的广义版本，它也可以通过平移来处理负值，写作：
- en: '![](../Images/35718e7af8786adef4b75da40dd17dd0.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/35718e7af8786adef4b75da40dd17dd0.png)'
- en: The *λ* parameter controls the concavity of the transformation allowing it to
    take on a variety of forms. Box-cox is quadratic when *λ* = 2\. It’s linear when
    *λ* = 1, and log as *λ* approaches 0\. This can be verified by using L’Hôpital’s
    rule.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '*λ*参数控制变换的凹度，使其能够呈现多种形式。当*λ* = 2时，Box-Cox变换为二次型；当*λ* = 1时，它是线性的；当*λ*接近0时，它趋近于对数变换。这可以通过使用L''Hôpital法则验证。'
- en: '![](../Images/0cbf359a4587fca43a715f1fa106fbdc.png)![](../Images/672b9b7574cb3fc0e11b5d3c5d1cfd53.png)'
  id: totrans-41
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0cbf359a4587fca43a715f1fa106fbdc.png)![](../Images/672b9b7574cb3fc0e11b5d3c5d1cfd53.png)'
- en: Plot of shifted box-cox transformation with shift *-5 and five different values
    for λ, made with* [*Desmos*](https://www.desmos.com/calculator) *available under*
    [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/). Text added to
    image.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 这是平移后的Box-Cox变换图，平移值为*-5*，并使用了五个不同的*λ*值，使用[*Desmos*](https://www.desmos.com/calculator)制作，遵循[CC
    BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/)协议。图中添加了文本。
- en: To apply this transformation on our stock price data, I use a shift value -250
    and determine *λ* with scipy's `boxcox` function.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了在我们的股价数据上应用这种变换，我使用平移值-250，并使用scipy的`boxcox`函数来确定*λ*。
- en: '[PRE0]'
  id: totrans-44
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'The resulting transformed data looks like this:'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 变换后的数据如下所示：
- en: '![](../Images/4b2fcd3045616c56e3f19c0db0aa3ac8.png)'
  id: totrans-46
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4b2fcd3045616c56e3f19c0db0aa3ac8.png)'
- en: Despite the flexibility of this transformation, it fails to reduce the tails
    on the stock price data. Low values of *λ* skew the data left, shrinking the right
    tail. High values of *λ* skew the data right, shrinking the left tail, but there
    isn’t any value that can shrink both simultaneously.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 尽管这种变换具有灵活性，但它未能缩小股票价格数据的尾部。*λ*的低值使数据向左偏斜，缩小了右尾。*λ*的高值使数据向右偏斜，缩小了左尾，但没有任何值能同时缩小两者。
- en: Inverse Hyperbolic Sine
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 反双曲正弦
- en: The hyperbolic sine function (sinh) is defined as
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 双曲正弦函数（sinh）的定义为
- en: '![](../Images/65ef55f997fba3e9932083583db2a288.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65ef55f997fba3e9932083583db2a288.png)'
- en: and its inverse is
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 其反函数为
- en: '![](../Images/6be839af43c14014259a6e3e424fee59.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6be839af43c14014259a6e3e424fee59.png)'
- en: In this case, the inverse is a more helpful function because it’s approximately
    log for large *x* (positive or negative) and linear for small values of *x*. In
    effect, this shrinks extremes while keeping the central values, more or less,
    the same.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在这种情况下，反函数更为有用，因为它对于较大的*x*（无论是正数还是负数）大致是对数函数，而对于较小的*x*则是线性函数。实际上，这种变换缩小了极端值，同时保持了中心值基本不变。
- en: '**Arcsinh reduces both positive and negative tails.**'
  id: totrans-54
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '**Arcsinh减小了正负尾部。**'
- en: For positive values, arcsinh is concave, and for negative values, it’s convex.
    This change in curvature is the secret sauce that allows it to handle positive
    and negative extreme values simultaneously.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 对于正值，arcsinh是凹的，而对于负值，它是凸的。这种曲率的变化是其能够同时处理正负极端值的秘诀。
- en: '![](../Images/15d87992438fa114983ffb31af99b23c.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/15d87992438fa114983ffb31af99b23c.png)'
- en: plot of inverse hyperbolic sine (arcsinh) compared to a log function, *made
    with* [*Desmos*](https://www.desmos.com/calculator) *available under* [CC BY-SA
    4.0](https://creativecommons.org/licenses/by-sa/4.0/). Text, arrows, and box shape
    added to image.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 与对数函数相比，反双曲正弦（arcsinh）的图像，*由* [*Desmos*](https://www.desmos.com/calculator)
    *制作，并在* [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) *下可用*。图像中添加了文本、箭头和框形。
- en: Using this transformation on the stock data results in near normal tails. The
    new data has no outliers!
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种变换后的股票数据结果显示，尾部几乎符合正态分布。新的数据没有异常值！
- en: '![](../Images/aa54a96575ef16c793face51f9fe5557.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aa54a96575ef16c793face51f9fe5557.png)'
- en: Scale Matters
  id: totrans-60
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 尺度很重要
- en: Consider how your data is scaled before it’s passed into arcsinh.
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 在将数据输入arcsinh之前，请考虑数据的尺度。
- en: For log, your choice of units is irrelevant. Dollars or cents, grams or kilograms,
    miles or feet —it’s all the same to the log function. The scale of your inputs
    only shifts the transformed values by a constant value.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 对于对数函数，单位的选择无关紧要。美元还是分，克还是千克，英里还是英尺——对对数函数来说都是一样的。输入值的尺度只会将变换后的值平移一个常数值。
- en: '![](../Images/3d27470fec2088c8429ee388b40f0239.png)'
  id: totrans-63
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d27470fec2088c8429ee388b40f0239.png)'
- en: The same is not true for arcsinh. Values between -1 and 1 are left almost unchanged
    while large numbers are log-dominated. You may need to play around with different
    scales and offsets before feeding your data into arcsinh to get a result you are
    satisfied with.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 对于反双曲正弦（arcsinh），情况并非如此。-1到1之间的值几乎保持不变，而较大的数值则由对数主导。在将数据输入arcsinh之前，您可能需要调整不同的尺度和偏移量，以获得您满意的结果。
- en: At the end of the article, I implement a gradient descent algorithm in python
    to estimate these transformation parameters more precisely.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在文章的最后，我在python中实现了一个梯度下降算法，以更精确地估计这些变换参数。
- en: '![](../Images/237220229b36a2e0b15700f261721f04.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/237220229b36a2e0b15700f261721f04.png)'
- en: Sinh-arcsinh
  id: totrans-67
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Sinh-arcsinh
- en: Proposed by Jones and Pewsey³, the sinh-arcsinh transformation is
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 由Jones和Pewsey³提出，sinh-arcsinh变换为
- en: '![](../Images/c9d90b8fa9c77d4eec462f153ed2e90e.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9d90b8fa9c77d4eec462f153ed2e90e.png)'
- en: Jones and Pewsey do not include the constant 1/*δ term at the front. However,
    I include it here because it makes it easier to show arcsinh as a limiting case.*
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: Jones和Pewsey没有在前面包含常数项1/*δ*。不过，我在这里包含它，因为它使得展示arcsinh作为极限情况更加容易。
- en: Parameter *ε* adjusts the skew of the data and *δ* adjusts the kurtosis³, allowing
    the transformation to take on many forms. For example, the identity transformation
    *f(x) = x* is a special case of sinh-arcsinh when *ε* = 0 and *δ* = 1\. Arcsinh
    is a limiting case for *ε* = 0 and *δ* approaching zero, as can be seen using
    L’Hôpital’s rule again.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 参数*ε*调整数据的偏斜度，*δ*调整峰度³，使得变换可以呈现多种形式。例如，恒等变换 *f(x) = x* 是当*ε* = 0且*δ* = 1时的sinh-arcsinh的特例。arcsinh是当*ε*
    = 0且*δ*趋近于零时的极限情况，使用L'Hôpital法则可以验证这一点。
- en: '![](../Images/8affeb48e27667cbb459a63d1d4d4e7a.png)![](../Images/07826aa87a3306c2ec7bdc9a39ed1f45.png)'
  id: totrans-72
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8affeb48e27667cbb459a63d1d4d4e7a.png)![](../Images/07826aa87a3306c2ec7bdc9a39ed1f45.png)'
- en: plots of sinh-arcsinh for different values of *ε* and *δ.* On the left, *ε*
    is fixed at zero, and on the right, *δ is fixed at 0.5, made with* [*Desmos*](https://www.desmos.com/calculator)
    *available under* [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/).
    Text added to image.
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: sinh-arcsinh 变换在不同 *ε* 和 *δ* 值下的图。左侧 *ε* 固定为零，右侧 *δ* 固定为 0.5，使用* [*Desmos*](https://www.desmos.com/calculator)
    *制作，采用* [CC BY-SA 4.0](https://creativecommons.org/licenses/by-sa/4.0/) *许可。图中加入了文字*。
- en: Scale Still Matters
  id: totrans-74
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 规模仍然重要
- en: Just like with arcsinh, there are meaningful differences in the results of the
    sinh-arcsinh transformation based on how your input data is shifted or scaled,
    meaning there are not two, but four parameters that can be chosen.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: 就像 arcsinh 一样，sinh-arcsinh 变换的结果会受到输入数据平移或缩放的显著影响，这意味着可以选择的不仅仅是两个，而是四个参数。
- en: '![](../Images/5b19c8b2798b2c1c7a1525d3ce501935.png)'
  id: totrans-76
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b19c8b2798b2c1c7a1525d3ce501935.png)'
- en: Parameter Estimation
  id: totrans-77
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 参数估计
- en: We’ve seen how data transformations can make the tails of your data more Gaussian.
    Now, let’s take it to the next level by picking the parameters that maximize the
    normal log likelihood.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经看到数据变换如何使数据的尾部更加符合高斯分布。现在，让我们通过选择最大化正态对数似然的参数，将其提升到一个新的层次。
- en: Let *T(x)* be my transformation, and let *N(x | μ, σ)* be the probability density
    function for a normal distribution with mean *μ* and standard deviation *σ*. Assuming
    independence, the likelihood of the entire dataset *X* is
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 设 *T(x)* 为我的变换，*N(x | μ, σ)* 为正态分布的概率密度函数，其中均值为 *μ*，标准差为 *σ*。假设独立，整个数据集 *X*
    的似然是
- en: '![](../Images/342cd4d56e6394c8a91767cc4430d2e5.png)'
  id: totrans-80
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/342cd4d56e6394c8a91767cc4430d2e5.png)'
- en: where I’ve made use of the Jacobian of the transformation. The log likelihood
    is
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 这里我利用了变换的雅可比矩阵。对数似然是
- en: '![](../Images/aaee0bef4e435c9d8366a31fc8c08826.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/aaee0bef4e435c9d8366a31fc8c08826.png)'
- en: where I can drop the absolute value signs because the derivative of the transformation
    is always positive.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 我可以去掉绝对值符号，因为变换的导数始终是正的。
- en: Gradient Descent
  id: totrans-84
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 梯度下降
- en: I estimate my parameters with gradient descent, setting the loss function to
    the negative mean log likelihood. Tensorflow’s `GradientTape` automatically calculates
    the partial derivatives with respect to the four parameters of sinh-arcsinh as
    well as *μ* and *σ* from the normal probability density function. Parameters β,
    *δ*, and *σ* are represented in log form to ensure they stay positive. You may
    want to try a few initializations of the variables in case the algorithm gets
    stuck at a local minimum. I also recommend normalizing your inputs to mean zero
    and standard deviation one before running the script for the best performance.
  id: totrans-85
  prefs: []
  type: TYPE_NORMAL
  zh: 我使用梯度下降估计我的参数，将损失函数设置为负的平均对数似然。Tensorflow 的 `GradientTape` 会自动计算关于 sinh-arcsinh
    四个参数以及正态分布的 *μ* 和 *σ* 的偏导数。为了确保它们保持正值，参数 β、*δ* 和 *σ* 以对数形式表示。你可能想尝试几个变量初始化，以防算法陷入局部最小值。我还建议在运行脚本前，将输入数据标准化为均值为零、标准差为一，以获得最佳性能。
- en: '[PRE1]'
  id: totrans-86
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: This optimized approach resulted in a distribution very close to Gaussian —
    not only the tails, but the mid-section too!
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 这种优化方法使得分布非常接近高斯分布——不仅是尾部，连中间部分也如此！
- en: '![](../Images/d06fde39c2703077445fa6b463fb2370.png)'
  id: totrans-88
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d06fde39c2703077445fa6b463fb2370.png)'
- en: Conclusion
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: Log and Box-Cox are powerful transformations when working with positive data,
    but merely shifting these transformations to include negative values has severe
    limitations. The arcsinh transformation is much better at handling extreme positive
    and negative values simultaneously.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 对于处理正值数据时，Log 和 Box-Cox 是强大的变换，但仅仅将这些变换平移以包括负值是有严重局限的。arcsinh 变换在同时处理极端正值和负值时要好得多。
- en: If you are willing to increase the complexity, the sinh-arcsinh transformation
    is a more powerful function that generalizes arcsinh. When normality is very important,
    its parameters can also be derived using gradient descent to match a Gaussian
    distribution.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你愿意增加复杂度，sinh-arcsinh 变换是一个更强大的函数，它是 arcsinh 的广义形式。当正态性非常重要时，其参数也可以通过梯度下降推导出来，以匹配高斯分布。
- en: Arcsinh doesn’t get much attention, but it’s an essential transformation that
    should be a part of every data engineer’s tool kit.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: Arcsinh 变换不常被关注，但它是一个至关重要的变换，应该是每个数据工程师工具箱的一部分。
- en: If you’ve found these transformation techniques useful or have any questions
    about applying them to your own datasets, please share your thoughts and experiences
    in the comments below.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你发现这些转换技巧有用，或者对如何将它们应用到你自己的数据集有任何问题，请在下面的评论中分享你的想法和经验。
- en: Unless otherwise noted, all images are by the author.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者提供。
- en: '***Note from Towards Data Science’s editors:*** *While we allow independent
    authors to publish articles in accordance with our* [*rules and guidelines*](/questions-96667b06af5)*,
    we do not endorse each author’s contribution. You should not rely on an author’s
    works without seeking professional advice. See our* [*Reader Terms*](/readers-terms-b5d780a700a4)
    *for details.*'
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: '***来自《Towards Data Science》编辑的提醒：*** *虽然我们允许独立作者根据我们的* [*规则和指南*](/questions-96667b06af5)
    *发布文章，但我们并不认同每位作者的贡献。你不应在没有寻求专业建议的情况下依赖作者的作品。详情请参见我们的* [*读者条款*](/readers-terms-b5d780a700a4)
    *。*'
- en: '[1] Jabbar, H. K., & Khan, R. Z. (2014). [Methods to avoid over-fitting and
    under-fitting in supervised machine learning (Comparative study)](https://www.researchgate.net/publication/295198699_METHODS_TO_AVOID_OVER-FITTING_AND_UNDER-FITTING_IN_SUPERVISED_MACHINE_LEARNING_COMPARATIVE_STUDY).'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: '[1] Jabbar, H. K., & Khan, R. Z. (2014). [在监督机器学习中避免过拟合和欠拟合的方法（比较研究）](https://www.researchgate.net/publication/295198699_METHODS_TO_AVOID_OVER-FITTING_AND_UNDER-FITTING_IN_SUPERVISED_MACHINE_LEARNING_COMPARATIVE_STUDY)。'
- en: '[2] [CNNpred: CNN-based stock market prediction using a diverse set of variables](https://doi.org/10.48550/arXiv.1810.08923).
    (2019). [UCI Machine Learning Repository](https://doi.org/10.24432/C55P70).'
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: '[2] [CNNpred: 基于CNN的股票市场预测，使用多样化的变量集](https://doi.org/10.48550/arXiv.1810.08923)。（2019）。
    [UCI机器学习数据集](https://doi.org/10.24432/C55P70)。'
- en: '[3] Jones, M & Pewsey, Arthur. (2009). [Sinh-arcsinh distributions: a broad
    family giving rise to powerful tests of normality and symmetry](https://www.researchgate.net/publication/295198699_METHODS_TO_AVOID_OVER-FITTING_AND_UNDER-FITTING_IN_SUPERVISED_MACHINE_LEARNING_COMPARATIVE_STUDY).
    Biometrika.'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: '[3] Jones, M & Pewsey, Arthur. (2009). [Sinh-arcsinh分布：一种广泛的家族，能够产生强有力的正态性和对称性检验](https://www.researchgate.net/publication/295198699_METHODS_TO_AVOID_OVER-FITTING_AND_UNDER-FITTING_IN_SUPERVISED_MACHINE_LEARNING_COMPARATIVE_STUDY)。Biometrika。'
