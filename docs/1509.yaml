- en: 'Spatial Index: Tessellation'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/spatial-index-tessellation-aca39463fe9f?source=collection_archive---------4-----------------------#2024-06-17](https://towardsdatascience.com/spatial-index-tessellation-aca39463fe9f?source=collection_archive---------4-----------------------#2024-06-17)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Use of Tessellation for Spatial Indexing and how Uber H3 works
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://pyblog.medium.com/?source=post_page---byline--aca39463fe9f--------------------------------)[![Adesh
    Nalpet Adimurthy](../Images/fb3e0c4d3c3f829fd95bde08f0a4cd57.png)](https://pyblog.medium.com/?source=post_page---byline--aca39463fe9f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--aca39463fe9f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--aca39463fe9f--------------------------------)
    [Adesh Nalpet Adimurthy](https://pyblog.medium.com/?source=post_page---byline--aca39463fe9f--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--aca39463fe9f--------------------------------)
    ·15 min read·Jun 17, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2bc3bc1fd639d4300e9b7ae5f33ae9e3.png)'
  prefs: []
  type: TYPE_IMG
- en: 'This post is a continuation of [Spatial Index: Grid Systems](https://medium.com/@pyblog/spatial-index-grid-systems-f02880fb147a)
    where we will set the foundation for tessellation and head into the details of
    [Uber H3](https://github.com/uber/h3)'
  prefs: []
  type: TYPE_NORMAL
- en: 0\. Foundation
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Tessellation or tiling is the process of covering/dividing a space into smaller,
    non-overlapping shapes that fit together perfectly without gaps or overlaps. In
    spatial indexing, tessellation is used to break down the Earth’s surface into
    manageable units for efficient data storage, querying, and analysis.
  prefs: []
  type: TYPE_NORMAL
- en: 'The rationale behind why a geographical grid system ([Tessellation system](https://www.pyblog.xyz/cartograms-documentation#tessellation))
    is necessary: The real world is cluttered with various geographical elements,
    both natural and man-made, none of which follow any consistent structure. To perform
    geographic algorithms or analyses on it, we need a more abstract form.'
  prefs: []
  type: TYPE_NORMAL
- en: Maps are a good start and are the most common abstraction, with which most people
    are familiar. However, maps still contain all sorts of inconsistencies. This calls
    for a grid system, which takes the cluttered geographic space and provides a more
    clean and structured mathematical space, making it much easier to perform computations
    and queries.
  prefs: []
  type: TYPE_NORMAL
