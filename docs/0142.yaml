- en: Improved Caching Produces a 5000x Performance Boost on Streamlit Dashboards
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/improved-caching-produces-a-5000x-performance-boost-on-streamlit-dashboards-4dd0353c4003?source=collection_archive---------4-----------------------#2024-01-15](https://towardsdatascience.com/improved-caching-produces-a-5000x-performance-boost-on-streamlit-dashboards-4dd0353c4003?source=collection_archive---------4-----------------------#2024-01-15)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: PYTHON PROGRAMMING
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Learn how to use native Python caching to implement blazing-fast dashboards.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@nyggus?source=post_page---byline--4dd0353c4003--------------------------------)[![Marcin
    Kozak](../Images/d7faf62e48ed81dab5d8ad92819fff54.png)](https://medium.com/@nyggus?source=post_page---byline--4dd0353c4003--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4dd0353c4003--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4dd0353c4003--------------------------------)
    [Marcin Kozak](https://medium.com/@nyggus?source=post_page---byline--4dd0353c4003--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4dd0353c4003--------------------------------)
    ·10 min read·Jan 15, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/53e7a736b2a449b22b98cb9995fa5d8a.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [Myriam Jessier](https://unsplash.com/@mjessier?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: I started working with it a few months ago, and I must say have really enjoyed
    it. I’ve worked with [R Shiny](https://shiny.posit.co/) and Python [dash](https://pypi.org/project/dash/)
    dashboards, but [Streamlit](https://streamlit.io/) beats the both of them in terms
    of coding simplicity. I find it surprisingly easy to use. While I have never particularly
    liked implementing dashboards (I’m not sure why), Streamlit has actually changed
    that; it can be fun!
  prefs: []
  type: TYPE_NORMAL
- en: However, there are some drawbacks to Streamlit. One is that Streamlit code can
    often look like poor Python code, as dashboards are usually implemented without
    functions, just as a list of lines of code. Some functionalities can be moved
    to functions or classes, but sometimes it’s better not to do that.
  prefs: []
  type: TYPE_NORMAL
- en: Another disadvantage of Streamlit is that its dashboards can be slow, for several
    reasons. First of all, every time the user interacts with the dashboard, Streamlit
    re-runs the entire dashboard script, and this can mean rerunning, for instance,
    calculations, data reads, graphs and charts.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we will discuss how to make Streamlit data faster using caching.
    I am not going to tell you…
  prefs: []
  type: TYPE_NORMAL
