- en: 'Using Evaluations to Optimize a RAG Pipeline: from Chunkings and Embeddings
    to LLMs'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: åŽŸæ–‡ï¼š[https://towardsdatascience.com/using-evaluations-to-optimize-a-rag-pipeline-from-chunkings-and-embeddings-to-llms-40e5ed6033b8?source=collection_archive---------5-----------------------#2024-07-12](https://towardsdatascience.com/using-evaluations-to-optimize-a-rag-pipeline-from-chunkings-and-embeddings-to-llms-40e5ed6033b8?source=collection_archive---------5-----------------------#2024-07-12)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Best practices RAG with Milvus vector database, part 2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@christybergman?source=post_page---byline--40e5ed6033b8--------------------------------)[![Christy
    Bergman](../Images/b8431b925cfe7bd0d3a035761fd1e7f8.png)](https://medium.com/@christybergman?source=post_page---byline--40e5ed6033b8--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--40e5ed6033b8--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--40e5ed6033b8--------------------------------)
    [Christy Bergman](https://medium.com/@christybergman?source=post_page---byline--40e5ed6033b8--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: Â·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--40e5ed6033b8--------------------------------)
    Â·7 min readÂ·Jul 12, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b8ef251d4f0bd38f28fc612832fb483c.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Image created by author using [https://www.bing.com/images/create](https://www.bing.com/images/create).
    Content credentials: **Generated with AI** âˆ™ July 9, 2024 at 10:04 AM.'
  prefs: []
  type: TYPE_NORMAL
- en: Retrieval Augmented Generation (RAG) is a useful technique for using your own
    data in an AI-powered Chatbot. In this blog post, Iâ€™ll walk through three key
    strategies to get the most out of RAG and evaluate each strategy to find the best
    combinations.
  prefs: []
  type: TYPE_NORMAL
- en: 'For readers who just want to know the TL;DR conclusion: the most RAG accuracy
    improvement came from exploring different chunking strategies.'
  prefs: []
  type: TYPE_NORMAL
- en: '**84% Improvement by changing the Chunking Strategy** ðŸ“¦'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**20% Improvement by changing the Embedding Model** ðŸ¤–'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: '**6% Improvement by changing the LLM Model** ðŸ§ª'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Letâ€™s dive into each strategy and find the best-performers for a real-world
    RAG application using RAG component evaluations! ðŸš€ðŸ“š
  prefs: []
  type: TYPE_NORMAL
- en: 'Iâ€™ll use [Milvus (a vector database made by the Chinese startup Zilliz) documentation](https://milvus.io/docs)
    public web pages as the docs data and [Ragas](https://github.com/explodinggradients/ragas)
    as the evaluation method. See my previous [blog about how to use RAGAS](https://medium.com/towards-data-science/rag-evaluation-using-ragas-4645a4c6c477).
    The rest of this blog is organized as follows:'
  prefs: []
  type: TYPE_NORMAL
- en: Text Chunking Strategies
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: Embedding Models
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: LLM (Generative) Models
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
