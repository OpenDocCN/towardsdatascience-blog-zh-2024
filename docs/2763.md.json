["```py\nfrom mondrian_maker.mondrian import mondrian\n\nm = mondrian()\nm.make_mondrian()\n```", "```py\nfor i in range(0,100):\n    f,ax=m.make_mondrian()\n    f.savefig(f\"{i}_mondrian.png\")\n```", "```py\nimport numpy as np\n\nconstant=12\nnp.random.seed(constant)\n\n# From now on all generated random numbers are reproducible if constant=12\n# To get different random numbers, choose a new constant\n```", "```py\nfrom met_brewer import met_brew\npalette=met_brew(name=\"Hokusai3\", brew_type=\"discrete\")\n```", "```py\nfrom numpy import random\n\ndef rectangle_generator(palette): \n    rectangle=[]\n\n    big={'x0': 0, 'y0': 0, 'x1': 1, 'y1': 1,'color':palette[random.randint(len(palette))]} \n    rectangle.append(big)\n\n    middle={'x0': 0.1, 'y0': 0.05, 'x1': 0.9, 'y1': 0.85,'color':palette[random.randint(len(palette))]}\n    rectangle.append(middle)\n\n    small={'x0': 0.2, 'y0': 0.1, 'x1': 0.8, 'y1': 0.7,'color':palette[random.randint(len(palette))]}\n    rectangle.append(small)\n\n    tiny={'x0': 0.3, 'y0': 0.15, 'x1': 0.7, 'y1': 0.55,'color':palette[random.randint(len(palette))]}\n    rectangle.append(tiny)\n\n    return rectangle\n```", "```py\nimport plotly.graph_objects as go\nimport plotly.express as px\nimport numpy as np\nfrom met_brewer import met_brew\nimport plotly.io as pio\n\n#For reproducibility\nnp.random.seed(73)\n\n#Choose a beautiful palette from met_brewer\npalette=met_brew(name=\"Morgenstern\", n=30,brew_type=\"continuous\")       \n\n# Generate rectangles with defined palette\nrectangles=rectangle_generator(palette)\n\n# Plot!\n\n# Setting canvas\n\nfig=go.Figure()\n\nfig.update_layout(\n    autosize=False,\n    width=800,\n    height=800,\n    )\n\nfig.update_xaxes(range=[0, 1], showgrid=False,visible=False)\nfig.update_yaxes(range=[0, 1],visible=False)\n\n# Start painting\n\nfor rect in rectangles:\n    fig.add_shape(\n        type=\"rect\",\n        x0=rect['x0'],y0=rect['y0'],\n        x1=rect['x1'],y1=rect['y1'],\n        line=dict(color=rect['color'],\n                    width=2,),\n        fillcolor=rect['color']\n        )\n\nfig.update_shapes(dict(xref='x', yref='y'))\nfig.show()\npio.write_image(fig, \"73morgensternplot.png\", format=\"png\", width=800, height=800, scale=3)\n```"]