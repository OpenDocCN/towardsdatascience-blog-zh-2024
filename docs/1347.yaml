- en: 'SQL Explained: Normal Forms'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/sql-explained-normal-forms-e2a8b8ce1122?source=collection_archive---------9-----------------------#2024-05-29](https://towardsdatascience.com/sql-explained-normal-forms-e2a8b8ce1122?source=collection_archive---------9-----------------------#2024-05-29)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/34e9cd23d967f10a6359526963a89744.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by AI (Dalle-3)
  prefs: []
  type: TYPE_NORMAL
- en: Applying 1st, 2nd and 3rd normal forms to a database
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@thomas_reid?source=post_page---byline--e2a8b8ce1122--------------------------------)[![Thomas
    Reid](../Images/c1b4e5f577272633ba07e5dbfd21c02d.png)](https://medium.com/@thomas_reid?source=post_page---byline--e2a8b8ce1122--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e2a8b8ce1122--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e2a8b8ce1122--------------------------------)
    [Thomas Reid](https://medium.com/@thomas_reid?source=post_page---byline--e2a8b8ce1122--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e2a8b8ce1122--------------------------------)
    ·10 min read·May 29, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Normalisation in a database system refers to the process of structuring your
    data in such a way as to reduce data redundancy and improve data integrity.
  prefs: []
  type: TYPE_NORMAL
- en: It involves breaking down a database into multiple tables and defining relationships
    between the tables based on a set of rules called normal forms.
  prefs: []
  type: TYPE_NORMAL
- en: The goal is to eliminate redundant data and ensure that data inter-dependencies
    make sense.
  prefs: []
  type: TYPE_NORMAL
- en: Although there are many different types of normal forms, for most database systems,
    applying the first three (1NF, 2NF, and 3NF) is sufficient to achieve a well-structured
    and optimised database design.
  prefs: []
  type: TYPE_NORMAL
- en: In this article, we’ll start off with a very simple single table that is unnormalised,
    then apply each of the three normal forms to it and any subsequent tables that
    come out of the process and see what our final design looks like at the end.
  prefs: []
  type: TYPE_NORMAL
- en: Before that, here’s a brief explanation of 1NF, 2NF and 3NF.
  prefs: []
  type: TYPE_NORMAL
- en: First Normal Form (1NF)
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For a table to be in 1NF it must satisfy the following criteria.
  prefs: []
  type: TYPE_NORMAL
- en: Each row must be uniquely identifiable. This ***may*** be done by defining a
    primary key on one or more columns of the table.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
