- en: Using Linear Equations + LLM to Solve LinkedIn Queens Game
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/using-linear-equations-llm-to-solve-linkedin-queens-game-fe9802d997e9?source=collection_archive---------5-----------------------#2024-10-07](https://towardsdatascience.com/using-linear-equations-llm-to-solve-linkedin-queens-game-fe9802d997e9?source=collection_archive---------5-----------------------#2024-10-07)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/ad35481c77af475538a173dca31d3d3f.png)'
  prefs: []
  type: TYPE_IMG
- en: Queens (generated using Canva)
  prefs: []
  type: TYPE_NORMAL
- en: Prompting GPT to form and solve the linear equations using PuLP
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://memsranga.com/?source=post_page---byline--fe9802d997e9--------------------------------)[![Shanmukha
    Ranganath](../Images/b362e4a5eb87077e889cb1db702955b3.png)](https://memsranga.com/?source=post_page---byline--fe9802d997e9--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--fe9802d997e9--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--fe9802d997e9--------------------------------)
    [Shanmukha Ranganath](https://memsranga.com/?source=post_page---byline--fe9802d997e9--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--fe9802d997e9--------------------------------)
    ·11 min read·Oct 7, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: In my [How I Solved LinkedIn Queens Game](https://medium.com/towards-data-science/solving-linkedin-queens-game-cfeea7a26e86)
    article, I’ve discussed solving the LinkedIn Queens game using backtracking, a
    hit-and-trail method. It places a `Queen` on one of the cells of the grid and
    continues to do so, respecting all the constraints until it can’t anymore. At
    this point, it rolls back the last placed`Queen` and keeps repeating this process
    until it finds a solution or exhausts all the cells on the grid. Since LinkedIn
    guarantees there will always be a solution, our backtracking method is perfect
    and will always be successful. However, its time complexity is of `O(n²)` but
    is still solved in less than 0.1 seconds because the max grids (as far as I have
    played) are only 10x10.
  prefs: []
  type: TYPE_NORMAL
- en: '[](/solving-linkedin-queens-game-cfeea7a26e86?source=post_page-----fe9802d997e9--------------------------------)
    [## How I Solved LinkedIn Queens Game Using Backtracking'
  prefs: []
  type: TYPE_NORMAL
- en: Using OpenCV to auto-detect puzzle and redraw the final answer
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/solving-linkedin-queens-game-cfeea7a26e86?source=post_page-----fe9802d997e9--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Even though backtracking is performing well in terms of time complexity and
    implementation, let’s take it a step further and try to solve it even better.
    Did you know all the constraints of the game can be translated into a set of linear
    equations? When we solve those…
  prefs: []
  type: TYPE_NORMAL
