- en: Collision Risk in Hash-Based Surrogate Keys
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 基于哈希的替代键碰撞风险
- en: 原文：[https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20](https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20](https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20)
- en: Analysis of various aspects and real-life analogies of the odds of having a
    hash collision when computing Surrogate Keys using MD5, SHA-1, and SHA-256 algorithms.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分析使用MD5、SHA-1和SHA-256算法计算替代键时哈希碰撞发生的各种方面及其现实生活类比。
- en: '[](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[![Krzysztof
    K. Zdeb](../Images/4531b37707bf6a01ef635e4b9ecfc03f.png)](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    [Krzysztof K. Zdeb](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[![Krzysztof
    K. Zdeb](../Images/4531b37707bf6a01ef635e4b9ecfc03f.png)](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    [Krzysztof K. Zdeb](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    ·12 min read·Nov 20, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    ·12分钟阅读·2024年11月20日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/6e1a1702cee57ac9923c534412b1c73b.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6e1a1702cee57ac9923c534412b1c73b.png)'
- en: Abstract visualization of a game of low chances in a multidimensional space.
    Don’t get fooled by the oddly looking dice! | Image by DALL·E
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 低概率事件在多维空间中的抽象可视化。不要被奇怪的骰子迷惑！| 图片来自DALL·E
- en: 'One method for generating Surrogate Keys in databases (particularly in Data
    Warehouses and Lakehouses) relies on a hash function to compute hash keys from
    Natural Keys. This method has many advantages but it also comes with a significant
    risk: hash functions do not guarantee unique outputs, leading to the possibility
    of **hash key collision**.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在数据库中生成替代键（特别是在数据仓库和湖仓中）的一种方法依赖于哈希函数，通过哈希函数从自然键计算出哈希键。这种方法有许多优点，但也存在显著的风险：哈希函数无法保证唯一输出，从而导致**哈希键碰撞**的可能性。
- en: Hash collision is when different input values passed through a hash function
    return the same output value (i.e., the same hash). The probability of such an
    event largely depends on the length of the hash key generated by the specific
    type of hash function used. The longer the hash key, the lower the risk of collision.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 哈希碰撞是指不同的输入值经过哈希函数处理后返回相同的输出值（即相同的哈希）。这种事件发生的概率主要取决于所使用的哈希函数生成的哈希键的长度。哈希键越长，碰撞的风险越低。
- en: Hash functions
  id: totrans-10
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 哈希函数
- en: 'The three most popular hashing functions used nowadays are:'
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 目前使用最广泛的三种哈希函数是：
- en: '**MD5** (Message Digest Algorithm 5)— Developed by Ronald Rivest in 1991, is
    a widely known hashing function that produces a 128-bit (16-byte) hash. Originally
    designed for data integrity and authentication, MD5 quickly became popular due
    to its simplicity and speed.'
  id: totrans-12
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**MD5**（消息摘要算法5）— 由罗纳德·里维斯特于1991年开发，是一种广为人知的哈希函数，产生一个128位（16字节）的哈希。最初设计用于数据完整性和身份验证，MD5由于其简便性和速度而迅速流行开来。'
