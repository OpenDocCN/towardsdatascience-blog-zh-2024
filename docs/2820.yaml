- en: Collision Risk in Hash-Based Surrogate Keys
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20](https://towardsdatascience.com/collision-risk-in-hash-based-surrogate-keys-4c87b716cbcd?source=collection_archive---------10-----------------------#2024-11-20)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Analysis of various aspects and real-life analogies of the odds of having a
    hash collision when computing Surrogate Keys using MD5, SHA-1, and SHA-256 algorithms.
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[![Krzysztof
    K. Zdeb](../Images/4531b37707bf6a01ef635e4b9ecfc03f.png)](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    [Krzysztof K. Zdeb](https://medium.com/@krzysztof.kornel?source=post_page---byline--4c87b716cbcd--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4c87b716cbcd--------------------------------)
    ·12 min read·Nov 20, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6e1a1702cee57ac9923c534412b1c73b.png)'
  prefs: []
  type: TYPE_IMG
- en: Abstract visualization of a game of low chances in a multidimensional space.
    Don’t get fooled by the oddly looking dice! | Image by DALL·E
  prefs: []
  type: TYPE_NORMAL
- en: 'One method for generating Surrogate Keys in databases (particularly in Data
    Warehouses and Lakehouses) relies on a hash function to compute hash keys from
    Natural Keys. This method has many advantages but it also comes with a significant
    risk: hash functions do not guarantee unique outputs, leading to the possibility
    of **hash key collision**.'
  prefs: []
  type: TYPE_NORMAL
- en: Hash collision is when different input values passed through a hash function
    return the same output value (i.e., the same hash). The probability of such an
    event largely depends on the length of the hash key generated by the specific
    type of hash function used. The longer the hash key, the lower the risk of collision.
  prefs: []
  type: TYPE_NORMAL
- en: Hash functions
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'The three most popular hashing functions used nowadays are:'
  prefs: []
  type: TYPE_NORMAL
- en: '**MD5** (Message Digest Algorithm 5)— Developed by Ronald Rivest in 1991, is
    a widely known hashing function that produces a 128-bit (16-byte) hash. Originally
    designed for data integrity and authentication, MD5 quickly became popular due
    to its simplicity and speed.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
