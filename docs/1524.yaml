- en: Managing Pivot Table and Excel Charts with VBA
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用VBA管理数据透视表和Excel图表
- en: 原文：[https://towardsdatascience.com/managing-pivot-table-and-excel-charts-with-vba-3dc5d672dff0?source=collection_archive---------12-----------------------#2024-06-18](https://towardsdatascience.com/managing-pivot-table-and-excel-charts-with-vba-3dc5d672dff0?source=collection_archive---------12-----------------------#2024-06-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/managing-pivot-table-and-excel-charts-with-vba-3dc5d672dff0?source=collection_archive---------12-----------------------#2024-06-18](https://towardsdatascience.com/managing-pivot-table-and-excel-charts-with-vba-3dc5d672dff0?source=collection_archive---------12-----------------------#2024-06-18)
- en: Save precious hours by automating working with pivot tables and charts using
    VBA
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 通过使用VBA自动化数据透视表和图表的操作，节省宝贵的时间
- en: '[](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)[![Himalaya
    Bir Shrestha](../Images/9766140c1c44381029d0a78154217775.png)](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)
    [Himalaya Bir Shrestha](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)[![Himalaya
    Bir Shrestha](../Images/9766140c1c44381029d0a78154217775.png)](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)
    [Himalaya Bir Shrestha](https://medium.com/@himalaya.birshrestha?source=post_page---byline--3dc5d672dff0--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)
    ·9 min read·Jun 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--3dc5d672dff0--------------------------------)
    ·9分钟阅读·2024年6月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: As digitalization and innovation are taking over different domains, working
    with big datasets has become a norm and commonplace in Universities, research
    organizations, and industries. Automating the common tasks can save several hours
    for analysts, so they can spend less time on processing and managing data, and
    more time on the juicy part, which is analyzing and generating insights.
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 随着数字化和创新的推进，处理大数据集已经成为大学、研究机构和各行各业的常态。自动化常见的任务可以为分析师节省数小时的时间，让他们能花更多的时间分析数据并生成洞察，而不是处理和管理数据。
- en: A pivot table is one such tool, which allows generaling several insights from
    stacked datasets. One can perform tons of analysis just by playing with the field
    settings of the pivot table based on the requirements. If someone has numerous
    stacked datasets that can be transformed into pivot tables, how can the pivot
    tables be refreshed automatically? How can one automate the selection of chart
    colors based on the series name and manage other chart elements? This blog post
    gives the answers to such questions by an illustrative example, step by step.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 数据透视表就是这样一个工具，它允许从堆叠的数据集中生成多个见解。只需根据需求调整数据透视表的字段设置，就能进行大量的分析。如果有人有许多堆叠的数据集，可以将其转换为数据透视表，那么如何让这些数据透视表自动刷新呢？如何根据系列名称自动选择图表颜色并管理其他图表元素？这篇博客通过一步步的示例给出了这些问题的答案。
- en: While it could take considerable effort to set up the code in the beginning,
    once it is set up, it can be very handy and time-saving to analysts who work with
    numerous large datasets daily. Let’s get started.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在开始时设置代码可能需要相当大的努力，但一旦设置完成，它将变得非常方便且节省时间，特别是对那些每天处理大量数据集的分析师们来说。让我们开始吧。
- en: '![](../Images/f4ecc8bd15caabeef8b391591514fc84.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f4ecc8bd15caabeef8b391591514fc84.png)'
- en: Photo by [Norbert Levajsics](https://unsplash.com/@levajsics?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自[Norbert Levajsics](https://unsplash.com/@levajsics?utm_source=medium&utm_medium=referral)提供，来自[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: Data
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据
- en: 'I took the sample data from the website of [Excel-Easy](https://www.excel-easy.com/data-analysis/pivot-tables.html).
    This is a nice website containing beginner-friendly tutorials on basic Excel and
    VBA functionalities. The dataset contains records of fruit and vegetable sales
    in specific countries in 2016 and 2017\. The dataset contains six fields: Order
    ID, Product, Category, Amount, Date, and Country. I divided this dataset into
    2 csv files called `results1.csv` and `results2.csv` for creating pivot tables.'
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 我从[Excel-Easy](https://www.excel-easy.com/data-analysis/pivot-tables.html)网站上获取了示例数据。这个网站包含了适合初学者的Excel和VBA功能教程。数据集包含了2016年和2017年特定国家的水果和蔬菜销售记录。数据集包含六个字段：订单ID、产品、类别、金额、日期和国家。我将这个数据集分为两个CSV文件，分别命名为`results1.csv`和`results2.csv`，用于创建数据透视表。
- en: '![](../Images/f5bf4bd47288e4652e7b60d3b12e1dd7.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f5bf4bd47288e4652e7b60d3b12e1dd7.png)'
- en: Structure of dataset. Illustration by Author.
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集结构。图示由作者提供。
- en: 'I pulled this dataset in the `RawData` worksheet. I created a dynamic range
    called `raw_data_source` with the following formula:'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 我在`RawData`工作表中提取了这个数据集。我创建了一个动态范围，名为`raw_data_source`，其公式如下：
- en: '**=OFFSET(RawData!$A$1, 0, 0, COUNTA(RawData!$A:$A), COUNTA(RawData!$1:$1))**'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: '**=OFFSET(RawData!$A$1, 0, 0, COUNTA(RawData!$A:$A), COUNTA(RawData!$1:$1))**'
- en: The reason for creating a dynamic range was that the size (number of rows) of
    the dataset was different in different CSV files, and I wanted to use the entire
    dataset as source of the pivot table.
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 创建动态范围的原因是，数据集的大小（行数）在不同的CSV文件中不同，我希望使用整个数据集作为数据透视表的源。
- en: '![](../Images/787818780f73d2439d1ba882f8f9a452.png)'
  id: totrans-18
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/787818780f73d2439d1ba882f8f9a452.png)'
- en: Creating a dynamic named range as source for the pivot table. Illustration by
    Author.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 创建动态命名范围作为数据透视表的数据源。图示由作者提供。
- en: Pivot tables and charts
  id: totrans-20
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 数据透视表和图表
- en: The dataset in the `raw_data_source` range in the `RawData` sheet was used as
    a data source to create two simple pivot tables and charts.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: '`RawData`工作表中的`raw_data_source`范围的数据集被用作数据源，创建了两个简单的数据透视表和图表。'
- en: '![](../Images/afe820de943480d30e9dd8eb9d2c2e50.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/afe820de943480d30e9dd8eb9d2c2e50.png)'
- en: Specifying the source of the pivot table. Illustration by Author.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 指定数据透视表的数据源。图示由作者提供。
- en: The first one portrayed total fruits and vegetable sales by individual products
    filterable by country with the field settings as shown.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个图表展示了按产品过滤的各国水果和蔬菜总销售额，字段设置如下所示。
- en: '![](../Images/3ce903eacb27581bcafc363ed7fc36d4.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3ce903eacb27581bcafc363ed7fc36d4.png)'
- en: First pivot chart and its settings. Illustration by Author.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 第一个数据透视图及其设置。图示由作者提供。
- en: The second one portrayed total fruit and vegetable sales by countries.
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个图表展示了各国的水果和蔬菜总销售额。
- en: '![](../Images/db3162aae0e2636485d4dfa74618719c.png)'
  id: totrans-28
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/db3162aae0e2636485d4dfa74618719c.png)'
- en: Second pivot chart and its settings. Illustration by Author.
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 第二个数据透视图及其设置。图示由作者提供。
- en: 1\. Automating refreshing pivot tables based on a new dataset
  id: totrans-30
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 1. 基于新数据集自动刷新数据透视表
- en: 'In this step, I wanted to automate the refreshing of the datasets from the
    file I specified. I created a placeholder in the `Admin` sheet to place the path
    of the CSV data whose dataset I wanted to pull and refresh the pivot tables with.
    I named the cell `A2` as `filepath` as shown below:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步，我想要自动刷新来自我指定文件的数据集。我在`Admin`工作表中创建了一个占位符，用于放置我想要提取并刷新数据透视表的CSV数据集的路径。我将单元格`A2`命名为`filepath`，如下所示：
- en: '![](../Images/d18a0b9e83d709020bfa5db1e8f8755a.png)'
  id: totrans-32
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d18a0b9e83d709020bfa5db1e8f8755a.png)'
- en: Placeholder for file pathname with dataset. Illustration by Author.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 数据集文件路径占位符。图示由作者提供。
- en: The code for this step is given below in the `UpdateRawData` subroutine. I declared
    the variables `wb`, `ws_admin`, `ws_rawdata`, and `filepath` for the names of
    the workbook, Admin sheet, RawData sheet, and path of the file containing the
    dataset respectively. First I cleared the contents of the RawData sheet. Then
    I went to the source workbook based on the filename, selected the corresponding
    sheet, copied its contents, returned to the `ws_rawdata` sheet, and pasted the
    contents as values. Finally, I refreshed the workbook using the code `wb.RefreshAll`
    that refreshed the entire workbook including the sheets with the pivot table and
    chart respectively.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 此步骤的代码在`UpdateRawData`子程序中给出。我声明了变量`wb`、`ws_admin`、`ws_rawdata`和`filepath`，分别代表工作簿、Admin工作表、RawData工作表和包含数据集的文件路径。首先，我清空了RawData工作表的内容。然后，我根据文件名进入源工作簿，选择相应的工作表，复制其内容，返回`ws_rawdata`工作表，并将内容粘贴为值。最后，我使用`wb.RefreshAll`代码刷新了工作簿，刷新了包括数据透视表和图表的整个工作簿。
- en: '[PRE0]'
  id: totrans-35
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: I linked this subroutine to the **Refresh files and charts** button. Once I
    specified the filename in the placeholder and clicked on the button, the dataset
    and pivot tables were updated automatically.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 我将这个子程序链接到**刷新文件和图表**按钮。一旦我在占位符中指定了文件名并点击按钮，数据集和数据透视表就会自动更新。
- en: 2\. Creating a colors table using VBA
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 2\. 使用VBA创建颜色表
- en: I created a table in the `Admin` sheet containing the list of the specific fruits
    and vegetables available in the dataset. In column F, I specified the tentative
    hexadecimal color codes for the color of each fruit or vegetable. I wanted to
    use these colors to update the colors in pivot charts. First, I wanted to paint
    column F with the color I specified in each cell.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 我在`Admin`工作表中创建了一个包含数据集中具体水果和蔬菜列表的表格。在F列中，我指定了每种水果或蔬菜的初步十六进制颜色代码。我希望使用这些颜色来更新数据透视图中的颜色。首先，我希望用每个单元格中指定的颜色填充F列。
- en: '![](../Images/cef0874d1ee3959d227d299d7955504e.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cef0874d1ee3959d227d299d7955504e.png)'
- en: Creating a list of available fruits and vegetables in the dataset along with
    their corresponding hexadecimal color codes. Illustration by Author.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 创建数据集中可用的水果和蔬菜列表，以及它们对应的十六进制颜色代码。图示由作者提供。
- en: Hexadecimal color code
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 十六进制颜色代码
- en: The hexadecimal code for each color is a 6-digit hexadecimal number (0 to 9
    or A to F) with base 16\. In a hexadecimal color code `RRGGBB`, each pair of two
    letters represents the various shades of red, green, and blue color. In a Red
    Green Blue (RGB) system, the value of each shade ranges from 0 to 255.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 每种颜色的十六进制代码是一个6位的十六进制数（0到9或A到F），以16为基数。在十六进制颜色代码`RRGGBB`中，每一对两个字母表示红色、绿色和蓝色的不同色调。在RGB（红绿蓝）系统中，每种色调的值范围从0到255。
- en: For example, for a hexadecimal color code `ffab23`, I calculated the corresponding
    RGB code with the following calculation. `ffab23` in the hexadecimal system translates
    to (255, 171, 35) in the RGB system referring to the Red, Green, and Blue color
    components respectively.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，对于十六进制颜色代码`ffab23`，我通过以下计算得出相应的RGB代码。十六进制代码`ffab23`在十六进制系统中转换为（255, 171,
    35），即代表红色、绿色和蓝色的色彩组件。
- en: '![](../Images/4e0c4c79ddb75cf914723fe4accf4610.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4e0c4c79ddb75cf914723fe4accf4610.png)'
- en: Calculating RGB code for a hexadecimal color code ffab23 manually. Illustration
    by Author.
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 手动计算十六进制颜色代码ffab23的RGB值。图示由作者提供。
- en: 'This can also be visualized by going to the Custom Colors option in Excel as
    shown below:'
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 这也可以通过以下方式在Excel中的“自定义颜色”选项中进行可视化：
- en: '![](../Images/6aaf8d00e234ed7ed48d7edb7a2a7d8a.png)'
  id: totrans-47
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6aaf8d00e234ed7ed48d7edb7a2a7d8a.png)'
- en: Demonstrating RGB components and actual color for the hexadecimal color code
    ffab23\. Illustration by Author.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 演示十六进制颜色代码ffab23的RGB组件和实际颜色。图示由作者提供。
- en: In Excel VBA, using `**&H**` in combination with a value implies that it is
    a hexadecimal number and the `Val()` function returns the corresponding decimal
    number. In the Immediate Window below, `r`, `g`, and `b` represent the corresponding
    decimal values for each shade of Red, Green, and Blue respectively.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 在Excel VBA中，使用`**&H**`与一个值组合意味着它是一个十六进制数，而`Val()`函数返回相应的十进制数。在下面的立即窗口中，`r`、`g`和`b`分别代表红色、绿色和蓝色的相应十进制值。
- en: '![](../Images/cb9331018b2f160b63822fa597e82fc8.png)'
  id: totrans-50
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb9331018b2f160b63822fa597e82fc8.png)'
- en: Immediate window displaying how the corresponding decimal values are derived
    in VBA from hexadecimal code. Illustration by Author.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 立即窗口显示了如何从十六进制代码在VBA中推导出相应的十进制值。图示由作者提供。
- en: In the code below, I created a named range `color_code_range` for the table
    containing the hexadecimal color code for each fruit or vegetable. I looped through
    each cell in the selection, derived the red, green, and blue components in decimal
    numbers, and painted the interior of the cell with the same RGB color code.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我为包含每种水果或蔬菜的十六进制颜色代码的表格创建了一个命名范围`color_code_range`。我遍历了选择中的每个单元格，推导出红、绿、蓝组件的十进制值，并用相同的RGB颜色代码填充单元格的内部。
- en: '[PRE1]'
  id: totrans-53
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'When I ran the above subroutine, the column F gets painted with the same color
    as the color code as shown:'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 当我运行上述子程序时，F列会被涂上与颜色代码相同的颜色，如下所示：
- en: '![](../Images/c271a6cf5daa5b7f63d663750f671282.png)'
  id: totrans-55
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c271a6cf5daa5b7f63d663750f671282.png)'
- en: Painting the cells with the color code mentioned in it. Illustration by Author.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 用上述颜色代码填充单元格。图示由作者提供。
- en: If the color code is changed, and the code is run again, it will generate new
    colors in the table. Isn’t that cool?
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 如果更改了颜色代码，并且再次运行代码，它将在表格中生成新的颜色。是不是很酷？
- en: 3\. Working with a dictionary in VBA
  id: totrans-58
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 3. 在VBA中使用字典
- en: In the next step, I wanted to assign the colors in the pivot charts based on
    the custom colors I chose above. For this purpose, I created a dictionary containing
    the product name as keys and the corresponding hexadecimal color codes as values.
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 在下一步中，我希望根据我之前选择的自定义颜色为数据透视图表分配颜色。为此，我创建了一个字典，包含产品名称作为键，十六进制颜色代码作为值。
- en: The pre-requisite for creating a dictionary object in VBA is to activate the
    Microsoft Scripting Runtime beforehand. For this, you can go to Tools -> References
    -> Check the box next to Microsoft Scripting Runtime and click on ok.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 在VBA中创建字典对象的前提条件是首先启用Microsoft Scripting Runtime。为此，您可以进入工具 -> 引用 -> 勾选Microsoft
    Scripting Runtime旁边的框并点击确定。
- en: '![](../Images/1bbd6b917235f828e43963dc49cd8128.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1bbd6b917235f828e43963dc49cd8128.png)'
- en: Pre-requisite for working with a dictionary in Excel VBA. Illustration by Author.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 在Excel VBA中使用字典的前提条件。图示由作者提供。
- en: In the code below, I created a dictionary object called `colorMap`. I looped
    through the Range E2:F10 in the `Admin` sheet. I added the contents in column
    E as keys, and the contents in column F as their corresponding values.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 在下面的代码中，我创建了一个名为`colorMap`的字典对象。我遍历了`Admin`工作表中E2:F10的范围，将E列的内容作为键，F列的内容作为相应的值。
- en: '[PRE2]'
  id: totrans-64
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'In the second for loop above, I looped through each key of the colorMap dictionary
    and printed the keys and values in the immediate window as shown below:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在上面的第二个for循环中，我遍历了colorMap字典的每个键，并在即时窗口中打印了键和值，如下所示：
- en: '![](../Images/a30fc8c8a5eeefcdc4e7761894af41bc.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a30fc8c8a5eeefcdc4e7761894af41bc.png)'
- en: Printing the contents of the colorMap dictionary object. Illustration by Author.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 打印colorMap字典对象的内容。图示由作者提供。
- en: 4\. Managing pivot chart elements using VBA
  id: totrans-68
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 4. 使用VBA管理数据透视图表元素
- en: Based on the learnings from the previous steps, I wanted to go one step further
    and update the pivot chart elements using VBA. In this case, I wanted to set the
    chart title automatically based on a cell value and apply the colors of specific
    fruits and vegetables defined in the `Admin` sheet to the pivot charts.
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 基于之前步骤中的学习，我想更进一步，使用VBA更新数据透视图表元素。在这种情况下，我希望根据单元格的值自动设置图表标题，并将`Admin`工作表中定义的特定水果和蔬菜的颜色应用到数据透视图表中。
- en: In this step, I assigned `Plot1` and `Plot2` sheets as an array called `sheetNames`.
    I declared `chartObj` as ChartObject. Within each sheet, I looped through each
    ChartObject among all ChartObjects.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在这一步中，我将`Plot1`和`Plot2`工作表分配给一个名为`sheetNames`的数组。我声明了`chartObj`为ChartObject。在每个工作表中，我遍历了所有ChartObjects中的每个ChartObject。
- en: '**Note:** [ChartObject](https://learn.microsoft.com/en-us/office/vba/api/excel.chartobject)
    acts as a container for a [Chart](https://learn.microsoft.com/en-us/office/vba/api/excel.chart(object))
    object in VBA that controls the size and appearance of the embedded chart in a
    worksheet. It is a member of the [ChartObjects](https://learn.microsoft.com/en-us/office/vba/api/excel.chartobjects)
    collection. It is important to understand the differences in the methods and properties
    of each of these objects in VBA.'
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: '**注意：** [ChartObject](https://learn.microsoft.com/en-us/office/vba/api/excel.chartobject)是VBA中用于控制嵌入图表在工作表中大小和外观的[Chart](https://learn.microsoft.com/en-us/office/vba/api/excel.chart(object))对象的容器。它是[ChartObjects](https://learn.microsoft.com/en-us/office/vba/api/excel.chartobjects)集合的成员。理解每个对象在VBA中的方法和属性差异是非常重要的。'
- en: After going through each chartObj, I set the title for each chart based on the
    value in cell E1\. Next, I looped through each series in the overall Series Collection
    of the Chart object. I assigned the series name (i.e., name of fruit or vegetable)
    to a variable called `itemName`, and got the corresponding color code from the
    `colorMap` dictionary. Similar to step 2, I got the red, green, and blue components
    of the color code in decimal numbers, and filled the series bar with the RGB colors.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 遍历每个chartObj之后，我根据E1单元格中的值为每个图表设置标题。接下来，我遍历Chart对象的整体Series Collection中的每个系列。我将系列名称（即水果或蔬菜的名称）分配给名为`itemName`的变量，并从`colorMap`字典中获取相应的颜色代码。与步骤2类似，我获取了颜色代码的红、绿、蓝分量的十进制数值，并用RGB颜色填充了系列条形。
- en: '[PRE3]'
  id: totrans-73
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: An illustration of the use of this code is depicted below.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 下面展示了使用此代码的示意图。
- en: '![](../Images/cdfe81230c6b410e79176524e22ccd66.png)'
  id: totrans-75
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cdfe81230c6b410e79176524e22ccd66.png)'
- en: Transformation of pivot chart elements using the VBA code. Illustration by Author.
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 使用VBA代码转换数据透视图表元素。图示由作者提供。
- en: Conclusion
  id: totrans-77
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 结论
- en: 'In this post, I illustrated how one can customize and automate working with
    pivot tables and charts using VBA. I have demonstrated the automation of four
    key tasks: refreshing pivot tables and charts with new datasets; creating color
    tables based on hexadecimal color code; how to work with dictionaries in VBA;
    and managing and updating pivot chart elements using VBA. In the second step,
    I have elaborated the conversion of hexadecimal color codes to the corresponding
    RGB color codes using both Excel and VBA, and used this technique in the subsequent
    steps.'
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我阐述了如何使用VBA自定义和自动化处理数据透视表和图表。我展示了四个关键任务的自动化：用新数据集刷新数据透视表和图表；根据十六进制颜色代码创建颜色表；如何在VBA中使用字典；以及如何使用VBA管理和更新数据透视图表元素。在第二步中，我详细讲解了如何使用Excel和VBA将十六进制颜色代码转换为相应的RGB颜色代码，并在随后的步骤中使用了这一技术。
- en: The code and Excel file for this post are present in this GitHub [repository](https://github.com/hbshrestha/Data_Analytics).
    Thank you for reading!
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的代码和Excel文件可以在这个GitHub [仓库](https://github.com/hbshrestha/Data_Analytics)中找到。感谢您的阅读！
