- en: Essential Considerations for Implementing Machine Learning
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/essential-considerations-for-implementing-machine-learning-36096d6db0b7?source=collection_archive---------5-----------------------#2024-07-13](https://towardsdatascience.com/essential-considerations-for-implementing-machine-learning-36096d6db0b7?source=collection_archive---------5-----------------------#2024-07-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '***Is your use case a viable ML product from a traditional ML and production
    perspective?***'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@conalhenderson?source=post_page---byline--36096d6db0b7--------------------------------)[![Conal
    Henderson](../Images/e10624264efc3861a2384493fa5ee55a.png)](https://medium.com/@conalhenderson?source=post_page---byline--36096d6db0b7--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--36096d6db0b7--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--36096d6db0b7--------------------------------)
    [Conal Henderson](https://medium.com/@conalhenderson?source=post_page---byline--36096d6db0b7--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--36096d6db0b7--------------------------------)
    ·7 min read·Jul 13, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/306c2cdff4e0795e4cdecec056543688.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Tara Winstead](https://www.pexels.com/@tara-winstead/) on [Pixels](https://www.pexels.com/photo/robot-pointing-on-a-wall-8386440/)
  prefs: []
  type: TYPE_NORMAL
- en: Have you ever thought about building a data application, but don’t know the
    requirements for building an ML system? Or, maybe you’re a senior manager at your
    company with ambitions to use ML, but you’re not quite sure if your use case is
    ML-friendly.
  prefs: []
  type: TYPE_NORMAL
- en: Lots of businesses are struggling to keep up with the exponential growth of
    AI/ML technology, with many aware that the implications of not factoring AI/ML
    into their roadmap may be existential.
  prefs: []
  type: TYPE_NORMAL
- en: Companies see the power of Large Language Models (LLM) and think that AI/ML
    is a *’silver bullet’* for their problems. Most businesses are spending money
    on new data teams, computing power, and the latest database technology, but do
    they know if their problem can be solved using ML?
  prefs: []
  type: TYPE_NORMAL
- en: 'I have distilled a checklist to validate whether your ML idea is viable from
    a **traditional ML perspective** including:'
  prefs: []
  type: TYPE_NORMAL
- en: '***1\. Do you have the appropriate features to make a prediction?'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Are there patterns to learn from in your data?
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Do you have enough data for ML to be effective, or can you collect data
    from sources?
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Can your use case be framed as a prediction problem?
  prefs: []
  type: TYPE_NORMAL
- en: 5\. Does the data you wish to predict have associated patterns with the training
    data?***
  prefs: []
  type: TYPE_NORMAL
- en: 'And, from the viewpoint of **productionising ML solutions**:'
  prefs: []
  type: TYPE_NORMAL
- en: '***1\. Is your use case repetitive?'
  prefs: []
  type: TYPE_NORMAL
- en: 2\. Will wrong predictions have drastic consequences for end users?
  prefs: []
  type: TYPE_NORMAL
- en: 3\. Is your use case scalable?
  prefs: []
  type: TYPE_NORMAL
- en: 4\. Is your use case a problem where patterns continually evolve?***
  prefs: []
  type: TYPE_NORMAL
- en: Traditional Considerations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Arthur Samuel first popularised the phrase *’Machine Learning’* in 1959 stating
    it is *”the field of study that gives computers the ability to learn without being
    explicitly programmed”.*
  prefs: []
  type: TYPE_NORMAL
- en: 'A more systematic definition of ML is given by Chip Huyen — an AI/ML leader
    and entrepreneur — in her book *’Designing Machine Learning Systems’* — a must-read
    for anyone interested in production ML:'
  prefs: []
  type: TYPE_NORMAL
- en: “Machine learning is an approach to (1) learn (2) complex patterns from (3)
    existing data and use these patterns to make (4) predictions on (5) unseen data.”
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Chip breaks down the components of ML into five chunks, and expands on them
    by including four modern reasons for ML adoption which we’re going to dissect
    further below.
  prefs: []
  type: TYPE_NORMAL
- en: Opportunity to Learn
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Do you have the appropriate features to make a prediction?*'
  prefs: []
  type: TYPE_NORMAL
- en: Data is fundamental to ML. It provides both the inputs and outputs producing
    a prediction reflecting patterns with the data.
  prefs: []
  type: TYPE_NORMAL
- en: For example, you might be an avid football fan, and you want to [predict Premier
    League player market values based on past performance](https://github.com/chonalchendo/fpl_analysis?tab=readme-ov-file)
  prefs: []
  type: TYPE_NORMAL
- en: The input data would involve player statistics like goals and assists, and the
    associated player value. An ML model can learn the patterns from this input data
    to predict unseen player data.
  prefs: []
  type: TYPE_NORMAL
- en: Complex Patterns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Are there patterns to learn from in your data?*'
  prefs: []
  type: TYPE_NORMAL
- en: ML is at its best when data is complicated, and a human cannot easily identify
    the patterns needed to predict an output.
  prefs: []
  type: TYPE_NORMAL
- en: In the football player market value example, it can be difficult to precisely
    say the value of a footballer given there are many variables that value depends
    on. ML models can take value (output) and performance statistics (input), and
    figure out the valuation automatically.
  prefs: []
  type: TYPE_NORMAL
- en: Data Availability
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Do you have enough data for ML to be effective, or can you collect data from
    sources?*'
  prefs: []
  type: TYPE_NORMAL
- en: There is an ongoing debate as to whether data or better algorithms lead to greater
    predictive power. Although, this debate has quietened lately considering the enormous
    performance leaps taken by LLMs as dataset sizes increase into the hundreds of
    billions, and even trillions of parameters.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7577e384e9910bc8495959a8b175f106.png)'
  prefs: []
  type: TYPE_IMG
- en: 'Data Source: [Wikipedia](https://timelines.issarice.com/wiki/Timeline_of_large_language_models)'
  prefs: []
  type: TYPE_NORMAL
- en: Data needs to be readily available for your ML application to learn from. If
    data is scarce, then ML is likely not the best approach.
  prefs: []
  type: TYPE_NORMAL
- en: In football, data is constantly being generated on player performance by data
    vendors such as [Opta](https://theanalyst.com/eu/2023/07/opta-football-match-centre/),
    [Fbref](https://fbref.com/en/), and [Transfermarkt](https://www.transfermarkt.co.uk/)
    as teams look to apply data-driven decisions to all club aspects from player performance
    to recruitment.
  prefs: []
  type: TYPE_NORMAL
- en: However, obtaining data from third parties like Opta is expensive due to the
    intense data collection process and the high demand for detailed stats to give
    teams an advantage.
  prefs: []
  type: TYPE_NORMAL
- en: Problem Solved by Prediction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Can your use case be framed as a prediction problem?*'
  prefs: []
  type: TYPE_NORMAL
- en: We can frame the football player market value example as a prediction problem
    in several ways.
  prefs: []
  type: TYPE_NORMAL
- en: Two common strands of ML prediction are **regression** and **classification**.
    Regression returns a **continuous** prediction (i.e. a number) in the same scale
    as the input variable (i.e. value). Whereas, classification can return a **binary**
    (1 or 0), **multi-class** (1, 2, 3…n), or **multi-label** (1, 0, 1, 0, 1) prediction.
  prefs: []
  type: TYPE_NORMAL
- en: The player value prediction problem can be framed as a regression and multi-class
    issue. Regression simply returns a number such as predicting £100 million for
    Jude Bellingham’s value based on his season performance.
  prefs: []
  type: TYPE_NORMAL
- en: Conversely, if we address this as a classification problem, we can bin valuations
    into buckets and predict which valuation bucket a player resides in. For instance,
    predictions buckets could be £1m-£10m, £10m-£30m, and £30m+.
  prefs: []
  type: TYPE_NORMAL
- en: Similar Unseen Data
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Does the data you wish to predict have associated patterns with the training
    data?*'
  prefs: []
  type: TYPE_NORMAL
- en: The unseen data that you want to predict must share similar patterns with the
    data used to train the ML model.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if I use player data from 2004 to train an ML model to predict
    player valuations. If the unseen data is from 2020, then predictions will not
    reflect the changes in market valuations across the 16 years from training to
    predicting.
  prefs: []
  type: TYPE_NORMAL
- en: Production Considerations
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ML model development is only a small component of a much larger system needed
    to bring ML to life.
  prefs: []
  type: TYPE_NORMAL
- en: If you build a model in isolation without an understanding of how it will perform
    at scale, when it comes to production you may find that your model is not viable.
  prefs: []
  type: TYPE_NORMAL
- en: It’s important that your ML use case can check production-level criteria.
  prefs: []
  type: TYPE_NORMAL
- en: Repetitive Task
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Is your use case repetitive?*'
  prefs: []
  type: TYPE_NORMAL
- en: It takes repetition of patterns for ML to learn from. Models need to be fed
    a large number of samples to adequately learn patterns meaning if your prediction
    target occurs frequently you will likely have good data from which ML can learn
    the patterns.
  prefs: []
  type: TYPE_NORMAL
- en: For example, if your use case involves trying to predict something that occurs
    rarely, like an uncommon medical condition, then there’s likely not enough signal
    in your data for an ML model to pick up on, leading to a poor prediction.
  prefs: []
  type: TYPE_NORMAL
- en: This problem is referred to as a **class imbalance**, and strategies such as
    over-sampling and under-sampling have been developed to overcome this problem.
  prefs: []
  type: TYPE_NORMAL
- en: Travis Tang’s article does a good job of explaining class imbalance and remedies
    for it in more detail [here](/class-imbalance-strategies-a-visual-guide-with-code-8bc8fae71e1a).
  prefs: []
  type: TYPE_NORMAL
- en: Small Consequence for Wrong Prediction
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Will wrong predictions have drastic consequences for end users?*'
  prefs: []
  type: TYPE_NORMAL
- en: ML models will struggle to predict with 100% accuracy every time which means
    when your model makes a false prediction, does it have a negative impact?
  prefs: []
  type: TYPE_NORMAL
- en: This is a common problem experienced in the medical sector where false-positive
    and false-negative rates are a concern.
  prefs: []
  type: TYPE_NORMAL
- en: A false-positive prediction indicates the presence of a condition when it *does
    not* exist. This can lead to inefficient allocation of resources and undue stress
    on patients.
  prefs: []
  type: TYPE_NORMAL
- en: Perhaps even worse, a false-negative does not indicate the presence of a condition
    when it *does* exist. This can lead to patient misdiagnosis and delay of treatment
    which may lead to medical complications, and increased long-run costs to treat
    more severe conditions.
  prefs: []
  type: TYPE_NORMAL
- en: Scale
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Is your use case scalable?*'
  prefs: []
  type: TYPE_NORMAL
- en: Production costs can be incredibly expensive, I found this myself when I hosted
    an [XGBRegressor](https://xgboost.readthedocs.io/en/stable/python/python_api.html#module-xgboost.sklearn)
    model on Google’s [Vertex AI](https://cloud.google.com/vertex-ai?hl=en) costing
    me £11 for 2 days! Admittedly, I should not have left it running, but imagine
    the costs for large-scale applications.
  prefs: []
  type: TYPE_NORMAL
- en: A well-known example of a scalable ML solution is Amazon’s product recommendation
    system which [generates 35% of the company’s revenue](https://www.mckinsey.com/industries/retail/our-insights/how-retailers-can-keep-up-with-consumers).
  prefs: []
  type: TYPE_NORMAL
- en: Although it’s an extreme example, this system leverages and justifies the cost
    of computing power, data, infrastructure, and talented workers, illustrating the
    fundamentals of building a scalable ML solution that generates value.
  prefs: []
  type: TYPE_NORMAL
- en: Evolving Patterns
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*Is your use case a problem where patterns continually evolve?*'
  prefs: []
  type: TYPE_NORMAL
- en: ML is flexible enough to fit new patterns easily and prevents the need to endlessly
    hard code new solutions every time the data changes.
  prefs: []
  type: TYPE_NORMAL
- en: Football player values are constantly changing as tactics evolve leading to
    changes in what teams want from players meaning features will change in their
    weighting on predicting values.
  prefs: []
  type: TYPE_NORMAL
- en: To monitor changes, tools like [Mlflow](https://mlflow.org/) and [Weights &
    Biases](https://wandb.ai/site) help track and log the performance of your models,
    and update them to match the evolving data patterns.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Deciding to use ML for your use case should consider much more than just using
    some historical data you’ve got, slapping a fancy algorithm on it and hoping for
    the best.
  prefs: []
  type: TYPE_NORMAL
- en: It requires thinking about complex patterns if you have data available now and
    in the future, as well as production concerns like whether the cost of a wrong
    prediction is cheap? Is my use case scalable? And, are the patterns constantly
    evolving?
  prefs: []
  type: TYPE_NORMAL
- en: There are reasons you should NOT use ML, including ethics, cost-effectiveness,
    and whether a simpler solution will suffice, but we can leave that for another
    time.
  prefs: []
  type: TYPE_NORMAL
- en: '**That’s all for now!**'
  prefs: []
  type: TYPE_NORMAL
- en: Thanks for reading! Let me know if I’ve missed anything, and I would love to
    hear from people about their ML use cases!
  prefs: []
  type: TYPE_NORMAL
- en: Connect with me on [LinkedIn](https://www.linkedin.com/in/conal-henderson-4128631b6/)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: 'Huyen, C. (2022). Designing Machine Learning Systems. Sebastopol, CA: O’Reilly'
  prefs: []
  type: TYPE_NORMAL
- en: 'Geron, A. (2019). Hands-on machine learning with Scikit-Learn, Keras and TensorFlow:
    concepts, tools, and techniques to build intelligent systems (2nd ed.). O’Reilly.'
  prefs: []
  type: TYPE_NORMAL
