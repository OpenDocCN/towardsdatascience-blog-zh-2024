- en: Create an AI-Driven Movie Quiz with Gemini LLM, Python, FastAPI, Pydantic, RAG
    and more
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 创建一个 AI 驱动的电影问答游戏，使用 Gemini LLM、Python、FastAPI、Pydantic、RAG 等
- en: 原文：[https://towardsdatascience.com/create-an-ai-driven-movie-quiz-with-gemini-llm-python-fastapi-pydantic-rag-and-more-e15322be4f66?source=collection_archive---------0-----------------------#2024-04-18](https://towardsdatascience.com/create-an-ai-driven-movie-quiz-with-gemini-llm-python-fastapi-pydantic-rag-and-more-e15322be4f66?source=collection_archive---------0-----------------------#2024-04-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/create-an-ai-driven-movie-quiz-with-gemini-llm-python-fastapi-pydantic-rag-and-more-e15322be4f66?source=collection_archive---------0-----------------------#2024-04-18](https://towardsdatascience.com/create-an-ai-driven-movie-quiz-with-gemini-llm-python-fastapi-pydantic-rag-and-more-e15322be4f66?source=collection_archive---------0-----------------------#2024-04-18)
- en: Discover the basics of using Gemini with Python via VertexAI, creating APIs
    with FastAPI, data validation with Pydantic and the fundamentals of Retrieval-Augmented
    Generation (RAG)
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解如何通过 VertexAI 使用 Gemini 与 Python，使用 FastAPI 创建 API，使用 Pydantic 进行数据验证，以及检索增强生成（RAG）的基本原理
- en: '[](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)[![Volker
    Janz](../Images/0825160d6d521f4152948f0187cf354b.png)](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)
    [Volker Janz](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)[![Volker
    Janz](../Images/0825160d6d521f4152948f0187cf354b.png)](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)
    [Volker Janz](https://vojay.medium.com/?source=post_page---byline--e15322be4f66--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)
    ·21 min read·Apr 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--e15322be4f66--------------------------------)
    ·21分钟阅读·2024年4月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/50e962ece900e09fb6fcb997adafede4.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/50e962ece900e09fb6fcb997adafede4.png)'
- en: Photo by [Kenny Eliason](https://unsplash.com/@neonbrand?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Kenny Eliason](https://unsplash.com/@neonbrand?utm_source=medium&utm_medium=referral)
    提供，来源于 [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Within this article, I share some of the basics to create a LLM-driven web-application,
    using various technologies, such as: Python, [FastAPI](https://fastapi.tiangolo.com/),
    [Pydantic](https://docs.pydantic.dev/latest/), [VertexAI](https://cloud.google.com/vertex-ai)
    and more.'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我将分享一些创建基于 LLM 的 Web 应用程序的基础知识，使用的技术包括：Python、[FastAPI](https://fastapi.tiangolo.com/)、[Pydantic](https://docs.pydantic.dev/latest/)、[VertexAI](https://cloud.google.com/vertex-ai)
    等等。
- en: You will learn how to create such a project from the very beginning and get
    an overview of the underlying concepts, including **Retrieval-Augmented Generation**
    (RAG).
  id: totrans-9
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 你将学习如何从头开始创建这样一个项目，并了解其基本概念，包括**检索增强生成**（RAG）。
- en: '*Disclaimer: I am using data from The Movie Database within this project. The
    API is free to use for non-commercial purposes and complies with the Digital Millennium
    Copyright Act (DMCA). For further information about TMDB data usage, please* [*read
    the official FAQ*](https://developer.themoviedb.org/docs/faq)*.*'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '*免责声明：在本项目中，我使用了来自电影数据库的数据。该 API 可免费用于非商业用途，并符合《数字千年版权法案》（DMCA）。有关 TMDB 数据使用的更多信息，请*
    [*阅读官方 FAQ*](https://developer.themoviedb.org/docs/faq)*。*'
- en: Table of contents
  id: totrans-11
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 目录
- en: – [Inspiration](#bf8e)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: – [灵感来源](#bf8e)
- en: – [System Architecture](#a588)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: – [系统架构](#a588)
- en: – [Understanding Retrieval-Augmented Generation (RAG)](#d0b3)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: – [理解检索增强生成（RAG）](#d0b3)
- en: – [Python projects with Poetry](#4cfd)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: – [使用 Poetry 进行 Python 项目管理](#4cfd)
- en: – [Create the API with FastAPI](#ca13)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: – [使用 FastAPI 创建 API](#ca13)
- en: – [Data validation and quality with Pydantic](#103f)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: – [使用 Pydantic 进行数据验证和质量控制](#103f)
- en: – [TMDB client with httpx](#fe62)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: – [使用 httpx 的 TMDB 客户端](#fe62)
- en: – [Gemini LLM client with VertexAI](#040c)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: – [Gemini LLM 客户端与 VertexAI](#040c)
- en: – [Modular prompt generator with Jinja](#2bf6)
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: – [使用 Jinja 的模块化提示生成器](#2bf6)
- en: – [Frontend](#f4be)
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: – [前端](#f4be)
- en: – [API examples](#809a)
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: – [API 示例](#809a)
- en: – [Conclusion](#165c)
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: – [结论](#165c)
- en: The best way to share this knowledge is through a practical example. Hence,
    I’ll use my project **Gemini Movie Detectives** to cover the various aspects.
    The project was created as part of the [Google AI Hackathon 2024](https://googleai.devpost.com/),
    which is still running while I am writing this.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 分享这些知识的最佳方式是通过一个实际的例子。因此，我将使用我的项目**Gemini电影侦探**来涵盖各个方面。该项目是作为[Google AI Hackathon
    2024](https://googleai.devpost.com/)的一部分创建的，而我写这篇文章时，该比赛仍在进行中。
- en: '![](../Images/3d44844866ab4bb81b2e6b5acaf52bf1.png)'
  id: totrans-25
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3d44844866ab4bb81b2e6b5acaf52bf1.png)'
- en: Gemini Movie Detectives (by author)
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: Gemini电影侦探（作者）
- en: Gemini Movie Detectives is a project aimed at leveraging the power of the Gemini
    Pro model via VertexAI to create an engaging quiz game using the latest movie
    data from [The Movie Database (TMDB)](https://www.themoviedb.org/).
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: Gemini电影侦探是一个旨在利用Gemini Pro模型的强大功能通过VertexAI创建一个引人入胜的问答游戏，使用来自[电影数据库（TMDB）](https://www.themoviedb.org/)的最新电影数据。
- en: 'Part of the project was also to make it deployable with Docker and to create
    a live version. Try it yourself: [movie-detectives.com](https://movie-detectives.com/).
    Keep in mind that this is a simple prototype, so there might be unexpected issues.
    Also, I had to add some limitations in order to control costs that might be generated
    by using GCP and VertexAI.'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 项目的一部分还是使其可以使用Docker部署并创建一个在线版本。自己试试吧：[movie-detectives.com](https://movie-detectives.com/)。请记住，这只是一个简单的原型，所以可能会出现意外问题。此外，为了控制使用GCP和VertexAI可能产生的成本，我不得不添加一些限制。
- en: '![](../Images/f949342e71bc028936d5836525e42f0d.png)'
  id: totrans-29
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f949342e71bc028936d5836525e42f0d.png)'
- en: Gemini Movie Detectives (by author)
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: Gemini电影侦探（作者）
- en: 'The project is **fully open-source** and is split into two separate repositories:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 该项目是**完全开源**的，分为两个独立的仓库：
- en: '**🚀 Github repository for backend**: [https://github.com/vojay-dev/gemini-movie-detectives-api](https://github.com/vojay-dev/gemini-movie-detectives-api)'
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**🚀 后端的Github仓库**: [https://github.com/vojay-dev/gemini-movie-detectives-api](https://github.com/vojay-dev/gemini-movie-detectives-api)'
- en: '**🖥️ Github repository for frontend**: [https://github.com/vojay-dev/gemini-movie-detectives-ui](https://github.com/vojay-dev/gemini-movie-detectives-ui)'
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**🖥️ 前端的Github仓库**: [https://github.com/vojay-dev/gemini-movie-detectives-ui](https://github.com/vojay-dev/gemini-movie-detectives-ui)'
- en: The focus of the article is the backend project and underlying concepts. It
    will therefore only briefly explain the frontend and its components.
  id: totrans-34
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的重点是后端项目和基本概念。因此，它将简要解释前端及其组件。
- en: 'In the following video, I also give an overview over the project and its components:'
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在以下视频中，我还将概述该项目及其组件：
- en: Inspiration
  id: totrans-36
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 灵感
- en: 'Growing up as a passionate gamer and now working as a Data Engineer, I’ve always
    been drawn to the intersection of gaming and data. With this project, I combined
    two of my greatest passions: gaming and data. Back in the 90’ I always enjoyed
    the video game series You Don’t Know Jack, a delightful blend of trivia and comedy
    that not only entertained but also taught me a thing or two. Generally, the usage
    of games for educational purposes is another concept that fascinates me.'
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个热衷于游戏的玩家，现在作为数据工程师工作，我一直被游戏和数据的交汇所吸引。通过这个项目，我结合了我最大的两个热情：游戏和数据。在90年代，我总是喜欢《你不知道杰克》系列视频游戏，这是一个有趣的知识问答和喜剧融合，不仅娱乐了我，还教会了我一些东西。通常，我对将游戏用于教育目的的概念也很着迷。
- en: In 2023, I organized a workshop to teach kids and young adults game development.
    They learned about mathematical concepts behind collision detection, yet they
    had fun as everything was framed in the context of gaming. It was eye-opening
    that gaming is not only a huge market but also holds a great potential for knowledge
    sharing.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 2023年，我组织了一个研讨会，教孩子和年轻人游戏开发。他们了解了碰撞检测背后的数学概念，但他们玩得很开心，因为一切都是在游戏的背景下展开的。令人大开眼界的是，游戏不仅是一个巨大的市场，而且还具有巨大的知识分享潜力。
- en: With this project, called Movie Detectives, I aim to showcase the magic of Gemini,
    and AI in general, in crafting engaging trivia and educational games, but also
    how game design can profit from these technologies in general.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个名为电影侦探的项目，我旨在展示Gemini以及AI在打造引人入胜的知识问答和教育游戏方面的魔力，以及游戏设计如何从这些技术中受益。
- en: By feeding the Gemini LLM with accurate and up-to-date movie metadata, I could
    ensure the accuracy of the questions from Gemini. An important aspect, because
    without this Retrieval-Augmented Generation (RAG) methodology to enrich queries
    with real-time metadata, there’s a risk of propagating misinformation — a typical
    pitfall when using AI for this purpose.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 通过将准确且最新的电影元数据提供给 Gemini LLM，我可以确保来自 Gemini 的问题准确无误。这一点非常重要，因为如果没有这种基于实时元数据的检索增强生成（RAG）方法来丰富查询，就有可能传播错误信息——这是使用
    AI 进行此类任务时常见的陷阱。
- en: Another game-changer lies in the modular prompt generation framework I’ve crafted
    using Jinja templates. It’s like having a Swiss Army knife for game design — effortlessly
    swapping show master personalities to tailor the game experience. And with the
    language module, translating the quiz into multiple languages is a breeze, eliminating
    the need for costly translation processes.
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 另一个改变游戏规则的地方在于我使用 Jinja 模板创建的模块化提示生成框架。这就像拥有一把瑞士军刀，用于游戏设计——轻松切换主持人个性以定制游戏体验。通过语言模块，翻译问答成多种语言变得轻松，完全不需要昂贵的翻译过程。
- en: Taking that on a business perspective, it can be used to reach a much broader
    audience of customers, without the need of expensive translation processes.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 从商业角度来看，它可以帮助接触到更广泛的客户群，无需昂贵的翻译过程。
- en: From a business standpoint, this modularization opens doors to a wider customer
    base, transcending language barriers without breaking a sweat. And personally,
    I’ve experienced firsthand the transformative power of these modules. Switching
    from the default quiz master to the dad-joke-quiz-master was a riot — a nostalgic
    nod to the heyday of You Don’t Know Jack, and a testament to the versatility of
    this project.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 从商业角度来看，这种模块化为更广泛的客户群打开了大门，轻松跨越语言障碍。此外，个人来说，我亲身体验了这些模块的变革力量。从默认的问答主持人切换到“老爸笑话问答主持人”简直太有趣了——这不仅是对《你不知道杰克》黄金时代的怀念，也是这个项目多功能性的见证。
- en: '![](../Images/44ed0a40a77f059c48e616639864e51e.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44ed0a40a77f059c48e616639864e51e.png)'
- en: 'Movie Detectives — Example: Santa Claus personality (by author)'
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 电影侦探——示例：圣诞老人性格（作者提供）
- en: System Architecture
  id: totrans-46
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 系统架构
- en: Before we jump into details, let’s get an overview of how the application was
    built.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 在深入细节之前，让我们先了解一下应用是如何构建的。
- en: '**Tech Stack: 🚀 Backend**'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: '**技术栈：🚀 后端**'
- en: Python 3.12 + [FastAPI](https://fastapi.tiangolo.com/) API development
  id: totrans-49
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: Python 3.12 + [FastAPI](https://fastapi.tiangolo.com/) API 开发
- en: '[httpx](https://www.python-httpx.org/) for TMDB integration'
  id: totrans-50
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[httpx](https://www.python-httpx.org/) 用于 TMDB 集成'
- en: '[Jinja](https://jinja.palletsprojects.com/) templating for modular prompt generation'
  id: totrans-51
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Jinja](https://jinja.palletsprojects.com/) 模板引擎用于模块化提示生成'
- en: '[Pydantic](https://docs.pydantic.dev/latest/) for data modeling and validation'
  id: totrans-52
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Pydantic](https://docs.pydantic.dev/latest/) 用于数据建模和验证'
- en: '[Poetry](https://python-poetry.org/) for dependency management'
  id: totrans-53
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Poetry](https://python-poetry.org/) 用于依赖管理'
- en: '[Docker](https://www.docker.com/) for deployment'
  id: totrans-54
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Docker](https://www.docker.com/) 用于部署'
- en: '[TMDB API](https://www.themoviedb.org/) for movie data'
  id: totrans-55
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[TMDB API](https://www.themoviedb.org/) 用于电影数据'
- en: '[VertexAI](https://cloud.google.com/vertex-ai) and [Gemini](https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/gemini)
    for generating quiz questions and evaluating answers'
  id: totrans-56
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[VertexAI](https://cloud.google.com/vertex-ai) 和 [Gemini](https://cloud.google.com/vertex-ai/docs/generative-ai/model-reference/gemini)
    用于生成问答和评估答案'
- en: '[Ruff](https://docs.astral.sh/ruff/) as linter and code formatter together
    with [pre-commit](https://pre-commit.com/) hooks'
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Ruff](https://docs.astral.sh/ruff/) 作为代码检查器和代码格式化工具，结合 [pre-commit](https://pre-commit.com/)
    钩子'
- en: Github Actions to automatically run tests and linter on every push
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用 Github Actions 在每次推送时自动运行测试和代码检查
- en: '**Tech Stack: 🖥️ Frontend**'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: '**技术栈：🖥️ 前端**'
- en: '[VueJS](https://vuejs.org/) 3.4 as the frontend framework'
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[VueJS](https://vuejs.org/) 3.4 作为前端框架'
- en: '[Vite](https://vitejs.dev/) for frontend tooling'
  id: totrans-61
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[Vite](https://vitejs.dev/) 用于前端工具链'
- en: Essentially, the application fetches up-to-date movie metadata from an external
    API (TMDB), constructs a prompt based on different modules (personality, language,
    …), enriches this prompt with the metadata and that way, uses Gemini to initiate
    a movie quiz in which the user has to guess the correct title.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，应用从外部 API（TMDB）获取最新的电影元数据，根据不同的模块（如个性、语言等）构建提示，利用这些元数据丰富提示，从而使用 Gemini 发起一个电影问答，用户需要猜出正确的电影名称。
- en: The backend infrastructure is built with FastAPI and Python, employing the Retrieval-Augmented
    Generation (RAG) methodology to enrich queries with real-time metadata. Utilizing
    Jinja templating, the backend modularizes prompt generation into base, personality,
    and data enhancement templates, enabling the generation of accurate and engaging
    quiz questions.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 后端基础设施是通过 FastAPI 和 Python 构建的，采用检索增强生成（RAG）方法，通过实时元数据丰富查询。利用 Jinja 模板，后端将提示生成模块化为基础、个性和数据增强模板，从而能够生成准确且富有吸引力的测验问题。
- en: The frontend is powered by Vue 3 and Vite, supported by daisyUI and Tailwind
    CSS for efficient frontend development. Together, these tools provide users with
    a sleek and modern interface for seamless interaction with the backend.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 前端由 Vue 3 和 Vite 提供支持，并由 daisyUI 和 Tailwind CSS 支持，便于高效的前端开发。这些工具共同为用户提供了一个现代化且流畅的界面，以便与后端进行无缝互动。
- en: In Movie Detectives, quiz answers are interpreted by the Language Model (LLM)
    once again, allowing for dynamic scoring and personalized responses. This showcases
    the potential of integrating LLM with RAG in game design and development, paving
    the way for truly individualized gaming experiences. Furthermore, it demonstrates
    the potential for creating engaging quiz trivia or educational games by involving
    LLM. Adding and changing personalities or languages is as easy as adding more
    Jinja template modules. With very little effort, this can change the full game
    experience, reducing the effort for developers.
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 在《电影侦探》中，测验答案会再次由语言模型（LLM）进行解释，从而实现动态评分和个性化响应。这展示了将 LLM 与 RAG 集成在游戏设计和开发中的潜力，为真正个性化的游戏体验铺平了道路。此外，它还展示了通过引入
    LLM 创建引人入胜的问答或教育类游戏的潜力。添加和更改个性或语言就像添加更多 Jinja 模板模块一样简单。通过非常少的工作，就可以改变整个游戏体验，减少开发人员的工作量。
- en: '![](../Images/b33ff35fa8348020b98001d766fc0b0f.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b33ff35fa8348020b98001d766fc0b0f.png)'
- en: System Overview (by author)
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 系统概述（作者提供）
- en: As can be seen in the overview, Retrieval-Augmented Generation (RAG) is one
    of the essential ideas of the backend. Let’s have a closer look at this particular
    paradigm.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 正如概述所示，检索增强生成（RAG）是后端的核心思想之一。让我们更仔细地看看这一特定范式。
- en: Understanding Retrieval-Augmented Generation (RAG)
  id: totrans-69
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 理解检索增强生成（RAG）
- en: In the realm of Large Language Models (LLM) and AI, one paradigm becoming more
    and more popular is Retrieval-Augmented Generation (RAG). But what does RAG entail,
    and how does it influence the landscape of AI development?
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在大型语言模型（LLM）和人工智能领域，越来越流行的一种范式是检索增强生成（RAG）。那么 RAG 包括了什么内容，它又是如何影响人工智能发展的格局的呢？
- en: At its essence, RAG enhances LLM systems by incorporating external data to enrich
    their predictions. Which means, you pass relevant context to the LLM as an additional
    part of the prompt, but how do you find relevant context? Usually, this data can
    be automatically retrieved from a database with vector search or dedicated vector
    databases. Vector databases are especially useful, since they store data in a
    way, so that it can be queried for similar data quickly. The LLM then generates
    the output based on both, the query and the retrieved documents.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，RAG 通过结合外部数据来增强 LLM 系统，从而丰富它们的预测。这意味着，你将相关的上下文作为提示的附加部分传递给 LLM，但如何找到相关的上下文呢？通常，这些数据可以通过向量搜索或专用的向量数据库从数据库中自动检索。向量数据库尤其有用，因为它们以一种方式存储数据，使得可以快速查询相似数据。然后，LLM
    会基于查询和检索到的文档生成输出。
- en: 'Picture this: you have an LLM capable of generating text based on a given prompt.
    RAG takes this a step further by infusing additional context from external sources,
    like up-to-date movie data, to enhance the relevance and accuracy of the generated
    text.'
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下：你有一个能够根据给定提示生成文本的 LLM。RAG 更进一步，通过注入来自外部来源的额外上下文，例如最新的电影数据，来增强生成文本的相关性和准确性。
- en: 'Let’s break down the key components of RAG:'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来拆解一下 RAG 的关键组成部分：
- en: '**LLMs**: LLMs serve as the backbone of RAG workflows. These models, trained
    on vast amounts of text data, possess the ability to understand and generate human-like
    text.'
  id: totrans-74
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**LLMs**：LLM 是 RAG 工作流的核心。这些模型在大量文本数据上进行训练，具备理解和生成类人文本的能力。'
- en: '**Vector Indexes for contextual enrichment**: A crucial aspect of RAG is the
    use of vector indexes, which store embeddings of text data in a format understandable
    by LLMs. These indexes allow for efficient retrieval of relevant information during
    the generation process. In the context of the project this could be a database
    of movie metadata.'
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**用于上下文增强的向量索引**：RAG 的一个关键方面是使用向量索引，这些索引以 LLM 可理解的格式存储文本数据的嵌入。这些索引允许在生成过程中高效地检索相关信息。在本项目的上下文中，这可以是一个电影元数据的数据库。'
- en: '**Retrieval process**: RAG involves retrieving pertinent documents or information
    based on the given context or prompt. This retrieved data acts as the additional
    input for the LLM, supplementing its understanding and enhancing the quality of
    generated responses. This could be getting all relevant information known and
    connected to a specific movie.'
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**检索过程**：RAG 涉及根据给定的上下文或提示检索相关的文档或信息。这些检索到的数据作为 LLM 的额外输入，补充其理解并提升生成回应的质量。这可能是获取所有与特定电影相关的已知信息。'
- en: '**Generative Output**: With the combined knowledge from both the LLM and the
    retrieved context, the system generates text that is not only coherent but also
    contextually relevant, thanks to the augmented data.'
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**生成输出**：通过将 LLM 和检索到的上下文的知识结合，系统生成的文本不仅连贯，而且在上下文上相关，这得益于增强的数据。'
- en: '![](../Images/256066ba8bd31d76d97009fb106ed7d4.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/256066ba8bd31d76d97009fb106ed7d4.png)'
- en: RAG architecture (by author)
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: RAG 架构（作者提供）
- en: While in the Gemini Movie Detectives project, the prompt is enhanced with external
    API data from The Movie Database, RAG typically involves the use of vector indexes
    to streamline this process. It is using much more complex documents as well as
    a much higher amount of data for enhancement. Thus, these indexes act like signposts,
    guiding the system to relevant external sources quickly.
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 而在 Gemini 电影侦探项目中，提示通过来自电影数据库（The Movie Database）的外部 API 数据进行了增强，RAG 通常涉及使用向量索引来简化这个过程。它使用更复杂的文档以及更大量的数据来进行增强。因此，这些索引像路标一样，引导系统迅速找到相关的外部数据源。
- en: In this project, it is therefore a mini version of RAG but showing the basic
    idea at least, demonstrating the power of external data to augment LLM capabilities.
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 在这个项目中，实际上是 RAG 的一个迷你版，但至少展示了基本的思路，展示了外部数据如何增强 LLM 的能力。
- en: In more general terms, RAG is a very important concept, especially when crafting
    trivia quizzes or educational games using LLMs like Gemini. This concept can avoid
    the risk of false positives, asking wrong questions, or misinterpreting answers
    from the users.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 更一般来说，RAG 是一个非常重要的概念，特别是在使用像 Gemini 这样的 LLM 构建趣味问答或教育游戏时。这个概念可以避免出现误报、提问错误的问题或误解用户的答案。
- en: 'Here are some open-source projects that might be helpful when approaching RAG
    in one of your projects:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是一些开源项目，在你处理项目中的 RAG 时可能会有帮助：
- en: '[**txtai**](https://github.com/neuml/txtai): All-in-one open-source embeddings
    database for semantic search, LLM orchestration and language model workflows.'
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**txtai**](https://github.com/neuml/txtai): 一体化开源嵌入数据库，用于语义搜索、LLM 协同和语言模型工作流。'
- en: '[**LangChain**](https://python.langchain.com/): LangChain is a framework for
    developing applications powered by large language models (LLMs).'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**LangChain**](https://python.langchain.com/): LangChain 是一个用于开发由大型语言模型（LLMs）驱动的应用程序的框架。'
- en: '[**Qdrant**](https://github.com/qdrant/qdrant): Vector Search Engine for the
    next generation of AI applications.'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**Qdrant**](https://github.com/qdrant/qdrant): 面向下一代人工智能应用的向量搜索引擎。'
- en: '[**Weaviate**](https://github.com/weaviate/weaviate): Weaviate is a cloud-native,
    open source vector database that is robust, fast, and scalable.'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[**Weaviate**](https://github.com/weaviate/weaviate): Weaviate 是一个云原生、开源的向量数据库，具有强大的性能、快速的处理速度和可扩展性。'
- en: Of course, with the potential value of this approach for LLM-based applications,
    there are many more open- and close-source alternatives, but with these, you should
    be able to get your research on the topic started.
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，考虑到这种方法在 LLM 应用中的潜在价值，还有更多的开源和闭源替代方案，但通过这些，你应该能开始在该主题上的研究。
- en: Python projects with Poetry
  id: totrans-89
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Poetry 的 Python 项目
- en: Now that the main concepts are clear, let’s have a closer look how the project
    was created and how dependencies are managed in general.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 现在主要概念已经清晰，我们来仔细看看这个项目是如何创建的，以及依赖关系是如何管理的。
- en: 'The three main tasks Poetry can help you with are: Build, Publish and Track.
    The idea is to have a deterministic way to manage dependencies, to share your
    project and to track dependency states.'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry可以帮助你完成的三个主要任务是：构建、发布和跟踪。其理念是以一种确定性的方式管理依赖关系，分享你的项目，并跟踪依赖状态。
- en: '![](../Images/989ff4a10f32ee19b1a7a4fcd1be4171.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/989ff4a10f32ee19b1a7a4fcd1be4171.png)'
- en: Photo by [Kat von Wood](https://unsplash.com/@kat_von_wood?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Kat von Wood](https://unsplash.com/@kat_von_wood?utm_source=medium&utm_medium=referral)
    于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Poetry also handles the creation of virtual environments for you. Per default,
    those are in a centralized folder within your system. However, if you prefer to
    have the virtual environment of project in the project folder, like I do, it is
    a simple config change:'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: Poetry还会为你处理虚拟环境的创建。默认情况下，它们位于你系统中的一个集中文件夹内。不过，如果你更喜欢将项目的虚拟环境放在项目文件夹中，像我一样，只需进行简单的配置更改：
- en: '[PRE0]'
  id: totrans-95
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'With `poetry new` you can then create a new Python project. It will create
    a virtual environment linking you systems default Python. If you combine this
    with [pyenv](https://github.com/pyenv/pyenv), you get a flexible way to create
    projects using specific versions. Alternatively, you can also tell Poetry directly
    which Python version to use: `poetry env use /full/path/to/python`.'
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 使用`poetry new`，你可以创建一个新的Python项目。它会创建一个虚拟环境，并链接到系统默认的Python。如果你将此与[pyenv](https://github.com/pyenv/pyenv)结合使用，你可以灵活地使用特定版本创建项目。或者，你也可以直接告诉Poetry使用哪个Python版本：`poetry
    env use /full/path/to/python`。
- en: Once you have a new project, you can use `poetry add` to add dependencies to
    it.
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 一旦你有了一个新项目，可以使用`poetry add`命令将依赖项添加到其中。
- en: 'With this, I created the project for Gemini Movie Detectives:'
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这个，我为“双子座电影侦探”创建了项目：
- en: '[PRE1]'
  id: totrans-99
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 'The metadata about your projects, including the dependencies with the respective
    versions, are stored in the `poetry.toml` and `poetry.lock` files. I added more
    dependencies later, which resulted in the following `poetry.toml` for the project:'
  id: totrans-100
  prefs: []
  type: TYPE_NORMAL
  zh: 关于你的项目的元数据，包括各个依赖项及其版本，都会存储在`poetry.toml`和`poetry.lock`文件中。我稍后添加了更多的依赖项，导致项目的`poetry.toml`文件如下所示：
- en: '[PRE2]'
  id: totrans-101
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: Create the API with FastAPI
  id: totrans-102
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用FastAPI创建API
- en: FastAPI is a Python framework that allows for rapid API development. Built on
    open standards, it offers a seamless experience without new syntax to learn. With
    automatic documentation generation, robust validation, and integrated security,
    FastAPI streamlines development while ensuring great performance.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: FastAPI是一个Python框架，可以快速开发API。它建立在开放标准之上，提供无缝的体验，无需学习新的语法。通过自动生成文档、强大的验证功能和集成的安全性，FastAPI简化了开发过程，同时确保了卓越的性能。
- en: '![](../Images/65d620d2f1c52e0d1241ecb8e0fbd0b8.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/65d620d2f1c52e0d1241ecb8e0fbd0b8.png)'
- en: Photo by [Florian Steciuk](https://unsplash.com/@flo_stk?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来源：[Florian Steciuk](https://unsplash.com/@flo_stk?utm_source=medium&utm_medium=referral)
    于[Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
- en: 'Implementing the API for the Gemini Movie Detectives projects, I simply started
    from a Hello World application and extended it from there. Here is how to get
    started:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: 实现“双子座电影侦探”项目的API时，我从一个Hello World应用程序开始，并从那里扩展。下面是如何开始的：
- en: '[PRE3]'
  id: totrans-107
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: 'Assuming you also keep the virtual environment within the project folder as
    `.venv/` and use uvicorn, this is how to start the API with the reload feature
    enabled, in order to test code changes without the need of a restart:'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你也将虚拟环境保存在项目文件夹中，路径为`.venv/`，并使用uvicorn，以下是如何启动API并启用自动重载功能，以便在不需要重启的情况下测试代码更改：
- en: '[PRE4]'
  id: totrans-109
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 'If you have not yet installed [jq](https://jqlang.github.io/jq/), I highly
    recommend doing it now. I might cover this wonderful JSON Swiss Army knife in
    a future article. This is how the response looks like:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你还没有安装[jq](https://jqlang.github.io/jq/)，我强烈推荐你现在安装。我可能会在未来的文章中介绍这个神奇的JSON瑞士军刀。以下是响应的样子：
- en: '![](../Images/154da389d897c5178844dd5d3a349398.png)'
  id: totrans-111
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/154da389d897c5178844dd5d3a349398.png)'
- en: Hello FastAPI (by author)
  id: totrans-112
  prefs: []
  type: TYPE_NORMAL
  zh: Hello FastAPI（作者）
- en: 'From here, you can develop your API endpoints as needed. This is how the API
    endpoint implementation to start a movie quiz in Gemini Movie Detectives looks
    like for example:'
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 从这里开始，你可以根据需要开发API端点。例如，以下是实现启动电影问答的API端点的样子：
- en: '[PRE5]'
  id: totrans-114
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 'Within this code, you can see already three of the main components of the backend:'
  id: totrans-115
  prefs: []
  type: TYPE_NORMAL
  zh: 在这段代码中，你可以看到后端的三个主要组件：
- en: '`tmdb_client`: A client I implemented using `httpx` to fetch data from The
    Movie Database (TMDB).'
  id: totrans-116
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tmdb_client`：我使用 `httpx` 实现的客户端，用于从电影数据库（TMDB）获取数据。'
- en: '`prompt_generator`: A class that helps to generate modular prompts based on
    Jinja templates.'
  id: totrans-117
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`prompt_generator`：一个帮助基于 Jinja 模板生成模块化提示的类。'
- en: '`gemini_client`: A client to interact with the Gemini LLM via VertexAI in Google
    Cloud.'
  id: totrans-118
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`gemini_client`：一个通过 Google Cloud 的 VertexAI 与 Gemini LLM 交互的客户端。'
- en: We will look at these components in detail later, but first some more helpful
    insights regarding the usage of FastAPI.
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 我们稍后会详细讨论这些组件，但首先是一些关于 FastAPI 使用的有用见解。
- en: 'FastAPI makes it really easy to define the HTTP method and data to be transferred
    to the backend. For this particular function, I expect a `POST` request as this
    creates a new quiz. This can be done with the `post` decorator:'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: FastAPI 使得定义 HTTP 方法和要传输到后端的数据变得非常简单。对于这个特定的函数，我期望一个 `POST` 请求，因为它创建了一个新的测验。这可以通过
    `post` 装饰器来完成：
- en: '[PRE6]'
  id: totrans-121
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: 'Also, I am expecting some data within the request sent as JSON in the body.
    In this case, I am expecting an instance of `QuizConfig` as JSON. I simply defined
    `QuizConfig` as a subclass of `BaseModel` from Pydantic (*will be covered later*)
    and with that, I can pass it in the API function and FastAPI will do the rest:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，我还期望请求中的数据以 JSON 格式发送在请求体内。在这种情况下，我期望 `QuizConfig` 的实例作为 JSON。 我简单地将 `QuizConfig`
    定义为 Pydantic 的 `BaseModel` 子类（*稍后会介绍*），通过这样做，我可以将它传递给 API 函数，FastAPI 会处理其余部分：
- en: '[PRE7]'
  id: totrans-123
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'Furthermore, you might notice two custom decorators:'
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，你可能会注意到两个自定义装饰器：
- en: '[PRE8]'
  id: totrans-125
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: These I implemented to reduce duplicate code. They wrap the API function to
    retry the function in case of errors and to introduce a global rate limit of how
    many movie quizzes can be started per day.
  id: totrans-126
  prefs: []
  type: TYPE_NORMAL
  zh: 我实现了这些功能来减少重复代码。它们包装了 API 函数，在发生错误时重试该函数，并引入了一个全局的速率限制，限制每天可以启动多少个电影测验。
- en: 'What I also liked personally is the error handling with FastAPI. You can simply
    raise a `HTTPException`, give it the desired status code and the user will then
    receive a proper response, for example, if no movie could be found with a given
    configuration:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 我个人也很喜欢使用 FastAPI 进行错误处理。你可以简单地抛出一个`HTTPException`，指定所需的状态码，用户就会收到一个合适的响应，例如，如果在给定的配置下找不到电影：
- en: '[PRE9]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: 'With this, you should have an overview of creating an API like the one for
    Gemini Movie Detectives with FastAPI. Keep in mind: all code is open-source, so
    feel free to have a look at the [API repository on Github](https://github.com/vojay-dev/gemini-movie-detectives-api).'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 通过这一点，你应该能够概览如何使用 FastAPI 创建类似 Gemini Movie Detectives 的 API。记住：所有代码都是开源的，欢迎查看
    [GitHub 上的 API 仓库](https://github.com/vojay-dev/gemini-movie-detectives-api)。
- en: Data validation and quality with Pydantic
  id: totrans-130
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Pydantic 进行数据验证和质量控制
- en: One of the main challenges with todays AI/ML projects is data quality. But that
    does not only apply to ETL/ELT pipelines, which prepare datasets to be used in
    model training or prediction, but also to the AI/ML application itself. Using
    Python for example usually enables Data Engineers and Scientist to get a reasonable
    result with little code but being (mostly) dynamically typed, Python lacks of
    data validation when used in a naive way.
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的 AI/ML 项目面临的主要挑战之一是数据质量。但这不仅仅适用于 ETL/ELT 管道，这些管道准备的数据集用于模型训练或预测，也适用于 AI/ML
    应用本身。例如，使用 Python 通常可以让数据工程师和科学家通过少量代码获得合理的结果，但由于 Python（大多数情况下）是动态类型的，若以天真方式使用，Python
    缺乏数据验证。
- en: 'That is why in this project, I combined FastAPI with Pydantic, a powerful data
    validation library for Python. The goal was to make the API lightweight but strict
    and strong, when it comes to data quality and validation. Instead of plain dictionaries
    for example, the Movie Detectives API strictly uses custom classes inherited from
    the `BaseModel` provided by Pydantic. This is the configuration for a quiz for
    example:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是为什么在这个项目中，我将 FastAPI 与 Pydantic 结合使用，Pydantic 是一个强大的 Python 数据验证库。目标是使 API
    轻量化，但在数据质量和验证方面严格且强大。例如，Movie Detectives API 严格使用从 Pydantic 提供的 `BaseModel` 继承的自定义类，而不是简单的字典。以下是一个小测验的配置示例：
- en: '[PRE10]'
  id: totrans-133
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: This example illustrates, how not only correct type is ensured, but also further
    validation is applied to the actual values.
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: 这个示例说明了如何确保不仅是正确的类型，还应用了进一步的验证到实际值上。
- en: 'Furthermore, up-to-date Python features, like `StrEnum` are used to distinguish
    certain types, like personalities:'
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，还使用了 Python 的最新特性，比如 `StrEnum`，用于区分某些类型，比如个性：
- en: '[PRE11]'
  id: totrans-136
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: 'Also, duplicate code is avoided by defining custom decorators. For example,
    the following decorator limits the number of quiz sessions today, to have control
    over GCP costs:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，通过定义自定义装饰器可以避免重复代码。例如，以下装饰器限制今天的测验会话次数，从而控制 GCP 成本：
- en: '[PRE12]'
  id: totrans-138
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: 'It is then simply applied to the related API function:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 然后只需将其应用于相关的 API 函数：
- en: '[PRE13]'
  id: totrans-140
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: The combination of up-to-date Python features and libraries, such as FastAPI,
    Pydantic or Ruff makes the backend less verbose but still very stable and ensures
    a certain data quality, to ensure the LLM output has the expected quality.
  id: totrans-141
  prefs: []
  type: TYPE_NORMAL
  zh: 结合了最新的 Python 特性和库，如 FastAPI、Pydantic 或 Ruff，使后端更加简洁，同时仍然非常稳定，确保一定的数据质量，从而确保
    LLM 输出的质量符合预期。
- en: TMDB client with httpx
  id: totrans-142
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 httpx 的 TMDB 客户端
- en: The TMDB Client class is using [httpx](https://www.python-httpx.org/) to perform
    requests against the TMDB API.
  id: totrans-143
  prefs: []
  type: TYPE_NORMAL
  zh: TMDB 客户端类使用 [httpx](https://www.python-httpx.org/) 对 TMDB API 进行请求。
- en: '`httpx` is a rising star in the world of Python libraries. While `requests`
    has long been the go-to choice for making HTTP requests, `httpx` offers a valid
    alternative. One of its key strengths is asynchronous functionality. `httpx` allows
    you to write code that can handle multiple requests concurrently, potentially
    leading to significant performance improvements in applications that deal with
    a high volume of HTTP interactions. Additionally, `httpx` aims for broad compatibility
    with `requests`, making it easier for developers to pick it up.'
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: '`httpx` 是 Python 库领域的冉冉升起的新星。尽管 `requests` 长期以来一直是进行 HTTP 请求的首选，但 `httpx` 提供了一个有效的替代方案。其一个关键优势是异步功能。`httpx`
    允许你编写可以并发处理多个请求的代码，这可能会显著提高处理大量 HTTP 请求的应用程序的性能。此外，`httpx` 还致力于与 `requests` 的广泛兼容性，使开发人员更容易上手。'
- en: 'In case of Gemini Movie Detectives, there are two main requests:'
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在 Gemini 电影侦探中，有两个主要请求：
- en: '`get_movies`: Get a list of random movies based on specific settings, like
    average number of votes'
  id: totrans-146
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_movies`：获取基于特定设置的随机电影列表，比如平均投票数。'
- en: '`get_movie_details`: Get details for a specific movie to be used in a quiz'
  id: totrans-147
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`get_movie_details`：获取特定电影的详细信息，用于测验'
- en: 'In order to reduce the amount of external requests, the latter one uses the
    `lru_cache` decorator, which stands for “Least Recently Used cache”. It’s used
    to cache the results of function calls so that if the same inputs occur again,
    the function doesn’t have to recompute the result. Instead, it returns the cached
    result, which can significantly improve the performance of the program, especially
    for functions with expensive computations. In our case, we cache the details for
    1024 movies, so if 2 players get the same movie, we do not need to make a request
    again:'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: 为了减少外部请求的数量，后者使用 `lru_cache` 装饰器，即“最近最少使用缓存”。它用于缓存函数调用的结果，以便在相同的输入再次出现时，函数无需重新计算结果。相反，它会返回缓存的结果，这可以显著提高程序的性能，特别是对于计算开销较大的函数。在我们的例子中，我们缓存了
    1024 部电影的详细信息，因此如果两位玩家获得相同的电影，我们就不需要再次发起请求：
- en: '[PRE14]'
  id: totrans-149
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: Accessing data from The Movie Database (TMDB) is for free for non-commercial
    usage, you can simply [generate an API key](https://developer.themoviedb.org/docs/getting-started)
    and start making requests.
  id: totrans-150
  prefs: []
  type: TYPE_NORMAL
  zh: 从电影数据库（TMDB）访问数据对于非商业用途是免费的，你只需 [生成一个 API 密钥](https://developer.themoviedb.org/docs/getting-started)
    即可开始发起请求。
- en: Gemini LLM client with VertexAI
  id: totrans-151
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Gemini LLM 客户端与 VertexAI
- en: Before Gemini via VertexAI can be used, you need a Google Cloud project with
    VertexAI enabled and a Service Account with sufficient access together with its
    JSON key file.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用通过 VertexAI 的 Gemini 之前，你需要一个启用了 VertexAI 的 Google Cloud 项目和一个具有足够权限的服务账户，以及其
    JSON 密钥文件。
- en: '![](../Images/45142cdb2203e3f44a702c25a5395b06.png)'
  id: totrans-153
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/45142cdb2203e3f44a702c25a5395b06.png)'
- en: Create GCP project (by author)
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: 创建 GCP 项目（由作者）
- en: After creating a new project, navigate to *APIs & Services* –> *Enable APIs
    and service* –> search for *VertexAI API* –> *Enable*.
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: 创建新项目后，导航到 *APIs & Services* –> *Enable APIs and service* –> 搜索 *VertexAI API*
    –> *Enable*。
- en: '![](../Images/67fec39048c6afd73eb41b485431904b.png)'
  id: totrans-156
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/67fec39048c6afd73eb41b485431904b.png)'
- en: Enable VertexAI (by author)
  id: totrans-157
  prefs: []
  type: TYPE_NORMAL
  zh: 启用 VertexAI（由作者）
- en: To create a Service Account, navigate to *IAM & Admin* –> *Service Accounts*
    –> *Create service account*. Choose a proper name and go to the next step.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 要创建服务账户，请导航到 *IAM & Admin* –> *Service Accounts* –> *Create service account*。选择一个合适的名称并进入下一步。
- en: '![](../Images/fc8a142ea8bcd0bd9da74ed24cd518e6.png)'
  id: totrans-159
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fc8a142ea8bcd0bd9da74ed24cd518e6.png)'
- en: Create Service Account (by author)
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 创建服务账户（由作者）
- en: Now ensure to assign the account the pre-defined role *Vertex AI User*.
  id: totrans-161
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，确保将账户分配给预定义角色 *Vertex AI User*。
- en: '![](../Images/3cfa198c9646a12a29bac51e718d2dba.png)'
  id: totrans-162
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3cfa198c9646a12a29bac51e718d2dba.png)'
- en: Assign correct role (by author)
  id: totrans-163
  prefs: []
  type: TYPE_NORMAL
  zh: 分配正确的角色（由作者提供）
- en: Finally you can generate and download the JSON key file by clicking on the new
    user –> *Keys* –> *Add Key* –> *Create new key* –> *JSON*. With this file, you
    are good to go.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 最后，你可以通过点击新用户 –> *密钥* –> *添加密钥* –> *创建新密钥* –> *JSON* 来生成并下载JSON密钥文件。拥有这个文件后，你就可以开始使用了。
- en: '![](../Images/7e3e4f8e583b623603de57bb4a372e75.png)'
  id: totrans-165
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7e3e4f8e583b623603de57bb4a372e75.png)'
- en: Create JSON key file (by author)
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 创建JSON密钥文件（由作者提供）
- en: 'Using Gemini from Google with Python via VertexAI starts by adding the necessary
    dependency to the project:'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: 通过VertexAI使用Google的Gemini与Python集成，首先需要将必要的依赖项添加到项目中：
- en: '[PRE15]'
  id: totrans-168
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: 'With that, you can import and initialize `vertexai` with your JSON key file.
    Also you can load a model, like the newly released Gemini 1.5 Pro model, and start
    a chat session like this:'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: 有了这个，你可以使用你的JSON密钥文件导入并初始化`vertexai`。你还可以加载一个模型，比如新发布的Gemini 1.5 Pro模型，并像这样开始一个聊天会话：
- en: '[PRE16]'
  id: totrans-170
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'You can now use `chat.send_message()` to send a prompt to the model. However,
    since you get the response in chunks of data, I recommend using a little helper
    function, so that you simply get the full response as one String:'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，你可以使用`chat.send_message()`向模型发送提示。然而，由于你会收到分块的数据回复，我建议使用一个小助手函数，这样你就可以将完整的回复作为一个字符串获得：
- en: '[PRE17]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: 'A full example can then look like this:'
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: 一个完整的示例可能看起来像这样：
- en: '[PRE18]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: 'Running this, Gemini gave me the following response:'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 运行此代码后，Gemini给出了以下回复：
- en: '![](../Images/cda38295b73a2e42d444a20a344055f2.png)'
  id: totrans-176
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cda38295b73a2e42d444a20a344055f2.png)'
- en: You are awesome (by author)
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 你真棒（由作者提供）
- en: 'I agree with Gemini:'
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 我同意Gemini的看法：
- en: '***Eres increíble***'
  id: totrans-179
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***你真了不起***'
- en: 'Another hint when using this: you can also configure the model generation by
    passing a configuration to the `generation_config` parameter as part of the `send_message`
    function. For example:'
  id: totrans-180
  prefs: []
  type: TYPE_NORMAL
  zh: 使用时的另一个提示：你还可以通过将配置传递给`send_message`函数中的`generation_config`参数来配置模型的生成。例如：
- en: '[PRE19]'
  id: totrans-181
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'I am using this in Gemini Movie Detectives to set the `temperature` to 0.5,
    which gave me best results. In this context `temperature` means: how creative
    are the generated responses by Gemini. The value must be between 0.0 and 1.0,
    whereas closer to 1.0 means more creativity.'
  id: totrans-182
  prefs: []
  type: TYPE_NORMAL
  zh: 我在Gemini电影侦探中使用此方法将`temperature`设置为0.5，这给了我最佳的结果。在这个上下文中，`temperature`的意思是：Gemini生成的回复有多具创意。这个值必须介于0.0和1.0之间，值越接近1.0，表示创意越多。
- en: One of the main challenges apart from sending a prompt and receive the reply
    from Gemini is to parse the reply in order to extract the relevant information.
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 除了发送提示并从Gemini接收回复之外，主要的挑战之一是解析回复以提取相关信息。
- en: 'One learning from the project is:'
  id: totrans-184
  prefs: []
  type: TYPE_NORMAL
  zh: 从这个项目中学到的一点是：
- en: '***Specify a format for Gemini, which does not rely on exact words but uses
    key symbols to separate information elements***'
  id: totrans-185
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: '***为Gemini指定一种格式，不依赖于精确的词语，而是使用关键符号来分隔信息元素***'
- en: 'For example, the question prompt for Gemini contains this instruction:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 例如，Gemini的提问提示包含以下指令：
- en: '[PRE20]'
  id: totrans-187
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: 'The naive approach would be, to parse the answer by looking for a line that
    starts with `Question:`. However, if we use another language, like German, the
    reply would look like: `Antwort:`.'
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 幼稚的做法是，通过查找以`Question:`开头的行来解析答案。然而，如果我们使用另一种语言，比如德语，回复会是：`Antwort:`。
- en: 'Instead, focus on the structure and key symbols. Read the reply like this:'
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 相反，要关注结构和关键符号。像这样阅读回复：
- en: It has 3 lines
  id: totrans-190
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 它有3行
- en: The first line is the question
  id: totrans-191
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第一行是问题
- en: Second line the first hint
  id: totrans-192
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第二行第一个提示
- en: Third line the second hint
  id: totrans-193
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 第三行第二个提示
- en: Key and value are separated by `:`
  id: totrans-194
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 键和值之间由`:`分隔
- en: 'With this approach, the reply can be parsed language agnostic, and this is
    my implementation in the actual client:'
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 使用这种方法，回复可以无语言依赖地进行解析，这是我在实际客户端中的实现：
- en: '[PRE21]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE21]'
- en: In the future, the parsing of responses will become even easier. During the
    Google Cloud Next ’24 conference, Google announced that Gemini 1.5 Pro is now
    publicly available and with that, they also announced some features including
    a JSON mode to have responses in JSON format. Checkout [this article](https://developers.googleblog.com/2024/04/gemini-15-pro-in-public-preview-with-new-features.html)
    for more details.
  id: totrans-197
  prefs: []
  type: TYPE_NORMAL
  zh: 未来，回复的解析将变得更加简单。在2024年Google Cloud Next会议期间，Google宣布Gemini 1.5 Pro现已公开发布，并宣布了一些新特性，包括支持JSON模式，以便回复以JSON格式返回。有关更多细节，请查看[这篇文章](https://developers.googleblog.com/2024/04/gemini-15-pro-in-public-preview-with-new-features.html)。
- en: Apart from that, I wrapped the Gemini client into a configurable class. You
    can find the [full implementation open-source on Github](https://github.com/vojay-dev/gemini-movie-detectives-api/blob/main/gemini_movie_detectives_api/gemini.py).
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 除此之外，我将 Gemini 客户端封装成了一个可配置的类。你可以在 [Github 上查看完整的开源实现](https://github.com/vojay-dev/gemini-movie-detectives-api/blob/main/gemini_movie_detectives_api/gemini.py)。
- en: Modular prompt generator with Jinja
  id: totrans-199
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用 Jinja 的模块化提示生成器
- en: The Prompt Generator is a class wich combines and renders Jinja2 template files
    to create a modular prompt.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 提示生成器是一个类，结合并渲染 Jinja2 模板文件，创建模块化的提示。
- en: 'There are two base templates: one for generating the question and one for evaluating
    the answer. Apart from that, there is a metadata template to enrich the prompt
    with up-to-date movie data. Furthermore, there are language and personality templates,
    organized in separate folders with a template file for each option.'
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个基本模板：一个用于生成问题，一个用于评估答案。除此之外，还有一个元数据模板，用于通过最新的电影数据丰富提示。进一步地，还有语言和个性模板，这些模板被组织在不同的文件夹中，每个选项都有一个模板文件。
- en: '![](../Images/1ca5d024d4a77205380c152045e2a02e.png)'
  id: totrans-202
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/1ca5d024d4a77205380c152045e2a02e.png)'
- en: Prompt Generator (by author)
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 提示生成器（作者）
- en: Using Jinja2 allows to have advanced features like template inheritance, which
    is used for the metadata.
  id: totrans-204
  prefs: []
  type: TYPE_NORMAL
  zh: 使用 Jinja2 使得可以使用一些高级功能，比如模板继承，这在元数据中有使用。
- en: This makes it easy to extend this component, not only with more options for
    personalities and languages, but also to extract it into its own open-source project
    to make it available for other Gemini projects.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 这使得扩展这个组件变得容易，不仅可以添加更多的个性和语言选项，还可以将其提取为独立的开源项目，以便其他 Gemini 项目使用。
- en: Frontend
  id: totrans-206
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 前端
- en: The Gemini Movie Detectives frontend is split into four main components and
    uses `vue-router` to navigate between them.
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: Gemini 电影侦探的前端分为四个主要组件，并使用`vue-router`在它们之间进行导航。
- en: The Home component simply displays the welcome message.
  id: totrans-208
  prefs: []
  type: TYPE_NORMAL
  zh: Home 组件简单地显示欢迎信息。
- en: The Quiz component displays the quiz itself and talks to the API via `fetch`.
    To create a quiz, it sends a POST request to `api/quiz` with the desired settings.
    The backend is then selecting a random movie based on the user settings, creates
    the prompt with the modular prompt generator, uses Gemini to generate the question
    and hints and finally returns everything back to the component so that the quiz
    can be rendered.
  id: totrans-209
  prefs: []
  type: TYPE_NORMAL
  zh: 测验组件展示测验本身，并通过`fetch`与 API 进行交互。要创建一个测验，它向`api/quiz`发送一个包含所需设置的 POST 请求。然后，后端根据用户设置选择一部随机电影，使用模块化提示生成器创建提示，利用
    Gemini 生成问题和提示，最后将所有内容返回给组件，以便渲染测验。
- en: Additionally, each quiz gets a session ID assigned in the backend and is stored
    in a limited LRU cache.
  id: totrans-210
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，每个测验在后端都会分配一个会话 ID，并存储在一个有限的 LRU 缓存中。
- en: For debugging purposes, this component fetches data from the `api/sessions`
    endpoint. This returns all **active** sessions from the cache.
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 为了调试，这个组件从`api/sessions`端点获取数据。该端点返回所有**活动**的会话。
- en: This component displays statistics about the service. However, so far there
    is only one category of data displayed, which is the quiz limit. To limit the
    costs for VertexAI and GCP usage in general, there is a daily limit of quiz sessions,
    which will reset with the first quiz of the next day. Data is retrieved form the
    `api/limit` endpoint.
  id: totrans-212
  prefs: []
  type: TYPE_NORMAL
  zh: 该组件展示了服务的统计信息。然而，到目前为止，只有一种类别的数据被展示，即测验限制。为了限制 VertexAI 和 GCP 使用的成本，测验会话有一个每日限制，次日的第一个测验将重置该限制。数据通过`api/limit`端点获取。
- en: '![](../Images/260549abb360ab6e866e64b9ae1cd851.png)'
  id: totrans-213
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/260549abb360ab6e866e64b9ae1cd851.png)'
- en: Vue components (by author)
  id: totrans-214
  prefs: []
  type: TYPE_NORMAL
  zh: Vue 组件（作者）
- en: API examples
  id: totrans-215
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: API 示例
- en: Of course using the frontend is a nice way to interact with the application,
    but it is also possible to just use the API.
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，使用前端是与应用交互的一个好方法，但也可以仅使用 API。
- en: 'The following example shows how to start a quiz via the API using the Santa
    Claus / Christmas personality:'
  id: totrans-217
  prefs: []
  type: TYPE_NORMAL
  zh: 以下例子展示了如何通过 API 启动一个测验，使用圣诞老人/圣诞节个性：
- en: '[PRE22]'
  id: totrans-218
  prefs: []
  type: TYPE_PRE
  zh: '[PRE22]'
- en: '[PRE23]'
  id: totrans-219
  prefs: []
  type: TYPE_PRE
  zh: '[PRE23]'
- en: '![](../Images/44ed0a40a77f059c48e616639864e51e.png)'
  id: totrans-220
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/44ed0a40a77f059c48e616639864e51e.png)'
- en: 'Movie Detectives — Example: Santa Claus personality (by author)'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: 电影侦探 — 示例：圣诞老人个性（作者）
- en: 'This example shows how to change the language for a quiz:'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: 这个例子展示了如何为测验更改语言：
- en: '[PRE24]'
  id: totrans-223
  prefs: []
  type: TYPE_PRE
  zh: '[PRE24]'
- en: '[PRE25]'
  id: totrans-224
  prefs: []
  type: TYPE_PRE
  zh: '[PRE25]'
- en: 'And this is how to answer to a quiz via an API call:'
  id: totrans-225
  prefs: []
  type: TYPE_NORMAL
  zh: 这是通过 API 调用回答测验的方法：
- en: '[PRE26]'
  id: totrans-226
  prefs: []
  type: TYPE_PRE
  zh: '[PRE26]'
- en: '[PRE27]'
  id: totrans-227
  prefs: []
  type: TYPE_PRE
  zh: '[PRE27]'
- en: Conclusion
  id: totrans-228
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: After I finished the basic project, adding more personalities and languages
    was so easy with the modular prompt approach, that I was impressed by the possibilities
    this opens up for game design and development. I could change this game from a
    pure educational game about movies, into a comedy trivia “You Don’t Know Jack”-like
    game within a minute by adding another personality.
  id: totrans-229
  prefs: []
  type: TYPE_NORMAL
  zh: 在我完成基本项目后，通过模块化提示方法轻松添加更多个性和语言，我对游戏设计和开发的可能性感到印象深刻。通过添加另一个个性，我可以在一分钟内将这个游戏从一个关于电影的纯教育游戏变成一个喜剧问答类似于“You
    Don’t Know Jack”的游戏。
- en: Also, combining up-to-date Python functionality with validation libraries like
    Pydantic is very powerful and can be used to ensure good data quality for LLM
    input.
  id: totrans-230
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，将最新的Python功能与Pydantic等验证库结合起来非常强大，可用于确保LLM输入的数据质量良好。
- en: And there you have it, folks! You’re now equipped to craft your own LLM-powered
    web application.
  id: totrans-231
  prefs: []
  type: TYPE_NORMAL
  zh: 以上就是，朋友们！现在你已经具备了打造自己的LLM驱动网络应用的能力。
- en: 'Feeling inspired but need a starting point? Check out the open-source code
    for the Gemini Movie Detectives project:'
  id: totrans-232
  prefs: []
  type: TYPE_NORMAL
  zh: 感到灵感迸发但需要一个起点吗？查看Gemini Movie Detectives项目的开源代码：
- en: '**🚀 Github repository for backend**: [https://github.com/vojay-dev/gemini-movie-detectives-api](https://github.com/vojay-dev/gemini-movie-detectives-api)'
  id: totrans-233
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**🚀 后端Github仓库**: [https://github.com/vojay-dev/gemini-movie-detectives-api](https://github.com/vojay-dev/gemini-movie-detectives-api)'
- en: '**🖥️ Github repository for frontend**: [https://github.com/vojay-dev/gemini-movie-detectives-ui](https://github.com/vojay-dev/gemini-movie-detectives-ui)'
  id: totrans-234
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**🖥️ 前端Github仓库**: [https://github.com/vojay-dev/gemini-movie-detectives-ui](https://github.com/vojay-dev/gemini-movie-detectives-ui)'
- en: The future of AI-powered applications is bright, and you’re holding the paintbrush!
    Let’s go make something remarkable. And if you need a break, feel free to try
    [https://movie-detectives.com/](https://movie-detectives.com/).
  id: totrans-235
  prefs: []
  type: TYPE_NORMAL
  zh: 人工智能驱动应用的未来光明无限，而你就是那位拿着画笔的人！让我们一起创造一些非凡的东西。如果你需要休息，可以尝试一下[https://movie-detectives.com/](https://movie-detectives.com/)。
