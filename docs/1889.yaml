- en: 3 Surprising Use-cases for Branching in Airflow you’ve not seen before
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/3-surprising-use-cases-for-branching-in-airflow-youve-not-seen-before-058e3cb91ae0?source=collection_archive---------6-----------------------#2024-08-02](https://towardsdatascience.com/3-surprising-use-cases-for-branching-in-airflow-youve-not-seen-before-058e3cb91ae0?source=collection_archive---------6-----------------------#2024-08-02)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/f17032b8b193f43d59f3be5c1671b4c2.png)'
  prefs: []
  type: TYPE_IMG
- en: Your Data Pipelines can have as many branches as this nice tree. Photo by [Andrew
    Svk](https://unsplash.com/@andrew_svk?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
    on [Unsplash](https://unsplash.com/photos/a-very-tall-tree-on-top-of-a-rocky-hill-MCYR8cJYQRM?utm_content=creditCopyText&utm_medium=referral&utm_source=unsplash)
  prefs: []
  type: TYPE_NORMAL
- en: Branching Conditionality is an important feature of many DAGs
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@hugolu87?source=post_page---byline--058e3cb91ae0--------------------------------)[![Hugo
    Lu](../Images/045de11463bb16ea70a816ba89118a9e.png)](https://medium.com/@hugolu87?source=post_page---byline--058e3cb91ae0--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--058e3cb91ae0--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--058e3cb91ae0--------------------------------)
    [Hugo Lu](https://medium.com/@hugolu87?source=post_page---byline--058e3cb91ae0--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--058e3cb91ae0--------------------------------)
    ·4 min read·Aug 2, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: How often is it that you’re writing a Data Pipeline and then you wish you could
    do something *contingently?* Something that *only* happens if a set of conditions
    are satisfied?
  prefs: []
  type: TYPE_NORMAL
- en: Hopefully, not that often! [Airflow](https://www.getorchestra.io/blog/airflow-added-as-connecto)
    has supported this type of functionality via the AirflowBranchPython Operator.
    Many other workflow Orchestration tools have followed suit. Prefect have [Conditional
    Flows](https://discourse.prefect.io/t/how-can-i-build-conditional-logic-within-a-flow/61),
    Dagster have [DyanmicOutput](https://discuss.dagster.io/t/16757774/i-have-a-graph-with-conditional-branching-the-conditional-br),
    and in [Orchestra](https://getorchestra.io) we facilitate branching based on status.
  prefs: []
  type: TYPE_NORMAL
- en: 'This leads us to the most important question: Why?'
  prefs: []
  type: TYPE_NORMAL
- en: Why bother at all with branching, thereby making your pipeline more complicated
    than it needs to be. We’ll see there are actually some pretty incredible use-cases,
    especially for folks that are looking for a greater amount of automation in their
    lives.
  prefs: []
  type: TYPE_NORMAL
- en: A quick example of Branching in Airflow
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Before diving in to use-cases, we’ll use the below code as a reference so we
    can understand how branching works in practice.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
