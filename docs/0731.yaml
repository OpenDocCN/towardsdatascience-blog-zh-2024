- en: 'How Computers Work: For The Greenhorns Amongst Us.'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 计算机是如何工作的：为我们中的新手提供的指南。
- en: 原文：[https://towardsdatascience.com/how-computers-work-for-the-greenhorns-amongst-us-40dbf1b59546?source=collection_archive---------9-----------------------#2024-03-18](https://towardsdatascience.com/how-computers-work-for-the-greenhorns-amongst-us-40dbf1b59546?source=collection_archive---------9-----------------------#2024-03-18)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/how-computers-work-for-the-greenhorns-amongst-us-40dbf1b59546?source=collection_archive---------9-----------------------#2024-03-18](https://towardsdatascience.com/how-computers-work-for-the-greenhorns-amongst-us-40dbf1b59546?source=collection_archive---------9-----------------------#2024-03-18)
- en: A Beginner’s Guide to Understanding How PCs Operate.
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 了解个人电脑如何运作的初学者指南。
- en: '[](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)[![Ophelia
    P Johnson](../Images/714fd3cde66dbbe645a4b7cb9aac203f.png)](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)
    [Ophelia P Johnson](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)[![Ophelia
    P Johnson](../Images/714fd3cde66dbbe645a4b7cb9aac203f.png)](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)
    [Ophelia P Johnson](https://opheliapjohnson.medium.com/?source=post_page---byline--40dbf1b59546--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)
    ·7 min read·Mar 18, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发布于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--40dbf1b59546--------------------------------)
    ·阅读时间：7分钟·2024年3月18日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '![](../Images/30b1b4ad71a149fcecc389992a8d02cc.png)'
  id: totrans-6
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/30b1b4ad71a149fcecc389992a8d02cc.png)'
- en: Photo by [Dan Cristian Pădureț](https://www.pexels.com/photo/blue-and-yellow-phone-modules-1476321/)
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由 [Dan Cristian Pădureț](https://www.pexels.com/photo/blue-and-yellow-phone-modules-1476321/)
    提供
- en: 'As a self-proclaimed nerd, I was quietly ashamed yesterday when a senior engineer
    at my job argued that too few engineers today truly understand how computers work.
    Of course, my initial reaction was to jump to the defensive: “I was taught that
    at Uni, it’s the basics!” I had a quiet chuckle to myself shortly afterwards.
    Since when had the education system ever truly prepared me for the industry?'
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个自称的极客，昨天当我工作中的一位资深工程师辩称如今很少有工程师真正理解计算机是如何工作的时，我感到有些羞愧。当然，我的第一反应是开始辩解：“我在大学时就学过这个，这是基础！”但我很快自己笑了笑。教育系统何时真正为我进入行业做好准备了？
- en: 'Sure, I knew bits and pieces of how a computer worked from my stint as a software
    developer, plus a broad (if basic) view from my time at Uni. But ultimately, I
    realized I couldn’t have a meaningful discussion about the very tool I used day
    in and day out: my PC. How could that be allowed? How *could* I consider myself
    a cyber professional without knowing that much?'
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，从我做软件开发时，我知道计算机是如何运作的一些零星知识，再加上在大学时的广泛（如果说基础）了解。但最终，我意识到我无法进行一次有意义的讨论，谈论我每天都在使用的工具：我的个人电脑。怎么会这样？我怎么*能够*称自己为网络专业人士，却连这些都不知道？
- en: This article aims to remedy that in an easy-to-consume format. I am not complacent
    in my lack of knowledge, and if you’ve read this far, I suspect you aren’t either.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 本文旨在以易于理解的格式解决这一问题。我并不满足于自己缺乏知识，如果你已经读到这里，我怀疑你也不是。
- en: What is a Computer?
  id: totrans-11
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是计算机？
- en: Computers were invented because humans are inefficient. Lazy, too. It’s much
    better to design a wonderful, magical machine that does our thinking for us than
    be forced to think ourselves. Your PC is a computer; but so is the [Antikythera
    mechanism](https://www.thephysicsmill.com/2014/09/06/non-digital-computers/),
    built c.100 BC to navigate the stars. Computers are not a recent phenomenon, but
    this article focuses on **modern, digital computers.**
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机的发明源于人类的低效。还有懒惰。设计一台为我们思考的奇妙机器，比我们自己去思考要好得多。你的个人电脑就是一台计算机；但 [安提基希拉机制](https://www.thephysicsmill.com/2014/09/06/non-digital-computers/)，它大约建于公元前100年，用于导航星空，也是一台计算机。计算机并不是近代才有的现象，但本文专注于**现代数字计算机**。
- en: 'Computers take input data, do cool things with it, and then spit out some output
    data. Alan Turning’s theoretical model (the Turing Machine) describes a computer
    as a machine capable of performing any computation that could be described as
    a set of logical rules. To translate that into Engish: any task that you can theoretically
    do with a pen and paper (and enough time), a ‘computer’ ought to be able to do
    too. It can probably just do it more quickly than you can.'
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机接受输入数据，对其进行处理，然后输出一些结果数据。艾伦·图灵的理论模型（图灵机）将计算机描述为能够执行任何可以通过一组逻辑规则描述的计算的机器。用英语来说：任何你可以用笔和纸（并且有足够的时间）理论上完成的任务，‘计算机’也应该能够做。它可能比你做得更快。
- en: '![](../Images/ee2ba1b4b7b568c25ea0ba670188245c.png)'
  id: totrans-14
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ee2ba1b4b7b568c25ea0ba670188245c.png)'
- en: Over Simplified Representation of How a Computer Works. Image by the author.
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 计算机工作原理的过度简化表示。图片由作者提供。
- en: What is a Computer Made Of?
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算机由什么构成？
- en: 'Due to a whole lot of physics-related stuff, a computer can only comprehend
    two states: high voltage and low voltage. You will hear computer geeks refer to
    these states as 1 and 0 (also ‘True’ and ‘False’). Everything a user asks a computer
    to do begins with 1s and 0s. There is no getting around it.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: 由于与物理相关的因素，计算机只能理解两种状态：高电压和低电压。你会听到计算机极客称这些状态为1和0（也就是‘真’和‘假’）。用户要求计算机执行的每一个操作，都始于1和0。无法绕过这一点。
- en: In order to make anything happen with those 1s and 0s, we use logic gates. A
    logic gate is a physical component found in a circuit that is comprised of (many)
    transistors. When these logic gates are connected, the computer can perform logical
    and arithmetic operations.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使这些1和0发生作用，我们使用逻辑门。逻辑门是电路中一种物理组件，包含（许多）晶体管。当这些逻辑门连接在一起时，计算机就能够执行逻辑和算术运算。
- en: Take the below ‘OR’ Gate as an example. If we only receive two low voltages,
    we have no power. But if we receive just one high voltage, we have power.
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: 以下面的‘OR’门为例。如果我们只接收到两个低电压，就没有电力。但是如果接收到一个高电压，就有电力。
- en: '![](../Images/c9a31841444258cd73e1a0f11066b99a.png)'
  id: totrans-20
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c9a31841444258cd73e1a0f11066b99a.png)'
- en: OR Gate and Truth Table. Image courtesy of [Wikipedia](https://en.wikipedia.org/wiki/OR_gate),
    table created by the author.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: OR门及其真值表。图片由[维基百科](https://en.wikipedia.org/wiki/OR_gate)提供，表格由作者制作。
- en: If you’re still confused, try to think of it in terms of a normal, non-computing
    context. Cake, for example!
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你仍然感到困惑，可以尝试从一个普通的、非计算的背景来思考。例如，蛋糕！
- en: '![](../Images/b70a0caaefbfe2c3d97243fc7fe07c0b.png)'
  id: totrans-23
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b70a0caaefbfe2c3d97243fc7fe07c0b.png)'
- en: ‘Cake’ Representation of an OR gate. Image by the author.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: ‘蛋糕’表示的OR门。图片由作者提供。
- en: There are different types of logic gates to make different decisions. See [here](https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:computers/xcae6f4a7ff015e7d:logic-gates-and-circuits/a/logic-gates#:~:text=A%20logic%20gate%20is%20a,than%20a%20single%20binary%20digit.)
    for a good explanation.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 有不同类型的逻辑门来做出不同的决策。请查看[这里](https://www.khanacademy.org/computing/computers-and-internet/xcae6f4a7ff015e7d:computers/xcae6f4a7ff015e7d:logic-gates-and-circuits/a/logic-gates#:~:text=A%20logic%20gate%20is%20a,than%20a%20single%20binary%20digit.)以获得一个很好的解释。
- en: How Does a Computer Think?
  id: totrans-26
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算机是如何思考的？
- en: So far, we know what a computer is, and that its circuitry is made up of these
    things called logic gates. But what magic takes place that means somehow, stuff
    is shown to you on a screen? How come you can use applications, or access the
    internet?
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: 到目前为止，我们知道计算机是什么，以及它的电路是由这些被称为逻辑门的东西构成的。那么，是什么神奇的事情发生，意味着某些东西会在屏幕上显示出来呢？为什么你可以使用应用程序，或者访问互联网？
- en: Enter the CPU.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 进入中央处理单元（CPU）。
- en: 'The Central Processing Unit (CPU) is comprised of millions of transistors and
    logic gates. Consider it the brain of a computer. Similar to how our brains work
    with the rest of our organs, the CPU works with other components like storage
    units to do its job: **which is running programs.**'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 中央处理单元（CPU）由数百万个晶体管和逻辑门组成。可以将其视为计算机的大脑。就像我们的大脑与其他器官一起工作一样，CPU也与其他组件（如存储单元）一起工作，完成它的工作：**即运行程序。**
- en: '**A program is simply a long sequence of instructions. When we download a new
    program onto our PCs,** the CPU examines the program and determines how to carry
    out its instructions. It does this using the **Fetch, Decode, Execute** cycle
    — this is a whole process in itself, for which there will be a new article shortly.
    In the meantime, I recommend reading up on the Von Neumann architecture: [this
    video](https://www.youtube.com/watch?v=Ml3-kVYLNr8) by Computerphile is great.'
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: '**程序只是一个长长的指令序列。当我们将新程序下载到 PC 上时，** CPU 会检查该程序并确定如何执行它的指令。它通过 **获取、解码、执行**
    循环来实现——这本身就是一个完整的过程，稍后会有一篇新的文章来详细讲解。在此期间，我建议你阅读关于冯·诺依曼架构的内容：[这个视频](https://www.youtube.com/watch?v=Ml3-kVYLNr8)来自
    Computerphile，非常棒。'
- en: Where Does a Computer Store Stuff?
  id: totrans-31
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 计算机将数据存储在哪里？
- en: 'We’ve already established that a computer needs to store things. Even if you
    don’t have a technical background, you can probably appreciate this: most adverts
    for technology have RAM specs on them, and besides, what would be the point in
    a computer that couldn’t store anything you wanted to?'
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 我们已经确定计算机需要存储数据。即使你没有技术背景，你也许能理解这一点：大多数技术广告中都有 RAM 规格，而且，假如计算机无法存储任何你想要的东西，那它还有什么意义呢？
- en: 'There are two types of internal PC storage you probably want to get your head
    around:'
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能需要理解两种类型的 PC 内部存储：
- en: RAM (Random Access Memory) serves as the computer’s short-term memory, enabling
    it to access data and instructions required for **any currently running processes**.
    Unlike storage devices, RAM is volatile, meaning its contents are lost when the
    computer is turned off or restarted. Think of a time when you’re PC has crashed,
    and as a result, you’ve lost some words in an unsaved document. That’s because
    the RAM was wiped clean upon shutdown. The faster the RAM, the smoother the performance,
    as it allows the CPU to access data more quickly.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: RAM（随机存取存储器）作为计算机的短期记忆，使其能够访问当前运行进程所需的数据和指令。与存储设备不同，RAM 是易失性的，意味着计算机关机或重启时其内容会丢失。想象一下当你的
    PC 崩溃时，结果是你在未保存的文档中丢失了一些文字。那是因为计算机关机时 RAM 被清空了。RAM 越快，性能越顺畅，因为它能让 CPU 更快地访问数据。
- en: ROM (Read-Only Memory) is memory that can only be read from; not written to.
    It typically contains firmware or key instructions that are **permanently** stored
    on the computer’s circuitry. Unlike RAM, ROM retains its contents even when the
    computer is powered off. ROM contains a computer’s Operating System and initializes
    essential hardware components before the operating system takes over.
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: ROM（只读存储器）是只能读取而不能写入的存储器。它通常包含固件或计算机电路上 **永久** 存储的关键指令。与 RAM 不同，ROM 即使在计算机关机时也会保持其内容。ROM
    包含计算机的操作系统，并在操作系统接管之前初始化重要的硬件组件。
- en: 'Here’s a nice table to make those distinctions a bit clearer:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这里有一个表格，帮助更清楚地区分这些概念：
- en: '![](../Images/be6a7a671830750f659727d4e5d479f5.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/be6a7a671830750f659727d4e5d479f5.png)'
- en: Difference Between RAM and ROM. Image by the author.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: RAM 和 ROM 的区别。图片来自作者。
- en: What is an Operating System, and Why do I Care?
  id: totrans-39
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 什么是操作系统，为什么我应该关心它？
- en: We mentioned Operating Systems in the last section, and that it is initially
    loaded from ROM. An ‘Operating System’ (OS) is just a fancy word for a master
    program that acts as a translator between software (i.e. applications) and hardware
    (for example, the CPU). Windows, Mac and Unix are the most commonly used operating
    system; but so are IOS and Andriod.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 我们在上一节中提到过操作系统，它最初是从 ROM 中加载的。‘操作系统’（OS）只是一个花哨的术语，用来描述作为软件（即应用程序）与硬件（例如 CPU）之间的翻译程序。Windows、Mac
    和 Unix 是最常用的操作系统；IOS 和 Android 也同样常见。
- en: 'The OS determines when a program can be run by the CPU, and what resources
    that program is permitted to access. This is why malicious software such as Rootkits
    are made: if you can control the OS, you can control almost anything on the PC.
    The kernel is considered the heart of an operating system.'
  id: totrans-41
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统决定了程序何时可以由 CPU 运行，以及该程序可以访问哪些资源。这就是为什么恶意软件（如 Rootkit）会被制作出来的原因：如果你能够控制操作系统，你几乎可以控制
    PC 上的一切。内核被认为是操作系统的核心。
- en: '![](../Images/ab7979423b4cf35eea05301a7be4b9d2.png)'
  id: totrans-42
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ab7979423b4cf35eea05301a7be4b9d2.png)'
- en: 'Protection Rings of an OS. Source: [Wikipedia](https://en.wikipedia.org/wiki/Protection_ring)'
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统的保护环。来源：[维基百科](https://en.wikipedia.org/wiki/Protection_ring)
- en: 'Operating systems have several uses. I could write them out in a long, boring
    way, but here is a mindmap instead:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统有多种用途。我可以用一种冗长无趣的方式列举出来，但这里我提供一个思维导图：
- en: '![](../Images/835559aeeb1392651de7bd1178e9c63f.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/835559aeeb1392651de7bd1178e9c63f.png)'
- en: Uses of an Operating System. Created by the author, using Miro
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 操作系统的用途。由作者创建，使用Miro
- en: When I Press the Power Button on my PC, What Actually Happens?
  id: totrans-47
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 当我按下PC的电源按钮时，实际上发生了什么？
- en: 'To be frank, loads happens when you start your PC. But here is an oversimplified
    version of events:'
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 坦白说，当你启动PC时会发生很多事情。这里是一个简化版的过程：
- en: When the light flickers to life on your power button, it sends a signal to the
    power supply unit to start supplying power to the components of your computer.
  id: totrans-49
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当电源按钮上的灯亮起时，它会向电源供应单元发送信号，开始向计算机的各个组件供电。
- en: The motherboard receives power from the PSU and begins its initialization process.
    This involves checking various components such as the CPU, RAM, and peripherals
    to ensure they are functioning correctly.
  id: totrans-50
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 主板从电源单元（PSU）获取电力并开始初始化过程。这包括检查各种组件，如CPU、RAM和外设，以确保它们正常工作。
- en: The CPU also receives power and starts executing instructions from the BIOS
    (Basic Input/Output System) or UEFI (Unified Extensible Firmware Interface) firmware,
    which is stored in a memory chip on the motherboard. In turn, these components
    perform a Power-On Self-Test (POST) to check for hardware errors.
  id: totrans-51
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: CPU也获得电力，并开始执行来自BIOS（基本输入输出系统）或UEFI（统一可扩展固件接口）固件的指令，这些固件存储在主板上的内存芯片中。随后，这些组件执行自检（POST），以检查硬件错误。
- en: Once the BIOS/UEFI initialization is complete, the motherboard hands over control
    to the boot loader of the operating system installed on the computer. The boot
    loader loads the operating system kernel into memory and starts the operating
    system.
  id: totrans-52
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 一旦BIOS/UEFI初始化完成，主板将控制权交给安装在计算机上的操作系统引导加载程序。引导加载程序将操作系统内核加载到内存中，并启动操作系统。
- en: Finally, the operating system presents the user with a login screen or desktop
    environment, allowing the user to interact with the computer.
  id: totrans-53
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最终，操作系统会向用户展示登录界面或桌面环境，让用户能够与计算机进行互动。
- en: Summary
  id: totrans-54
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 摘要
- en: 'It probably isn’t a surprise to you that there’s a lot that goes into how a
    computer works. It’s not a question with a simple answer: after years of continuous
    technological advancement, how could there be an easy answer? You can’t condense
    all the above into a simple statement, and frankly, the content of this article
    barely scratched the surface.'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能不会感到惊讶，计算机的工作原理涉及到很多内容。这并不是一个简单的问题：经过多年的技术进步，怎么可能有一个简单的答案呢？你无法将所有内容浓缩成一个简单的声明，坦白说，本文的内容只是触及了表面。
- en: 'If you want to know more, I encourage some good, old-fashioned reading; better
    yet, buy a cheap PC and break into it. As Earl Nightingale once proclaimed:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你想了解更多，我鼓励你进行一些传统的阅读；更好的是，买一台便宜的PC并破解它。正如厄尔·奈廷格尔曾经宣称：
- en: “*One hour per day of study in your chosen field is all it takes. One hour per
    day of study will put you at the top of your field within three years. Within
    five years you’ll be a national authority. In seven years, you can be one of the
    best people in the world at what you do.”*
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: “*每天一小时的学习，就足够了。每天一小时的学习，三年内你会成为你所在领域的佼佼者。五年内，你将成为全国权威。七年后，你将成为世界上最顶尖的人之一。*”
- en: Whether or not the metrics still hold true, I have no idea. But it can’t hurt,
    can it? To stay curious and dig for answers, no matter how big the question is.
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: 我不知道这些指标是否仍然适用。但保持好奇心并挖掘答案，总不会有坏处，不管问题有多大。
