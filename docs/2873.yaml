- en: Saving Pandas DataFrames Efficiently and Quickly — Parquet vs Feather vs ORC
    vs CSV
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/saving-pandas-dataframes-efficiently-and-quickly-parquet-vs-feather-vs-orc-vs-csv-26051cc98f2e?source=collection_archive---------4-----------------------#2024-11-27](https://towardsdatascience.com/saving-pandas-dataframes-efficiently-and-quickly-parquet-vs-feather-vs-orc-vs-csv-26051cc98f2e?source=collection_archive---------4-----------------------#2024-11-27)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Optimisation
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Speed, RAM, size, and convenience. Which storage method is best?
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@maclayton?source=post_page---byline--26051cc98f2e--------------------------------)[![Mike
    Clayton](../Images/2d37746b13b7d2ff1c6515893914da97.png)](https://medium.com/@maclayton?source=post_page---byline--26051cc98f2e--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--26051cc98f2e--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--26051cc98f2e--------------------------------)
    [Mike Clayton](https://medium.com/@maclayton?source=post_page---byline--26051cc98f2e--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--26051cc98f2e--------------------------------)
    ·13 min read·Nov 27, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/66e3198281c637421982c2800cfec328.png)'
  prefs: []
  type: TYPE_IMG
- en: Write output file sizes for mixed data — Image by Author
  prefs: []
  type: TYPE_NORMAL
- en: '**With the ever-increasing volume of data that is produced there is inevitably
    a need to store, and reload, that data efficiently and quickly.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**CSV has been the go to staple for a long time. However, there are much better
    alternatives specifically designed to deal directly with the storage, and efficient
    re-loading, of tabular data.**'
  prefs: []
  type: TYPE_NORMAL
- en: '**So, how much are you losing out if you are still using CSV format for storage
    of your data tables? And which alternative should you consider?**'
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'When it comes to storing tabular data the ideal would be:'
  prefs: []
  type: TYPE_NORMAL
- en: Fast to write
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Fast to read
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Low RAM usage
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Low storage requirements
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Good options for compression
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: An option to read only part of the data, without loading the whole dataset,
    would also be an excellent addition to the above.
  prefs: []
  type: TYPE_NORMAL
- en: The list outlined above will therefore form the base of testing some of the
    more widely used methods against these…
  prefs: []
  type: TYPE_NORMAL
