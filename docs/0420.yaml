- en: Lexicon-Based Sentiment Analysis Using R
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: ÂéüÊñáÔºö[https://towardsdatascience.com/lexicon-based-sentiment-analysis-using-r-5c1db85984a1?source=collection_archive---------13-----------------------#2024-02-13](https://towardsdatascience.com/lexicon-based-sentiment-analysis-using-r-5c1db85984a1?source=collection_archive---------13-----------------------#2024-02-13)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: An empirical analysis of sentiments conveyed through media briefings during
    the COVID-19 pandemic
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://drokanbulut.medium.com/?source=post_page---byline--5c1db85984a1--------------------------------)[![Okan
    Bulut](../Images/555a4b1818ac0b5d0766f3ad7ab71a6f.png)](https://drokanbulut.medium.com/?source=post_page---byline--5c1db85984a1--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5c1db85984a1--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5c1db85984a1--------------------------------)
    [Okan Bulut](https://drokanbulut.medium.com/?source=post_page---byline--5c1db85984a1--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ¬∑Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5c1db85984a1--------------------------------)
    ¬∑14 min read¬∑Feb 13, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/5eb08923969d0e60e8b3c64f98ab28eb.png)'
  prefs: []
  type: TYPE_IMG
- en: Image by [Gino Crescoli](https://pixabay.com/users/absolutvision-6158753/?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2979107)
    from [Pixabay](https://pixabay.com//?utm_source=link-attribution&utm_medium=referral&utm_campaign=image&utm_content=2979107)
  prefs: []
  type: TYPE_NORMAL
- en: 'During the COVID-19 pandemic, I decided to learn a new statistical technique
    to keep my mind occupied rather than constantly immersing myself in pandemic-related
    news. After evaluating several options, I found the concepts related to natural
    language processing (NLP) particularly captivating. So, I opted to delve deeper
    into this field and explore one specific technique: sentiment analysis, also known
    as ‚Äúopinion mining‚Äù in academic literature. This analytical method empowers researchers
    to extract and interpret the emotions conveyed toward a specific subject within
    the written text. Through sentiment analysis, one can discern the polarity (positive
    or negative), nature, and intensity of sentiments expressed across various textual
    formats such as documents, customer reviews, and social media posts.'
  prefs: []
  type: TYPE_NORMAL
- en: Amidst the pandemic, I observed a significant trend among researchers who turned
    to sentiment analysis as a tool to measure public responses to news and developments
    surrounding the virus. This involved analyzing user-generated content on popular
    social media platforms such as Twitter, YouTube, and Instagram. Intrigued by this
    methodology, my colleagues and I endeavored to contribute to the existing body
    of research by scrutinizing the daily briefings provided by public health authorities.
    In Alberta, Dr. Deena Hinshaw, who used to be the province‚Äôs chief medical officer
    of health, regularly delivered [updates on the region‚Äôs response](https://www.youtube.com/watch?v=fvw_USRfXgY)
    to the ongoing pandemic. Through our analysis of these public health announcements,
    we aimed to assess Alberta‚Äôs effectiveness in implementing communication strategies
    during this intricate public health crisis. Our investigation, conducted through
    the lenses of sentiment analysis, sought to shed light on the efficacy of communication
    strategies employed during this challenging period in public health [1, 2].
  prefs: []
  type: TYPE_NORMAL
- en: In this post, I aim to walk you through the process of performing sentiment
    analysis using R. Specifically, I‚Äôll focus on ‚Äúlexicon-based sentiment analysis,‚Äù
    which I‚Äôll discuss in more detail in the next section. I‚Äôll provide examples of
    lexicon-based sentiment analysis that we‚Äôve integrated into the publications referenced
    earlier. Additionally, in future posts, I‚Äôll delve into more advanced forms of
    sentiment analysis, making use of state-of-the-art pre-trained models accessible
    on [Hugging Face](https://huggingface.co/docs/transformers/en/index).
  prefs: []
  type: TYPE_NORMAL
- en: Lexicon-Based Sentiment Analysis
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: As I learned more about sentiment analysis, I discovered that the predominant
    method for extracting sentiments is lexicon-based sentiment analysis. This approach
    entails utilizing a specific lexicon, essentially the vocabulary of a language
    or subject, to discern the direction and intensity of sentiments conveyed within
    a given text. Some lexicons, like the Bing lexicon [3], classify words as either
    positive or negative. Conversely, other lexicons provide more detailed sentiment
    labels, such as the NRC Emotion Lexicon [4], which categorizes words based on
    both positive and negative sentiments, as well as Plutchik‚Äôs [5] psych evolutionary
    theory of basic emotions (e.g., anger, fear, anticipation, trust, surprise, sadness,
    joy, and disgust).
  prefs: []
  type: TYPE_NORMAL
- en: Lexicon-based sentiment analysis operates by aligning words within a given text
    with those found in widely used lexicons such as NRC and Bing. Each word receives
    an assigned sentiment, typically categorized as positive or negative. The text‚Äôs
    collective sentiment score is subsequently derived by summing the individual sentiment
    scores of its constituent words. For instance, in a scenario where a text incorporates
    50 positive and 30 negative words according to the Bing lexicon, the resulting
    sentiment score would be 20\. This value indicates a predominance of positive
    sentiments within the text. Conversely, a negative total would imply a prevalence
    of negative sentiments.
  prefs: []
  type: TYPE_NORMAL
- en: Performing lexicon-based sentiment analysis using R can be both fun and tricky
    at the same time. While analyzing public health announcements in terms of sentiments,
    I found Julia Silge and David Robinson‚Äôs book, [*Text Mining with R*](https://www.tidytextmining.com/),
    to be very helpful. The book has [a chapter dedicated to sentiment analysis](https://www.tidytextmining.com/sentiment),
    where the authors demonstrate how to conduct sentiment analysis using general-purpose
    lexicons like Bing and NRC. However, Julia and David also highlight a major limitation
    of lexicon-based sentiment analysis. The analysis considers only single words
    (i.e., unigrams) and does not consider qualifiers before a word. For instance,
    negation words like ‚Äúnot‚Äù in ‚Äúnot true‚Äù are ignored, and sentiment analysis processes
    them as two separate words, ‚Äúnot‚Äù and ‚Äútrue‚Äù. Furthermore, if a particular word
    (either positive or negative) is repeatedly used throughout the text, this may
    skew the results depending on the polarity (positive or negative) of this word.
    Therefore, the results of lexicon-based sentiment analysis should be interpreted
    carefully.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let‚Äôs move to our example, where we will conduct lexicon-based sentiment
    analysis using Dr. Deena Hinshaw‚Äôs media briefings during the COVID-19 pandemic.
    My goal is to showcase two R packages capable of running sentiment analysis üìâ.
  prefs: []
  type: TYPE_NORMAL
- en: Example
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: For the sake of simplicity, we will focus on the first wave of the pandemic
    (March 2020 ‚Äî June 2020). The transcripts of all media briefings were publicly
    available on the government of Alberta‚Äôs COVID-19 pandemic website ([https://www.alberta.ca/covid](https://www.alberta.ca/covid)).
    This dataset comes with an [open data license](https://open.alberta.ca/licence)
    that allows the public to access and use the information, including for commercial
    purposes. After importing these transcripts into R, I turned all the text into
    lowercase and then applied word tokenization using the **tidytext** and **tokenizers**
    packages. Word tokenization split the sentences in the media briefings into individual
    words for each entry (i.e., day of media briefings). Next, I applied lemmatization
    to the tokens to resolve each word into its canonical form using the **textstem**
    package. Finally, I removed common stopwords, such as ‚Äúmy,‚Äù ‚Äúfor,‚Äù ‚Äúthat,‚Äù ‚Äúwith,‚Äù
    and ‚Äúfor, using the stopwords package. The final dataset is available [**here**](https://github.com/okanbulut/blog/raw/master/data_and_codes/wave1_alberta.RData).
    Now, let‚Äôs import the data into R and then review its content.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d1603ea9ba4436bfd2d51e226a839b7b.png)'
  prefs: []
  type: TYPE_IMG
- en: A preview of the dataset (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'The dataset has three columns:'
  prefs: []
  type: TYPE_NORMAL
- en: month (the month of the media briefing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: date (the exact date of the media briefing), and
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: word (words or tokens used in media briefing)
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Descriptive Analysis
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Now, we can calculate some descriptive statistics to better understand the content
    of our dataset. We will begin by finding the top 5 words (based on their frequency)
    for each month.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/759fd7f9b972d9892bc76ad34db081be.png)'
  prefs: []
  type: TYPE_IMG
- en: Top 5 words by months (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: 'The output shows that words such as health, continue, and test were commonly
    used in the media briefings across this 4-month period. We can also expand our
    list to the most common 10 words and view the results visually:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/2b8308d5610aef09dbe4729f628a162d.png)'
  prefs: []
  type: TYPE_IMG
- en: Most common words based on frequency (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: Since some words are common across all four months, the plot above may not necessarily
    show us the important words that are unique to each month. To find such important
    words, we can use Term Frequency ‚Äî Inverse Document Frequency (TF-IDF)‚Äìa widely
    used technique in NLP for measuring how important a term is within a document
    relative to a collection of documents (for more detailed information about TF-IDF,
    check out [my previous blog post](https://okan.cloud/posts/2022-01-16-text-vectorization-using-python-tf-idf/#tf-idf)).
    In our example, we will treat media briefings for each month as a document and
    calculate TF-IDF for the tokens (i.e., words) within each document. The first
    part of the R codes below creates a new dataset, *wave1_tf_idf*, by calculating
    TF-IDF for all tokens and selecting the tokens with the highest TF-IDF values
    within each month. Next, we use this dataset to create a bar plot with the TF-IDF
    values to view the common words unique to each month.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/d6e77561244b9eb493176747ea3cac6b.png)'
  prefs: []
  type: TYPE_IMG
- en: Most common words based on TIF-IDF (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: These results are more informative because the tokens shown in the figure reflect
    unique topics discussed each month. For example, in March 2020, the media briefings
    were mostly about limiting travel, returning from crowded conferences, and COVID-19
    cases on cruise ships. In June 2020, the focus of the media briefings shifted
    towards mask requirements, people protesting pandemic-related restrictions, and
    so on.
  prefs: []
  type: TYPE_NORMAL
- en: 'Before we switch back to the sentiment analysis, let‚Äôs take a look at another
    descriptive variable: the length of each media briefing. This will show us whether
    the media briefings became longer or shorter over time.'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/8c46ac6ce65bdb88d89a63b92a501b6f.png)'
  prefs: []
  type: TYPE_IMG
- en: Number of words in the media briefings by day (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: The figure above shows that the length of media briefings varied quite substantially
    over time. Especially in March and May, there are larger fluctuations (i.e., very
    long or short briefings), whereas, in June, the daily media briefings are quite
    similar in terms of length.
  prefs: []
  type: TYPE_NORMAL
- en: Sentiment Analysis with tidytext
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: After analyzing the dataset descriptively, we are ready to begin with the sentiment
    analysis. In the first part, we will use the **tidytext** package for performing
    sentiment analysis and computing sentiment scores. We will first import the lexicons
    into R and then merge them with our dataset. Using the Bing lexicon, we need to
    find the difference between the number of positive and negative words to produce
    a sentiment score (i.e., sentiment = the number of positive words ‚Äî the number
    of negative words).
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/52c36e29a5fde07cefdd40594b2fc537.png)'
  prefs: []
  type: TYPE_IMG
- en: Sentiment scores based on the Bing lexicon (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: The figure above shows that the sentiments delivered in the media briefings
    were generally negative, which is not necessarily surprising since the media briefings
    were all about how many people passed away, hospitalization rates, potential outbreaks,
    etc. On certain days (e.g., March 24, 2020 and May 4, 2020), the media briefings
    were particularly more negative in terms of sentiments.
  prefs: []
  type: TYPE_NORMAL
- en: Next, we will use the AFINN lexicon. Unlike Bing that labels words as positive
    or negative, AFINN assigns a numerical weight to each word. The sign of the weight
    indicates the polarity of sentiments (i.e., positive or negative), while the value
    indicates the intensity of sentiments. Now, let‚Äôs see if these weighted values
    produce different sentiment scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/fd3bcd5f5955b4a3ae40a0156952837f.png)'
  prefs: []
  type: TYPE_IMG
- en: Sentiment scores based on the AFINN lexicon (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: The results based on the AFINN lexicon seem to be quite different! Once we take
    the ‚Äúweight‚Äù of the tokens into account, most media briefings turn out to be positive
    (see the green bars), although there are still some days with negative sentiments
    (see the red bars). The two analyses we have done so far have yielded very different
    for two reasons. First, as I mentioned above, the Bing lexicon focuses on the
    polarity of the words but ignores the intensity of the words (dislike and hate
    are considered negative words with equal intensity). Unlike the Bing lexicon,
    the AFINN lexicon takes the intensity into account, which impacts the calculation
    of the sentiment scores. Second, the Bing lexicon (6786 words) is fairly larger
    than the AFINN lexicon (2477 words). Therefore, it is likely that some tokens
    in the media briefings are included in the Bing lexicon, but not in the AFINN
    lexicon. Disregarding those tokens might have impacted the results.
  prefs: []
  type: TYPE_NORMAL
- en: The final lexicon we are going to try using the **tidytext** package is NRC.
    As I mentioned earlier, this lexicon uses Plutchik‚Äôs psych-evolutionary theory
    to label the tokens based on basic emotions such as anger, fear, and anticipation.
    We are going to count the number of words or tokens associated with each emotion
    and then visualize the results.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/e8024c832941740e0f097412e6fe3ab3.png)'
  prefs: []
  type: TYPE_IMG
- en: Sentiment scores based on the NRC lexicon (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: The figure shows that the media briefings are mostly positive each month. Dr.
    Hinshaw used words associated with ‚Äútrust‚Äù, ‚Äúanticipation‚Äù, and ‚Äúfear‚Äù. Overall,
    the pattern of these emotions seems to remain very similar over time, indicating
    the consistency of the media briefings in terms of the type and intensity of the
    emotions delivered.
  prefs: []
  type: TYPE_NORMAL
- en: Sentiment Analysis with sentimentr
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Another package for lexicon-based sentiment analysis is **sentimentr** ([Rinker,
    2021](https://okan.cloud/posts/2024-02-09-lexicon-based-sentiment-analysis-using-r/#ref-R-sentiment)).
    Unlike the **tidytext** package, this package takes valence shifters (e.g., negation)
    into account, which can easily flip the polarity of a sentence with one word.
    For example, the sentence ‚ÄúI am not unhappy‚Äù is actually positive, but if we analyze
    it word by word, the sentence may seem to have a negative sentiment due to the
    words ‚Äúnot‚Äù and ‚Äúunhappy‚Äù. Similarly, ‚ÄúI hardly like this book‚Äù is a negative
    sentence but the analysis of individual words, ‚Äúhardly‚Äù and ‚Äúlike‚Äù, may yield
    a positive sentiment score. The **sentimentr** package addresses the limitations
    around sentiment detection with valence shifters (see the package author Tyler
    Rinker‚Äôs Github page for further details on **sentimentr**: [https://github.com/trinker/sentimentr](https://github.com/trinker/sentimentr)).'
  prefs: []
  type: TYPE_NORMAL
- en: To benefit from the **sentimentr** package, we need the actual sentences in
    the media briefings rather than the individual tokens. Therefore, I had to create
    an untokenized version of the dataset, which is available [**here**](https://github.com/okanbulut/blog/raw/master/data_and_codes/wave1_alberta_sentence.RData).
    We will first import this dataset into R, get individual sentences for each media
    briefing using the `get_sentences()` function, and then calculate sentiment scores
    by day and month via `sentiment_by()`.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/1ac1b34b41d6208e8255af9454d93fea.png)'
  prefs: []
  type: TYPE_IMG
- en: A preview of the dataset (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: In the dataset we created, ‚Äúave_sentiment‚Äù is the average sentiment score for
    each day in March, April, May, and June (i.e., days where a media briefing was
    made). Using this dataset, we can visualize the sentiment scores.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE9]'
  prefs: []
  type: TYPE_PRE
- en: '![](../Images/b571e9a77534d4efa810382622d45a36.png)'
  prefs: []
  type: TYPE_IMG
- en: Sentiment scores based on sentiment (Image by author)
  prefs: []
  type: TYPE_NORMAL
- en: In the figure above, the blue bars represent highly positive sentiment scores,
    while the red bars depict comparatively lower sentiment scores. The patterns observed
    in the sentiment scores generated by **sentimentr** closely resemble those derived
    from the AFINN lexicon. Notably, this analysis is based on the original media
    briefings rather than solely tokens, with consideration given to valence shifters
    in the computation of sentiment scores. The convergence between the sentiment
    patterns identified by **sentimentr** and those from AFINN is not entirely unexpected.
    Both approaches incorporate similar weighting systems and mechanisms that account
    for word intensity. This alignment reinforces our confidence in the initial findings
    obtained through AFINN, validating the consistency and reliability of our analyses
    with **sentiment**.
  prefs: []
  type: TYPE_NORMAL
- en: Concluding Remarks
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: In conclusion, lexicon-based sentiment analysis in R offers a powerful tool
    for uncovering the emotional nuances within textual data. Throughout this post,
    we have explored the fundamental concepts of lexicon-based sentiment analysis
    and provided a practical demonstration of its implementation using R. By leveraging
    packages such as **sentimentr** and **tidytext**, we have illustrated how sentiment
    analysis can be seamlessly integrated into your data analysis workflow. As you
    embark on your journey into sentiment analysis, remember that the insights gained
    from this technique extend far beyond the surface of the text. They provide valuable
    perspectives on public opinion, consumer sentiment, and beyond. I encourage you
    to delve deeper into lexicon-based sentiment analysis, experiment with the examples
    presented here, and unlock the rich insights waiting to be discovered within your
    own data. Happy analyzing!
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: '[1] Bulut, O., & Poth, C. N. (2022). Rapid assessment of communication consistency:
    Sentiment analysis of public health briefings during the COVID-19 pandemic. *AIMS
    Public Health*, *9*(2), 293‚Äì306\. [https://doi.org/10.3934/publichealth.2022020](https://doi.org/10.3934/publichealth.2022020)'
  prefs: []
  type: TYPE_NORMAL
- en: '[2] Poth, C. N., Bulut, O., Aquilina, A. M., & Otto, S. J. G. (2021). Using
    data mining for rapid complex case study descriptions: Example of public health
    briefings during the onset of the COVID-19 pandemic. *Journal of Mixed Methods
    Research*, *15*(3), 348‚Äì373\. [https://doi.org/10.1177/15586898211013925](https://doi.org/10.1177/15586898211013925)'
  prefs: []
  type: TYPE_NORMAL
- en: '[3] Hu, M., & Liu, B. (2004). Mining and summarizing customer reviews. *Proceedings
    of the Tenth ACM SIGKDD International Conference on Knowledge Discovery and Data
    Mining*, 168‚Äì177.'
  prefs: []
  type: TYPE_NORMAL
- en: '[4] Mohammad, S. M., & Turney, P. D. (2013). Crowdsourcing a word‚Äìemotion association
    lexicon. *Computational Intelligence*, *29*(3), 436‚Äì465.'
  prefs: []
  type: TYPE_NORMAL
- en: '[5] Plutchik, R. (1980). A general psychoevolutionary theory of emotion. In
    *Theories of emotion* (pp. 3‚Äì33). Elsevier.'
  prefs: []
  type: TYPE_NORMAL
