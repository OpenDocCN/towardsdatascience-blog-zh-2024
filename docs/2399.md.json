["```py\n5 0.8762019230769231 0.09615384615384616 0.24519230769230768 0.18990384615384615\n11 0.8846153846153846 0.2800480769230769 0.057692307692307696 0.019230769230769232\n11 0.796875 0.2668269230769231 0.04807692307692308 0.02403846153846154\n17 0.5649038461538461 0.29927884615384615 0.07211538461538461 0.026442307692307692\n8 0.48197115384615385 0.39663461538461536 0.06490384615384616 0.019230769230769232\n11 0.47716346153846156 0.7884615384615384 0.07932692307692307 0.10576923076923077\n11 0.3425480769230769 0.5745192307692307 0.11057692307692307 0.038461538461538464\n6 0.43509615384615385 0.5216346153846154 0.019230769230769232 0.004807692307692308\n17 0.4855769230769231 0.5264423076923077 0.019230769230769232 0.004807692307692308\n2 0.26322115384615385 0.3713942307692308 0.02403846153846154 0.007211538461538462\n```", "```py\npython3 -m venv venv\nsource venv/bin/activate\npip3 install ultralytics\n```", "```py\npath: /Users/oliverma/yolov8-project/dataset/ # absolute path to dataset\ntest: test/images # relative path to test images\ntrain: train/images # relative path to training images\nval: val/images # relative path to validation images\n\n# classes\nnames:\n  0: bottle\n```", "```py\nfrom ultralytics import YOLO\n\nmodel = YOLO(\"yolov8n.yaml\")\n\nmodel.train(data=\"config.yaml\", epochs=100)\n```", "```py\npython3 main.py\n```", "```py\nyolo detect train data=config.yaml model=yolov8n.yaml epochs=100\n```", "```py\nyolo detect train data=config.yaml model=yolov8n.yaml epochs=300 imgsz=640 device=mps\n```", "```py\n!pip install kaggle\nfrom google.colab import files\nfiles.upload()\n```", "```py\n!mkdir ~/.kaggle\n!cp kaggle.json ~/.kaggle/\n!chmod 600 ~/.kaggle/kaggle.json\n!kaggle datasets download -d [DATASET] # replace [DATASET] with the desired dataset ref\n```", "```py\n!unzip dataset.zip -d dataset\n```", "```py\npath: /content/dataset/ # absolute path to dataset\ntest: test/images # relative path to test images\ntrain: train/images # relative path to training images\nval: val/images # relative path to validation images\n\n# classes\nnames:\n  0: bottle\n```", "```py\n!pip install ultralytics\n```", "```py\nimport os\n\nfrom ultralytics import YOLOmodel = YOLO(\"yolov8n.yaml\")\n\nresults = model.train(data=\"config.yaml\", epochs=100)\n```", "```py\nfrom ultralytics import YOLO\n\nmodel = YOLO(\"best.pt\")\n\nresults = model(source=0, show=True, conf=0.25, save=True)\n```", "```py\npython3 predict.py\n```", "```py\nyolo detect predict model=best.pt source=0 show=True conf=0.25 save=True\n```", "```py\nresults = model(source=\"path/to/image.jpg\", show=True, conf=0.25, save=True) # static image\nresults = model(source=\"screen\", show=True, conf=0.25, save=True) # screenshot of current screen\nresults = model(source=\"https://ultralytics.com/images/bus.jpg\", show=True, conf=0.25, save=True) # image or video URL\nresults = model(source=\"path/to/file.csv\", show=True, conf=0.25, save=True) # CSV file\nresults = model(source=\"path/to/video.mp4\", show=True, conf=0.25, save=True) # video file\nresults = model(source=\"path/to/dir\", show=True, conf=0.25, save=True) # all images and videos within directory\nresults = model(source=\"path/to/dir/**/*.jpg\", show=True, conf=0.25, save=True) # glob expression\nresults = model(source=\"https://www.youtube.com/watch?v=dQw4w9WgXcQ\", show=True, conf=0.25, save=True) # YouTube video URL\n```", "```py\nfrom ultralytics import YOLO\n\nmodel = YOLO(\"best.pt\")\n\nresults = model(source=\"bottles.jpg\", show=True, conf=0.25, save=True)\n\nprint(\"Bounding boxes of all detected objects in xyxy format:\")\nfor r in results:\n  print(r.boxes.xyxy)\n\nprint(\"Confidence values of all detected objects:\")\nfor r in results:\n  print(r.boxes.conf)\n\nprint(\"Class values of all detected objects:\")\nfor r in results:\n  print(r.boxes.cls)\n```"]