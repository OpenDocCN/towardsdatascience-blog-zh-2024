- en: 'Linear Algebra 5: Linear Independence'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/linear-algebra-5-linear-independence-d350759debee?source=collection_archive---------4-----------------------#2024-03-21](https://towardsdatascience.com/linear-algebra-5-linear-independence-d350759debee?source=collection_archive---------4-----------------------#2024-03-21)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '![](../Images/4d3d3691c84ee497c3611cd1a8245093.png)'
  prefs: []
  type: TYPE_IMG
- en: Ax = 0 and proving a set of vectors is linearly independent
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@t9nz?source=post_page---byline--d350759debee--------------------------------)[![tenzin
    migmar (t9nz)](../Images/d9a3e1fe10afba1f1dc0fc7e4d241d73.png)](https://medium.com/@t9nz?source=post_page---byline--d350759debee--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--d350759debee--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--d350759debee--------------------------------)
    [tenzin migmar (t9nz)](https://medium.com/@t9nz?source=post_page---byline--d350759debee--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--d350759debee--------------------------------)
    ·6 min read·Mar 21, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: Preface
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Welcome back to the fifth edition of my ongoing series on the basics of Linear
    Algebra, the foundational math behind machine learning. In my previous [article](https://medium.com/@t9nz/linear-algebra-1-1-15b70e48bab9),
    I walked through the matrix equation Ax = **b**. This essay will investigate the
    important concept of linear independence and how it connects to everything we’ve
    learned so far.
  prefs: []
  type: TYPE_NORMAL
- en: This article would best serve readers if read in accompaniment with Linear Algebra
    and Its Applications by David C. Lay, Steven R. Lay, and Judi J. McDonald. Consider
    this series as a companion resource.
  prefs: []
  type: TYPE_NORMAL
- en: Feel free to share thoughts, questions, and critique.
  prefs: []
  type: TYPE_NORMAL
- en: Linear Independence in ℝⁿ
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Previously, we learned about matrix products and matrix equations in the form
    *A***x** = **b**. We covered that *A***x** = **b** has a solution **x** if **b**
    is a linear combination of the set of vectors (columns) in matrix *A*.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/11dcd81a10712976ba1c5b355fb8f55c.png)'
  prefs: []
  type: TYPE_IMG
- en: There is a special matrix equation in Linear Algebra *A***x** = **0** which
    we refer to as a homogenous linear system. *A***x** = **0** will always have at
    least one solution where **x** = **0** which is called the trivial solution because
    it is trivially easy to show that any matrix *A* multiplied by the **0** vector
    **x** will result in the **0** vector.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/df93b59487211315eb5ddc8763d6c2ce.png)'
  prefs: []
  type: TYPE_IMG
- en: 'What we’re really interested in learning is whether the matrix equation *A***x**
    = **0** has *only* the trivial solution. If *A***x** = **0** has only the trivial
    solution **x** = 0, then the set of vectors that make up the columns of *A* are
    linearly independent. In other words: v₁ + c₂v₂ + … + cₐvₐ = 0 where c₁, c₂, …
    cₐ must all be 0\. A different way of thinking about this is that none of the
    vectors in the set can be written as a linear combination of another.'
  prefs: []
  type: TYPE_NORMAL
- en: 'On the other hand, if there exists a solution where **x** ≠ 0 then the set
    of vectors are linearly dependent. Then it follows that at least one of the vectors
    in the set can be written as a linear combination of another: c₁v₁ + c₂v₂ + …
    + cₐvₐ = 0 where not all where c₁, c₂, … cₐ equal 0.'
  prefs: []
  type: TYPE_NORMAL
- en: A neat, intuitive way of thinking about the concept of linear independence is
    the question of can you find a set of weights that will collapse the linear combination
    of a set of vectors to the origin? If a set of vectors is linearly independent,
    then 0 is the only weight that can be applied to each vector for the linear combination
    to equal the zero vector. If the vectors are linearly dependent, then there exists
    at least one set of non-zero weights such that the vector linear combination is
    zero.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/4d3d3691c84ee497c3611cd1a8245093.png)'
  prefs: []
  type: TYPE_IMG
- en: Determining Linear Independence
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: For sets with only one vector, determining linear independence is trivial. If
    the vector is the zero vector, then it is linearly dependent. This is because
    any non-zero weight multiplied to the zero vector will equal the zero vector and
    so there exists infinitely many solutions for *A***x** = **0**. If the vector
    is not the zero vector, then the vector is linearly independent since any vector
    multiplied by zero will become the zero vector.
  prefs: []
  type: TYPE_NORMAL
- en: If a set contains two vectors, the vectors are linearly dependent if one vectors
    is a multiple of the other. Otherwise, they are linearly independent.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/6963ce12226b1c0a8319dc6b31b4d01e.png)'
  prefs: []
  type: TYPE_IMG
- en: In the case of sets with more than two vectors, more computation is involved.
    Let the vectors form the columns of matrix *A* and row reduce matrix *A* to reduced
    row echelon form. If the reduced row echelon form of the matrix has a pivot entry
    in every column, then the set of vectors is linearly independent. Otherwise, the
    set of vectors is linearly dependent. Why is this the case? Consider the process
    of row reducing a matrix to its reduced row echelon form. We perform a series
    of elementary row operations such as multiplying rows by constants, swapping rows,
    adding one row to another in pursuit of a matrix in a simpler form so that its
    underlying properties are clear while the solution space is preserved.
  prefs: []
  type: TYPE_NORMAL
- en: In the case of linear independence, the quality of having a pivot in each column
    indicates that each vector plays a leading role in at least one part of the linear
    combination equation. If each vector contributes independently to the linear system,
    then no vector can be expressed as a linear combination of the others and so the
    system is linearly independent. Conversely, if there is a column in RREF without
    a pivot entry, it means that the corresponding variable (or vector) is a dependent
    variable and can be expressed in terms of the other vectors. In other words, there
    exists a redundancy in the system, indicating linear dependence among the vectors.
  prefs: []
  type: TYPE_NORMAL
- en: A concise way to summarize this idea involves the rank of a matrix. The rank
    is the maximum number of linearly independent columns in a matrix and so it follows
    that the rank is equal to the number of pivots in reduced row echelon form.
  prefs: []
  type: TYPE_NORMAL
- en: If the number of columns in a matrix is equal to the rank, then the matrix is
    linearly independent. Otherwise, the matrix is linearly dependent.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/17ac6310fd0aa55970cd8158d56b60c0.png)![](../Images/c351975238f19cabce9ef5fa7b90eab2.png)'
  prefs: []
  type: TYPE_IMG
- en: Linear Independence with Numpy
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Attempting computations made by hand is a worthwhile exercise in better understanding
    linear independence, but a more practical approach would be to use the capabilities
    built into the Numpy library to both test for linear independence and to derive
    the solution space for *A***x** = **0** of a given matrix.
  prefs: []
  type: TYPE_NORMAL
- en: We can approach checking if a matrix is linearly independent using the rank.
    As mentioned previously, a matrix is linearly independent if the rank of a matrix
    is equal to the number of columns so our code will be written around this criteria.
  prefs: []
  type: TYPE_NORMAL
- en: The following code generates the solution space of vectors for *A***x** = **0**.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: Linear independence, while fundamental to Linear Algebra, also serves as a cornerstone
    in machine learning applications. Linear independence is crucial in feature selection
    and dimensionality reduction techniques such as principal component analysis (PCA)
    which operates on the collinearity or linear dependence between features in the
    dataset.
  prefs: []
  type: TYPE_NORMAL
- en: You’ll continue to see linear independence pop up in machine learning!
  prefs: []
  type: TYPE_NORMAL
- en: Summary
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: A system of linear equations is referred to as homogenous if it can be written
    in the form *A***x** = **0**.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linearly independent vectors cannot be expressed as a linear combination of
    each other (except the trivial combination where all coefficients are zero).
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Linearly dependent vectors are those where at least one vector in the set can
    be expressed as a linear combination of the others.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Numpy, a Python library for working with arrays offers fantastic support for
    both checking if a matrix is linearly independent and also solving Ax = 0 for
    a given matrix.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Notes
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '*All images created by the author unless otherwise noted.'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/74c2602358c7142bde6453236c11dad5.png)'
  prefs: []
  type: TYPE_IMG
