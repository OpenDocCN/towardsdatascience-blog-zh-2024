- en: Revolutionize Web Browsing with AI
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 用AI彻底改变网页浏览
- en: 原文：[https://towardsdatascience.com/revolutionize-web-browsing-with-ai-5d5f6ce5f5df?source=collection_archive---------4-----------------------#2024-03-10](https://towardsdatascience.com/revolutionize-web-browsing-with-ai-5d5f6ce5f5df?source=collection_archive---------4-----------------------#2024-03-10)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/revolutionize-web-browsing-with-ai-5d5f6ce5f5df?source=collection_archive---------4-----------------------#2024-03-10](https://towardsdatascience.com/revolutionize-web-browsing-with-ai-5d5f6ce5f5df?source=collection_archive---------4-----------------------#2024-03-10)
- en: Unlock Interactive Online Experiences Using GPT-4V and Puppeteer
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用GPT-4V和Puppeteer解锁互动在线体验
- en: '[](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)[![Tianyi
    Li](../Images/40fce472f42c650daa1433641bf732df.png)](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)
    [Tianyi Li](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)[![Tianyi
    Li](../Images/40fce472f42c650daa1433641bf732df.png)](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)
    [Tianyi Li](https://medium.com/@bianbianzhu123?source=post_page---byline--5d5f6ce5f5df--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)
    ·23 min read·Mar 10, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5d5f6ce5f5df--------------------------------)
    ·23分钟阅读·2024年3月10日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'Authors: [Tianyi Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--5d5f6ce5f5df--------------------------------),
    [Selina Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--5d5f6ce5f5df--------------------------------)'
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: 作者：[Tianyi Li](https://medium.com/u/4092d7367010?source=post_page---user_mention--5d5f6ce5f5df--------------------------------)，[Selina
    Li](https://medium.com/u/7b9ea39b0d79?source=post_page---user_mention--5d5f6ce5f5df--------------------------------)
- en: '![](../Images/5534a8ac0a28ede1472534e7d922e9d6.png)'
  id: totrans-7
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5534a8ac0a28ede1472534e7d922e9d6.png)'
- en: Image generated by the author with DALL·E
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者使用DALL·E生成
- en: · [Introduction](#ced3)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: · [介绍](#ced3)
- en: · [Potential Use Cases](#b5c4)
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: · [潜在的使用案例](#b5c4)
- en: · [High-level Workflow](#efe3)
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: · [高级工作流](#efe3)
- en: · [Architecture](#2455)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: · [架构](#2455)
- en: ∘ [Starting Out](#1813)
  id: totrans-13
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [开始使用](#1813)
- en: ∘ [Pick the Right Path](#3fd7)
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [选择正确的路径](#3fd7)
- en: ∘ [IT IS A LOOP!](#ce07)
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [这是一个循环！](#ce07)
- en: ∘ [Directory Structure](#30b8)
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [目录结构](#30b8)
- en: ∘ [Browser Controller Service](#c456)
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [浏览器控制服务](#c456)
- en: ∘ [Element Annotation Service](#d19c)
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: ∘ [元素注释服务](#d19c)
- en: · [Conclusion](#b379)
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: · [结论](#b379)
- en: Introduction
  id: totrans-20
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 介绍
- en: 'Imagine you are keen on attending an AI event in your city this month, but
    you have specific criteria in mind, perhaps related to timing or the focus of
    the event. Normally, this would involve the following process:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 假设你非常想参加本月在你所在城市举办的AI活动，但你心中有一些特定的标准，可能与活动的时间安排或重点内容有关。通常，这将涉及以下过程：
- en: Launching a web search with terms like “AI events in [your city] this month.”
  id: totrans-22
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 使用诸如“本月[你的城市]的AI事件”之类的关键词启动网络搜索。
- en: Sifting through search results to find a link that seems promising.
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 从搜索结果中筛选出看起来有潜力的链接。
- en: Navigating the chosen website to determine its relevance, possibly needing to
    delve deeper through additional links.
  id: totrans-24
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 浏览所选网站以确定其相关性，可能需要通过其他链接进一步深入了解。
- en: After much back and forth, finally pinpointing the event that fits your criteria
    and noting its details for your calendar.
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 经过反复推敲，最终找到了符合你标准的活动，并将其详细信息记录到日历中。
- en: 'If we break down the above process, it basically involves steps that can be
    categorized into the following:'
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 如果我们分解上述过程，它基本上涉及的步骤可以归类为以下几类：
- en: Control the browser, such as go to a URL, click on a link, go back, etc.
  id: totrans-27
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 控制浏览器，比如访问网址、点击链接、返回等。
- en: Browse through the content of a page
  id: totrans-28
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 浏览页面内容
- en: Make decisions based on the content of that page, such as determining which
    link is relevant to your query.
  id: totrans-29
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 根据页面内容做出决策，例如确定哪个链接与你的查询相关。
- en: By utilizing the emerging Large Language Model (LLM) technology, now we are
    able to **automate the whole process through a LLM powered AI Agent**.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 通过利用新兴的大型语言模型（LLM）技术，我们现在可以通过一个**LLM驱动的AI代理自动化整个过程**。
- en: Enter the AI agent, it does exactly what you do as we described above.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 进入AI代理，它正如我们上面所描述的那样，做着你所做的一切。
- en: '**Browser Control**: the AI uses tools like `Puppeteer` to navigate the internet.
    Think of Puppeteer as the AI''s hands, allowing it to open tabs, click on links,
    and navigate web pages with ease.'
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**浏览器控制**：AI使用像`Puppeteer`这样的工具来浏览互联网。可以把Puppeteer看作是AI的双手，它能轻松地打开标签页、点击链接，并在网页之间导航。'
- en: '**Content Browsing**: Think of this as the AI’s eyes. `Puppeteer` can take
    screenshots of web pages, and feed them to the AI.'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**内容浏览**：可以把这个看作是AI的眼睛。`Puppeteer`能够拍摄网页截图，并将其传递给AI。'
- en: '**Decision-Making**: This is where the AI’s brain, powered by Large Language
    Models (LLM), comes into play. It assesses the screenshot of each page, analyzing
    the image, determining relevance and deciding on the next steps, mimicking human
    judgment.'
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**决策制定**：这是AI的大脑发挥作用的地方，借助大型语言模型（LLM）。它评估每个页面的截图，分析图像，判断相关性并决定下一步，模拟人类判断。'
- en: In this article, we will explore and build an AI agent that utilizes the power
    of the `gpt-4-vision-preview` model from OpenAI. The model can **analyze images**
    and provide textual responses.
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们将探索并构建一个利用OpenAI的`gpt-4-vision-preview`模型的AI代理。该模型可以**分析图像**并提供文本回复。
- en: This agent will be able to interact with the user, control a web browser, and
    process data. We’ll explore its structure and how it works.
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 这个代理将能够与用户互动，控制网页浏览器，并处理数据。我们将探讨它的结构以及如何工作。
- en: This article is inspired by a youtube video [GPT4V + Puppeteer = AI agent browse
    web like human? 🤖](https://www.youtube.com/watch?v=IXRkmqEYGZA&t=184s) from [AI
    Jason](https://www.youtube.com/@AIJasonZ).
  id: totrans-37
  prefs: []
  type: TYPE_NORMAL
  zh: 本文的灵感来源于一个YouTube视频 [GPT4V + Puppeteer = AI代理像人类一样浏览网页？🤖](https://www.youtube.com/watch?v=IXRkmqEYGZA&t=184s)，由[AI
    Jason](https://www.youtube.com/@AIJasonZ)发布。
- en: '**All the code shown in this article can be found in this Github repo** [**AI
    Web Agent**](https://github.com/bianbianzhu/ai-web-agent/tree/main/agent)**.**'
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: '**本文中展示的所有代码都可以在这个Github仓库中找到** [**AI Web Agent**](https://github.com/bianbianzhu/ai-web-agent/tree/main/agent)**.**'
- en: Potential Use Cases
  id: totrans-39
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 潜在的使用案例
- en: Pairing with Text to speech, it can allow people with visual impairments to
    browse the web.
  id: totrans-40
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与文本转语音配对，它可以帮助视力障碍者浏览网页。
- en: Quickly locate a product on an E-commerce website.
  id: totrans-41
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 快速定位电子商务网站上的产品。
- en: Auto-browse websites with dynamic loading contents (e.g. Real Estate listings)
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动浏览具有动态加载内容的网站（例如房地产列表）
- en: Auto-browse websites requiring personal logins (e.g. LinkedIn, Instagram, Facebook)
  id: totrans-43
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动浏览需要个人登录的网站（例如 LinkedIn、Instagram、Facebook）
- en: Take online quiz and tests
  id: totrans-44
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 参加在线测验和测试
- en: Play web games
  id: totrans-45
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 玩网页游戏
- en: Online seats / tickets grabbing
  id: totrans-46
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 在线抢座/抢票
- en: Automated application feature testing
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 自动化应用功能测试
- en: High-level Workflow
  id: totrans-48
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 高层次工作流程
- en: '![](../Images/586a1f94e2d077c069b61fadefe44de0.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/586a1f94e2d077c069b61fadefe44de0.png)'
- en: The flowchart showing the high-level workflow of the agent.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: 显示代理高层次工作流程的流程图。
- en: First user raises a question to the agent.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，用户向代理提出问题。
- en: Upon receiving the question, GPT-4V is going to return a URL as an entry point
    of the web searching. The URL can be specified by the user as part of the question;
    and if not specified, by default it will be a Google search on key words extracted
    by GPT from user’s question.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到问题后，GPT-4V将返回一个URL作为网页搜索的入口。该URL可以由用户在问题中指定；如果未指定，默认情况下，它将是GPT从用户问题中提取的关键词进行Google搜索。
- en: Upon receiving the URL, puppeteer will open the URL in webpage. It will highlight
    all interactive elements on the page such as links, clicks, buttons, and then
    take a screenshot of the page and return it.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到URL后，Puppeteer将打开该URL的网页。它会高亮显示页面上的所有互动元素，如链接、点击、按钮，然后截图并返回。
- en: Upon receiving the screenshot, GPT-4V will look into the page and process the
    highlighted information. As a brain, GPT will decide if it has already got a good
    answer to user’s questions.
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 在接收到截图后，GPT-4V将查看页面并处理高亮显示的信息。作为大脑，GPT将决定是否已经得到了一个好的答案来回答用户的问题。
- en: If there is a good answer, GPT will provide the answer back to the user.
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: 如果有一个好的答案，GPT会将答案返回给用户。
- en: If not, GPT-4V will decide which URL or click to visit for the next step. Puppeteer
    will again opens the new URL, highlight the interactive elements and take a screenshot
    for further processing.
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 如果没有，GPT-4V 将决定下一个步骤应访问哪个 URL 或点击哪个元素。Puppeteer 将再次打开新的 URL，突出显示交互元素，并截取屏幕截图以供进一步处理。
- en: This process will repeat until GPT decides it has got a good answer for the
    user.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 这个过程将反复进行，直到 GPT 决定它已为用户找到了一个好的答案。
- en: Architecture
  id: totrans-58
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 架构
- en: 'As we are now clear on how the AI agent works, let’s take a look at the architecture
    of the agent. The agent is structured as follows:'
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 既然我们现在已经了解了 AI 代理是如何工作的，接下来让我们看看代理的架构。代理的结构如下：
- en: '![](../Images/5a8375fa18a3f3434a9572dbdf104d0b.png)'
  id: totrans-60
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5a8375fa18a3f3434a9572dbdf104d0b.png)'
- en: Overview of the agent’s architecture
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 代理架构概览
- en: This architecture may look complex at first, but it’s actually quite simple
    once you understand the different components and how they work together. Let’s
    break it down.
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 这种架构乍一看可能很复杂，但一旦理解了不同组件及其如何协同工作，其实非常简单。我们来逐步解析。
- en: Starting Out
  id: totrans-63
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 开始
- en: This is the starting point of the workflow. The user interacts with the agent
    by providing a prompt which clarifies the task (`user task prompt`). At the same
    time, the agent gets some default instructions (`system prompt`), about how it
    should do its job. These instructions tell the agent what its role is, how to
    format its answers, and other important info.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 这是工作流程的起点。用户通过提供明确任务的提示（`user task prompt`）与代理进行交互。同时，代理获得一些默认指令（`system prompt`），告诉它如何执行任务。这些指令告诉代理它的角色是什么，如何格式化回答，以及其他重要信息。
- en: 'Here’s a simple view of the starting point:'
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是起始点的一个简单视图：
- en: '![](../Images/fffb4608e71295968f9cdae12e5bada0.png)'
  id: totrans-66
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/fffb4608e71295968f9cdae12e5bada0.png)'
- en: The initial step
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 初始步骤
- en: 'The example of the `user task prompt` might be:'
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: '`user task prompt` 的示例可能是：'
- en: '[PRE0]'
  id: totrans-69
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: 'And here’s what the system prompt might look like:'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 这是系统提示可能的样子：
- en: '![](../Images/dd728c47d52c1476b78ddd1a127ed3d6.png)'
  id: totrans-71
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dd728c47d52c1476b78ddd1a127ed3d6.png)'
- en: A typical system prompt that provides context for the agent.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 一个典型的系统提示，提供代理的上下文。
- en: 'Credit: [JayZeeDesign](https://github.com/JayZeeDesign/Scrape-anything---Web-AI-agent)'
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 致谢：[JayZeeDesign](https://github.com/JayZeeDesign/Scrape-anything---Web-AI-agent)
- en: 'The system prompt is crucial because they help the agent decide how to act.
    The three main areas are highlighted in different colors:'
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 系统提示非常关键，因为它们帮助代理决定如何行动。以下三个主要领域用不同颜色标出：
- en: What is the role of the agent. (Aqua)
  id: totrans-75
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理的角色是什么。（水绿色）
- en: How the agent should present its answers. (Red)
  id: totrans-76
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理应该如何呈现其答案。（红色）
- en: Extra instructions to help the agent. (Yellow)
  id: totrans-77
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 额外的指令，帮助代理执行任务。（黄色）
- en: The prompts are then sent to the openai service, which is responsible for generating
    responses.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 然后，这些提示会发送到 OpenAI 服务，该服务负责生成回答。
- en: 'Based on these prompts, the agent’s response will be shaped into only 3 types:'
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 根据这些提示，代理的回答将被整理成仅 3 种类型：
- en: '`{ "url": "https://www.example.com" }` - The agent wants to navigate to a specific
    webpage.'
  id: totrans-80
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`{ "url": "https://www.example.com" }` - 代理希望导航到一个特定的网页。'
- en: '`{ "click": "text on a button" }` - The agent wants to click on a specific
    element on the page.'
  id: totrans-81
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`{ "click": "text on a button" }` - 代理希望点击页面上的特定元素。'
- en: '`regular message` - The agent has finished the task and extracted the required
    information to the user.'
  id: totrans-82
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '`regular message` - 代理已完成任务并将所需信息提取给用户。'
- en: For the initial conversation, the response would normally be a Google search
    url, such as `https://www.google.com/search?q=AI+events+in+Melbourne+March`. This
    response would then trigger the browser-controller service to navigate to the
    URL.
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 对于初始对话，回答通常会是一个 Google 搜索 URL，例如 `https://www.google.com/search?q=AI+events+in+Melbourne+March`。然后，该回答会触发浏览器控制服务，导航到该
    URL。
- en: '**Code implementation of the starting point**'
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: '**起始点的代码实现**'
- en: '[PRE1]'
  id: totrans-85
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: The following function creates the interface in the terminal for the user to
    input their query.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 以下函数在终端中创建用户输入查询的界面。
- en: '[PRE2]'
  id: totrans-87
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 'And you may notice the `promptMap` object in the code. It is a map of functions
    that returns all the prompts. Making it a function allows the prompts to be dynamic
    and change based on the context of the conversation. Here is an example:'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能会注意到代码中的 `promptMap` 对象。它是一个返回所有提示的函数映射。将其设为函数使得这些提示具有动态性，可以根据对话的上下文发生变化。以下是一个示例：
- en: '[PRE3]'
  id: totrans-89
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: An important note is that to allow the LLM to have the `memory` of the conversation,
    we need to always push the new prompts to the message array and send the whole
    array to the LLM. This could cause the explosion of the tokens. Use the `max_tokens`
    parameter to build the safe net.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 一个重要的注意事项是，为了让LLM能够记住对话的`memory`，我们需要始终将新的提示推送到消息数组中，并将整个数组发送给LLM。这可能会导致令牌数暴增。使用`max_tokens`参数来建立安全网。
- en: Below is how to use the openai service to generate the response.
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是如何使用openai服务生成响应的方法。
- en: '[PRE4]'
  id: totrans-92
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: And of course, to use `openai` service, you need to have the `openai` package
    installed and the API key. Here is a seperate file to handle the openai service.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，要使用`openai`服务，你需要安装`openai`包并配置API密钥。这里有一个单独的文件来处理openai服务。
- en: '[PRE5]'
  id: totrans-94
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: Pick the Right Path
  id: totrans-95
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 选择正确的路径
- en: As we mentioned earlier, the LLM response will be shaped into only 3 types.
    Each of these types will trigger a different browser-controller service to act
    accordingly.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 如前所述，LLM响应将仅被塑造成三种类型中的一种。每种类型都会触发不同的浏览器控制服务进行相应的操作。
- en: '![](../Images/6ca654ab4349b5e66c39e9985ead90bc.png)'
  id: totrans-97
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/6ca654ab4349b5e66c39e9985ead90bc.png)'
- en: Agent choosing the optimal path guided by LLM feedback.
  id: totrans-98
  prefs: []
  type: TYPE_NORMAL
  zh: 代理程序根据LLM的反馈选择最佳路径。
- en: '**URL Response Flow**'
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: '**URL响应流**'
- en: '**Response format { “url”: “**[**https://www.example.com**](https://www.example.com)**"
    }**'
  id: totrans-100
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应格式 { “url”: “**[**https://www.example.com**](https://www.example.com)**"
    }**'
- en: '**Indicate that the agent should navigate to a specific webpage.**'
  id: totrans-101
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指示代理程序导航到特定网页。**'
- en: '**This response would trigger the following steps in the script:**'
  id: totrans-102
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**此响应将触发脚本中的以下步骤：**'
- en: Extract the URL from the response
  id: totrans-103
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从响应中提取URL
- en: Opens a browser using Puppeteer and navigates to the URL
  id: totrans-104
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用Puppeteer打开浏览器并导航到URL
- en: The agent then takes a screenshot of the page and sends it with another special
    instruction prompt back to the LLM to analyze the content of the page and decide
    on the next steps.
  id: totrans-105
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，代理程序会截图并通过另一个特殊指令提示发送给LLM，分析页面内容并决定下一步操作。
- en: '![](../Images/97229ad5607b2a6fcf9d24c47a1fe5a3.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/97229ad5607b2a6fcf9d24c47a1fe5a3.png)'
- en: Processing flow for ‘url’ response messages.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: ‘url’响应消息的处理流程。
- en: '**Click Response Flow**'
  id: totrans-108
  prefs: []
  type: TYPE_NORMAL
  zh: '**点击响应流**'
- en: '**Response format { “click”: “text on a button” }**'
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**响应格式 { “click”: “按钮上的文本” }**'
- en: '**Indicate that the agent should click on a specific element on the page.**'
  id: totrans-110
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**指示代理程序点击页面上的特定元素。**'
- en: '**The agent will undergo the following steps:**'
  id: totrans-111
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '**代理程序将执行以下步骤：**'
- en: Extract the link text from the response
  id: totrans-112
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 从响应中提取链接文本
- en: The agent then uses Puppeteer to find the element with the matching text and
    clicks on it
  id: totrans-113
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，代理程序使用Puppeteer查找匹配文本的元素并点击它
- en: The agent takes a screenshot of the page and sends it with another special instruction
    prompt back to the LLM to analyze the content of the page and decide on the next
    steps.
  id: totrans-114
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 代理程序会截图并通过另一个特殊指令提示发送给LLM，分析页面内容并决定下一步操作。
- en: '![](../Images/a2d29ca66285afcabd6ea669bf885bc1.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a2d29ca66285afcabd6ea669bf885bc1.png)'
- en: Processing flow for ‘click’ response messages.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: ‘click’响应消息的处理流程。
- en: Let’s take a look at the `special instruction prompt` that the agent sends to
    the LLM after taking a screenshot of the page.
  id: totrans-117
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来看看代理程序在截图页面后发送给LLM的`特殊指令提示`。
- en: '![](../Images/ff292db3f933db519ba4f04613fe2010.png)'
  id: totrans-118
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ff292db3f933db519ba4f04613fe2010.png)'
- en: 'Credit: [JayZeeDesign](https://github.com/JayZeeDesign/Scrape-anything---Web-AI-agent)'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: 来源：[JayZeeDesign](https://github.com/JayZeeDesign/Scrape-anything---Web-AI-agent)
- en: This prompt basically tells the LLM to analyze the screenshot of the page and
    decide on the next steps. The response format should be exactly as we mentioned
    in the system prompt. With LLMs, it’s often necessary to reiterate rules or guidelines
    to ensure consistent performance.
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: 这个提示基本上告诉大语言模型（LLM）分析页面的截图并决定下一步操作。响应格式应该与我们在系统提示中提到的完全一致。对于LLM，通常需要反复说明规则或指南，以确保一致的表现。
- en: '**Regular Message Flow — Regular message**'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**常规消息流 — 常规消息**'
- en: Indicate that the agent has finished the task and extracted the required information
    to the user.
  id: totrans-122
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 指示代理程序已完成任务并向用户提取所需信息。
- en: This is normally the end of the current task.
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这通常是当前任务的结束。
- en: The agent will simply display the information to the user.
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 代理程序将简单地向用户展示信息。
- en: '**Code implementation of the path selection**'
  id: totrans-125
  prefs: []
  type: TYPE_NORMAL
  zh: '**路径选择的代码实现**'
- en: '[PRE6]'
  id: totrans-126
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: A function that converts the **plain string response** from the LLM to the defined
    type.
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: 一个将LLM的**纯文本响应**转换为定义类型的函数。
- en: '[PRE7]'
  id: totrans-128
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: 'To implement the `Path Selection`, the code should have the following backbone:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现 `路径选择`，代码应具有以下骨架结构：
- en: '[PRE8]'
  id: totrans-130
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: IT IS A LOOP!
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 它是一个循环！
- en: Now, we are clear on the different paths the agent can take. One thing to note
    is that the agent will keep looping through these steps until the task is completed
    and respond with a regular message.
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，我们清楚了代理可以采取的不同路径。需要注意的一点是，代理会一直循环这些步骤，直到任务完成并响应常规消息。
- en: 'An example of the loop is like:'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: 循环的示例如下：
- en: '![](../Images/cece81855a5ee85556bb1ccc9b2efffb.png)'
  id: totrans-134
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cece81855a5ee85556bb1ccc9b2efffb.png)'
- en: The agent workflow is a loop!
  id: totrans-135
  prefs: []
  type: TYPE_NORMAL
  zh: 代理工作流是一个循环！
- en: The URL or Click Response Flow will be fired multiple times until the agent
    has found the answer.
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: URL 或点击响应流将多次触发，直到代理找到答案。
- en: 'To implement the loop, the code should have the following structure:'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: 要实现循环，代码应具有以下结构：
- en: first, a helper function to determine when to stop the loop.
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: 首先，创建一个辅助函数来判断何时停止循环。
- en: '[PRE9]'
  id: totrans-139
  prefs: []
  type: TYPE_PRE
  zh: '[PRE9]'
- en: Then, the main loop function.
  id: totrans-140
  prefs: []
  type: TYPE_NORMAL
  zh: 然后是主循环函数。
- en: '[PRE10]'
  id: totrans-141
  prefs: []
  type: TYPE_PRE
  zh: '[PRE10]'
- en: As you may notice, we didn’t specify the regular message flow in the loop. This
    is because the regular message does not trigger any browser-controller service.
    It simply ends the loop and displays the message to the user, basically a `console.log`
    statement. Of course, you can add more logic to the regular message flow such
    as saving the message to a csv file, etc.
  id: totrans-142
  prefs: []
  type: TYPE_NORMAL
  zh: 正如你可能注意到的，我们没有在循环中指定常规消息流。这是因为常规消息不会触发任何浏览器控制服务。它只是结束循环并向用户显示消息，基本上是一个 `console.log`
    语句。当然，你可以在常规消息流中添加更多的逻辑，例如将消息保存到 CSV 文件中等。
- en: '[PRE11]'
  id: totrans-143
  prefs: []
  type: TYPE_PRE
  zh: '[PRE11]'
- en: Directory Structure
  id: totrans-144
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 目录结构
- en: After understanding the main flow of the agent, let’s take a look at the directory
    structure of the agent.
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在了解了代理的主要流程之后，接下来我们来看一下代理的目录结构。
- en: '[PRE12]'
  id: totrans-146
  prefs: []
  type: TYPE_PRE
  zh: '[PRE12]'
- en: '`agent.ts`: This is the main script for our agent. It orchestrates the other
    services and is responsible for the main execution flow of the agent. It contains
    the starting point, the main loop, and the path selection logic.'
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: '`agent.ts`：这是我们代理的主脚本。它协调其他服务，负责代理的主要执行流程。它包含起始点、主循环和路径选择逻辑。'
- en: '`services/`: This directory contains various services used by the agent. Each
    service is responsible for a specific task.'
  id: totrans-148
  prefs: []
  type: TYPE_NORMAL
  zh: '`services/`：该目录包含代理使用的各种服务。每个服务负责一个特定任务。'
- en: 'browser-controller.ts: This service controls the browser using Puppeteer. It
    can navigate to pages, interact with elements, and take screenshots.'
  id: totrans-149
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: browser-controller.ts：该服务使用 Puppeteer 控制浏览器。它可以浏览页面、与元素交互以及截图。
- en: 'data-transformer.ts: This service transforms data for the agent. It can format
    data, clean it, and prepare it for further processing.'
  id: totrans-150
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: data-transformer.ts：该服务为代理转换数据。它可以格式化数据、清洗数据，并准备进一步处理。
- en: 'element-annotator.ts: This service annotates HTML elements for the agent. It
    can highlight elements, add unique identifiers to them, and more.'
  id: totrans-151
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: element-annotator.ts：该服务为代理注释 HTML 元素。它可以高亮显示元素，给元素添加唯一标识符等。
- en: 'openai.ts: This service interfaces with the OpenAI API.'
  id: totrans-152
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: openai.ts：该服务与 OpenAI API 进行接口对接。
- en: 'prompt-map.ts: This service maps user prompts to actions. It can determine
    what action the agent should take based on the user’s input.'
  id: totrans-153
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: prompt-map.ts：该服务将用户提示映射到具体操作。它可以根据用户输入判断代理应该采取的行动。
- en: 'user-prompt-interface.ts: This service interfaces with the user to get prompts.
    It can read user input and pass it to the agent.'
  id: totrans-154
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: user-prompt-interface.ts：该服务与用户接口，以获取提示。它可以读取用户输入并将其传递给代理。
- en: '`utils.ts`: This file contains utility functions used by the agent. These functions
    are used throughout the agent code to perform common tasks.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '`utils.ts`：该文件包含代理使用的工具函数。这些函数在代理代码中用于执行常见任务。'
- en: For the full code implementation, please refer to the [Ai Web Agent](https://github.com/bianbianzhu/ai-web-agent).
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 有关完整代码实现，请参阅 [Ai Web Agent](https://github.com/bianbianzhu/ai-web-agent)。
- en: Browser Controller Service
  id: totrans-157
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 浏览器控制服务
- en: Now, let’s dive into how the agent controls the browser — how its hands work.
    A library called `Puppeteer` is used here. It provides a high-level API over the
    Chrome DevTools Protocol. See the [Puppeteer documentation](https://pptr.dev/)
    for more details.
  id: totrans-158
  prefs: []
  type: TYPE_NORMAL
  zh: 现在，让我们深入了解代理如何控制浏览器——它的“手”是如何工作的。这里使用了一个名为 `Puppeteer` 的库。它提供了一个基于 Chrome DevTools
    协议的高级 API。详细信息请参见 [Puppeteer 文档](https://pptr.dev/)。
- en: Essentially, Puppeteer gets called after the agent receives a response from
    the LLM. Under different paths as we mentioned above, Puppeteer will execute different
    actions.
  id: totrans-159
  prefs: []
  type: TYPE_NORMAL
  zh: 本质上，Puppeteer 会在代理从 LLM 接收到响应后被调用。在我们上面提到的不同路径下，Puppeteer 会执行不同的操作。
- en: 'Overall, the browser-controller service is responsible for the following:'
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 总体而言，浏览器控制器服务负责以下任务：
- en: Navigating to a URL
  id: totrans-161
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 导航到一个 URL
- en: Clicking on a link
  id: totrans-162
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 点击一个链接
- en: Taking a screenshot of the page
  id: totrans-163
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 截取页面截图
- en: '![](../Images/3a30655d1ff49b52ff7e6a8eaa31cb5f.png)'
  id: totrans-164
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3a30655d1ff49b52ff7e6a8eaa31cb5f.png)'
- en: The tasks that Puppeteer would do in the workflow.
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: Puppeteer 在工作流程中执行的任务。
- en: There is, in fact, another step taken before the agent takes a screenshot of
    the page — `Highlighting interactive elements`. We have separated this service
    into a different file to make the code more modular and easier to maintain. It
    will be discussed in the next section.
  id: totrans-166
  prefs: []
  type: TYPE_NORMAL
  zh: 实际上，在代理截图页面之前，还有一个步骤 — `高亮交互元素`。我们将这个服务分离到另一个文件中，以使代码更加模块化，并且易于维护。它将在下一部分讨论。
- en: '**Code implementation of the browser-controller service**'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '**浏览器控制器服务的代码实现**'
- en: Step 1 — Initialize the browser and open a new tab
  id: totrans-168
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 1 — 初始化浏览器并打开一个新标签页
- en: '[PRE13]'
  id: totrans-169
  prefs: []
  type: TYPE_PRE
  zh: '[PRE13]'
- en: Based on different response flows, the agent would either navigate to a URL
    and take a screenshot, or click on a link which triggers a navigation and take
    a screenshot.
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: 根据不同的响应流程，代理要么导航到一个 URL 并截图，要么点击一个链接触发导航并截图。
- en: 'Step 2 — `URL Response Flow`: Navigate to a URL and take a screenshot'
  id: totrans-171
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2 — `URL 响应流程`：导航到一个 URL 并截图
- en: '[PRE14]'
  id: totrans-172
  prefs: []
  type: TYPE_PRE
  zh: '[PRE14]'
- en: The `waitAndScreenshot` function
  id: totrans-173
  prefs: []
  type: TYPE_NORMAL
  zh: '`waitAndScreenshot`函数'
- en: '[PRE15]'
  id: totrans-174
  prefs: []
  type: TYPE_PRE
  zh: '[PRE15]'
- en: The screenshot is simply taken by calling `page.screenshot()`. You may change
    the configuration to meet your needs.
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: 截图是通过调用`page.screenshot()`简单完成的。你可以根据需要更改配置。
- en: The `waitTillHTMLRendered` function
  id: totrans-176
  prefs: []
  type: TYPE_NORMAL
  zh: '`waitTillHTMLRendered`函数'
- en: As shown, the navigation to the URL is done via `page.goto()`. This method utilizes
    the `waitUntil` option for the page load. After the page is loaded, the agent
    takes a screenshot. It is very crucial to wait for all the visual content to be
    loaded before taking the screenshot to ensure the agent gets the full info of
    the page.
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: 如图所示，导航到 URL 是通过`page.goto()`完成的。该方法利用`waitUntil`选项来等待页面加载。页面加载完毕后，代理会截图。在截图之前，等待所有视觉内容加载完毕是至关重要的，以确保代理能够获取页面的完整信息。
- en: Unfortunately, in many cases, the `waitUntil` in `GoToOptions` (page.goto())
    is not enough to wait for the page to load completely (especially with dynamic
    loading content), so we need to use the custom function `waitTillHTMLRendered`.
  id: totrans-178
  prefs: []
  type: TYPE_NORMAL
  zh: 不幸的是，在许多情况下，`GoToOptions`中的`waitUntil`（page.goto()）不足以等待页面完全加载（特别是动态加载的内容），因此我们需要使用自定义函数`waitTillHTMLRendered`。
- en: 'This function basically checks if the page is still loading via `document.readyState`
    or if there is a loading indicator on the page. If the page is still loading,
    the function will call `waitTillHTMLRendered` to undertake a comprehensive check:'
  id: totrans-179
  prefs: []
  type: TYPE_NORMAL
  zh: 这个函数基本上通过`document.readyState`检查页面是否仍在加载，或者页面上是否有加载指示器。如果页面仍在加载，函数将调用`waitTillHTMLRendered`进行全面检查：
- en: It checks the HTML size every second.
  id: totrans-180
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每秒检查一次 HTML 大小。
- en: If the HTML size remains the same for 3 consecutive seconds, it assumes the
    page has finished loading.
  id: totrans-181
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果 HTML 大小连续 3 秒钟保持不变，则假定页面已加载完毕。
- en: Throw error if the page is still loading after 30 seconds (timeout).
  id: totrans-182
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 如果页面在 30 秒后仍在加载（超时），则抛出错误。
- en: 'The flowchart below shows the logic of the `waitTillHTMLRendered` function:'
  id: totrans-183
  prefs: []
  type: TYPE_NORMAL
  zh: 以下流程图展示了`waitTillHTMLRendered`函数的逻辑：
- en: '![](../Images/5620f6b1b199b44699cdf9b89410420e.png)'
  id: totrans-184
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5620f6b1b199b44699cdf9b89410420e.png)'
- en: Flowchart of function `waitTillHTMLRendered.`
  id: totrans-185
  prefs: []
  type: TYPE_NORMAL
  zh: '`waitTillHTMLRendered`函数的流程图。'
- en: 'To have a better understanding of the `waitAndScreenshot` function, let''s
    take a look at the log of the function in action:'
  id: totrans-186
  prefs: []
  type: TYPE_NORMAL
  zh: 为了更好地理解`waitAndScreenshot`函数，我们来看看该函数运行时的日志：
- en: '![](../Images/76781d17a83b9de376b0b37229a00f7c.png)'
  id: totrans-187
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/76781d17a83b9de376b0b37229a00f7c.png)'
- en: Logs capturing dynamic content rendering.
  id: totrans-188
  prefs: []
  type: TYPE_NORMAL
  zh: 捕获动态内容渲染的日志。
- en: After the page is **completely** loaded, all interactive elements are highlighted
    and a screenshot is taken.
  id: totrans-189
  prefs: []
  type: TYPE_NORMAL
  zh: 在页面**完全**加载后，所有交互元素被高亮显示并截图。
- en: '[PRE16]'
  id: totrans-190
  prefs: []
  type: TYPE_PRE
  zh: '[PRE16]'
- en: 'Step 2 (cont.) — `Click Response Flow`: The `clickNavigationAndScreenshot`
    function'
  id: totrans-191
  prefs: []
  type: TYPE_NORMAL
  zh: 步骤 2（续） — `点击响应流程`：`clickNavigationAndScreenshot`函数
- en: This function is used to click on a specific element on the page and wait for
    the page to load completely and then take a screenshot. For the `click` action,
    it utilizes another function called `clickOnLink`.
  id: totrans-192
  prefs: []
  type: TYPE_NORMAL
  zh: 该函数用于点击页面上的特定元素，等待页面完全加载后再截图。对于`click`操作，它使用了另一个名为`clickOnLink`的函数。
- en: '[PRE17]'
  id: totrans-193
  prefs: []
  type: TYPE_PRE
  zh: '[PRE17]'
- en: The `clickOnLink` function
  id: totrans-194
  prefs: []
  type: TYPE_NORMAL
  zh: '`clickOnLink`函数'
- en: This function loops through all the elements with the `gpt-link-text` attribute
    (unique identifier received during element annotation) and clicks on the one that
    matches the link text provided by the LLM.
  id: totrans-195
  prefs: []
  type: TYPE_NORMAL
  zh: 这个功能会遍历所有带有`gpt-link-text`属性的元素（这是元素注释过程中获得的唯一标识符），并点击与LLM提供的链接文本匹配的元素。
- en: '[PRE18]'
  id: totrans-196
  prefs: []
  type: TYPE_PRE
  zh: '[PRE18]'
- en: Element Annotation Service
  id: totrans-197
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 元素注释服务
- en: Let’s look deeper into the `highlightInteractiveElements` function that is called
    inside `waitAndScreenshot`.
  id: totrans-198
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们更深入地了解`highlightInteractiveElements`函数，它在`waitAndScreenshot`内部被调用。
- en: It is a service that annotates the interactive HTML elements for the agent.
    It can highlight elements with a `red bounding box` and add unique identifiers
    to them.
  id: totrans-199
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个为代理注释交互式HTML元素的服务。它可以用`红色边框`突出显示元素，并为它们添加唯一标识符。
- en: Imagine giving your AI agent a special pair of glasses that lets it see the
    interactive spots on a website — the buttons, links, and fields — like glowing
    treasures on a treasure map.
  id: totrans-200
  prefs: []
  type: TYPE_NORMAL
  zh: 想象一下，给你的AI代理配上一副特殊的眼镜，让它能看到网站上的交互点——按钮、链接和字段——就像宝藏图上的发光宝藏一样。
- en: That’s essentially what the `highlightInteractiveElements` function does. It's
    like a highlighter for the digital world, sketching red boxes around clickable
    items and tagging them with digital nametags.
  id: totrans-201
  prefs: []
  type: TYPE_NORMAL
  zh: 这基本上就是`highlightInteractiveElements`函数的作用。它就像数字世界中的荧光笔，在可点击的项目周围画上红框，并用数字标签标记它们。
- en: '**With the annotation, the accuracy of the agent’s interpretation of the image
    is largely improved**. This concept is called `Set-of-Mark Prompting`.'
  id: totrans-202
  prefs: []
  type: TYPE_NORMAL
  zh: '**通过注释，代理对图像的理解准确性得到了大幅提升**。这个概念叫做`Set-of-Mark Prompting`。'
- en: 'Here is an example of the annotated screenshot:'
  id: totrans-203
  prefs: []
  type: TYPE_NORMAL
  zh: 这是注释截图的一个示例：
- en: '![](../Images/b85a7f190d2179f011cdda31a784a805.png)'
  id: totrans-204
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b85a7f190d2179f011cdda31a784a805.png)'
- en: E-commerce site with interactive elements highlighted in red. Image from Officeworks
    website.
  id: totrans-205
  prefs: []
  type: TYPE_NORMAL
  zh: 电子商务网站，交互元素被红色高亮显示。图像来自Officeworks网站。
- en: 'There is a research paper discussing the importance of this topic in detail:
    [Set-of-Mark Prompting](https://arxiv.org/abs/2310.11441).'
  id: totrans-206
  prefs: []
  type: TYPE_NORMAL
  zh: 有一篇研究论文详细讨论了这个话题的重要性：[Set-of-Mark Prompting](https://arxiv.org/abs/2310.11441)。
- en: 'Here’s how it performs:'
  id: totrans-207
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是它的执行方式：
- en: It starts by removing any old digital nametags (html attribute `gpt-link-text`)
    that might confuse our AI.
  id: totrans-208
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 它首先移除可能会混淆我们AI的旧数字标签（html属性`gpt-link-text`）。
- en: Then, it lights up every clickable thing it finds with a red outline to help
    the AI spot where to ‘click’.
  id: totrans-209
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 然后，它会用红色轮廓突出显示它发现的每个可点击的内容，帮助AI识别应该“点击”哪里。
- en: Each interactive element gets a unique nametag. This tag/attribute will be used
    to identify the element that Puppeteer can later interact with.
  id: totrans-210
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 每个交互元素都会有一个独特的标签。这个标签/属性将用于标识Puppeteer稍后可以与之互动的元素。
- en: 'One key detail to remember is when dealing with puppeteer or any other testing
    framework that programmatically interacts with the web, the element with a link
    text may not be visible. Here is a simple example:'
  id: totrans-211
  prefs: []
  type: TYPE_NORMAL
  zh: 需要记住的一个关键细节是，当处理Puppeteer或任何其他以编程方式与网页交互的测试框架时，带有链接文本的元素可能不可见。这里是一个简单的例子：
- en: '[PRE19]'
  id: totrans-212
  prefs: []
  type: TYPE_PRE
  zh: '[PRE19]'
- en: 'The parent div is hidden, so the link is not visible. This element should be
    excluded. Recursive checking the parent element is necessary to ensure the element
    is visible. See below graph for the logic:'
  id: totrans-213
  prefs: []
  type: TYPE_NORMAL
  zh: 父div被隐藏，所以链接不可见。这个元素应该被排除。需要递归检查父元素以确保该元素可见。请参见下图中的逻辑：
- en: '![](../Images/171f42e9c803a67604cb42a80db2a9c2.png)'
  id: totrans-214
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/171f42e9c803a67604cb42a80db2a9c2.png)'
- en: Flowchart of function isElementVisible.
  id: totrans-215
  prefs: []
  type: TYPE_NORMAL
  zh: '`isElementVisible`函数的流程图。'
- en: Code implementation of the `highlightInteractiveElements` function
  id: totrans-216
  prefs: []
  type: TYPE_NORMAL
  zh: '`highlightInteractiveElements`函数的代码实现'
- en: '[PRE20]'
  id: totrans-217
  prefs: []
  type: TYPE_PRE
  zh: '[PRE20]'
- en: Conclusion
  id: totrans-218
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论
- en: In this article, we have gone through the architecture of the AI agent, the
    code implementation of each step, and some concepts behind the design, such as
    Set-of-Mark Prompting. The agent is an elegant system that requires careful orchestration
    of different services to work effectively, and currently it has plenty of issues
    and limitations. If you have any questions or suggestions, please feel free to
    reach out to me. I would be happy to discuss this topic further.
  id: totrans-219
  prefs: []
  type: TYPE_NORMAL
  zh: 在本文中，我们探讨了AI代理的架构、每个步骤的代码实现以及设计背后的某些概念，如Set-of-Mark Prompting。该代理是一个优雅的系统，需要精心协调不同的服务才能有效运行，目前仍存在许多问题和局限性。如果您有任何问题或建议，请随时与我联系。我很愿意进一步讨论这个话题。
- en: Enjoyed This Story?
  id: totrans-220
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 喜欢这个故事吗？
- en: '**Jason Li** ([Tianyi Li](https://medium.com/u/4092d7367010), [LinkedIn](https://www.linkedin.com/in/tianyi-li-jason/))
    is a Full-stack Developer working at [Mindset Health](https://www.mindsethealth.com/)
    in Melbourne Australia. Jason is passionate about AI, front-end development and
    space related technologies.'
  id: totrans-221
  prefs: []
  type: TYPE_NORMAL
  zh: '**Jason Li**（[Tianyi Li](https://medium.com/u/4092d7367010)，[LinkedIn](https://www.linkedin.com/in/tianyi-li-jason/)）是位于澳大利亚墨尔本的
    [Mindset Health](https://www.mindsethealth.com/) 的全栈开发工程师。Jason 对人工智能、前端开发和与空间相关的技术充满热情。'
- en: '**Selina Li** ([Selina Li](https://medium.com/u/7b9ea39b0d79), [LinkedIn](https://www.linkedin.com/in/selina-zhuohang-li-3b7355120/))
    is a Principal Data Engineer working at [Officeworks](https://www.officeworks.com.au/)
    in Melbourne Australia. Selina is passionate about AI/ML, data engineering and
    investment.'
  id: totrans-222
  prefs: []
  type: TYPE_NORMAL
  zh: '**Selina Li**（[Selina Li](https://medium.com/u/7b9ea39b0d79)，[LinkedIn](https://www.linkedin.com/in/selina-zhuohang-li-3b7355120/)）是位于澳大利亚墨尔本的
    [Officeworks](https://www.officeworks.com.au/) 的首席数据工程师。Selina 对人工智能/机器学习、数据工程和投资充满热情。'
- en: Jason and Selina would love to explore technologies to help people achieve their
    goals.
  id: totrans-223
  prefs: []
  type: TYPE_NORMAL
  zh: Jason 和 Selina 希望探索技术，帮助人们实现他们的目标。
- en: '*Unless otherwise noted, all images are by the authors.*'
  id: totrans-224
  prefs: []
  type: TYPE_NORMAL
  zh: '*除非另有说明，所有图片均由作者提供。*'
