["```py\navg_acp_ranked = df_ranked.groupby(\"year\")[\"ADM_RATE_ALL\"].mean().reset_index()\n\nplt.figure(figsize=(10, 6))  # Set the figure size \nplt.plot(avg_acp_ranked['year'], avg_acp_ranked['ADM_RATE_ALL'], marker='o', linestyle='-', color='b', label='Acceptance Rate')\nplt.title('Average Acceptance Rate Over the Years')  # Set the title\nplt.xlabel('Year')  # Label for the x-axis\nplt.ylabel('Average Acceptance Rate')  # Label for the y-axis\nplt.grid(True)  # Show grid \n\n# Show a legend \nplt.legend()\n# Display the plot\nplt.show()\n```", "```py\npres_colleges = [\"Princeton University\", \"Massachusetts Institute of Technology\", \"Yale University\", \"Harvard University\", \"Stanford University\"]\npres_df = df[df['INSTNM'].isin(pres_colleges)]\npivot_pres = pres_df.pivot_table(index=\"INSTNM\", columns=\"year\", values=\"ADM_RATE_ALL\")\npivot_pres.T.plot(linestyle='-')\nplt.title('Change in Acceptance Rate Over the Years')\nplt.xlabel('Year')\nplt.ylabel('Acceptance Rate')\nplt.legend(title='Colleges')\nplt.show()\n```", "```py\ntop_10_threshold_ranked = df_ranked[df_ranked[\"year\"] == 2001][\"ADM_RATE_ALL\"].quantile(0.1)\ntop_50_threshold_ranked = df_ranked[df_ranked[\"year\"] == 2001][\"ADM_RATE_ALL\"].quantile(0.5)\n\ntop_10 = df_ranked[(df_ranked[\"year\"]==2001) & (df_ranked[\"ADM_RATE_ALL\"] <= top_10_threshold_ranked)][\"UNITID\"]\ntop_50 = df_ranked[(df_ranked[\"year\"]==2001) & (df_ranked[\"ADM_RATE_ALL\"] > top_10_threshold_ranked) & (df_ranked[\"ADM_RATE_ALL\"] <= top_50_threshold_ranked)][\"UNITID\"]\nothers = df_ranked[(df_ranked[\"year\"]==2001) & (df_ranked[\"ADM_RATE_ALL\"] > top_50_threshold_ranked)][\"UNITID\"]\n\ntop_10_df = df_ranked[df_ranked[\"UNITID\"].isin(top_10)]\ntop50_df = df_ranked[df_ranked[\"UNITID\"].isin(top_50)]\nothers_df = df_ranked[df_ranked[\"UNITID\"].isin(others)]\n\navg_acp_top10 = top_10_df.groupby(\"year\")[\"ADM_RATE_ALL\"].mean().reset_index()\navg_acp_others = others_df.groupby(\"year\")[\"ADM_RATE_ALL\"].mean().reset_index()\navg_acp_top50 = top50_df.groupby(\"year\")[\"ADM_RATE_ALL\"].mean().reset_index()\n\nplt.figure(figsize=(10, 6))  # Set the figure size \nplt.plot(avg_acp_top10['year'], avg_acp_top10['ADM_RATE_ALL'], marker='o', linestyle='-', color='g', label='Top 10%')\nplt.plot(avg_acp_top50['year'], avg_acp_top50['ADM_RATE_ALL'], marker='o', linestyle='-', color='b', label='Top 50%')\nplt.plot(avg_acp_others['year'], avg_acp_others['ADM_RATE_ALL'], marker='o', linestyle='-', color='r', label='Others')\nplt.title('Average Acceptance Rate Over the Years')  # Set the title\nplt.xlabel('Year')  # Label for the x-axis\nplt.ylabel('Average Acceptance Rate')  # Label for the y-axis\n\n# Show a legend \nplt.legend()\n# Display the plot\nplt.show()\n```", "```py\npivot_pres_ranked = df_ranked.pivot_table(index=\"INSTNM\", columns=\"year\", values=\"ADM_RATE_ALL\")\npivot_pres_ranked_down = pivot_pres_ranked[pivot_pres_ranked[2001] >= pivot_pres_ranked[2022]]\nlen(pivot_pres_ranked_down)\n\npivot_pres_ranked_up = pivot_pres_ranked[pivot_pres_ranked[2001] < pivot_pres_ranked[2022]]\nlen(pivot_pres_ranked_up)\n\ncategories = [\"Up\", \"Down\"]\nvalues = [len(pivot_pres_ranked_up), len(pivot_pres_ranked_down)]\n\nplt.figure(figsize=(8, 6))\nplt.bar(categories, values, width=0.4, align='center', color=[\"blue\", \"red\"])\nplt.xlabel('Change in acceptance rate')\nplt.ylabel('# of colleges')\nplt.title('Change in acceptance rate from 2001 to 2022')\n\n# Show the chart\nplt.tight_layout()\nplt.show()\n```", "```py\nimport seaborn as sns\nfrom matplotlib.patches import Ellipse\n\npivot_region = pd.merge(pivot_pres_ranked[[2001, 2022]], df_ranked[[\"REGION\",\"INSTNM\", \"UNIVERSITY\", \"CONTROL\"]], on=\"INSTNM\", how=\"right\")\n\nplt.figure(figsize=(8, 8))\nsns.scatterplot(data=pivot_region, x=2001, y=2022, hue='CONTROL', palette='Set1', legend='full')\nplt.xlabel('Acceptance rate for 2001')\nplt.ylabel('Acceptance rate for 2022')\nplt.title('Change in acceptance rate')\n\nx_line = np.linspace(0, max(pivot_region[2001]), 100)  # X-values for the line\ny_line = x_line  # Y-values for the line (slope = 1)\n\nplt.plot(x_line, y_line, label='45-Degree Line', color='black', linestyle='--')\n# Define ellipse parameters (center, width, height, angle)\nellipse_center = (0.25, 0.1)  # Center of the ellipse\nellipse_width = 0.4  # Width of the ellipse\nellipse_height = 0.2  # Height of the ellipse\nellipse_angle = 45  # Rotation angle in degrees\n\n# Create an Ellipse patch\nellipse = Ellipse(\n    xy=ellipse_center,\n    width=ellipse_width,\n    height=ellipse_height,\n    angle=ellipse_angle,\n    edgecolor='b',  # Edge color of the ellipse\n    facecolor='none',  # No fill color (transparent)\n    linewidth=2  # Line width of the ellipse border\n)\n\nplt.gca().add_patch(ellipse)\n\n# Add the ellipse to the current a\n\nplt.legend()\nplt.gca().set_aspect('equal')\nplt.show()\n```", "```py\npivot_pres_ranked[\"diff\"] = pivot_pres_ranked[2001] / pivot_pres_ranked[2022]\ntmp = pivot_pres_ranked.reset_index()\ntmp = tmp.merge(df_ranked[df_ranked[\"year\"]==2022][[\"INSTNM\", \"STABBR\", \"CITY\"]],on=\"INSTNM\")\ntmp.sort_values(by=\"diff\",ascending=False)[[\"INSTNM\", \"diff\", \"STABBR\", \"CITY\"]].head(5)\n```", "```py\navg_tuition = df_ranked.groupby('year')[\"TUITIONFEE_OUT\"].mean().reset_index()\navg_tuition_private = df_ranked[df_ranked['CONTROL'] != \"Public\"].groupby('year')[\"TUITIONFEE_OUT\"].mean().reset_index()\navg_tuition_public_out = df_ranked[df_ranked['CONTROL'] == \"Public\"].groupby('year')[\"TUITIONFEE_OUT\"].mean().reset_index()\navg_tuition_public_in = df_ranked[df_ranked['CONTROL'] == \"Public\"].groupby('year')[\"TUITIONFEE_IN\"].mean().reset_index()\n\nplt.figure(figsize=(10, 6))  # Set the figure size (optional)\nplt.plot(avg_tuition_public_out['year'], avg_tuition_public_out['TUITIONFEE_OUT'], marker='o', linestyle='-', color='g', label='Out-state Tuition for Public')\nplt.plot(avg_tuition_public_in['year'], avg_tuition_public_in['TUITIONFEE_IN'], marker='o', linestyle='-', color='y', label='In-state Tuition for Public')\nplt.plot(avg_tuition_private['year'], avg_tuition_private['TUITIONFEE_OUT'], marker='o', linestyle='-', color='r', label='Tuition for Private')\nplt.plot(avg_tuition['year'], avg_tuition['TUITIONFEE_OUT'], marker='o', linestyle='-', color='b', label='Tuition for All')\n\nplt.title('Average Tuition Over the Years')  # Set the title\nplt.xlabel('Year')  # Label for the x-axis\nplt.ylabel('Average Tuition')  # Label for the y-axis\n\n# Show a legend \nplt.legend()\n# Display the plot\nplt.show()\n```", "```py\navg_tuition['Inflation tuition'] = avg_tuition['TUITIONFEE_OUT'].pct_change() * 100\navg_tuition.iloc[0,2] = 1\navg_tuition\n\nplt.figure(figsize=(10, 6))  # Set the figure size \nplt.plot(df_inflation['year'], df_inflation['Inflation rate'], marker='o', linestyle='-', color='r', label='Inflation')\nplt.plot(avg_tuition['year'],avg_tuition['Inflation tuition'], marker='o', linestyle='-', color='b', label='Tuition')\nplt.title('Increase in Tuition and Inflation Over the Years')  # Set the title\nplt.xlabel('Year')  # Label for the x-axis\nplt.ylabel('Rate')  # Label for the y-axis\n\n# Show a legend \nplt.legend()\n# Display the plot\nplt.show()\n```", "```py\ntuition_pivot = df_ranked.pivot_table(index=\"INSTNM\", columns=\"year\", values=\"TUITIONFEE_OUT\")\ntuition_pivot[\"TUI_CHANGE\"] = tuition_pivot[2022]/tuition_pivot[2001]\ntuition_pivot = tuition_pivot[tuition_pivot[\"TUI_CHANGE\"] < 200]\nprint(tuition_pivot[\"TUI_CHANGE\"].isnull().sum())\ntmp = pd.merge(tuition_pivot[\"TUI_CHANGE\"], df_ranked[df_ranked[\"year\"]==2022][[\"ADM_RATE_ALL\", \"INSTNM\", \"REGION\", \"STABBR\", \"CONTROL\"]], on=\"INSTNM\", how=\"right\")\nplt.figure(figsize=(8, 8))\nsns.scatterplot(data=tmp, x=\"ADM_RATE_ALL\", y=\"TUI_CHANGE\", palette='Set2', legend='full')\nplt.xlabel('Acceptance rate in 2022')\nplt.ylabel('Change in Tuition')\nplt.title('Acceptance rate vs Change in Tuition')\n\nplt.legend()\nplt.show()\n```", "```py\nimport geopandas as gpd\n\nsta_tui = tmp.groupby(\"STABBR\")[\"TUI_CHANGE\"].mean()\nsta_tui = sta_tui.reset_index()\n\nshapefile_path = \"path_to_shape_file\"  \ngdf = gpd.read_file(shapefile_path)\n\nsta_tui[\"STUSPS\"] = sta_tui[\"STABBR\"]\nmerged_data = gdf.merge(sta_tui, on=\"STUSPS\", how=\"left\")\nfinal = merged_data.drop([42, 44, 45, 38, 13])\n\n# Plot the choropleth map\nfig, ax = plt.subplots(1, 1, figsize=(16, 20))\nfinal.plot(column='TUI_CHANGE', cmap=\"Reds\", ax=ax, linewidth=0.3, edgecolor='0.8', legend=True)\nax.set_title('Average Change in Tuition over across the U.S.')\nplt.axis('off')  # Turn off axis\nplt.legend(fontsize=6)\nplt.show()\n```"]