["```py\nlibrary(ggplot2)\nlibrary(brms)\nlibrary(ggdist)\nlibrary(easystats)\nlibrary(dplyr)\nlibrary(modelr)\nlibrary(patchwork)\nlibrary(tibble)\nlibrary(tidybayes)\n\nlogit2prob <- function(logit){\n  odds <- exp(logit)\n  prob <- odds / (1 + odds)\n  return(prob)\n}\n\nPlot_theme <- theme_classic() +\n  theme(\n      plot.title = element_text(size=18, hjust = 0.5, face=\"bold\"),\n      plot.subtitle = element_text(size = 10, color = \"black\"),\n      plot.caption = element_text(size = 12, color = \"black\"),\n      axis.line = element_line(colour = \"black\", size = 1.5, linetype = \"solid\"),\n      axis.ticks.length=unit(7,\"pt\"),\n\n      axis.title.x = element_text(colour = \"black\", size = 16),\n      axis.text.x = element_text(colour = \"black\", size = 16, angle = 0, hjust = 0.5),\n      axis.ticks.x = element_line(colour = \"black\", size = 1),\n\n      axis.title.y = element_text(colour = \"black\", size = 16),\n      axis.text.y = element_text(colour = \"black\", size = 16),\n      axis.ticks.y = element_line(colour = \"black\", size = 1),\n\n      legend.position=\"right\",\n      legend.direction=\"vertical\",\n      legend.title = element_text(colour=\"black\", face=\"bold\", size=12),\n      legend.text = element_text(colour=\"black\", size=10),\n\n      plot.margin = margin(t = 10,  # Top margin\n                             r = 2,  # Right margin\n                             b = 10,  # Bottom margin\n                             l = 10) # Left margin\n      ) \n```", "```py\nSvz_data <- read.csv(\"Data/CellCounts.csv\")\nSvz_data$Hemisphere <- factor(Svz_data$Hemisphere, levels = c(\"Contralateral\", \"Ipsilateral\"))\nhead(Svz_data)\n```", "```py\nggplot(Svz_data, aes(x = Hemisphere, y = Cells)) +\n  geom_boxplot() +\n  labs(x = \"Hemisphere\", y = \"Number of cells\", title = \"Cells by hemisphere\") +\n  Plot_theme +\n  theme(legend.position = \"top\", legend.direction = \"horizontal\")\n```", "```py\nlm_Fit <- brm(Cells ~ Hemisphere, \n           data = Svz_data, \n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/2024-04-19_CountsZeroInflated/lm_Fit.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nlm_Fit <- \n  add_criterion(lm_Fit, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nSvz_data %>%\n  data_grid(Hemisphere) %>%\n  add_epred_draws(lm_Fit) %>%\n  ggplot(aes(x = .epred, y = Hemisphere)) +\n  labs(x = \"Number of cells\") +\n  stat_halfeye() +\n  geom_vline(xintercept = 0) +\n  Plot_theme\n```", "```py\nHurdle_Fit1 <- brm(Cells ~ Hemisphere, \n           data = Svz_data, \n           family = hurdle_poisson(),\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/2024-04-19_CountsZeroInflated/Hurdle_Fit1.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nHurdle_Fit1 <- \n  add_criterion(Hurdle_Fit1, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nsummary(Hurdle_Fit1)\n```", "```py\nHurdle_CE <- \n  conditional_effects(Hurdle_Fit1)\n\nHurdle_CE <- plot(Hurdle_CE, \n       plot = FALSE)[[1]]\n\nHurdle_Com <- Hurdle_CE + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nHurdle_CE_hu <- \n  conditional_effects(Hurdle_Fit1, dpar = \"hu\")\n\nHurdle_CE_hu <- plot(Hurdle_CE_hu, \n       plot = FALSE)[[1]]\n\nHurdle_hu <- Hurdle_CE_hu + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nHurdle_Com | Hurdle_hu\n```", "```py\npp_check(Hurdle_Fit1, ndraws = 100) +\n  labs(title = \"Hurdle regression\") +\n  theme_classic()\n```", "```py\nHurdle_Mdl2 <- bf(Cells ~ Hemisphere, \n                   hu ~ Hemisphere)\n\nHurdle_Fit2 <- brm(\n           formula = Hurdle_Mdl2,\n           data = Svz_data, \n           family = hurdle_poisson(),\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/2024-04-19_CountsZeroInflated/Hurdle_Fit2.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nHurdle_Fit2 <- \n  add_criterion(Hurdle_Fit2, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nHurdle_CE <- \n  conditional_effects(Hurdle_Fit2)\n\nHurdle_CE <- plot(Hurdle_CE, \n       plot = FALSE)[[1]]\n\nHurdle_Com <- Hurdle_CE + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nHurdle_CE_hu <- \n  conditional_effects(Hurdle_Fit2, dpar = \"hu\")\n\nHurdle_CE_hu <- plot(Hurdle_CE_hu, \n       plot = FALSE)[[1]]\n\nHurdle_hu <- Hurdle_CE_hu + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nHurdle_Com | Hurdle_hu\n```", "```py\nlogit2prob(fixef(Hurdle_Fit2))\n```", "```py\nInflated_mdl1 <- bf(Cells ~ Hemisphere,\n                    zi ~ Hemisphere)\n\nInflated_Fit1 <- brm(\n           formula = Inflated_mdl1, \n           data = Svz_data, \n           family = zero_inflated_poisson(),\n           # seed for reproducibility purposes\n           seed = 8807,\n           control = list(adapt_delta = 0.99),\n           # this is to save the model in my laptop\n           file    = \"Models/2024-04-19_CountsZeroInflated/Inflated_Fit.rds\",\n           file_refit = \"never\")\n\n# Add loo for model comparison\nInflated_Fit1 <- \n  add_criterion(Inflated_Fit1, c(\"loo\", \"waic\", \"bayes_R2\"))\n```", "```py\nset.seed(8807)\n\npp_check(Inflated_Fit1, ndraws = 100) +\n  labs(title = \"Zero-inflated regression\") +\n  theme_classic()\n```", "```py\nlogit2prob(fixef(Inflated_Fit1))\n```", "```py\nInflated_CE <- \n  conditional_effects(Inflated_Fit1)\n\nInflated_CE <- plot(Inflated_CE, \n       plot = FALSE)[[1]]\n\nInflated_Com <- Inflated_CE + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nInflated_CE_zi <- \n  conditional_effects(Inflated_Fit1, dpar = \"zi\")\n\nInflated_CE_zi <- plot(Inflated_CE_zi, \n       plot = FALSE)[[1]]\n\nInflated_zi <- Inflated_CE_zi + \n  Plot_theme +\n  theme(legend.position = \"bottom\", legend.direction = \"horizontal\")\n\nInflated_Com | Inflated_zi\n```", "```py\nloo(Hurdle_Fit2, Inflated_Fit1)\n```"]