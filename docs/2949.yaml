- en: 'Lasso and Elastic Net Regressions, Explained: A Visual Guide with Code Examples'
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: Lasso和Elastic Net回归解释：带代码示例的可视化指南
- en: 原文：[https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f?source=collection_archive---------1-----------------------#2024-12-06](https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f?source=collection_archive---------1-----------------------#2024-12-06)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f?source=collection_archive---------1-----------------------#2024-12-06](https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f?source=collection_archive---------1-----------------------#2024-12-06)
- en: REGRESSION ALGORITHM
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回归算法
- en: Roping in key features with coordinate descent
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 使用坐标下降法引入关键特征
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--5fecf3e1432f--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)
    ·15 min read·Dec 6, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--5fecf3e1432f--------------------------------)·阅读时间15分钟·2024年12月6日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: '[](/least-squares-regression-explained-a-visual-guide-with-code-examples-for-beginners-2e5ad011eae4?source=post_page-----5fecf3e1432f--------------------------------)
    [## Least Squares Regression, Explained: A Visual Guide with Code Examples for
    Beginners'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: '[](/least-squares-regression-explained-a-visual-guide-with-code-examples-for-beginners-2e5ad011eae4?source=post_page-----5fecf3e1432f--------------------------------)
    [## 最小二乘回归解释：带代码示例的可视化指南'
- en: Gliding through points to minimize squares
  id: totrans-8
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
  zh: 通过点滑动以最小化平方差
- en: towardsdatascience.com](/least-squares-regression-explained-a-visual-guide-with-code-examples-for-beginners-2e5ad011eae4?source=post_page-----5fecf3e1432f--------------------------------)
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: '[towardsdatascience.com](https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f?source=post_page-----5fecf3e1432f--------------------------------)'
- en: 'Linear regression comes in different types: [Least Squares methods](/least-squares-regression-explained-a-visual-guide-with-code-examples-for-beginners-2e5ad011eae4)
    form the foundation, from the classic Ordinary Least Squares (OLS) to Ridge regression
    with its regularization to prevent overfitting. Then there’s Lasso regression,
    which takes a unique approach by automatically selecting important factors and
    ignoring others. Elastic Net combines the best of both worlds, mixing Lasso’s
    feature selection with Ridge’s ability to handle related features.'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 线性回归有不同的类型：[最小二乘法](https://towardsdatascience.com/lasso-and-elastic-net-regressions-explained-a-visual-guide-with-code-examples-5fecf3e1432f)是基础，从经典的普通最小二乘法（OLS）到通过正则化防止过拟合的岭回归。然后是Lasso回归，它通过自动选择重要特征并忽略其他特征来采取独特的方式。Elastic
    Net则结合了两者的优势，混合了Lasso的特征选择和岭回归处理相关特征的能力。
- en: It’s frustrating to see many articles treat these methods as if they’re basically
    the same thing with minor tweaks. They make it seem like switching between them
    is as simple as changing a setting in your code, but each actually uses different
    approaches to solve their optimization problems!
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 看到许多文章将这些方法视为基本相同，只是做了一些小的调整，真的让人感到沮丧。它们让人觉得在这些方法之间切换就像改变代码中的一个设置一样简单，但每种方法实际上使用不同的方式来解决优化问题！
- en: While OLS and Ridge regression can be solved directly through matrix operations,
    Lasso and Elastic Net require a different approach — an iterative method called
    **coordinate descent**. Here, we’ll explore how this algorithm works through clear
    visualizations. So, let’s saddle up and *lasso* our way through the details!
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然OLS和Ridge回归可以通过矩阵运算直接求解，但Lasso和Elastic Net需要一种不同的方法——一种称为**坐标下降法**的迭代方法。在这里，我们将通过清晰的可视化来探索这个算法是如何工作的。那么，让我们准备好，*套索*一下这些细节吧！
- en: '![](../Images/89cfee410d2caa68f774230733aaf4c0.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/89cfee410d2caa68f774230733aaf4c0.png)'
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 所有视觉效果：作者使用Canva Pro创建。优化为手机显示；在桌面上可能会显得过大。
- en: Definition
  id: totrans-15
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 定义
- en: Lasso Regression
  id: totrans-16
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lasso回归
- en: '**LASSO** (**L**east **A**bsolute **S**hrinkage and **S**election **O**perator)
    is a variation of Linear Regression that adds a penalty to the model. It uses
    a linear equation to predict numbers, just like Linear Regression. However, Lasso
    also has a way to reduce the importance of certain factors to zero, which makes
    it useful for two main tasks: making predictions and identifying the most important
    features.'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '**LASSO**（**L**east **A**bsolute **S**hrinkage and **S**election **O**perator）是线性回归的一种变体，它在模型中添加了惩罚项。它使用线性方程来预测数值，类似于线性回归。然而，Lasso还有一种方法可以将某些因素的重要性减少到零，这使得它在两个主要任务中非常有用：进行预测和识别最重要的特征。'
- en: Elastic Net Regression
  id: totrans-18
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Elastic Net回归
- en: 'Elastic Net Regression is a mix of Ridge and Lasso Regression that combines
    their penalty terms. The name “Elastic Net” comes from physics: just like an elastic
    net can stretch and still keep its shape, this method adapts to data while maintaining
    structure.'
  id: totrans-19
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net回归是Ridge和Lasso回归的混合体，结合了它们的惩罚项。名称“Elastic Net”源自物理学：就像弹性网可以伸展而保持形状一样，这种方法在保持结构的同时适应数据。
- en: 'The model balances three goals: minimizing prediction errors, keeping the size
    of coefficients small (like Lasso), and preventing any coefficient from becoming
    too large (like Ridge). To use the model, you input your data’s feature values
    into the linear equation, just like in standard Linear Regression.'
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 该模型平衡三个目标：最小化预测误差、保持系数的较小（如Lasso）以及防止任何系数变得过大（如Ridge）。使用该模型时，你将数据的特征值输入线性方程中，就像标准的线性回归一样。
- en: The main advantage of Elastic Net is that when features are related, it tends
    to keep or remove them as a group instead of randomly picking one feature from
    the group.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net的主要优势在于，当特征之间相关时，它倾向于将它们作为一个整体保留或移除，而不是随机选择组中的某个特征。
- en: '![](../Images/92cd64e687e3a8222ab9d9001eead95d.png)'
  id: totrans-22
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/92cd64e687e3a8222ab9d9001eead95d.png)'
- en: Linear models like Lasso and Elastic Net belong to the broader family of machine
    learning methods that predict outcomes using linear relationships between variables.
  id: totrans-23
  prefs: []
  type: TYPE_NORMAL
  zh: 线性模型如Lasso和Elastic Net属于更广泛的机器学习方法家族，它们通过变量之间的线性关系来预测结果。
- en: 📊 Dataset Used
  id: totrans-24
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 📊 使用的数据集
- en: To illustrate our concepts, we’ll use [our standard dataset](/dummy-regressor-explained-a-visual-guide-with-code-examples-for-beginners-4007c3d16629)
    that predicts the number of golfers visiting on a given day, using features like
    weather outlook, temperature, humidity, and wind conditions.
  id: totrans-25
  prefs: []
  type: TYPE_NORMAL
  zh: 为了说明我们的概念，我们将使用[我们的标准数据集](/dummy-regressor-explained-a-visual-guide-with-code-examples-for-beginners-4007c3d16629)，该数据集用于预测在某一天访问的高尔夫球手人数，使用的特征包括天气情况、温度、湿度和风速条件。
- en: For both Lasso and Elastic Net to work effectively, we need to standardize the
    numerical features (making their scales comparable) and apply one-hot-encoding
    to categorical features, as both models’ penalties are sensitive to feature scales.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 为了使Lasso和Elastic Net有效工作，我们需要标准化数值特征（使它们的尺度可比）并对分类特征应用独热编码，因为这两种模型的惩罚项对特征尺度非常敏感。
- en: '![](../Images/d5b052ff81db21a6616645b0912d1802.png)'
  id: totrans-27
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d5b052ff81db21a6616645b0912d1802.png)'
- en: 'Columns: ‘Outlook’ (one-hot encoded to sunny, overcast, rain), ‘Temperature’
    (standardized), ‘Humidity’ (standardized), ‘Wind’ (Yes/No) and ‘Number of Players’
    (numerical, target feature)'
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: 列：‘Outlook’（独热编码为晴天、阴天、雨天），‘Temperature’（标准化），‘Humidity’（标准化），‘Wind’（是/否）和‘Number
    of Players’（数值型，目标特征）
- en: '[PRE0]'
  id: totrans-29
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: Main Mechanism
  id: totrans-30
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 主要机制
- en: 'Lasso and Elastic Net Regression predict numbers by making a straight line
    (or hyperplane) from the data, while controlling the size of coefficients in different
    ways:'
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso和Elastic Net回归通过将数据拟合成一条直线（或超平面）来预测数值，同时以不同的方式控制系数的大小：
- en: Both models find the best line by balancing prediction accuracy with coefficient
    control. They work to make the gaps between real and predicted values small, while
    keeping coefficients in check through penalty terms.
  id: totrans-32
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 两个模型通过在预测精度和系数控制之间找到最佳平衡来找到最佳线。它们努力减小真实值和预测值之间的差距，同时通过惩罚项控制系数。
- en: 'In Lasso, the penalty (controlled by *λ*) can shrink coefficients to exactly
    zero, removing features entirely. Elastic Net combines two types of penalties:
    one that can remove features (like Lasso) and another that shrinks groups of related
    features together. The mix between these penalties is controlled by the `l1_ratio`
    (*α*).'
  id: totrans-33
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在Lasso中，惩罚（由*λ*控制）可以将系数缩小到零，完全移除特征。弹性网结合了两种类型的惩罚：一种可以移除特征（像Lasso），另一种则将相关特征组合在一起进行收缩。这两种惩罚的混合由`l1_ratio`（*α*）控制。
- en: To predict a new answer, both models multiply each input by its coefficient
    (if not zero) and add them up, plus a starting number (intercept/bias). Elastic
    Net often keeps more features than Lasso but with smaller coefficients, especially
    when features are correlated.
  id: totrans-34
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 要预测一个新的答案，两个模型都会将每个输入与其系数相乘（如果不为零），然后将它们加起来，再加上一个起始数值（截距/偏差）。弹性网通常保留更多的特征，而Lasso则通过较小的系数来实现这一点，尤其是在特征相关时。
- en: 'The strength of penalties affects how the models behave:'
  id: totrans-35
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 惩罚的强度影响模型的行为：
- en: '- In Lasso, larger *λ* means more coefficients become zero'
  id: totrans-36
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 在Lasso中，较大的*λ*意味着更多的系数变为零'
- en: '- In Elastic Net, *λ* controls overall penalty strength, while *α* determines
    the balance between feature removal and coefficient shrinkage'
  id: totrans-37
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 在弹性网中，*λ*控制整体惩罚强度，而*α*决定特征移除与系数收缩之间的平衡'
- en: '- When penalties are very small, both models act more like standard Linear
    Regression'
  id: totrans-38
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: '- 当惩罚非常小时，两个模型的行为更像标准的线性回归'
- en: '![](../Images/a24d6aea0a7577617aaccec1a0dda614.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a24d6aea0a7577617aaccec1a0dda614.png)'
- en: Lasso and Elastic Net make predictions by multiplying input features with their
    trained weights and adding them together with a bias term to produce a final output
    value.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso和弹性网通过将输入特征与其训练权重相乘，并将它们与偏差项相加，来进行预测，从而生成最终的输出值。
- en: Training Steps
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 训练步骤
- en: Let’s explore how Lasso and Elastic Net learn from data using the coordinate
    descent algorithm. While these models have complex mathematical foundations, we’ll
    focus on **understanding coordinate descent** — an efficient optimization method
    that makes the computation more practical and intuitive.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们探讨一下Lasso和弹性网如何通过坐标下降法从数据中学习。虽然这些模型有复杂的数学基础，但我们将专注于**理解坐标下降法**——一种高效的优化方法，使计算变得更加实际和直观。
- en: Coordinate Descent for Lasso Regression
  id: totrans-43
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lasso回归的坐标下降法
- en: 'The optimization problem of Lasso Regression is as follows:'
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso回归的优化问题如下：
- en: '![](../Images/ffc77f9feca66a0d82b821c01933508b.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ffc77f9feca66a0d82b821c01933508b.png)'
- en: While [scikit-learn implementation](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.Lasso.html)
    includes additional scaling factors (1/(2*n_samples)) for computational efficiency,
    we’ll use the standard theoretical form for clarity in our explanation.
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然[scikit-learn实现](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.Lasso.html)包括了额外的缩放因子（1/(2*n_samples)）以提高计算效率，但为了更清晰的说明，我们将使用标准的理论形式。
- en: 'Here’s how coordinate descent finds the optimal coefficients by updating one
    feature at a time:'
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是坐标下降法通过一次更新一个特征来找到最优系数的方法：
- en: 1\. Start by initializing the model with all coefficients at zero. Set a fixed
    value for the regularization parameter that will control the strength of the penalty.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 首先将模型初始化，使所有系数为零。为正则化参数设置一个固定值，该参数将控制惩罚的强度。
- en: '![](../Images/063f2e17b33d37e82d58982abab75518.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/063f2e17b33d37e82d58982abab75518.png)'
- en: Lasso regression begins with all feature weights set to zero and uses a penalty
    parameter (λ) to control how much it shrinks weights during training.
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso回归从将所有特征权重设置为零开始，并使用惩罚参数（λ）来控制在训练过程中权重的收缩程度。
- en: 2\. Calculate the initial bias by taking the mean of all target values.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 通过计算所有目标值的均值来计算初始偏差。
- en: '![](../Images/f2df6fc11bb7aa805db1e21ff38c5325.png)'
  id: totrans-52
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f2df6fc11bb7aa805db1e21ff38c5325.png)'
- en: The initial bias value is set to 37.43, which is calculated by taking the average
    of all target values in the training data (mean of player counts shown from index
    0 to 13).
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 初始偏差值设置为37.43，这是通过计算训练数据中所有目标值的平均值（从索引0到13的玩家数量的均值）得出的。
- en: '3\. For updating the first coefficient (in our case, ‘sunny’):'
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 更新第一个系数（在我们的例子中是“sunny”）：
- en: '- Using weighted sum, calculate what the model would predict **without using
    this feature.**'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '- 使用加权和，计算模型**在不使用该特征的情况下**的预测值。'
- en: '![](../Images/16a9669367286fe143c27efffb821f61.png)'
  id: totrans-56
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16a9669367286fe143c27efffb821f61.png)'
- en: At the start of training, all feature weights are set to zero while using the
    initial bias of 37.43, causing the model to predict the same average value (37.43)
    for all training examples regardless of their input features.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 在训练开始时，所有特征权重都被设置为零，同时使用初始偏差值37.43，这导致模型对于所有训练示例，无论其输入特征如何，都预测相同的平均值（37.43）。
- en: '- Find the partial residual — how far off these predictions are from the actual
    values. Using this value, calculate the temporary coefficient.'
  id: totrans-58
  prefs: []
  type: TYPE_NORMAL
  zh: '- 找到偏残差——这些预测值与实际值的偏差。使用这个值来计算临时系数。'
- en: '![](../Images/0431216a648bff8bd9d223beb5d087ad.png)'
  id: totrans-59
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0431216a648bff8bd9d223beb5d087ad.png)'
- en: For the first feature, Lasso calculates a temporary coefficient of 11.17 by
    comparing the true labels with predictions, considering only the rows where this
    feature equals 1, and applying the gradient formula.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 对于第一个特征，Lasso通过比较真实标签和预测值来计算临时系数11.17，只考虑特征值为1的行，并应用梯度公式。
- en: '- Apply the Lasso shrinkage (soft thresholding) to this temporary coefficient
    to get the final coefficient for this step.'
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: '- 对这个临时系数应用Lasso的收缩（软阈值）来得到该步骤的最终系数。'
- en: '![](../Images/290cc6c85081860c00fb5348ecf1e598.png)'
  id: totrans-62
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/290cc6c85081860c00fb5348ecf1e598.png)'
- en: Lasso applies its shrinkage formula to the temporary coefficient (11.17), where
    it subtracts the penalty term (λ/5 = 0.2) from the absolute value while preserving
    the sign, resulting in a final coefficient of 10.97.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso将其收缩公式应用于临时系数（11.17），其中从绝对值中减去惩罚项（λ/5 = 0.2）并保留符号，得到最终系数10.97。
- en: 4\. Move through each remaining coefficient one at a time, repeating the same
    update process. When calculating predictions during each update, use the most
    recently updated values for all other coefficients.
  id: totrans-64
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 逐个处理其余系数，重复相同的更新过程。在每次更新时计算预测值时，使用所有其他系数的最新更新值。
- en: '![](../Images/970b037792a6038bf56c11b1122af6ba.png)'
  id: totrans-65
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/970b037792a6038bf56c11b1122af6ba.png)'
- en: After updating the first coefficient to 10.97, Lasso uses these updated predictions
    to calculate the temporary coefficient (0.32) for the second feature, showing
    how the algorithm updates coefficients one at a time through coordinate descent.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 在将第一个系数更新为10.97后，Lasso使用这些更新后的预测值来计算第二个特征的临时系数（0.32），展示了算法如何通过坐标下降一次更新一个系数。
- en: '[PRE1]'
  id: totrans-67
  prefs: []
  type: TYPE_PRE
  zh: '[PRE1]'
- en: 5\. Return to update the bias by calculating what the current model predicts
    **using all features**, then adjust the bias based on the average difference between
    these predictions and actual values.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 5\. 返回更新偏差，通过计算当前模型**使用所有特征**时的预测值，然后根据这些预测值与实际值之间的平均差异调整偏差。
- en: '![](../Images/2ad780f7356dc1034f149cd228fb7f72.png)'
  id: totrans-69
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/2ad780f7356dc1034f149cd228fb7f72.png)'
- en: After updating all feature coefficients through coordinate descent, the model
    recalculates the bias (40.25) as the mean difference between the true labels and
    the predictions made using the current feature weights, ensuring the model’s predictions
    are properly centered around the target values.
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: 在通过坐标下降更新所有特征系数后，模型重新计算偏差（40.25），作为真实标签与使用当前特征权重所做预测之间的平均差异，确保模型的预测值围绕目标值进行合理的调整。
- en: '[PRE2]'
  id: totrans-71
  prefs: []
  type: TYPE_PRE
  zh: '[PRE2]'
- en: 6\. Check if the model has converged either by reaching the maximum number of
    allowed iterations or by seeing that coefficients aren’t changing much anymore.
    If not converged, return to step 3 and repeat the process.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 6\. 检查模型是否已收敛，可以通过达到允许的最大迭代次数或看到系数不再发生显著变化来判断。如果没有收敛，返回第3步并重复该过程。
- en: '![](../Images/dbde5df18fb4166d6ca595733b30eef6.png)'
  id: totrans-73
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/dbde5df18fb4166d6ca595733b30eef6.png)'
- en: After 1000 iterations of coordinate descent, Lasso produces the final model
    where some coefficients have been shrunk exactly to zero (‘rain’ and ‘Temperature’
    features), while others retain non-zero values, demonstrating Lasso’s feature
    selection capability.
  id: totrans-74
  prefs: []
  type: TYPE_NORMAL
  zh: 经过1000次坐标下降迭代后，Lasso生成了最终模型，其中一些系数已经精确地缩小到零（“雨”和“温度”特征），而其他系数保持非零值，展示了Lasso的特征选择能力。
- en: '[PRE3]'
  id: totrans-75
  prefs: []
  type: TYPE_PRE
  zh: '[PRE3]'
- en: Coordinate Descent for Elastic Net Regression
  id: totrans-76
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹性网回归的坐标下降
- en: 'The optimization problem of Elastic Net Regression is as follows:'
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 弹性网回归的优化问题如下：
- en: '![](../Images/57cb5db32b807d107f8cf8cae9a41f19.png)'
  id: totrans-78
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/57cb5db32b807d107f8cf8cae9a41f19.png)'
- en: While [scikit-learn’s implementation](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.ElasticNet.html)
    includes additional scaling factors (1/(2*n_samples)) and uses alpha (α) to control
    overall regularization strength and l1_ratio to control the penalty mix, we’ll
    use the standard theoretical form for clarity.
  id: totrans-79
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然 [scikit-learn 的实现](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.ElasticNet.html)包括了额外的缩放因子（1/(2*n_samples)）并使用
    alpha (α) 来控制整体正则化强度，同时使用 l1_ratio 来控制惩罚项的比例，但为了清晰起见，我们将使用标准的理论形式。
- en: 'The coordinate descent algorithm for Elastic Net works similarly to Lasso,
    but accounts for both penalties when updating coefficients. Here’s how it works:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net 的坐标下降算法与 Lasso 类似，但在更新系数时考虑了两种惩罚项。它的工作原理如下：
- en: '1\. Start by initializing the model with all coefficients at zero. Set two
    fixed values: one controlling feature removal (like in Lasso) and another for
    general coefficient shrinkage (the key difference from Lasso).'
  id: totrans-81
  prefs: []
  type: TYPE_NORMAL
  zh: 1\. 首先将模型初始化为所有系数为零。设置两个固定值：一个控制特征移除（类似于 Lasso），另一个用于一般的系数缩减（这是与 Lasso 的主要区别）。
- en: '![](../Images/ce717b9cd599b195a4313563dc486b1c.png)'
  id: totrans-82
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ce717b9cd599b195a4313563dc486b1c.png)'
- en: 'Elastic Net regression starts like Lasso with zero weights for all features,
    but uses two parameters: λ (lambda) for overall regularization strength and α
    (alpha) to balance between Lasso and Ridge penalties.'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net 回归像 Lasso 一样从所有特征的权重为零开始，但使用两个参数：λ（lambda）表示整体正则化强度，α（alpha）用于在
    Lasso 和 Ridge 惩罚之间进行平衡。
- en: 2\. Calculate the initial bias by taking the mean of all target values. (Same
    as Lasso)
  id: totrans-84
  prefs: []
  type: TYPE_NORMAL
  zh: 2\. 通过计算所有目标值的均值来计算初始偏置。 （与 Lasso 相同）
- en: '![](../Images/de17fbaa9b6e7d4e9b6b761036cc08ce.png)'
  id: totrans-85
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/de17fbaa9b6e7d4e9b6b761036cc08ce.png)'
- en: ike Lasso, Elastic Net also initializes its bias term to 37.43 by calculating
    the mean of all target values in the training dataset.
  id: totrans-86
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Lasso 一样，Elastic Net 也通过计算训练数据集中所有目标值的均值，将偏置项初始化为 37.43。
- en: '3\. For updating the first coefficient:'
  id: totrans-87
  prefs: []
  type: TYPE_NORMAL
  zh: 3\. 更新第一个系数：
- en: '- Using weighted sum, calculate what the model would predict without using
    this feature. (Same as Lasso)'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: '- 使用加权和，计算模型如果不使用该特征时的预测结果。（与 Lasso 相同）'
- en: '![](../Images/16a9669367286fe143c27efffb821f61.png)'
  id: totrans-89
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/16a9669367286fe143c27efffb821f61.png)'
- en: Elastic Net starts its coordinate descent process similar to Lasso, making initial
    predictions of 37.43 for all training examples since all feature weights are set
    to zero and only the bias term is active.
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net 从类似 Lasso 的坐标下降过程开始，由于所有特征的权重都被设为零，只有偏置项是活跃的，因此对所有训练样本的初始预测值为 37.43。
- en: '- Find the partial residual — how far off these predictions are from the actual
    values. Using this value, calculate the temporary coefficient. (Same as Lasso)'
  id: totrans-91
  prefs: []
  type: TYPE_NORMAL
  zh: '- 计算部分残差——这些预测值与实际值之间的差距。利用该值，计算临时系数。（与 Lasso 相同）'
- en: '![](../Images/0431216a648bff8bd9d223beb5d087ad.png)'
  id: totrans-92
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/0431216a648bff8bd9d223beb5d087ad.png)'
- en: Like Lasso, Elastic Net calculates a temporary coefficient of 11.17 for the
    first feature by comparing predictions with true labels.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 像 Lasso 一样，Elastic Net 通过比较预测值与真实标签，计算出第一个特征的临时系数 11.17。
- en: '- For Elastic Net, apply both **soft thresholding** and **coefficient shrinkage**
    to this temporary coefficient to get the final coefficient for this step. This
    combined effect is the main difference from Lasso Regression.'
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: '- 对于 Elastic Net，应用 **软阈值** 和 **系数缩减** 对临时系数进行处理，从而获得该步骤的最终系数。这种综合效果是与 Lasso
    回归的主要区别。'
- en: '![](../Images/e327609ca8f462275e64233a3bf0d258.png)'
  id: totrans-95
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e327609ca8f462275e64233a3bf0d258.png)'
- en: Elastic Net applies its unique shrinkage formula that combines both Lasso (L1)
    and Ridge (L2) penalties, where α controls their balance. The temporary coefficient
    11.17 is shrunk to 10.06 through this combined regularization approach.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: Elastic Net 应用了独特的缩减公式，结合了 Lasso（L1）和 Ridge（L2）惩罚项，其中 α 控制它们的平衡。通过这种组合的正则化方法，临时系数
    11.17 被缩减为 10.06。
- en: 4\. Move through each remaining coefficient one at a time, repeating the same
    update process. When calculating predictions during each update, use the most
    recently updated values for all other coefficients. (Same process as Lasso, but
    using the modified update formula)
  id: totrans-97
  prefs: []
  type: TYPE_NORMAL
  zh: 4\. 逐个处理其余系数，重复相同的更新过程。在每次更新时，计算预测值时使用所有其他系数的最新更新值。（与 Lasso 相同，但使用修改后的更新公式）
- en: '![](../Images/e88dbf7e3ac2a2cd0364b38a574f89a1.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e88dbf7e3ac2a2cd0364b38a574f89a1.png)'
- en: After updating the first coefficient to 10.06, Elastic Net continues coordinate
    descent by calculating and updating the second coefficient, showing how it processes
    features one at a time while maintaining both L1 and L2 regularization effects.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 在将第一个系数更新为10.06后，弹性网继续进行坐标下降法，通过计算和更新第二个系数，展示了其在处理特征时一一处理并保持L1和L2正则化效果的过程。
- en: '[PRE4]'
  id: totrans-100
  prefs: []
  type: TYPE_PRE
  zh: '[PRE4]'
- en: 5\. Update the bias by calculating what the current model predicts using all
    features, then adjust the bias based on the average difference between these predictions
    and actual values. (Same as Lasso)
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 5. 更新偏差，方法是计算当前模型使用所有特征的预测值，然后根据这些预测与实际值之间的平均差异调整偏差。（与Lasso相同）
- en: '![](../Images/84a57041683e2e82a1f091998f2fd4e8.png)'
  id: totrans-102
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/84a57041683e2e82a1f091998f2fd4e8.png)'
- en: After updating all feature coefficients using Elastic Net’s combined L1 and
    L2 regularization, the model recalculates the bias to 40.01 by taking the mean
    difference between true labels and predictions, similar to the process in Lasso
    regression.
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: 在使用弹性网的L1和L2正则化更新所有特征系数之后，模型通过取真实标签与预测值之间的平均差异，将偏差重新计算为40.01，类似于Lasso回归中的过程。
- en: '[PRE5]'
  id: totrans-104
  prefs: []
  type: TYPE_PRE
  zh: '[PRE5]'
- en: 6\. Check if the model has converged either by reaching the maximum number of
    allowed iterations or by seeing that coefficients aren’t changing much anymore.
    If not converged, return to step 3 and repeat the process.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 6. 检查模型是否已经收敛，方法是检查是否已达到最大允许的迭代次数，或者查看系数是否不再发生显著变化。如果未收敛，返回到步骤3并重复该过程。
- en: '![](../Images/4bdff8f8191a93822b8c5d9788dce60f.png)'
  id: totrans-106
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/4bdff8f8191a93822b8c5d9788dce60f.png)'
- en: The final Elastic Net model after 1000 iterations shows smaller coefficient
    values compared to Lasso and fewer coefficients shrunk exactly to zero.
  id: totrans-107
  prefs: []
  type: TYPE_NORMAL
  zh: 经过1000次迭代后的最终弹性网模型，与Lasso相比，显示出较小的系数值，并且较少的系数被压缩为零。
- en: '[PRE6]'
  id: totrans-108
  prefs: []
  type: TYPE_PRE
  zh: '[PRE6]'
- en: '**Test Step**'
  id: totrans-109
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: '**测试步骤**'
- en: 'The prediction process remains the same as OLS — multiply new data points by
    the coefficients:'
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 预测过程与OLS相同——将新的数据点与系数相乘：
- en: Lasso Regression
  id: totrans-111
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lasso回归
- en: '![](../Images/5b346c92504c34a5978d7fa63339b597.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5b346c92504c34a5978d7fa63339b597.png)'
- en: When applying the trained Lasso model to unseen data, it multiplies each feature
    value with its corresponding coefficient and adds the bias term (41.24), resulting
    in a final prediction of 40.2 players for this new data point.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 当将训练好的Lasso模型应用于未见过的数据时，它会将每个特征值与相应的系数相乘，并加上偏差项（41.24），从而对这个新的数据点进行最终预测，得出40.2个玩家的结果。
- en: Elastic Net Regression
  id: totrans-114
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹性网回归
- en: '![](../Images/d236c4e9015808c670b7af71685e43ea.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d236c4e9015808c670b7af71685e43ea.png)'
- en: The trained Elastic Net model predicts 40.83 players for the same unseen data
    point by multiplying features with its more evenly distributed coefficients and
    adding the bias (38.59), showing a slightly different prediction from Lasso due
    to its balanced regularization approach.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 训练好的弹性网模型通过将特征与其更均匀分布的系数相乘并加上偏差（38.59），预测出40.83个玩家，与Lasso相比，由于其平衡的正则化方法，预测结果略有不同。
- en: Evaluation Step
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 评估步骤
- en: 'We can do the same process for all data points. For our dataset, here’s the
    final result with the RMSE as well:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 我们可以对所有数据点执行相同的过程。对于我们的数据集，以下是最终结果以及对应的RMSE值：
- en: Lasso Regression
  id: totrans-119
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lasso回归
- en: '![](../Images/b6e2f8a906fcbe42c82b4e75ee41cddf.png)'
  id: totrans-120
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/b6e2f8a906fcbe42c82b4e75ee41cddf.png)'
- en: Lasso’s performance on multiple test cases shows a Root Mean Square Error (RMSE)
    of 7.203, calculated by comparing its predictions with actual player counts across
    14 different test samples.
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso在多个测试案例中的表现显示，其均方根误差（RMSE）为7.203，这是通过将其预测值与14个不同测试样本的实际玩家数进行比较计算得出的。
- en: Elastic Net Regression
  id: totrans-122
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹性网回归
- en: '![](../Images/5ede9d56bb31b43bac0195a76b3cde52.png)'
  id: totrans-123
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/5ede9d56bb31b43bac0195a76b3cde52.png)'
- en: Elastic Net shows a slightly higher RMSE compared to Lasso’s, likely because
    its combined L1 and L2 penalties keep more features with small non-zero coefficients,
    which can introduce more variance in predictions.
  id: totrans-124
  prefs: []
  type: TYPE_NORMAL
  zh: 弹性网的RMSE稍高于Lasso，可能是因为其结合的L1和L2惩罚项保留了更多的小的非零系数，这可能引入更多的预测方差。
- en: Key Parameters
  id: totrans-125
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 关键参数
- en: Lasso Regression
  id: totrans-126
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: Lasso回归
- en: 'Lasso regression uses coordinate descent to solve the optimization problem.
    Here are the key parameters for that:'
  id: totrans-127
  prefs: []
  type: TYPE_NORMAL
  zh: Lasso回归使用坐标下降法来解决优化问题。以下是该方法的关键参数：
- en: '`alpha` (λ): Controls how strongly to penalize large coefficients. Higher values
    force more coefficients to become exactly zero. Default is 1.0.'
  id: totrans-128
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha`（λ）：控制惩罚大系数的强度。较高的值会强制更多的系数变为零。默认值为1.0。'
- en: '`max_iter`: Sets the maximum number of cycles the algorithm will update its
    solution in search of the best result. Default is 1000.'
  id: totrans-129
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_iter`：设置算法在寻找最佳结果时会更新其解的最大周期数。默认值是1000。'
- en: '`tol`: Sets how small the change in coefficients needs to be before the algorithm
    decides it has found a good enough solution. Default is 0.0001.'
  id: totrans-130
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tol`：设置系数变化需要多小才能使算法判断找到足够好的解。默认值是0.0001。'
- en: Elastic Net Regression
  id: totrans-131
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 弹性网回归。
- en: 'Elastic Net regression combines two types of penalties and also uses coordinate
    descent. Here are the key parameters for that:'
  id: totrans-132
  prefs: []
  type: TYPE_NORMAL
  zh: 弹性网回归结合了两种类型的惩罚，并且使用坐标下降法。以下是相关的关键参数：
- en: '`alpha` (*λ*): Controls the overall strength of both penalties together. Higher
    values mean stronger penalties. Default is 1.0.'
  id: totrans-133
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`alpha`（*λ*）：控制两种惩罚的整体强度。较高的值表示较强的惩罚。默认值是1.0。'
- en: '`l1_ratio` (*α*): Sets how much to use each type of penalty. A value of 0 uses
    only Ridge penalty, while 1 uses only Lasso penalty. Values between 0 and 1 use
    both. Default is 0.5.'
  id: totrans-134
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`l1_ratio`（*α*）：设置每种惩罚的使用比例。值为0时，仅使用Ridge惩罚；值为1时，仅使用Lasso惩罚；0和1之间的值则同时使用两者。默认值为0.5。'
- en: '`max_iter`: Maximum number of iterations for the coordinate descent algorithm.
    Default is 1000 iterations.'
  id: totrans-135
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`max_iter`：坐标下降算法的最大迭代次数。默认值是1000次迭代。'
- en: '`tol`: Tolerance for the optimization convergence, similar to Lasso. Default
    is 1e-4.'
  id: totrans-136
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '`tol`：优化收敛的容差，类似于Lasso。默认值是1e-4。'
- en: '*Note*: Not to be confused, in `scikit-learn`’s code, the regularization parameter
    is called `alpha`, but in mathematical notation it’s typically written as *λ*
    (lambda). Similarly, the mixing parameter is called `l1_ratio` in code but written
    as *α* (alpha) in mathematical notation. We use the mathematical symbols here
    to match standard textbook notation.'
  id: totrans-137
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意*：不要混淆，在`scikit-learn`的代码中，正则化参数叫做`alpha`，但在数学符号中通常写作*λ*（lambda）。类似地，混合参数在代码中叫做`l1_ratio`，但在数学符号中写作*α*（alpha）。我们在这里使用数学符号，以匹配标准的教科书符号。'
- en: 'Model Comparison: OLS vs Lasso vs Ridge vs Elastic Net'
  id: totrans-138
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 模型比较：OLS与Lasso与Ridge与弹性网。
- en: 'With Elastic Net, we can actually explore different types of linear regression
    models by adjusting the parameters:'
  id: totrans-139
  prefs: []
  type: TYPE_NORMAL
  zh: 使用弹性网时，实际上可以通过调整参数来探索不同类型的线性回归模型：
- en: When `alpha` = 0, we get Ordinary Least Squares (OLS)
  id: totrans-140
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`alpha` = 0时，我们得到普通最小二乘法（OLS）。
- en: When `alpha` > 0 and `l1_ratio` = 0, we get Ridge regression
  id: totrans-141
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`alpha` > 0且`l1_ratio` = 0时，我们得到Ridge回归。
- en: When `alpha` > 0 and `l1_ratio` = 1, we get Lasso regression
  id: totrans-142
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`alpha` > 0且`l1_ratio` = 1时，我们得到Lasso回归。
- en: When `alpha` > 0 and 0 < `l1_ratio` < 1, we get Elastic Net regression
  id: totrans-143
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 当`alpha` > 0且0 < `l1_ratio` < 1时，我们得到弹性网回归。
- en: In practice, it is a good idea to explore a range of `alpha` values (like 0.0001,
    0.001, 0.01, 0.1, 1, 10, 100) and `l1_ratio` values (like 0, 0.25, 0.5, 0.75,
    1), preferably using cross-validation to find the best combination.
  id: totrans-144
  prefs: []
  type: TYPE_NORMAL
  zh: 实际操作中，建议探索一系列的`alpha`值（如0.0001、0.001、0.01、0.1、1、10、100）和`l1_ratio`值（如0、0.25、0.5、0.75、1），最好使用交叉验证来寻找最佳组合。
- en: Here, let’s see how the model coefficients, bias terms, and test RMSE change
    with different regularization strengths (*λ*) and mixing parameters (`l1_ratio`).
  id: totrans-145
  prefs: []
  type: TYPE_NORMAL
  zh: 在这里，让我们看看模型系数、偏置项以及测试集RMSE如何随着不同的正则化强度（*λ*）和混合参数（`l1_ratio`）的变化而变化。
- en: '![](../Images/7b26b010afc0a4b6801ec0128418fb8c.png)![](../Images/6f1640b2c83d7addefc37d8c4619dc71.png)![](../Images/d8d68a8953bf6af67433a1de86169808.png)![](../Images/04b0cdb113e505cc73a2a6a207f47dbb.png)![](../Images/9dd62b75a888017ce978d13d494a615e.png)'
  id: totrans-146
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7b26b010afc0a4b6801ec0128418fb8c.png)![](../Images/6f1640b2c83d7addefc37d8c4619dc71.png)![](../Images/d8d68a8953bf6af67433a1de86169808.png)![](../Images/04b0cdb113e505cc73a2a6a207f47dbb.png)![](../Images/9dd62b75a888017ce978d13d494a615e.png)'
- en: The best model is Lasso (α = 0) with λ = 0.1, achieving an RMSE of 6.561, showing
    that pure L1 regularization works best for our dataset.
  id: totrans-147
  prefs: []
  type: TYPE_NORMAL
  zh: 最佳模型是Lasso（α = 0）与λ = 0.1，获得的RMSE为6.561，表明纯L1正则化最适合我们的数据集。
- en: '[PRE7]'
  id: totrans-148
  prefs: []
  type: TYPE_PRE
  zh: '[PRE7]'
- en: '*Note*: Even though Elastic Net can do what OLS, Ridge, and Lasso do by changing
    its parameters, it’s better to use the specific command made for each type of
    regression. In scikit-learn, use `LinearRegression` for OLS, `Ridge` for Ridge
    regression, and `Lasso` for Lasso regression. Only use Elastic Net when you want
    to combine both Lasso and Ridge''s special features together.'
  id: totrans-149
  prefs: []
  type: TYPE_NORMAL
  zh: '*注意*：尽管弹性网（Elastic Net）可以通过调整其参数实现OLS、Ridge和Lasso的功能，但最好使用针对每种回归方法设计的特定命令。在scikit-learn中，使用`LinearRegression`进行OLS，使用`Ridge`进行Ridge回归，使用`Lasso`进行Lasso回归。只有在你想将Lasso和Ridge的特殊功能结合起来时，才使用弹性网。'
- en: 'Final Remarks: Which Regression Method Should You Use?'
  id: totrans-150
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 最后总结：你应该使用哪种回归方法？
- en: Let’s break down when to use each method.
  id: totrans-151
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来分析何时使用每种方法。
- en: Start with **Ordinary Least Squares (OLS)** when you have more samples than
    features in your dataset, and when your features don’t strongly predict each other.
  id: totrans-152
  prefs: []
  type: TYPE_NORMAL
  zh: 当你的数据集中的样本数多于特征数，并且特征之间的预测关系不强时，可以从**普通最小二乘回归（OLS）**开始。
- en: '**Ridge Regression** works well when you have the opposite situation — lots
    of features compared to your number of samples. It’s also great when your features
    are strongly connected to each other.'
  id: totrans-153
  prefs: []
  type: TYPE_NORMAL
  zh: '**岭回归**在你遇到相反情况时表现良好——特征远多于样本数。当你的特征之间有强相关性时，它也非常有效。'
- en: '**Lasso Regression** is best when you want to discover which features actually
    matter for your predictions. It will automatically set unimportant features to
    zero, making your model simpler.'
  id: totrans-154
  prefs: []
  type: TYPE_NORMAL
  zh: '**套索回归**在你想要发现哪些特征对预测真正有作用时最为适用。它会自动将不重要的特征设置为零，从而简化你的模型。'
- en: '**Elastic Net** combines the strengths of both Ridge and Lasso. It’s useful
    when you have groups of related features and want to either keep or remove them
    together. If you’ve tried Ridge and Lasso separately and weren’t happy with the
    results, Elastic Net might give you better predictions.'
  id: totrans-155
  prefs: []
  type: TYPE_NORMAL
  zh: '**弹性网**结合了岭回归和套索回归的优点。当你有一组相关特征，并且想要将它们一起保留或删除时，弹性网非常有用。如果你已经尝试过岭回归和套索回归，但结果不理想，弹性网可能会给你带来更好的预测。'
- en: A good strategy is to start with Ridge if you want to keep all your features.
    You can move on to Lasso if you want to identify the important ones. If neither
    gives you good results, then move on to Elastic Net.
  id: totrans-156
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你希望保留所有特征，好的策略是从岭回归开始。如果你想识别重要特征，可以尝试套索回归。如果这两者都没有得到好的结果，那么可以尝试弹性网回归。
- en: 🌟 Lasso and Elastic Net Code Summarized
  id: totrans-157
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 🌟 套索回归和弹性网回归代码总结
- en: '[PRE8]'
  id: totrans-158
  prefs: []
  type: TYPE_PRE
  zh: '[PRE8]'
- en: Further Reading
  id: totrans-159
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 进一步阅读
- en: For a detailed explanation of [Lasso](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.Lasso.html)
    Regression and [Elastic Net](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.ElasticNet.html)
    Regression, and its implementation in `scikit-learn`, readers can refer to their
    official documentation. It provides comprehensive information on their usage and
    parameters.
  id: totrans-160
  prefs: []
  type: TYPE_NORMAL
  zh: 有关[Lasso](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.Lasso.html)回归和[Elastic
    Net](https://scikit-learn.org/1.5/modules/generated/sklearn.linear_model.ElasticNet.html)回归的详细解释以及它们在`scikit-learn`中的实现，读者可以参考它们的官方文档。该文档提供了有关如何使用和配置这些方法的全面信息。
- en: Technical Environment
  id: totrans-161
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 技术环境
- en: This article uses Python 3.7 and scikit-learn 1.5\. While the concepts discussed
    are generally applicable, specific code implementations may vary slightly with
    different versions
  id: totrans-162
  prefs: []
  type: TYPE_NORMAL
  zh: 本文使用的是Python 3.7和scikit-learn 1.5版本。尽管本文讨论的概念通常适用，但具体的代码实现可能会根据不同版本有所不同。
- en: About the Illustrations
  id: totrans-163
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于插图
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  id: totrans-164
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图片均由作者创建，并结合了Canva Pro的授权设计元素。
- en: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝙍𝙚𝙜𝙧𝙚𝙨𝙨𝙞𝙤𝙣 𝘼𝙡𝙜𝙤𝙧𝙞𝙩𝙝𝙢𝙨 𝙝𝙚𝙧𝙚:'
  id: totrans-165
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝙍𝙚𝙜𝙧𝙚𝙨𝙨𝙞𝙤𝙣 𝘼𝙡𝙜𝙤𝙧𝙞𝙩𝙝𝙢𝙨 𝙝𝙚𝙧𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-166
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
  id: totrans-167
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
- en: Regression Algorithms
  id: totrans-168
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 回归算法
- en: '[View list](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----5fecf3e1432f--------------------------------)5
    stories![A cartoon doll with pigtails and a pink hat. This “dummy” doll, with
    its basic design and heart-adorned shirt, visually represents the concept of a
    dummy regressor in machine. Just as this toy-like figure is a simplified, static
    representation of a person, a dummy regressor is a basic models serve as baselines
    for more sophisticated analyses.](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
  id: totrans-169
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/regression-algorithms-b0b6959f1b39?source=post_page-----5fecf3e1432f--------------------------------)5个故事![一个戴着粉色帽子、扎着双马尾的卡通娃娃。这款“傀儡”娃娃以其简单的设计和心形图案的衣服，直观地展示了机器中“傀儡回归器”的概念。就像这个玩具人物是一个简化的静态人类形象一样，傀儡回归器是一个基础模型，作为更复杂分析的基准。](../Images/aa7eeaa18e4bb093f5ce4ab9b93a8a27.png)![](../Images/44e6d84e61c895757ff31e27943ee597.png)![](../Images/7f3e5f3e2aca2feec035ca92e1bc440a.png)'
- en: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
  id: totrans-170
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-171
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
  id: totrans-172
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
- en: Classification Algorithms
  id: totrans-173
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类算法
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----5fecf3e1432f--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-174
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----5fecf3e1432f--------------------------------)8个故事![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)![Samy
    Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
  id: totrans-175
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----5fecf3e1432f--------------------------------)'
- en: Ensemble Learning
  id: totrans-176
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 集成学习
- en: '[View list](https://medium.com/@samybaladram/list/ensemble-learning-673fc83cd7db?source=post_page-----5fecf3e1432f--------------------------------)4
    stories![](../Images/1bd2995b5cb6dcc956ceadadc5ee3036.png)![](../Images/22a5d43568e70222eb89fd36789a9333.png)![](../Images/8ea1a2f29053080a5feffc709f5b8669.png)'
  id: totrans-177
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/ensemble-learning-673fc83cd7db?source=post_page-----5fecf3e1432f--------------------------------)4个故事![](../Images/1bd2995b5cb6dcc956ceadadc5ee3036.png)![](../Images/22a5d43568e70222eb89fd36789a9333.png)![](../Images/8ea1a2f29053080a5feffc709f5b8669.png)'
