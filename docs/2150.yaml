- en: Use R to build Clinical Flowchart with shinyCyJS
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用R与shinyCyJS构建临床流程图
- en: 原文：[https://towardsdatascience.com/clinical-flowchart-shinycyjs-e-2f5489154794?source=collection_archive---------10-----------------------#2024-09-03](https://towardsdatascience.com/clinical-flowchart-shinycyjs-e-2f5489154794?source=collection_archive---------10-----------------------#2024-09-03)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/clinical-flowchart-shinycyjs-e-2f5489154794?source=collection_archive---------10-----------------------#2024-09-03](https://towardsdatascience.com/clinical-flowchart-shinycyjs-e-2f5489154794?source=collection_archive---------10-----------------------#2024-09-03)
- en: Customizable R package for Graph / Network visualization
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 可定制的R图形/网络可视化包
- en: '[](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)[![Jinhwan
    Kim](../Images/b88f1327cd0800b21ccd235262fefeec.png)](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)
    [Jinhwan Kim](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)'
  id: totrans-3
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)[![Jinhwan
    Kim](../Images/b88f1327cd0800b21ccd235262fefeec.png)](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)
    [金煥金](https://jhk0530.medium.com/?source=post_page---byline--2f5489154794--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)
    ·6 min read·Sep 3, 2024
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于 [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--2f5489154794--------------------------------)
    ·6分钟阅读·2024年9月3日
- en: --
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: Clinical Flowchart
  id: totrans-6
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 临床流程图
- en: A Clinical (Trial) Flowchart is a visual representation of each step and procedure
    in a clinical trial or treatment process.
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 临床（试验）流程图是临床试验或治疗过程中的每个步骤和程序的可视化表示。
- en: It starts with patients, lists which therapeutic methods are used, which patients
    are excluded from the trial and for what reason, how the groups are assigned,
    and so on, and looks like the example below.
  id: totrans-8
  prefs: []
  type: TYPE_NORMAL
  zh: 它从患者开始，列出使用了哪些治疗方法，哪些患者因何种原因被排除在试验之外，如何分配组别，等等，下面的例子类似。
- en: '![](../Images/746cddecc4f78642a9a5a0c89bdd7838.png)'
  id: totrans-9
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/746cddecc4f78642a9a5a0c89bdd7838.png)'
- en: '[Cesa, Gian Luca, et al](https://www.jmir.org/2013/6/e113/). JMIR Publications
    15(6) 2013'
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: '[Cesa, Gian Luca 等人](https://www.jmir.org/2013/6/e113/). JMIR Publications
    15(6) 2013'
- en: This illustration implies the following
  id: totrans-11
  prefs: []
  type: TYPE_NORMAL
  zh: 这张插图暗示了以下内容
- en: Initially started with 124 patients
  id: totrans-12
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 最初开始时有124名患者
- en: Exclude 34 patients due to ineligibility or declining to participate
  id: totrans-13
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 由于不符合条件或拒绝参与，排除了34名患者
- en: The remaining 90 patients are randomly assigned to a group (Extended CBT, CBT,
    IP) to compare treatments.
  id: totrans-14
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 剩余的90名患者被随机分配到不同组别（扩展CBT、CBT、IP），以比较治疗效果。
- en: In each group, 4, 10, and 10 people drop out of the course (although ideally
    30 people would be split), and the rest receive the assigned treatment.
  id: totrans-15
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 在每组中，分别有4、10和10人退出课程（尽管理想情况下会有30人分组），其余患者接受分配的治疗。
- en: When the patients were followed up after 1 year, 9, 6, and 7 were unresponsive,
    respectively.
  id: totrans-16
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 当患者在1年后进行随访时，分别有9、6和7名患者未回应。
- en: '*The trial started with 124 patients and ended up with only 44 patients, which
    shows how difficult and expensive clinical trials can be.*'
  id: totrans-17
  prefs: []
  type: TYPE_NORMAL
  zh: '*试验开始时有124名患者，最终只有44名患者，显示了临床试验的困难和昂贵。*'
- en: Anyway, there is no set way to draw this flowchart, and you can use any commercial
    software such as PowerPoint or Keynote, or web-based diagramming tools such as
    **draw.io** or lucidchart.
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，绘制这个流程图没有固定的方法，你可以使用任何商业软件，比如 PowerPoint 或 Keynote，或者基于网页的图表工具，如**draw.io**或
    lucidchart。
- en: Clinical Flowchart with R
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 使用R构建临床流程图
- en: I don’t know exactly why, but this time I needed to use R to plot the chart.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 我不确定具体原因，但这次我需要使用R来绘制图表。
- en: The advantages of using a programming approach like R include automation and
    reuse, integration with other functions (e.g., a program that plots from data
    source to chart), and a level of customization not available in commercial programs.
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 使用类似R这样的编程方法的优点包括自动化和复用，能够与其他功能集成（例如从数据源到图表的程序），以及商业程序中无法实现的定制化程度。
- en: Anyway, here’s how I’ve tried to accomplish this.
  id: totrans-22
  prefs: []
  type: TYPE_NORMAL
  zh: 无论如何，下面是我尝试完成这一目标的方法。
- en: '[flowchart](https://github.com/bruigtp/flowchart/)'
  id: totrans-23
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[流程图](https://github.com/bruigtp/flowchart/)'
- en: Since the original purpose of the package was to draw participant flow diagrams,
    this is the closest I could get to what I was trying to achieve. I think it’s
    the best choice unless you have special circumstances.
  id: totrans-24
  prefs: []
  type: TYPE_NORMAL
  zh: 由于该包的最初目的是绘制参与者流动图，因此这是我尽力接近我想要实现的目标的最佳选择。我认为除非有特殊情况，否则这是最佳选择。
- en: '[DiagrammeR](https://github.com/rich-iannone/DiagrammeR/)'
  id: totrans-25
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[DiagrammeR](https://github.com/rich-iannone/DiagrammeR/)'
- en: A library for graph and network visualization that leverages features from d3
    and mermaid.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 一个用于图形和网络可视化的库，利用了d3和mermaid的特性。
- en: ggplot2 + [ggforce](https://github.com/thomasp85/ggforce)
  id: totrans-27
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: ggplot2 + [ggforce](https://github.com/thomasp85/ggforce)
- en: R’s best friend ggplot (recommended by GPT) and its companion packages.
  id: totrans-28
  prefs: []
  type: TYPE_NORMAL
  zh: R的好伙伴ggplot（由GPT推荐）及其相关包。
- en: '[visNetwork](https://github.com/datastorm-open/visNetwork)'
  id: totrans-29
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: '[visNetwork](https://github.com/datastorm-open/visNetwork)'
- en: R package for network visualization graphs based on vis.js.
  id: totrans-30
  prefs: []
  type: TYPE_NORMAL
  zh: 基于vis.js的R网络可视化图形包。
- en: However, as it turns out, all four methods failed.
  id: totrans-31
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，结果证明，所有四种方法都失败了。
- en: This is because there was a special situation with the figure I was trying to
    draw.
  id: totrans-32
  prefs: []
  type: TYPE_NORMAL
  zh: 这是因为我试图绘制的图形中出现了一个特殊情况。
- en: The following figure shows the actual drawing, with only the numbers and groups
    replaced with 1000, 1,2,3… A, B.
  id: totrans-33
  prefs: []
  type: TYPE_NORMAL
  zh: 下图显示了实际的图形，其中只有数字和组被替换为1000、1、2、3…… A、B。
- en: '![](../Images/016e612bd2311ba14f738932cc947dd7.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/016e612bd2311ba14f738932cc947dd7.png)'
- en: Image by the author
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: 'There were two problematic parts: the **Completed curative surgery** part in
    the middle, where the two nodes from the previous step connect to one long node,
    and the difficulty of positioning the edge.'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 有两个问题部分：中间的**已完成的治疗手术**部分，其中来自前一步的两个节点连接到一个长节点，以及定位边的困难。
- en: '![](../Images/04cdc6a40c8db3327eb8f80d2f87578d.png)'
  id: totrans-37
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/04cdc6a40c8db3327eb8f80d2f87578d.png)'
- en: Image by the author
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: I considered several ways to do this, and eventually decided to use an old friend,
    shinyCyJS, which I can customize to my purpose.
  id: totrans-39
  prefs: []
  type: TYPE_NORMAL
  zh: 我考虑了几种方法，最终决定使用一个老朋友shinyCyJS，它可以根据我的需求进行定制。
- en: '[shinyCyJS](https://github.com/jhk0530/shinyCyJS)is a R package to leverage
    the network/graph visualization capabilities of [cytoscape.js](https://js.cytoscape.org/)
    in R. It was the first thing I wrote when I was looking for genomic network visualization
    when I graduated (at the time, there was only [igraph](https://github.com/igraph/rigraph)
    and [RCyjs](https://bioconductor.org/packages/release/bioc/html/RCyjs.html)) and
    didn’t find what I was looking for, which is how I ended up at my current job.'
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: '[shinyCyJS](https://github.com/jhk0530/shinyCyJS)是一个R包，用于在R中利用[cytoscape.js](https://js.cytoscape.org/)的网络/图形可视化功能。这是我毕业时寻找基因组网络可视化时编写的第一个工具（当时，只有[igraph](https://github.com/igraph/rigraph)和[RCyjs](https://bioconductor.org/packages/release/bioc/html/RCyjs.html)），但没有找到我想要的东西，这也是我最终找到现在工作的原因。'
- en: 2 Custom feature with shinyCyJS
  id: totrans-41
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 2 使用shinyCyJS的自定义特征
- en: Positioning Edges
  id: totrans-42
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 边的定位
- en: In order to implement the positioning of the edges in the two custom features
    above, I initially tried to use taxi edges.
  id: totrans-43
  prefs: []
  type: TYPE_NORMAL
  zh: 为了实现上面两个自定义特征中边的定位，我最初尝试使用出租车边。
- en: However, again, this only determines the edge based on the position of the node,
    and it is not possible to move the edge, so I switched to adding a microscopic
    node in the middle and traversing the edge to it, as shown below (since it is
    possible to specify the position of the “micro” node).
  id: totrans-44
  prefs: []
  type: TYPE_NORMAL
  zh: 然而，再次强调，这只是基于节点的位置来确定边，无法移动边，因此我改为在中间添加一个微小的节点，并遍历到它，如下所示（因为可以指定“微型”节点的位置）。
- en: '![](../Images/babadb179203976e4b121a8bbded6abd.png)![](../Images/42277c7591b1d66da5c96ca2186d78cf.png)'
  id: totrans-45
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/babadb179203976e4b121a8bbded6abd.png)![](../Images/42277c7591b1d66da5c96ca2186d78cf.png)'
- en: Image by the author
  id: totrans-46
  prefs: []
  type: TYPE_NORMAL
  zh: 图片来自作者
- en: One Big Node
  id: totrans-47
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 一个大节点
- en: In cytoscape.js, by default, nodes are connected by edges that consider the
    **shortest distance between the center and the center**, and if they go through
    other points along the way, like the taxi mentioned above, the **points are not
    specified and are calculated algorithmically**.
  id: totrans-48
  prefs: []
  type: TYPE_NORMAL
  zh: 在cytoscape.js中，默认情况下，节点通过考虑**中心与中心之间的最短距离**的边连接，如果它们经过其他点，如上述的出租车，**这些点没有明确指定，而是通过算法计算的**。
- en: '![](../Images/8644b2d457d7368f9e2cc7a332339188.png)'
  id: totrans-49
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/8644b2d457d7368f9e2cc7a332339188.png)'
- en: '[Edge arrow types](https://js.cytoscape.org/demos/edge-arrows/) of Cytoscape.js'
  id: totrans-50
  prefs: []
  type: TYPE_NORMAL
  zh: '[Edge arrow types](https://js.cytoscape.org/demos/edge-arrows/)的Cytoscape.js'
- en: The problem with allowing intermediate points to be specified is that when there
    are multiple edges between nodes, like in the bezier and haystack examples, it
    is annoying to have to specify intermediate points for all of them.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 允许指定中间点的问题在于，当节点之间有多条边时，比如在贝塞尔和干草堆示例中，必须为所有边指定中间点是很麻烦的。
- en: In the previous example, there are only three edges, so it’s not a big deal,
    but in the case of genomic networks, which I studied in graduate school, a single
    gene often interacts with dozens or hundreds of other genes, so it’s a big deal.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 在前面的例子中，只有三条边，所以不算什么大事，但在我研究过的基因组网络中，一个基因往往与数十个或数百个其他基因互作，所以这就是大问题了。
- en: In the worst case scenario, the edges overlap and missing a few edges can cause
    the graph to produce completely different information.
  id: totrans-53
  prefs: []
  type: TYPE_NORMAL
  zh: 在最坏的情况下，边缘会重叠，缺少几条边会导致图形产生完全不同的信息。
- en: '![](../Images/327075482d992cced5961cdce0e739ff.png)'
  id: totrans-54
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/327075482d992cced5961cdce0e739ff.png)'
- en: '[Ideker, T., & Krogan, N. J.](https://www.embopress.org/doi/full/10.1038/msb.2011.99)
    Molecular systems biology 8(1) 2012'
  id: totrans-55
  prefs: []
  type: TYPE_NORMAL
  zh: '[Ideker, T., & Krogan, N. J.](https://www.embopress.org/doi/full/10.1038/msb.2011.99)
    分子系统生物学 8(1) 2012'
- en: In other words, in the problem of connecting to one long node, the long node
    is only a graphical (`width`) perspective for the user,
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 换句话说，在连接到一个长节点的问题中，长节点仅仅是用户从图形 (`width`) 角度的视角，
- en: But from the computer’s point of view, it is irrational behavior to connect
    an edge to a node that doesn’t even exist, as shown in the image below, so there
    is no reason to consider this option in the first place.
  id: totrans-57
  prefs: []
  type: TYPE_NORMAL
  zh: 但从计算机的角度来看，将一条边连接到一个甚至不存在的节点上（如下面的图像所示）是不理性的行为，因此根本没有理由首先考虑这个选项。
- en: '![](../Images/737e59fbe58d29be0a3eb076f2d7ae88.png)'
  id: totrans-58
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/737e59fbe58d29be0a3eb076f2d7ae88.png)'
- en: Image by the author
  id: totrans-59
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: To solve this problem, I created a micro node and modified it to connect to
    the appropriate part, just like the previous edge midpoint problem.
  id: totrans-60
  prefs: []
  type: TYPE_NORMAL
  zh: 为了解决这个问题，我创建了一个微节点，并修改它以连接到适当的部分，就像之前的边缘中点问题一样。
- en: '![](../Images/f3684ec9694dbe5d039a51fe3feb55b2.png)'
  id: totrans-61
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/f3684ec9694dbe5d039a51fe3feb55b2.png)'
- en: Image by the author
  id: totrans-62
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Here is a partial view of the graph I ended up creating in R. (Again, groups
    and numbers are arbitrarily modified)
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我最终在R中创建的图形的部分视图。（再次说明，组和数字是随意修改的）
- en: '![](../Images/133e2f8d8cee75d916a2ee92b09063f3.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/133e2f8d8cee75d916a2ee92b09063f3.png)'
- en: Image by the author
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: Another problem, download as PNG
  id: totrans-66
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 另一个问题，下载为PNG
- en: Technically, you can use the Export as PNG button in Rstudio viewer as shown
    below, and if that doesn’t work, you can take a screenshot, but cytoscape.js has
    a function to save the graph as png, so I used it.
  id: totrans-67
  prefs: []
  type: TYPE_NORMAL
  zh: 从技术上讲，你可以使用Rstudio查看器中的“导出为PNG”按钮，如下所示，如果那样不起作用，你可以截图，但cytoscape.js有一个将图形保存为png的功能，所以我使用了它。
- en: '![](../Images/ed572ffe8e4f78fc955df54632aa1924.png)'
  id: totrans-68
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/ed572ffe8e4f78fc955df54632aa1924.png)'
- en: Image by the author
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 图片由作者提供
- en: '**I actually had a request to add a download to png feature to shinyCyJS a
    while back, and I replied “why not just take a screenshot?”.*'
  id: totrans-70
  prefs: []
  type: TYPE_NORMAL
  zh: '**实际上，我曾收到一个请求，要求在shinyCyJS中添加一个下载到png的功能，当时我回答：“为什么不直接截图呢？”**'
- en: This required using an internet browser (chrome) (As cytoscape.js is Javascript)
    and that meant I had to go beyond R and implement it on the web using Shiny.
  id: totrans-71
  prefs: []
  type: TYPE_NORMAL
  zh: 这需要使用互联网浏览器（Chrome）（因为cytoscape.js是JavaScript），这意味着我必须超越R，在Web上使用Shiny来实现它。
- en: Of course, shinyCyJS is a package that was built with shiny integration in mind
    from the start, so it was no problem.
  id: totrans-72
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，shinyCyJS是一个从一开始就考虑了shiny集成的包，因此没有问题。
- en: Below is the code you need to run in Chrome’s developer tools to download it
  id: totrans-73
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是你需要在Chrome的开发者工具中运行的代码来下载它
- en: '[PRE0]'
  id: totrans-74
  prefs: []
  type: TYPE_PRE
  zh: '[PRE0]'
- en: shinyCyJS is an R package I wrote, and it literally does everything cytoscape
    does, plus custom features like this if needed, so if you need to do network/graph
    visualization in R, you can try it out or ask for what you need.
  id: totrans-75
  prefs: []
  type: TYPE_NORMAL
  zh: shinyCyJS是我编写的一个R包，它实际上做了cytoscape所做的所有事情，此外，如果需要，还可以提供像这样的自定义功能，所以如果你需要在R中进行网络/图形可视化，可以尝试使用它或提出需求。
- en: Of course, if you don’t need to use R, **draw.io seems better.**
  id: totrans-76
  prefs: []
  type: TYPE_NORMAL
  zh: 当然，如果你不需要使用R，**draw.io似乎更好。**
- en: Additionally, if you want to package other Javascript libraries for use with
    R, you can send me an email.
  id: totrans-77
  prefs: []
  type: TYPE_NORMAL
  zh: 此外，如果你想将其他Javascript库打包供R使用，可以给我发邮件。
- en: Thanks for reading.
  id: totrans-78
  prefs: []
  type: TYPE_NORMAL
  zh: 感谢阅读。
