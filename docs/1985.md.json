["```py\nimport matplotlib.pyplot as plt\nimport numpy as np\nimport pandas as pd\nimport statsmodels.api as sm\n\nN = 5000\nBETA = 0.7\nINTERCEPT = -2\nSIGMA = 5\n\ndf = pd.DataFrame({\n    \"x\": np.random.uniform(0, 50, N),\n    \"e\": np.random.normal(0, SIGMA, N)\n})\ndf[\"y\"] = INTERCEPT + BETA * df[\"x\"] + df[\"e\"]\n```", "```py\nr1 = sm.OLS(df[\"y\"], sm.add_constant(df[\"x\"])).fit()\nplt.scatter(df[\"x\"], df[\"y\"], label=\"population\")\nplt.plot(df[\"x\"], r1.fittedvalues, label=\"OLS Population\", color=\"r\")\n```", "```py\nsample1 = df.sample(100)\nr2 = sm.OLS(sample1[\"y\"], sm.add_constant(sample1[\"x\"])).fit()\n\nplt.scatter(sample1[\"x\"], sample1[\"y\"], label=\"sample\")\nplt.plot(sample1[\"x\"], r2.fittedvalues, label=\"OLS Random sample\")\n```", "```py\nprint(f\"corr {np.corrcoef(df['x'], df['e'])}\")\nprint(f\"E(e|x) {np.mean(df['e'])}\")\n\n# corr [[ 1\\.         -0.02164744]\n#  [-0.02164744  1\\.        ]]\n# E(e|x) 0.004016713100777963\n```", "```py\nsample2 = df[df[\"y\"] <= 10]\nr3 = sm.OLS(sample2[\"y\"], sm.add_constant(sample2[\"x\"])).fit()\n\nplt.scatter(sample2[\"x\"], sample2[\"y\"], label=\"Selected sample\")\nplt.plot(sample[\"x\"], r3.fittedvalues, label=\"OLS Selected Sample\")\n```", "```py\nprint(f\"corr {np.corrcoef(df['x'], df['e'])}\")\nprint(f\"E(e|x) {np.mean(df['e'])}\")\n\n# corr [[ 1\\.         -0.48634973]\n#  [-0.48634973  1\\.        ]]\n# E(e|x) -2.0289245650303616\n```", "```py\nfrom scipy.stats import norm\n\nsample[\"z\"] = (CENSOR-INTERCEPT-BETA*sample[\"x\"])/SIGMA\nsample[\"mills\"] = -SIGMA*(norm.pdf(sample[\"z\"])/(norm.cdf(sample[\"z\"])))\n```", "```py\ncorrecred_ols = sm.OLS(sample[\"y\"], sm.add_constant(sample[[\"x\", \"mills\"]])).fit(cov_type=\"HC1\")\nprint(correcred_ols.summary())\n```", "```py\n OLS Regression Results                            \n==============================================================================\nDep. Variable:                      y   R-squared:                       0.313\nModel:                            OLS   Adj. R-squared:                  0.313\nMethod:                 Least Squares   F-statistic:                     443.7\nDate:                Mon, 12 Aug 2024   Prob (F-statistic):          3.49e-156\nTime:                        16:47:01   Log-Likelihood:                -4840.1\nNo. Observations:                1727   AIC:                             9686.\nDf Residuals:                    1724   BIC:                             9702.\nDf Model:                           2                                         \nCovariance Type:                  HC1                                         \n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         -1.8966      0.268     -7.088      0.000      -2.421      -1.372\nx              0.7113      0.047     14.982      0.000       0.618       0.804\nmills          1.0679      0.130      8.185      0.000       0.812       1.324\n==============================================================================\nOmnibus:                       96.991   Durbin-Watson:                   1.993\nProb(Omnibus):                  0.000   Jarque-Bera (JB):              115.676\nSkew:                          -0.571   Prob(JB):                     7.61e-26\nKurtosis:                       3.550   Cond. No.                         34.7\n==============================================================================\n```", "```py\nfrom statsmodels.discrete.discrete_model import Probit\n\npbit = Probit(df[\"y\"] <= CENSOR, sm.add_constant(df[\"x\"])).fit()\nsample[\"z_pbit\"] = sample[\"z\"] = (pbit.params.const + sample[\"x\"]*pbit.params.x)\nsample[\"mills_pbit\"] = -SIGMA*(norm.pdf(sample[\"z_pbit\"])/(norm.cdf(sample[\"z_pbit\"])))\ncorrecred_ols = sm.OLS(sample[\"y\"], sm.add_constant(sample[[\"x\", \"mills_pbit\"]])).fit(cov_type=\"HC1\")\n```", "```py\n OLS Regression Results                            \n...\n==============================================================================\n                 coef    std err          z      P>|z|      [0.025      0.975]\n------------------------------------------------------------------------------\nconst         -1.8854      0.267     -7.068      0.000      -2.408      -1.363\nx              0.7230      0.049     14.767      0.000       0.627       0.819\nmills_pbit     1.1005      0.135      8.165      0.000       0.836       1.365\n==============================================================================\n```"]