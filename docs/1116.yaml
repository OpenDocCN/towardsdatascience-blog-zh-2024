- en: 'Cyclical Encoding: An Alternative to One-Hot Encoding for Time Series Features'
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/cyclical-encoding-an-alternative-to-one-hot-encoding-for-time-series-features-4db46248ebba?source=collection_archive---------3-----------------------#2024-05-03](https://towardsdatascience.com/cyclical-encoding-an-alternative-to-one-hot-encoding-for-time-series-features-4db46248ebba?source=collection_archive---------3-----------------------#2024-05-03)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: Cyclical encoding provides your model with the same information using significantly
    fewer features
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@pelletierhaden?source=post_page---byline--4db46248ebba--------------------------------)[![Haden
    Pelletier](../Images/8f73fc8222e783883c4ebcaee14513e0.png)](https://medium.com/@pelletierhaden?source=post_page---byline--4db46248ebba--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--4db46248ebba--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--4db46248ebba--------------------------------)
    [Haden Pelletier](https://medium.com/@pelletierhaden?source=post_page---byline--4db46248ebba--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--4db46248ebba--------------------------------)
    ·7 min read·May 3, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: 'When it comes to training a machine learning model for time series, more often
    than not you will be looking to use the following time features:'
  prefs: []
  type: TYPE_NORMAL
- en: Hour
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Day of week
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Month
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Week or day of year
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: Etc.
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: It’s fairly easy to transform your timestamp column into these kinds of features.
    After ensuring that you’ve cast your time column into a datetime object (using
    pd.to_datetime), you can extract a bunch of time series features using .dt.
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: For reference, the [dataset](https://www.kaggle.com/datasets/robikscube/hourly-energy-consumption?resource=download)
    ([CC0 public domain license](https://creativecommons.org/publicdomain/zero/1.0/))
    I’ll be working with for this example is an hourly electric consumption dataset.
    Energy consumption datasets are typically time series and the goal is ultimately
    to forecast consumption in the future using past data, so this is a great use
    case. Though other external features, such as temperature, humidity and windspeed
    can also impact energy consumption, here I will be focusing on extracting and
    transforming time series features.
  prefs: []
  type: TYPE_NORMAL
