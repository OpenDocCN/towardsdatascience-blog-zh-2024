- en: How to Manipulate the Total in Power BI
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 原文：[https://towardsdatascience.com/tablehow-to-manipulate-the-total-in-power-bi-b55e2d07207d?source=collection_archive---------10-----------------------#2024-07-16](https://towardsdatascience.com/tablehow-to-manipulate-the-total-in-power-bi-b55e2d07207d?source=collection_archive---------10-----------------------#2024-07-16)
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
- en: '*In most cases, the total aggregates the detail rows in a visual, such as a
    table. But what if the total should show something different? I will discuss this
    challenge in detail here.*'
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
- en: '[](https://medium.com/@salvatorecagliari?source=post_page---byline--b55e2d07207d--------------------------------)[![Salvatore
    Cagliari](../Images/a24b0cefab6e707cfee06cde9e857559.png)](https://medium.com/@salvatorecagliari?source=post_page---byline--b55e2d07207d--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--b55e2d07207d--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--b55e2d07207d--------------------------------)
    [Salvatore Cagliari](https://medium.com/@salvatorecagliari?source=post_page---byline--b55e2d07207d--------------------------------)'
  prefs: []
  type: TYPE_NORMAL
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--b55e2d07207d--------------------------------)
    ·8 min read·Jul 16, 2024
  prefs: []
  type: TYPE_NORMAL
- en: --
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7cfa6e5823f1e78eedc322869996e772.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [UX Indonesia](https://unsplash.com/@uxindo?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: Introduction
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To start, let’s look at this report page:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e528cf14f8fb8e78d2c5f4c2511c8887.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 1 — Base Report with Sum and Average Measures (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: There is nothing special in this Matrix visualization.
  prefs: []
  type: TYPE_NORMAL
- en: Now, let’s assume that I want to calculate a different Average for Sales in
    the Total columns and line.
  prefs: []
  type: TYPE_NORMAL
- en: For example, a weighted average.
  prefs: []
  type: TYPE_NORMAL
- en: I will not dig deeper into how to calculate a weighted average, as I already
    wrote a piece about this. I add a link to it in the References Section below.
  prefs: []
  type: TYPE_NORMAL
- en: To do this, I must first understand how the Total is calculated. Then, I can
    start manipulating it.
  prefs: []
  type: TYPE_NORMAL
- en: So, let’s start.
  prefs: []
  type: TYPE_NORMAL
- en: The Filter context
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Even if you are already familiar with the Filter Context in DAX, I encourage
    you to read this section anyway, as I will define some terms used later.
  prefs: []
  type: TYPE_NORMAL
- en: OK, let’s return to the Matrix visualization shown above.
  prefs: []
  type: TYPE_NORMAL
- en: For example, how are the Measures for the “Contoso Paris Store” and the “Economy”
    Product class calculated?
  prefs: []
  type: TYPE_NORMAL
- en: 'I select arbitrary cells to explain what happens in more detail for them:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/7df314d48e48d773c55c880d44ed87da.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 2 — Base report with highlighted cells (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: The results for the marked cells are calculated after applying the following
    filters defining the filter context.
  prefs: []
  type: TYPE_NORMAL
- en: 'State: Seine (Paris)'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'City: Paris'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Store: Contoso Paris Store'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Product Class: Economy'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Year: 2024'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Month: April'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Continent: Europe'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Country: France'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: 'Manufacturer: Proseware Inc.'
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
- en: All these filters influence the result for these specific cells.
  prefs: []
  type: TYPE_NORMAL
- en: 'When we separate the filters from “inside” the Matrix and from the Slicers
    around, we can define “internal” and “external” filters:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/9ce6c3f8c73d3cefdf9ca2c8fe309e27.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 3 — Base report with internal and external filters (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: You can see the internal Filter marked with red arrows and the external filters
    marked with blue arrows.
  prefs: []
  type: TYPE_NORMAL
- en: It doesn’t matter where the filters are coming from for the measure. However,
    we need to understand the difference between these two filter sources, as in most
    cases, we can only react to changes from the “internal” filter when calculating
    the total.
  prefs: []
  type: TYPE_NORMAL
- en: So, what if the Filter Context for the Totals?
  prefs: []
  type: TYPE_NORMAL
- en: Think about it for a minute before continuing.
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: .
  prefs: []
  type: TYPE_NORMAL
- en: The Row- and Column-Totals are the calculations of the Measure in the absence
    of the Row- and Column Filters.
  prefs: []
  type: TYPE_NORMAL
- en: The Grand Total results from the absence of all “internal” filters.
  prefs: []
  type: TYPE_NORMAL
- en: All external filters are still active.
  prefs: []
  type: TYPE_NORMAL
- en: Consequently, we can check if filters are applied to manipulate the total.
  prefs: []
  type: TYPE_NORMAL
- en: Proof of Concept
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'To prove this statement, I change the Measure to have this code:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE0]'
  prefs: []
  type: TYPE_PRE
- en: This Measure’s result will be 1, regardless of the Filter context, as it doesn’t
    use it.
  prefs: []
  type: TYPE_NORMAL
- en: 'Ans if fact, it is precisely what we get:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2c4ec056fb034abaa5543bdc6bc2fc04.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 4 — Result of the manipulated Measure (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: The Total results would have been very different if Power BI had summed up the
    values from the visual to calculate the Totals.
  prefs: []
  type: TYPE_NORMAL
- en: As the Filter Context is not used in the expression of the Measure, 1 is always
    returned, regardless of whether there are Sales.
  prefs: []
  type: TYPE_NORMAL
- en: Remember this when you look at the result later on.
  prefs: []
  type: TYPE_NORMAL
- en: Possible approaches
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: To manipulate the result of the Totals in this Visual, I must check for a Filter
    on the Geography hierarchy and the Product Class.
  prefs: []
  type: TYPE_NORMAL
- en: I can use the [ISFILTERED()](https://dax.guide/isfiltered/) function to achieve
    this.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, when I want to get 1 for the column totals and 2 for the row totals:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE1]'
  prefs: []
  type: TYPE_PRE
- en: 'This Measure performs the following checks:'
  prefs: []
  type: TYPE_NORMAL
- en: If the column State is not filtered, the position is a column Total, and I want
    1.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If the Product Class is not filtered, the position is a row Total, and I want
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: If both are filtered, I’m inside the Matrix (not at the Total) and want the
    Average Retail Sales amount.
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
- en: 'This is the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/76b41ab2c6006151016a55b23d05577a.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 5 — Result of the Measure which manipulates the Totals. I removed the
    Sum of Sales to simplify the Visual (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: As you can see, this is a very Visual-specific solution.
  prefs: []
  type: TYPE_NORMAL
- en: As I have a Slicer filtering the Continent and Country, I cannot check for “NOT
    ISFILTERED(‘Geography’)” because the Geography table is filtered when I select
    something from the Geography Slicer.
  prefs: []
  type: TYPE_NORMAL
- en: However, I can design a more generic solution if I know which tables or columns
    are usually used in my report.
  prefs: []
  type: TYPE_NORMAL
- en: For example, let’s assume that the Product Category hierarchy and the Stores
    are usually used as row categories, and the Product Class, the Store Type, and
    the Color are used as column categories.
  prefs: []
  type: TYPE_NORMAL
- en: 'For example, like this:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a9cc35f7bbda777c3ae5b6b6eab87ac7.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 6 — Modified report the Retail Sales by the Product Category hierarchy
    and the Store Types (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: In this case, I can design two Measures to check for existing filters on these
    columns and hierarchies and use them in the SWITCH() call.
  prefs: []
  type: TYPE_NORMAL
- en: 'Here for the Row filter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE2]'
  prefs: []
  type: TYPE_PRE
- en: 'And the same for the Column filter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE3]'
  prefs: []
  type: TYPE_PRE
- en: 'If I add these two Measures to the Matrix, I can see the result:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b4eb587e5840bc69fe783e965968d582.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 7 — Result of the Filter check Measure (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: The Measure “Column filter check” works as expected. It’s always True, except
    for the Total.
  prefs: []
  type: TYPE_NORMAL
- en: But the Measure “Row filter check” doesn’t work as expected, as it returns True
    even for the total.
  prefs: []
  type: TYPE_NORMAL
- en: The reason is that the column Store Type is also from the Store table.
  prefs: []
  type: TYPE_NORMAL
- en: 'I must change the Measure to remove any filter on this column when checking
    for the filter:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE4]'
  prefs: []
  type: TYPE_PRE
- en: 'Now, the result is as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/b4eb587e5840bc69fe783e965968d582.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 8 — Correct result of the Filter check Measure (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: 'Lastly, I can change the Measure to calculate the result by using these two
    Check Measures:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE5]'
  prefs: []
  type: TYPE_PRE
- en: 'And the result is as expected:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/2f8209f9f363a9effc95277aadf42364.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 9 — Result with the target Measure (Figure by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: The logic is slightly convoluted, as I must think about it in terms of columns
    and row totals. This is somewhat confusing if you are not used to it.
  prefs: []
  type: TYPE_NORMAL
- en: The next step is to insert the Measure, which returns the manipulated result
    different from the simple aggregation.
  prefs: []
  type: TYPE_NORMAL
- en: 'I can even choose to manipulate the grand total in a different way from the
    row and column total:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/a85f933d6ea99766c93ffccb8fbd9564.png)'
  prefs: []
  type: TYPE_IMG
- en: Figure 10 — DAX expression and result for manipulating the grand total (Figure
    by the Author)
  prefs: []
  type: TYPE_NORMAL
- en: As SWITCH() evaluates the checks one after another and returns the given result
    for the first expression that fulfills the condition, I must take care of the
    order of the checks for each variant.
  prefs: []
  type: TYPE_NORMAL
- en: One last little tweak
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: I can offer a minor tweak for those who dislike doing something if the check
    is false.
  prefs: []
  type: TYPE_NORMAL
- en: The Measure above checks for expression = FALSE.
  prefs: []
  type: TYPE_NORMAL
- en: 'I can change the check Measures to the following. Then I can avoid using NOT
    in the Measure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE6]'
  prefs: []
  type: TYPE_PRE
- en: And
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE7]'
  prefs: []
  type: TYPE_PRE
- en: 'Now I can get rid of the NOT inversion in the Measure:'
  prefs: []
  type: TYPE_NORMAL
- en: '[PRE8]'
  prefs: []
  type: TYPE_PRE
- en: This approach is more intuitive to use than the one described above.
  prefs: []
  type: TYPE_NORMAL
- en: Conclusion
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: Sometimes, I encountered situations where I had to manipulate the result for
    the Total.
  prefs: []
  type: TYPE_NORMAL
- en: In such cases, it’s essential to understand how Power BI works, how the Filter
    context is applied, and how the Totals are calculated.
  prefs: []
  type: TYPE_NORMAL
- en: I tried to explain how the Filter context works when looking at a Matrix.
  prefs: []
  type: TYPE_NORMAL
- en: But it’s the same for any other Visual, which can use Categories to get Details
    in our Data.
  prefs: []
  type: TYPE_NORMAL
- en: I wrote an article about the functions available in DAX to explore the Filter
    context.
  prefs: []
  type: TYPE_NORMAL
- en: 'I strongly recommend you read it as well, as it might give you more tools to
    check the Filter context correctly:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/exploring-the-filter-context-with-dax-functions-422211c1118e?source=post_page-----b55e2d07207d--------------------------------)
    [## Exploring the Filter Context with DAX functions'
  prefs: []
  type: TYPE_NORMAL
- en: There are several useful functions in DAX when looking at the current Filter
    Context. Here are some examples
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/exploring-the-filter-context-with-dax-functions-422211c1118e?source=post_page-----b55e2d07207d--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: However, one important lesson is to avoid over-specific Measures, which can
    be used only for one visual. Instead, think outside the box to build more generic
    and reusable code.
  prefs: []
  type: TYPE_NORMAL
- en: This will certainly help for your future work.
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/77b7b5481f36750525919e296f813f9f.png)'
  prefs: []
  type: TYPE_IMG
- en: Photo by [krakenimages](https://unsplash.com/@krakenimages?utm_source=medium&utm_medium=referral)
    on [Unsplash](https://unsplash.com/?utm_source=medium&utm_medium=referral)
  prefs: []
  type: TYPE_NORMAL
- en: References
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
- en: 'Here is the link to the article mentioned at the beginning about calculating
    the weighted average:'
  prefs: []
  type: TYPE_NORMAL
- en: '[](/to-weigh-or-not-to-weigh-this-is-the-average-question-ece33fad9180?source=post_page-----b55e2d07207d--------------------------------)
    [## To weigh or not to weigh — this is the Average question'
  prefs: []
  type: TYPE_NORMAL
- en: Average is a simple calculation. But sometimes, there is more to explore. Let’s
    take look at this underrated topic
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: towardsdatascience.com](/to-weigh-or-not-to-weigh-this-is-the-average-question-ece33fad9180?source=post_page-----b55e2d07207d--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: Like in my previous articles, I use the Contoso sample dataset. You can download
    the ContosoRetailDW Dataset for free from Microsoft [here](https://www.microsoft.com/en-us/download/details.aspx?id=18279).
  prefs: []
  type: TYPE_NORMAL
- en: I translated my client’s request to the data in the ContosoRetailDW dataset.
  prefs: []
  type: TYPE_NORMAL
- en: The Contoso Data can be freely used under the MIT License, as described [here](https://github.com/microsoft/Power-BI-Embedded-Contoso-Sales-Demo).
  prefs: []
  type: TYPE_NORMAL
- en: I enlarged the dataset to make the DAX engine work harder.
  prefs: []
  type: TYPE_NORMAL
- en: The Online Sales table contains 71 million rows (instead of 12.6 million rows),
    and the Retail Sales table contains 18.5 million rows (instead of 3.4 million
    rows).
  prefs: []
  type: TYPE_NORMAL
- en: '[](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----b55e2d07207d--------------------------------)
    [## Get an email whenever Salvatore Cagliari publishes.'
  prefs: []
  type: TYPE_NORMAL
- en: Get an email whenever Salvatore Cagliari publishes. By signing up, you will
    create a Medium account if you don't…
  prefs:
  - PREF_H3
  type: TYPE_NORMAL
- en: medium.com](https://medium.com/@salvatorecagliari/subscribe?source=post_page-----b55e2d07207d--------------------------------)
  prefs: []
  type: TYPE_NORMAL
- en: I make my articles accessible to everyone, even though Medium has a paywall.
    This allows me to earn a little for each reader, but I turn it off so you can
    read my pieces without cost.
  prefs: []
  type: TYPE_NORMAL
- en: You can support my work, which I do during my free time, through
  prefs: []
  type: TYPE_NORMAL
- en: '[https://buymeacoffee.com/salvatorecagliari](https://buymeacoffee.com/salvatorecagliari)'
  prefs: []
  type: TYPE_NORMAL
- en: 'Or scan this QR Code:'
  prefs: []
  type: TYPE_NORMAL
- en: '![](../Images/e7ac062070dcd7a00dcf995ad7e95434.png)'
  prefs: []
  type: TYPE_IMG
- en: Any support is greatly appreciated and helps me find more time to create more
    content for you.
  prefs: []
  type: TYPE_NORMAL
- en: Thank you a lot.
  prefs: []
  type: TYPE_NORMAL
