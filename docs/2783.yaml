- en: Why Most Cross-Validation Visualizations Are Wrong (And How to Fix Them)
  id: totrans-0
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么大多数交叉验证可视化是错误的（以及如何修复它们）
- en: 原文：[https://towardsdatascience.com/why-most-cross-validation-visualizations-are-wrong-and-how-to-fix-them-bdbbba74e263?source=collection_archive---------0-----------------------#2024-11-16](https://towardsdatascience.com/why-most-cross-validation-visualizations-are-wrong-and-how-to-fix-them-bdbbba74e263?source=collection_archive---------0-----------------------#2024-11-16)
  id: totrans-1
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 原文：[https://towardsdatascience.com/why-most-cross-validation-visualizations-are-wrong-and-how-to-fix-them-bdbbba74e263?source=collection_archive---------0-----------------------#2024-11-16](https://towardsdatascience.com/why-most-cross-validation-visualizations-are-wrong-and-how-to-fix-them-bdbbba74e263?source=collection_archive---------0-----------------------#2024-11-16)
- en: BETTER ML VISUALS
  id: totrans-2
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 更好的机器学习可视化
- en: Stop using moving boxes!
  id: totrans-3
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 停止使用移动的框！
- en: '[](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)'
  id: totrans-4
  prefs: []
  type: TYPE_NORMAL
  zh: '[](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)[![Samy
    Baladram](../Images/715cb7af97c57601966c5d2f9edd0066.png)](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)[](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)[![Towards
    Data Science](../Images/a6ff2676ffcc0c7aad8aaf1d79379785.png)](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)
    [Samy Baladram](https://medium.com/@samybaladram?source=post_page---byline--bdbbba74e263--------------------------------)'
- en: ·Published in [Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)
    ·10 min read·Nov 16, 2024
  id: totrans-5
  prefs: []
  type: TYPE_NORMAL
  zh: ·发表于[Towards Data Science](https://towardsdatascience.com/?source=post_page---byline--bdbbba74e263--------------------------------)
    ·阅读时长：10分钟·2024年11月16日
- en: --
  id: totrans-6
  prefs: []
  type: TYPE_NORMAL
  zh: --
- en: 'You know those cross-validation diagrams in every data science tutorial? The
    ones showing boxes in different colors moving around to explain how we split data
    for training and testing? Like this one:'
  id: totrans-7
  prefs: []
  type: TYPE_NORMAL
  zh: 你知道那些在每个数据科学教程中出现的交叉验证图表吗？那些通过不同颜色的框在四处移动来解释我们如何拆分数据进行训练和测试的图表？像这样：
- en: '![](../Images/7310960c11e4e979706ce2dea8eedfbf.png)'
  id: totrans-8
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/7310960c11e4e979706ce2dea8eedfbf.png)'
- en: Have you seen that? Image by author.
  id: totrans-9
  prefs: []
  type: TYPE_NORMAL
  zh: 你见过那个吗？图像由作者提供。
- en: I’ve seen them too — one too many times. These diagrams are common — they’ve
    become the go-to way to explain cross-validation. But here’s something interesting
    I noticed while looking at them as both a designer and data scientist.
  id: totrans-10
  prefs: []
  type: TYPE_NORMAL
  zh: 我也见过这些图表——多得数不清。这些图表非常常见——它们已经成为解释交叉验证的首选方式。但在我作为设计师和数据科学家看这些图表时，我注意到了一些有趣的事情。
- en: When we look at a yellow box moving to different spots, our brain automatically
    sees it as one box moving around.
  id: totrans-11
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 当我们看到一个黄色框移动到不同的位置时，我们的大脑自动认为它是一个框在四处移动。
- en: It’s just how our brains work — when we see something similar move to a new
    spot, we think it’s the same thing. (This is actually why cartoons and animations
    work!)
  id: totrans-12
  prefs: []
  type: TYPE_NORMAL
  zh: 这就是我们大脑的工作方式——当我们看到类似的东西移动到新位置时，我们会认为它是同一个东西。（这其实也是卡通和动画能够有效工作的原因！）
- en: '![](../Images/293776fe285e9c1651b9ca1c65706411.png)'
  id: totrans-13
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/293776fe285e9c1651b9ca1c65706411.png)'
- en: 'You might think the animated version is better, but now you can’t help following
    the blue box and starting to forget that this should represent how cross-validation
    works. Source: [Wikipedia](https://commons.wikimedia.org/wiki/File:LOOCV.gif)'
  id: totrans-14
  prefs: []
  type: TYPE_NORMAL
  zh: 你可能认为动画版本更好，但现在你忍不住开始跟着蓝色框移动，并且渐渐忘记了这应该代表交叉验证的工作方式。来源：[维基百科](https://commons.wikimedia.org/wiki/File:LOOCV.gif)
- en: 'But here’s the thing: In these diagrams, each box in a new position is **supposed
    to show a different chunk of data**. So while our brain naturally wants to track
    the boxes, we have to tell our brain, “No, no, that’s not one box moving — they’re
    different boxes!” It’s like we’re fighting against how our brain naturally works,
    just to understand what the diagram means.'
  id: totrans-15
  prefs: []
  type: TYPE_NORMAL
  zh: 但问题是：在这些图表中，每个新位置的框**应该显示不同的数据块**。因此，尽管我们的脑袋自然想要跟踪这些框，我们却必须告诉大脑，“不，不，那不是一个框在移动——它们是不同的框！”这就像我们在与大脑的自然工作方式作斗争，仅仅为了理解这个图表的含义。
- en: 'Looking at this as someone who works with both design and data, I started thinking:
    maybe there’s a better way? What if we could show cross-validation in a way that
    actually works with how our brain processes information?'
  id: totrans-16
  prefs: []
  type: TYPE_NORMAL
  zh: 作为一个同时从事设计和数据工作的人员，我开始思考：也许有更好的方法？如果我们能以一种更符合大脑处理信息方式的方式展示交叉验证呢？
- en: '![](../Images/a213cf03718d755a88bb08470f7d3abb.png)'
  id: totrans-17
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a213cf03718d755a88bb08470f7d3abb.png)'
- en: 'All visuals: Author-created using Canva Pro. Optimized for mobile; may appear
    oversized on desktop.'
  id: totrans-18
  prefs: []
  type: TYPE_NORMAL
  zh: 所有可视化：作者使用Canva Pro创建。已优化移动设备显示；在桌面上可能显得过大。
- en: What’s Cross-Validation Really About?
  id: totrans-19
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 交叉验证到底是关于什么的？
- en: Cross-validation is about making sure machine learning models work well in the
    real world. Instead of testing a model once, we test it multiple times using different
    parts of our data. This helps us understand how the model will perform with new,
    unseen data.
  id: totrans-20
  prefs: []
  type: TYPE_NORMAL
  zh: 交叉验证是确保机器学习模型在现实世界中表现良好的方法。我们不是仅测试一次模型，而是使用数据的不同部分多次测试模型。这有助于我们理解模型在处理新数据时的表现。
- en: 'Here’s what happens:'
  id: totrans-21
  prefs: []
  type: TYPE_NORMAL
  zh: 事情是这样发生的：
- en: We take our data
  id: totrans-22
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 我们拿到数据
- en: Divide it into groups
  id: totrans-23
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 将其分成若干组
- en: Use some groups for training, others for testing
  id: totrans-24
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 使用一些组进行训练，其他组进行测试
- en: Repeat this process with different groupings
  id: totrans-25
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: 用不同的分组重复这个过程
- en: The goal is to get a reliable understanding of our model’s performance. That’s
    the core idea — simple and practical.
  id: totrans-26
  prefs: []
  type: TYPE_NORMAL
  zh: 目标是可靠地理解我们模型的表现。这是核心思想——简单且实用。
- en: '(Note: We’ll discuss different validation techniques and their applications
    in another article. For now, let’s focus on understanding the basic concept and
    why current visualization methods need improvement.)'
  id: totrans-27
  prefs: []
  type: TYPE_NORMAL
  zh: （注：我们将在另一篇文章中讨论不同的验证技术及其应用。现在，我们先专注于理解基本概念以及为何当前的可视化方法需要改进。）
- en: What’s Wrong with Current Cross-validation Diagrams?
  id: totrans-28
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 当前交叉验证图示有什么问题？
- en: 'Open up any machine learning tutorial, and you’ll probably see these types
    of diagrams:'
  id: totrans-29
  prefs: []
  type: TYPE_NORMAL
  zh: 打开任何机器学习教程，你可能会看到这些类型的图示：
- en: Long boxes split into different sections
  id: totrans-30
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 长方形框被分成不同的部分
- en: Arrows showing parts moving around
  id: totrans-31
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 箭头指示部分数据的移动
- en: Different colors showing training and testing data
  id: totrans-32
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不同的颜色表示训练数据和测试数据
- en: Multiple versions of the same diagram side by side
  id: totrans-33
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 相同图示的多个版本并排显示
- en: '![](../Images/11bdeccff9e5426a2f8669b317c7faab.png)'
  id: totrans-34
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/11bdeccff9e5426a2f8669b317c7faab.png)'
- en: Currently, this is similar to the first image you’ll see if you look up “Cross
    Validation.” (Image by author)
  id: totrans-35
  prefs: []
  type: TYPE_NORMAL
  zh: 当前，如果你搜索“交叉验证”，你看到的第一个图像就类似于这个。（图片由作者提供）
- en: 'Here are the issues with such diagram:'
  id: totrans-36
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是此类图示存在的问题：
- en: '**Not Everyone Sees Colors the Same Way**'
  id: totrans-37
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**并不是每个人都以相同的方式看到颜色**'
- en: Colors create practical problems when showing data splits. Some people can’t
    differentiate certain colors, while others may not see colors at all. The visualization
    fails when printed in black and white or viewed on different screens where colors
    vary. Using color as the primary way to distinguish data parts means some people
    miss important information due to their color perception.
  id: totrans-38
  prefs: []
  type: TYPE_NORMAL
  zh: 颜色在展示数据分割时会带来实际问题。有些人无法区分某些颜色，而其他人可能根本看不见颜色。当以黑白打印或在不同显示屏上查看时，颜色会发生变化，导致可视化失效。将颜色作为区分数据部分的主要方式意味着一些人由于色觉问题错过了重要信息。
- en: '![](../Images/e3c7aea8baea654253fbedde5e3dd811.png)'
  id: totrans-39
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e3c7aea8baea654253fbedde5e3dd811.png)'
- en: Not everyone see the same colors. Image by author.
  id: totrans-40
  prefs: []
  type: TYPE_NORMAL
  zh: 不是每个人看到的颜色都相同。图片由作者提供。
- en: '**Colors Make Things Harder to Remember**'
  id: totrans-41
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**颜色使记忆变得更加困难**'
- en: Another thing about colors is that it might look like they help explain things,
    but they actually create extra work for our brain. When we use different colors
    for different parts of the data, we have to actively remember what each color
    represents. This becomes a memory task instead of helping us understand the actual
    concept. The connection between colors and data splits isn’t natural or obvious
    — it’s something we have to learn and keep track of while trying to understand
    cross-validation itself.
  id: totrans-42
  prefs: []
  type: TYPE_NORMAL
  zh: 关于颜色的另一个问题是，它看起来似乎有助于解释问题，但实际上会给大脑带来额外的负担。当我们为数据的不同部分使用不同的颜色时，我们必须主动记住每种颜色代表什么。这变成了一项记忆任务，而不是帮助我们理解实际概念。颜色与数据分割之间的关联并不是自然而明显的——这是我们需要学习并在试图理解交叉验证时保持跟踪的内容。
- en: Our brain doesn’t naturally connect colors with data splits.
  id: totrans-43
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 我们的大脑本能地不会将颜色与数据分割关联起来。
- en: '![](../Images/e4690d7c50d8de5d8855975b40cd0424.png)'
  id: totrans-44
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e4690d7c50d8de5d8855975b40cd0424.png)'
- en: These are the colors we used in the previous diagrams. Why original dataset
    is green? Then split into blue and red?
  id: totrans-45
  prefs: []
  type: TYPE_NORMAL
  zh: 这些是我们在前面图示中使用的颜色。为什么原始数据集是绿色的？然后分成蓝色和红色？
- en: '**Too Much Information at Once**'
  id: totrans-46
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: '**一次展示过多信息**'
- en: The current diagrams also suffer from information overload. They attempt to
    display the entire cross-validation process in a single visualization, which creates
    unnecessary complexity. Multiple arrows, extensive labeling, all competing for
    attention. When we try to show every aspect of the process at the same time, we
    make it harder to focus on understanding each individual part. Instead of clarifying
    the concept, this approach adds an extra layer of complexity that we need to decode
    first.
  id: totrans-47
  prefs: []
  type: TYPE_NORMAL
  zh: 当前的图表也存在信息过载的问题。它们试图在一个图像中展示整个交叉验证过程，这就带来了不必要的复杂性。多个箭头、大量标签，所有的元素都在争夺注意力。当我们试图同时展示过程的每一个方面时，我们反而让理解每个独立部分变得更加困难。这个方法没有澄清概念，反而增加了我们需要首先解码的复杂层次。
- en: '![](../Images/3860f294e42aad31e7ef34a9bdaf9ccf.png)'
  id: totrans-48
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/3860f294e42aad31e7ef34a9bdaf9ccf.png)'
- en: Too many labels, too many colors, too many arrows and it is too hard to focus.
  id: totrans-49
  prefs: []
  type: TYPE_NORMAL
  zh: 标签太多，颜色太多，箭头太多，导致很难集中注意力。
- en: Movement That Misleads
  id: totrans-50
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 误导性的移动
- en: Movement in these diagrams creates a fundamental misunderstanding of how cross-validation
    actually works. When we show arrows and flowing elements, we’re suggesting a sequential
    process that doesn’t exist in reality. Cross-validation splits don’t need to happen
    in any particular order — the order of splits doesn’t affect the results at all.
  id: totrans-51
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图表中的运动会对交叉验证的实际运作方式产生根本误解。当我们展示箭头和流动元素时，实际上是在暗示一个并不存在的顺序过程。交叉验证的分割并不需要按特定顺序进行——分割的顺序根本不影响结果。
- en: These diagrams also give the wrong impression that data physically moves during
    cross-validation. In reality, we’re simply selecting different rows from our original
    dataset each time. The data stays exactly where it is, and we just change which
    rows we use for testing in each split. When diagrams show data flowing between
    splits, they add unnecessary complexity to what should be a straightforward process.
  id: totrans-52
  prefs: []
  type: TYPE_NORMAL
  zh: 这些图表还给人错误的印象，认为数据在交叉验证过程中是物理移动的。实际上，我们每次只是从原始数据集中选择不同的行。数据保持在原位，我们只是更改每次分割中用于测试的行。当图表显示数据在分割之间流动时，它们给过程增加了不必要的复杂性。
- en: '![](../Images/d8fa4ea0c53cc2aa618406d0c99e6f09.png)'
  id: totrans-53
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/d8fa4ea0c53cc2aa618406d0c99e6f09.png)'
- en: While diagrams typically flow from top to bottom, it’s hard to follow the sequence
    of operations. The timing of model training and the calculation results remain
    unclear. When does the training happen? What results come from each calculation?
  id: totrans-54
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然图表通常是从上到下流动的，但很难跟随操作的顺序。模型训练和计算结果的时间仍然不明确。训练什么时候进行？每个计算的结果是什么？
- en: What We Need Instead
  id: totrans-55
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 我们真正需要的是什么
- en: 'We need diagrams that:'
  id: totrans-56
  prefs: []
  type: TYPE_NORMAL
  zh: 我们需要这样的图表：
- en: Don’t just rely on colors to explain things
  id: totrans-57
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要单纯依赖颜色来解释事物
- en: Show information in clear, separate chunks
  id: totrans-58
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 清晰地分隔信息块
- en: Make it obvious that different test groups are independent
  id: totrans-59
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 明确不同测试组是独立的
- en: Don’t use unnecessary arrows and movement
  id: totrans-60
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 不要使用不必要的箭头和移动
- en: Let’s fix this. Instead of trying to make our brains work differently, why don’t
    we create something that feels natural to look at?
  id: totrans-61
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们来解决这个问题。与其让我们的思维方式变得不同，为什么不创建一些看起来更自然的东西呢？
- en: A Better Way to Visualize Cross-validation
  id: totrans-62
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 更好的交叉验证可视化方法
- en: Let’s try something different. First, this is how data looks like to most people
    — rows and columns of numbers with index.
  id: totrans-63
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们尝试一些不同的方式。首先，这是大多数人看到的数据样子——一行行、列列的数字和索引。
- en: '![](../Images/08da329b59c04831295fa503a37cb6e4.png)'
  id: totrans-64
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/08da329b59c04831295fa503a37cb6e4.png)'
- en: This is the common dataset I used for [my articles on classification algorithms](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c).
  id: totrans-65
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我在[关于分类算法的文章](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c)中使用的常见数据集。
- en: Inspired by that structure, here’s a diagram that make more sense.
  id: totrans-66
  prefs: []
  type: TYPE_NORMAL
  zh: 受到这个结构的启发，下面是一个更有意义的图表。
- en: '![](../Images/e1633734844646b0c9a447fea09fde60.png)'
  id: totrans-67
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/e1633734844646b0c9a447fea09fde60.png)'
- en: Simpler but clear depiction of cross-validation.
  id: totrans-68
  prefs: []
  type: TYPE_NORMAL
  zh: 更简单但清晰的交叉验证描绘。
- en: 'Here’s why this design makes more sense logically:'
  id: totrans-69
  prefs: []
  type: TYPE_NORMAL
  zh: 下面是为什么这个设计在逻辑上更合理的原因：
- en: '**True Data Structure:** It matches how data actually works in cross-validation.
    In practice, we’re selecting different portions of our dataset — not moving data
    around. Each column shows exactly which splits we’re using for testing each time.'
  id: totrans-70
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**真实数据结构：** 它与交叉验证中数据的实际工作方式一致。在实践中，我们是在选择数据集的不同部分，而不是移动数据。每一列显示了我们在每次测试中使用的具体分割。'
- en: '**Independent Splits:** Each split explicitly shows it’s different data. Unlike
    moving boxes that might make you think “it’s the same test set moving around,”
    this shows that Split 2 is using completely different data from Split 1\. This
    matches what’s actually happening in your code.'
  id: totrans-71
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**独立划分：** 每个划分明确显示它是不同的数据。不同于移动的盒子，这可能会让你误以为“它是相同的测试集在移动”，这里显示 Split 2 使用的是与
    Split 1 完全不同的数据。这与代码中实际发生的情况相符。'
- en: '**Data Conservation:** By keeping the column height the same throughout all
    folds, we’re showing an important rule of cross-validation: you always use your
    entire dataset. Some portions for testing, the rest for training. Every piece
    of data gets used, nothing is left out.'
  id: totrans-72
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**数据保护：** 通过保持所有折叠的列高度相同，我们展示了交叉验证的一个重要规则：你始终使用整个数据集。一些部分用于测试，剩余部分用于训练。每一条数据都会被使用，没有遗漏。'
- en: '**Complete Coverage:** Looking left to right, you can easily check an important
    cross-validation principle: every portion of your dataset will be used as test
    data exactly once.'
  id: totrans-73
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**完整覆盖：** 从左到右，你可以轻松验证一个重要的交叉验证原则：数据集的每一部分将作为测试数据恰好使用一次。'
- en: '**Three-Fold Simplicity:** We specifically use 3-fold cross-validation here
    because:'
  id: totrans-74
  prefs:
  - PREF_OL
  type: TYPE_NORMAL
  zh: '**三折简洁性：** 我们在这里专门使用三折交叉验证，因为：'
- en: a. It clearly demonstrates the key concepts without overwhelming detail
  id: totrans-75
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: a. 它清晰地展示了关键概念，而不会让细节显得过于繁杂。
- en: 'b. The pattern is easy to follow: three distinct folds, three test sets. Simple
    enough to mentally track which portions are being used for training vs testing
    in each fold'
  id: totrans-76
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: b. 这个模式很容易理解：三个不同的折叠，三个测试集。足够简单，可以在脑海中跟踪每个折叠中哪些部分用于训练，哪些部分用于测试。
- en: c. Perfect for educational purposes — adding more folds (like 5 or 10) would
    make the visualization more cluttered without adding conceptual value
  id: totrans-77
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: c. 非常适合用于教学目的——添加更多的折叠（比如 5 或 10 个）会使得可视化变得更加杂乱，而不会增加概念上的价值。
- en: '(Note: While 5-fold or 10-fold cross-validation might be more common in practice,
    3-fold serves perfectly to illustrate the core concepts of the technique.)'
  id: totrans-78
  prefs:
  - PREF_IND
  type: TYPE_NORMAL
  zh: （注意：虽然在实践中 5 折或 10 折交叉验证可能更为常见，但三折交叉验证完全可以用来说明这一技术的核心概念。）
- en: Adding Indices for Clarity
  id: totrans-79
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 为了更清晰地显示索引
- en: 'While the concept above is correct, thinking about actual row indices makes
    it even clearer:'
  id: totrans-80
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然上述概念是正确的，但考虑实际的行索引会使其更加清晰：
- en: '![](../Images/00368eec59269afee2665564b9803290.png)'
  id: totrans-81
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/00368eec59269afee2665564b9803290.png)'
- en: An enhanced variation with subtle index, making it easier to see which part
    of the dataset each fold belong to. The dashed lines help in separating the indices.
  id: totrans-82
  prefs: []
  type: TYPE_NORMAL
  zh: 这是一个增强版的变化，增加了细微的索引，使得更容易看出每个折叠对应的数据集的哪一部分。虚线帮助区分各个索引。
- en: 'Here are some reasons of improvements of this visual:'
  id: totrans-83
  prefs: []
  type: TYPE_NORMAL
  zh: 以下是这个视觉改进的一些原因：
- en: Instead of just “different portions,” we can see that Fold 1 tests on rows 1–4,
    Fold 2 on rows 5–7, and Fold 3 on rows 8–10
  id: totrans-84
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 与其说是“不同的部分”，我们可以看到，Fold 1 测试的是第 1 到第 4 行，Fold 2 测试的是第 5 到第 7 行，而 Fold 3 测试的是第
    8 到第 10 行。
- en: '“Complete coverage” becomes more concrete: rows 1–10 each appear exactly once
    in test sets'
  id: totrans-85
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: “完整覆盖”变得更为具体：第 1 到第 10 行每一行都恰好在测试集中出现一次。
- en: 'Training sets are explicit: when testing on rows 1–4, we’re training on rows
    5–10'
  id: totrans-86
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 训练集是明确的：当在第 1 到第 4 行进行测试时，我们在第 5 到第 10 行上进行训练。
- en: 'Data independence is obvious: test sets use different row ranges (1–3, 4–6,
    7–10)'
  id: totrans-87
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 数据独立性显而易见：测试集使用了不同的行范围（1–3，4–6，7–10）。
- en: 'This index-based view doesn’t change the concepts — it just makes them more
    concrete and easier to implement in code. Whether you think about it as portions
    or specific row numbers, the key principles remain the same: independent folds,
    complete coverage, and using all your data.'
  id: totrans-88
  prefs: []
  type: TYPE_NORMAL
  zh: 这种基于索引的视图并没有改变概念——它只是让它们变得更加具体，且更容易在代码中实现。无论你将其视为部分还是特定的行号，关键原则始终保持不变：独立的折叠、完整覆盖和使用所有数据。
- en: Adding Some Colors
  id: totrans-89
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 添加一些颜色
- en: 'If you feel the black-and-white version is too plain, this is also another
    acceptable options:'
  id: totrans-90
  prefs: []
  type: TYPE_NORMAL
  zh: 如果你觉得黑白版本过于简单，这也是另一种可接受的选项：
- en: '![](../Images/cb7cf250b229c7400f322b84366f03c4.png)'
  id: totrans-91
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/cb7cf250b229c7400f322b84366f03c4.png)'
- en: A variation of the simple diagram, adding color to each fold’s number.
  id: totrans-92
  prefs: []
  type: TYPE_NORMAL
  zh: 这是简单图示的一种变化，给每个折叠的数字添加了颜色。
- en: While using colors in this version might seem problematic given the issues with
    color blindness and memory load mentioned before, it can still work as a helpful
    teaching tool alongside the simpler version.
  id: totrans-93
  prefs: []
  type: TYPE_NORMAL
  zh: 虽然在这个版本中使用颜色可能因为色盲和记忆负担等问题而看起来有些问题，但它仍然可以作为一个有用的教学工具，辅以更简单的版本。
- en: The main reason is that it **doesn’t only use colors to show the information**
    — the row numbers (1–10) and fold numbers tell you everything you need to know,
    with colors just being a nice extra touch.
  id: totrans-94
  prefs: []
  type: TYPE_NORMAL
  zh: 主要原因是它**不仅仅使用颜色来显示信息**——行号（1–10）和折叠编号可以告诉你你需要了解的一切，颜色只是一个额外的辅助。
- en: This means that even if someone can’t see the colors properly or prints it in
    black and white, they can still understand everything through the numbers. And
    while having to remember what each color means can make things harder to learn,
    in this case you don’t have to remember the colors — they’re just there as an
    extra help for people who find them useful, but you can totally understand the
    diagram without them.
  id: totrans-95
  prefs: []
  type: TYPE_NORMAL
  zh: 这意味着即使有人无法正确看到颜色或以黑白打印，他们仍然可以通过数字理解一切。虽然必须记住每种颜色的含义可能会让学习变得更加困难，但在这种情况下，你不需要记住颜色——它们只是作为额外的帮助提供给那些觉得它们有用的人，但你完全可以在没有颜色的情况下理解图表。
- en: Just like the previous version, the row numbers also help by showing exactly
    how the data is being split up, making it easier to understand how cross-validation
    works in practice whether you pay attention to the colors or not.
  id: totrans-96
  prefs: []
  type: TYPE_NORMAL
  zh: 就像以前的版本一样，行号也通过准确显示数据如何被拆分来提供帮助，无论你是否关注颜色，都更容易理解交叉验证在实践中的运作方式。
- en: The visualization remains fully functional and understandable even if you ignore
    the colors completely.
  id: totrans-97
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 即使你完全忽略颜色，视觉化仍然是完全功能性的且易于理解。
- en: '![](../Images/96381337f14683b33da41d5110ce0bcf.png)'
  id: totrans-98
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/96381337f14683b33da41d5110ce0bcf.png)'
- en: Try the challenge above. For limited number of colors, it aids in tracking the
    changes of the position faster.
  id: totrans-99
  prefs: []
  type: TYPE_NORMAL
  zh: 尝试上面的挑战。对于有限数量的颜色，它有助于更快地跟踪位置的变化。
- en: 'Why This Works Better: From Design to Data'
  id: totrans-100
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 为什么这种方式更有效：从设计到数据
- en: Let’s look at why our new designs makes sense not just from a UX view, but also
    from a data science perspective.
  id: totrans-101
  prefs: []
  type: TYPE_NORMAL
  zh: 让我们从用户体验的角度以及数据科学的角度来看一下，为什么我们的新设计是有道理的。
- en: '**Matching Mental Models:** Think about how you explain cross-validation to
    someone. You probably say “we take these rows for testing, then these rows, then
    these rows.” Our visualization now matches exactly how we think and talk about
    the process. We’re not just making it pretty, we’re making it match reality.'
  id: totrans-102
  prefs: []
  type: TYPE_NORMAL
  zh: '**匹配思维模型：** 想一想你是如何向别人解释交叉验证的。你可能会说：“我们先用这些行进行测试，然后是这些行，再然后是这些行。”我们的视觉化现在完全符合我们思考和谈论这个过程的方式。我们不仅仅是为了美观，我们让它与现实匹配。'
- en: '**Data Structure Clarity:** By showing data as columns with indices, we’re
    revealing the actual structure of our dataset. Each row has a number, each number
    appears in exactly one test set. This isn’t just good design, it’s accurate to
    how our data is organized in code.'
  id: totrans-103
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据结构的清晰性：** 通过将数据以带索引的列形式展示，我们揭示了数据集的实际结构。每行都有一个编号，每个编号仅出现在一个测试集里。这不仅是良好的设计，它还准确反映了我们的数据在代码中的组织方式。'
- en: '![](../Images/a1a6c60195236d8940224e07615342ab.png)'
  id: totrans-104
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/a1a6c60195236d8940224e07615342ab.png)'
- en: Even with shuffling, which is the default way to do cross validation, we can
    just change the index so people understand that it is being shuffled.
  id: totrans-105
  prefs: []
  type: TYPE_NORMAL
  zh: 即使是默认的交叉验证方式——洗牌，我们也可以通过更改索引让人们明白数据正在被洗牌。
- en: '**Focus on What Matters:** Our old way of showing cross-validation had us thinking
    about moving parts. But that’s not what matters in cross-validation. What matters
    is:'
  id: totrans-106
  prefs: []
  type: TYPE_NORMAL
  zh: '**关注重要的内容：** 我们以前展示交叉验证的方式让我们关注移动的部分。但在交叉验证中，真正重要的不是这些，真正重要的是：'
- en: Which rows are we testing on?
  id: totrans-107
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们在测试哪些行？
- en: Are we using all our data?
  id: totrans-108
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是否在使用所有的数据？
- en: Is each row used for testing exactly once?
  id: totrans-109
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 每行是否仅被用作一次测试？
- en: Our new design answers these questions at a glance.
  id: totrans-110
  prefs: []
  type: TYPE_NORMAL
  zh: 我们的新设计可以一目了然地回答这些问题。
- en: '**Index-Based Understanding:** Instead of abstract colored boxes, we’re showing
    actual row indices. When you write cross-validation code, you’re working with
    these indices. Now the visualization matches your code — Fold 1 uses rows 1–4,
    Fold 2 uses 5–7, and so on.'
  id: totrans-111
  prefs: []
  type: TYPE_NORMAL
  zh: '**基于索引的理解：** 我们不再显示抽象的彩色框，而是显示实际的行索引。当你编写交叉验证代码时，你正在处理这些索引。现在，视觉化与代码相匹配——折叠1使用行1-4，折叠2使用行5-7，以此类推。'
- en: '![](../Images/043d42a32e5df5fd0f4bc6f3d408ba2a.png)'
  id: totrans-112
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/043d42a32e5df5fd0f4bc6f3d408ba2a.png)'
- en: Using similar diagram, we can also show how leave-on-out cross validation works.
    Only one data point is used in the test set! The split numbering and the chosen
    index for the test set are also nicely matched.
  id: totrans-113
  prefs: []
  type: TYPE_NORMAL
  zh: 使用类似的图示，我们还可以展示如何进行留一法交叉验证。每次测试集只使用一个数据点！拆分编号和选择的测试集索引也很好地匹配。
- en: '**Clear Data Flow:** The layout shows data flowing from left to right: here’s
    your dataset, here’s how it’s split, here’s what each split looks like. It matches
    the logical steps of cross-validation and it’s also easier to look at.'
  id: totrans-114
  prefs: []
  type: TYPE_NORMAL
  zh: '**清晰的数据流：** 布局展示了数据从左到右流动：这是你的数据集，这是它是如何被分割的，这是每个分割的样子。它与交叉验证的逻辑步骤匹配，而且也更容易查看。'
- en: '![](../Images/c23f34808ce42cb3b8f8f14364010915.png)'
  id: totrans-115
  prefs: []
  type: TYPE_IMG
  zh: '![](../Images/c23f34808ce42cb3b8f8f14364010915.png)'
- en: Clarifying the purpose of the arrows to denote the train & test process can
    make it clearer on how many models and what are the outputs of the cross-validation.
    You may note that there’s no arrow connecting elements between splits.
  id: totrans-116
  prefs: []
  type: TYPE_NORMAL
  zh: 阐明箭头的作用，表示训练与测试过程，可以更清楚地展示交叉验证中有多少模型以及它们的输出是什么。你可能会注意到，分割之间没有连接元素的箭头。
- en: 'Conclusion: When Visualization Matches Your Code'
  id: totrans-117
  prefs:
  - PREF_H1
  type: TYPE_NORMAL
  zh: 结论：当可视化与你的代码相匹配时
- en: 'Here’s what we’ve learned about the whole redrawing of the cross-validation
    diagram:'
  id: totrans-118
  prefs: []
  type: TYPE_NORMAL
  zh: 这是我们关于重新绘制交叉验证图表所学到的内容：
- en: '**Match Your Code, Not Conventions:** We usually stick to traditional ways
    of showing things just because that’s how everyone does it. But cross-validation
    is really about selecting different rows of data for testing, so why not show
    exactly that? When your visualization matches your code, understanding follows
    naturally.'
  id: totrans-119
  prefs: []
  type: TYPE_NORMAL
  zh: '**让你的代码与传统匹配：** 我们通常遵循传统的展示方式，仅仅因为大家都这样做。但交叉验证实际上是关于选择不同的行数据进行测试，那么为什么不直接展示这一点呢？当你的可视化与你的代码相匹配时，理解也会自然而然地跟随而来。'
- en: '**Data Structure Matters:** By showing indices and actual data splits, we’re
    revealing how cross-validation really works while also make a clearer picture.
    Each row has its place, each split has its purpose, and you can trace exactly
    what’s happening in each step.'
  id: totrans-120
  prefs: []
  type: TYPE_NORMAL
  zh: '**数据结构很重要：** 通过展示索引和实际数据分割，我们揭示了交叉验证的真实工作原理，同时也提供了更清晰的图像。每一行都有其位置，每一个分割都有其目的，你可以精确追踪每个步骤中发生的事情。'
- en: '**Simplicity Has It Purpose:** It turns out that showing less can actually
    explain more. By focusing on the essential parts — which rows are being used for
    testing, and when — we’re not just simplifying the visualization but we’re also
    highlighting what actually matters in cross-validation.'
  id: totrans-121
  prefs: []
  type: TYPE_NORMAL
  zh: '**简洁有其目的：** 事实证明，展示更少的内容实际上可以解释更多。通过专注于核心部分——哪些行用于测试，以及何时使用——我们不仅简化了可视化，还突出了在交叉验证中真正重要的内容。'
- en: 'Looking ahead, this thinking can apply to many data science concepts. Before
    making another visualization, ask yourself:'
  id: totrans-122
  prefs: []
  type: TYPE_NORMAL
  zh: 展望未来，这种思维可以应用于许多数据科学概念。在制作下一个可视化之前，问问自己：
- en: Does this show what’s actually happening in the code?
  id: totrans-123
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 这是否展示了代码中实际发生的事情？
- en: Can someone trace the data flow?
  id: totrans-124
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 是否可以追踪数据流？
- en: Are we showing structure, or just following tradition?
  id: totrans-125
  prefs:
  - PREF_UL
  type: TYPE_NORMAL
  zh: 我们是在展示结构，还是仅仅是在遵循传统？
- en: Good visualization isn’t about following rules — it’s about showing truth. And
    sometimes, the clearest truth is also the simplest.
  id: totrans-126
  prefs:
  - PREF_BQ
  type: TYPE_NORMAL
  zh: 好的可视化不是遵循规则——它是展示真相。有时候，最清晰的真相也是最简单的。
- en: About the Illustrations
  id: totrans-127
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 关于插图
- en: Unless otherwise noted, all images are created by the author, incorporating
    licensed design elements from Canva Pro.
  id: totrans-128
  prefs: []
  type: TYPE_NORMAL
  zh: 除非另有说明，所有图像均由作者创作，并结合了来自Canva Pro的授权设计元素。
- en: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝙈𝙤𝙙𝙚𝙡 𝙀𝙫𝙖𝙡𝙪𝙖𝙩𝙞𝙤𝙣 & 𝙊𝙥𝙩𝙞𝙢𝙞𝙯𝙖𝙩𝙞𝙤𝙣 𝙝𝙚𝙧𝙚:'
  id: totrans-129
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙎𝙚𝙚 𝙢𝙤𝙧𝙚 𝙈𝙤𝙙𝙚𝙡 𝙀𝙫𝙖𝙡𝙪𝙖𝙩𝙞𝙤𝙣 & 𝙊𝙥𝙩𝙞𝙢𝙞𝙯𝙖𝙩𝙞𝙤𝙣 𝙝𝙚𝙧𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-130
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----bdbbba74e263--------------------------------)'
  id: totrans-131
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----bdbbba74e263--------------------------------)'
- en: Model Evaluation & Optimization
  id: totrans-132
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 模型评估与优化
- en: '[View list](https://medium.com/@samybaladram/list/model-evaluation-optimization-331287896864?source=post_page-----bdbbba74e263--------------------------------)3
    stories![](../Images/18fa82b1435fa7d5571ee54ae93a6c62.png)![](../Images/c95e89d05d1de700c631c342cd008de0.png)![](../Images/30e20e1a8ba3ced1e77644b706acd18d.png)'
  id: totrans-133
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/model-evaluation-optimization-331287896864?source=post_page-----bdbbba74e263--------------------------------)3个故事![](../Images/18fa82b1435fa7d5571ee54ae93a6c62.png)![](../Images/c95e89d05d1de700c631c342cd008de0.png)![](../Images/30e20e1a8ba3ced1e77644b706acd18d.png)'
- en: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
  id: totrans-134
  prefs: []
  type: TYPE_NORMAL
  zh: '𝙔𝙤𝙪 𝙢𝙞𝙜𝙝𝙩 𝙖𝙡𝙨𝙤 𝙡𝙞𝙠𝙚:'
- en: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
  id: totrans-135
  prefs: []
  type: TYPE_IMG
  zh: '![Samy Baladram](../Images/835013c69e08fec04ad9ca465c2adf6c.png)'
- en: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----bdbbba74e263--------------------------------)'
  id: totrans-136
  prefs: []
  type: TYPE_NORMAL
  zh: '[Samy Baladram](https://medium.com/@samybaladram?source=post_page-----bdbbba74e263--------------------------------)'
- en: Classification Algorithms
  id: totrans-137
  prefs:
  - PREF_H2
  type: TYPE_NORMAL
  zh: 分类算法
- en: '[View list](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----bdbbba74e263--------------------------------)8
    stories![](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)'
  id: totrans-138
  prefs: []
  type: TYPE_NORMAL
  zh: '[查看列表](https://medium.com/@samybaladram/list/classification-algorithms-b3586f0a772c?source=post_page-----bdbbba74e263--------------------------------)8
    个故事！[](../Images/f95c1a80b88fe6220b18cd3b2a83a30d.png)![](../Images/6ea70d9d2d9456e0c221388dbb253be8.png)![](../Images/7221f0777228e7bcf08c1adb44a8eb76.png)'
